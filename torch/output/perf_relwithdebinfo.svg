<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="774" onload="init(evt)" viewBox="0 0 1200 774" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="774.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="757" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="757" > </text>
<g id="frames">
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="243.8" y="373" width="0.5" height="15.0" fill="rgb(254,36,28)" rx="2" ry="2" />
<text  x="246.77" y="383.5" ></text>
</g>
<g >
<title>elf_get_dynamic_info (1 samples, 0.04%)</title><rect x="1109.4" y="533" width="0.6" height="15.0" fill="rgb(207,120,37)" rx="2" ry="2" />
<text  x="1112.42" y="543.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.04%)</title><rect x="251.2" y="453" width="0.5" height="15.0" fill="rgb(208,7,25)" rx="2" ry="2" />
<text  x="254.19" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;bool  (1 samples, 0.04%)</title><rect x="263.4" y="565" width="0.5" height="15.0" fill="rgb(205,16,41)" rx="2" ry="2" />
<text  x="266.39" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_List_node&lt;c10::impl::AnnotatedKernel&gt; &gt;::deallocate (1 samples, 0.04%)</title><rect x="318.5" y="309" width="0.5" height="15.0" fill="rgb(212,130,28)" rx="2" ry="2" />
<text  x="321.52" y="319.5" ></text>
</g>
<g >
<title>c10::OperatorName::getNamespace (1 samples, 0.04%)</title><rect x="215.1" y="517" width="0.6" height="15.0" fill="rgb(253,86,10)" rx="2" ry="2" />
<text  x="218.15" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.04%)</title><rect x="225.2" y="517" width="0.6" height="15.0" fill="rgb(209,226,4)" rx="2" ry="2" />
<text  x="228.22" y="527.5" ></text>
</g>
<g >
<title>torch::detail::TorchLibraryInit::TorchLibraryInit (5 samples, 0.22%)</title><rect x="249.6" y="597" width="2.7" height="15.0" fill="rgb(220,94,46)" rx="2" ry="2" />
<text  x="252.60" y="607.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="188.1" y="229" width="0.5" height="15.0" fill="rgb(216,114,10)" rx="2" ry="2" />
<text  x="191.11" y="239.5" ></text>
</g>
<g >
<title>__vfprintf_internal (1 samples, 0.04%)</title><rect x="196.6" y="373" width="0.5" height="15.0" fill="rgb(205,182,24)" rx="2" ry="2" />
<text  x="199.59" y="383.5" ></text>
</g>
<g >
<title>c10::operator== (2 samples, 0.09%)</title><rect x="323.3" y="421" width="1.0" height="15.0" fill="rgb(218,13,17)" rx="2" ry="2" />
<text  x="326.29" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.04%)</title><rect x="284.6" y="597" width="0.5" height="15.0" fill="rgb(206,151,51)" rx="2" ry="2" />
<text  x="287.59" y="607.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (1 samples, 0.04%)</title><rect x="281.4" y="501" width="0.5" height="15.0" fill="rgb(223,159,11)" rx="2" ry="2" />
<text  x="284.41" y="511.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.04%)</title><rect x="277.7" y="581" width="0.5" height="15.0" fill="rgb(226,159,42)" rx="2" ry="2" />
<text  x="280.70" y="591.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;c10::Type,  (1 samples, 0.04%)</title><rect x="234.2" y="341" width="0.6" height="15.0" fill="rgb(210,19,26)" rx="2" ry="2" />
<text  x="237.23" y="351.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;::~intrusive_ptr (7 samples, 0.31%)</title><rect x="334.4" y="517" width="3.7" height="15.0" fill="rgb(231,82,36)" rx="2" ry="2" />
<text  x="337.42" y="527.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="260.2" y="261" width="0.5" height="15.0" fill="rgb(246,13,3)" rx="2" ry="2" />
<text  x="263.21" y="271.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="210.9" y="261" width="0.5" height="15.0" fill="rgb(219,14,53)" rx="2" ry="2" />
<text  x="213.91" y="271.5" ></text>
</g>
<g >
<title>c10::TypedOperatorHandle&lt;at::Tensor  (148 samples, 6.65%)</title><rect x="518.4" y="581" width="78.4" height="15.0" fill="rgb(223,217,16)" rx="2" ry="2" />
<text  x="521.36" y="591.5" >c10::Type..</text>
</g>
<g >
<title>std::unordered_set&lt;c10::Symbol, std::hash&lt;c10::Symbol&gt;, std::equal_to&lt;c10::Symbol&gt;, std::allocator&lt;c10::Symbol&gt; &gt;::~unordered_set (1 samples, 0.04%)</title><rect x="322.2" y="197" width="0.6" height="15.0" fill="rgb(240,106,42)" rx="2" ry="2" />
<text  x="325.23" y="207.5" ></text>
</g>
<g >
<title>c10::impl::tls_local_dispatch_key_set (6 samples, 0.27%)</title><rect x="743.7" y="293" width="3.1" height="15.0" fill="rgb(220,228,4)" rx="2" ry="2" />
<text  x="746.66" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, char&gt; (1 samples, 0.04%)</title><rect x="184.9" y="405" width="0.6" height="15.0" fill="rgb(239,113,52)" rx="2" ry="2" />
<text  x="187.93" y="415.5" ></text>
</g>
<g >
<title>torch::schema (5 samples, 0.22%)</title><rect x="210.9" y="549" width="2.7" height="15.0" fill="rgb(237,119,7)" rx="2" ry="2" />
<text  x="213.91" y="559.5" ></text>
</g>
<g >
<title>c10::demangle_type&lt;caffe2::HasScopeOp&lt;caffe2::CPUContext&gt; &gt; (1 samples, 0.04%)</title><rect x="275.6" y="613" width="0.5" height="15.0" fill="rgb(207,138,41)" rx="2" ry="2" />
<text  x="278.58" y="623.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.04%)</title><rect x="256.5" y="293" width="0.5" height="15.0" fill="rgb(208,8,23)" rx="2" ry="2" />
<text  x="259.50" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_openat (1 samples, 0.04%)</title><rect x="1112.1" y="485" width="0.5" height="15.0" fill="rgb(242,152,54)" rx="2" ry="2" />
<text  x="1115.08" y="495.5" ></text>
</g>
<g >
<title>c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (216 samples, 9.70%)</title><rect x="705.5" y="469" width="114.5" height="15.0" fill="rgb(217,146,36)" rx="2" ry="2" />
<text  x="708.49" y="479.5" >c10::impl::det..</text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.04%)</title><rect x="260.7" y="549" width="0.6" height="15.0" fill="rgb(224,97,47)" rx="2" ry="2" />
<text  x="263.74" y="559.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.04%)</title><rect x="185.5" y="357" width="0.5" height="15.0" fill="rgb(205,184,26)" rx="2" ry="2" />
<text  x="188.46" y="367.5" ></text>
</g>
<g >
<title>at::hasCallbacks (6 samples, 0.27%)</title><rect x="385.3" y="405" width="3.2" height="15.0" fill="rgb(206,91,0)" rx="2" ry="2" />
<text  x="388.31" y="415.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::expect (1 samples, 0.04%)</title><rect x="166.9" y="501" width="0.5" height="15.0" fill="rgb(233,190,8)" rx="2" ry="2" />
<text  x="169.91" y="511.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="178.0" y="453" width="0.6" height="15.0" fill="rgb(222,159,47)" rx="2" ry="2" />
<text  x="181.04" y="463.5" ></text>
</g>
<g >
<title>torch::jit::SourceRange::SourceRange (1 samples, 0.04%)</title><rect x="166.9" y="453" width="0.5" height="15.0" fill="rgb(248,72,42)" rx="2" ry="2" />
<text  x="169.91" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;c10::IValue, std::allocator&lt;c10::IValue&gt; &gt;::_Vector_base (1 samples, 0.04%)</title><rect x="957.8" y="373" width="0.5" height="15.0" fill="rgb(208,176,39)" rx="2" ry="2" />
<text  x="960.82" y="383.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_sigmoid_dnnlowp_op.cc (1 samples, 0.04%)</title><rect x="269.7" y="629" width="0.6" height="15.0" fill="rgb(209,81,1)" rx="2" ry="2" />
<text  x="272.75" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (3 samples, 0.13%)</title><rect x="238.5" y="325" width="1.6" height="15.0" fill="rgb(249,43,32)" rx="2" ry="2" />
<text  x="241.47" y="335.5" ></text>
</g>
<g >
<title>torch::autograd::AutogradMeta::set_requires_grad (1 samples, 0.04%)</title><rect x="916.5" y="517" width="0.5" height="15.0" fill="rgb(214,177,39)" rx="2" ry="2" />
<text  x="919.47" y="527.5" ></text>
</g>
<g >
<title>std::locale::locale (1 samples, 0.04%)</title><rect x="196.1" y="485" width="0.5" height="15.0" fill="rgb(211,18,49)" rx="2" ry="2" />
<text  x="199.06" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (1 samples, 0.04%)</title><rect x="205.1" y="389" width="0.5" height="15.0" fill="rgb(219,33,26)" rx="2" ry="2" />
<text  x="208.08" y="399.5" ></text>
</g>
<g >
<title>torch::autograd::make_variable (10 samples, 0.45%)</title><rect x="667.3" y="597" width="5.3" height="15.0" fill="rgb(246,119,36)" rx="2" ry="2" />
<text  x="670.32" y="607.5" ></text>
</g>
<g >
<title>TORCH_LIBRARY_IMPL_init_aten_BackendSelect (1 samples, 0.04%)</title><rect x="175.9" y="581" width="0.6" height="15.0" fill="rgb(245,132,16)" rx="2" ry="2" />
<text  x="178.92" y="591.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.04%)</title><rect x="249.1" y="325" width="0.5" height="15.0" fill="rgb(242,108,48)" rx="2" ry="2" />
<text  x="252.07" y="335.5" ></text>
</g>
<g >
<title>__static_initialization_and_destruction_0 (38 samples, 1.71%)</title><rect x="271.9" y="629" width="20.1" height="15.0" fill="rgb(251,88,40)" rx="2" ry="2" />
<text  x="274.87" y="639.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::registerKernel (2 samples, 0.09%)</title><rect x="257.6" y="517" width="1.0" height="15.0" fill="rgb(210,119,20)" rx="2" ry="2" />
<text  x="260.56" y="527.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.04%)</title><rect x="252.8" y="517" width="0.5" height="15.0" fill="rgb(254,73,12)" rx="2" ry="2" />
<text  x="255.79" y="527.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.04%)</title><rect x="111.8" y="437" width="0.5" height="15.0" fill="rgb(250,56,36)" rx="2" ry="2" />
<text  x="114.78" y="447.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::operator++ (1 samples, 0.04%)</title><rect x="450.0" y="293" width="0.5" height="15.0" fill="rgb(226,77,46)" rx="2" ry="2" />
<text  x="452.98" y="303.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;torch::jit::Source, std::allocator&lt;torch::jit::Source&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.04%)</title><rect x="227.3" y="453" width="0.6" height="15.0" fill="rgb(217,64,25)" rx="2" ry="2" />
<text  x="230.34" y="463.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTable_ (1 samples, 0.04%)</title><rect x="317.5" y="245" width="0.5" height="15.0" fill="rgb(248,142,26)" rx="2" ry="2" />
<text  x="320.46" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="1112.1" y="517" width="0.5" height="15.0" fill="rgb(205,209,9)" rx="2" ry="2" />
<text  x="1115.08" y="527.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;c10::FunctionSchema, std::default_delete&lt;c10::FunctionSchema&gt; &gt;::unique_ptr (1 samples, 0.04%)</title><rect x="259.7" y="501" width="0.5" height="15.0" fill="rgb(211,11,16)" rx="2" ry="2" />
<text  x="262.68" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;c10::Dispatcher::OperatorDef, std::allocator&lt;c10::Dispatcher::OperatorDef&gt; &gt;::_M_create_node&lt;c10::OperatorName&gt; (1 samples, 0.04%)</title><rect x="210.4" y="469" width="0.5" height="15.0" fill="rgb(253,67,29)" rx="2" ry="2" />
<text  x="213.38" y="479.5" ></text>
</g>
<g >
<title>llvm::countLeadingZeros&lt;unsigned long&gt; (1 samples, 0.04%)</title><rect x="520.5" y="485" width="0.5" height="15.0" fill="rgb(211,207,10)" rx="2" ry="2" />
<text  x="523.49" y="495.5" ></text>
</g>
<g >
<title>file_path (1 samples, 0.04%)</title><rect x="1168.8" y="501" width="0.5" height="15.0" fill="rgb(254,157,39)" rx="2" ry="2" />
<text  x="1171.80" y="511.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.04%)</title><rect x="308.4" y="549" width="0.6" height="15.0" fill="rgb(224,60,35)" rx="2" ry="2" />
<text  x="311.45" y="559.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (3 samples, 0.13%)</title><rect x="243.2" y="533" width="1.6" height="15.0" fill="rgb(215,185,38)" rx="2" ry="2" />
<text  x="246.24" y="543.5" ></text>
</g>
<g >
<title>c10::ObservedOperators::isObserved (1 samples, 0.04%)</title><rect x="190.2" y="389" width="0.6" height="15.0" fill="rgb(205,104,9)" rx="2" ry="2" />
<text  x="193.23" y="399.5" ></text>
</g>
<g >
<title>c10::memoryProfilingEnabled (4 samples, 0.18%)</title><rect x="336.0" y="373" width="2.1" height="15.0" fill="rgb(224,23,9)" rx="2" ry="2" />
<text  x="339.01" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="1112.1" y="501" width="0.5" height="15.0" fill="rgb(254,50,20)" rx="2" ry="2" />
<text  x="1115.08" y="511.5" ></text>
</g>
<g >
<title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, c10::OperatorName, std::hash&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueHasher&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::hash&lt;c10::OperatorName&gt; &gt;, std::equal_to&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueEquality&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::equal_to&lt;c10::OperatorName&gt; &gt;, std::allocator&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt; &gt; &gt;::hash_object&lt;c10::OperatorName&gt; (1 samples, 0.04%)</title><rect x="216.2" y="421" width="0.5" height="15.0" fill="rgb(254,118,53)" rx="2" ry="2" />
<text  x="219.21" y="431.5" ></text>
</g>
<g >
<title>c10::Storage::operator= (16 samples, 0.72%)</title><rect x="846.0" y="549" width="8.4" height="15.0" fill="rgb(221,132,46)" rx="2" ry="2" />
<text  x="848.97" y="559.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::VariableVersion::VersionCounter, c10::detail::intrusive_target_default_null_type&lt;c10::VariableVersion::VersionCounter&gt; &gt;::~intrusive_ptr (28 samples, 1.26%)</title><rect x="632.9" y="517" width="14.8" height="15.0" fill="rgb(245,12,23)" rx="2" ry="2" />
<text  x="635.87" y="527.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.04%)</title><rect x="1156.6" y="421" width="0.5" height="15.0" fill="rgb(238,207,2)" rx="2" ry="2" />
<text  x="1159.60" y="431.5" ></text>
</g>
<g >
<title>torch::autograd::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Autograd (1 samples, 0.04%)</title><rect x="251.7" y="581" width="0.6" height="15.0" fill="rgb(212,60,37)" rx="2" ry="2" />
<text  x="254.73" y="591.5" ></text>
</g>
<g >
<title>alloc_set_pte (1 samples, 0.04%)</title><rect x="1106.2" y="405" width="0.6" height="15.0" fill="rgb(254,153,43)" rx="2" ry="2" />
<text  x="1109.24" y="415.5" ></text>
</g>
<g >
<title>unlink_chunk (1 samples, 0.04%)</title><rect x="1043.7" y="181" width="0.5" height="15.0" fill="rgb(246,96,23)" rx="2" ry="2" />
<text  x="1046.69" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.04%)</title><rect x="221.0" y="485" width="0.5" height="15.0" fill="rgb(209,199,54)" rx="2" ry="2" />
<text  x="223.98" y="495.5" ></text>
</g>
<g >
<title>c10::SmallVectorImpl&lt;unsigned long&gt;::~SmallVectorImpl (3 samples, 0.13%)</title><rect x="959.4" y="373" width="1.6" height="15.0" fill="rgb(206,3,6)" rx="2" ry="2" />
<text  x="962.41" y="383.5" ></text>
</g>
<g >
<title>torch::detail::TorchLibraryInit::TorchLibraryInit (1 samples, 0.04%)</title><rect x="270.8" y="597" width="0.5" height="15.0" fill="rgb(225,187,47)" rx="2" ry="2" />
<text  x="273.81" y="607.5" ></text>
</g>
<g >
<title>c10::TensorImpl::compute_contiguous (1 samples, 0.04%)</title><rect x="576.7" y="293" width="0.5" height="15.0" fill="rgb(240,168,4)" rx="2" ry="2" />
<text  x="579.68" y="303.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.04%)</title><rect x="277.7" y="485" width="0.5" height="15.0" fill="rgb(238,219,50)" rx="2" ry="2" />
<text  x="280.70" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.13%)</title><rect x="1106.8" y="469" width="1.6" height="15.0" fill="rgb(213,167,5)" rx="2" ry="2" />
<text  x="1109.77" y="479.5" ></text>
</g>
<g >
<title>std::ios_base::ios_base (1 samples, 0.04%)</title><rect x="246.4" y="453" width="0.6" height="15.0" fill="rgb(216,122,44)" rx="2" ry="2" />
<text  x="249.42" y="463.5" ></text>
</g>
<g >
<title>c10::VariableVersion::~VariableVersion (18 samples, 0.81%)</title><rect x="864.5" y="533" width="9.6" height="15.0" fill="rgb(219,28,1)" rx="2" ry="2" />
<text  x="867.52" y="543.5" ></text>
</g>
<g >
<title>do_page_fault (10 samples, 0.45%)</title><rect x="1150.2" y="549" width="5.3" height="15.0" fill="rgb(246,46,8)" rx="2" ry="2" />
<text  x="1153.24" y="559.5" ></text>
</g>
<g >
<title>c10::TensorImpl::~TensorImpl (17 samples, 0.76%)</title><rect x="339.2" y="565" width="9.0" height="15.0" fill="rgb(213,120,50)" rx="2" ry="2" />
<text  x="342.19" y="575.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.04%)</title><rect x="1156.6" y="469" width="0.5" height="15.0" fill="rgb(228,88,23)" rx="2" ry="2" />
<text  x="1159.60" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::emplace_back&lt;int&gt; (1 samples, 0.04%)</title><rect x="258.6" y="453" width="0.5" height="15.0" fill="rgb(244,28,49)" rx="2" ry="2" />
<text  x="261.62" y="463.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor&amp;  (1 samples, 0.04%)</title><rect x="185.5" y="533" width="0.5" height="15.0" fill="rgb(233,128,37)" rx="2" ry="2" />
<text  x="188.46" y="543.5" ></text>
</g>
<g >
<title>c10::impl::tls_local_dispatch_key_set@plt (2 samples, 0.09%)</title><rect x="940.3" y="485" width="1.1" height="15.0" fill="rgb(233,206,37)" rx="2" ry="2" />
<text  x="943.32" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::_M_allocate (1 samples, 0.04%)</title><rect x="280.9" y="549" width="0.5" height="15.0" fill="rgb(205,109,14)" rx="2" ry="2" />
<text  x="283.88" y="559.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.04%)</title><rect x="226.8" y="453" width="0.5" height="15.0" fill="rgb(213,207,6)" rx="2" ry="2" />
<text  x="229.81" y="463.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.04%)</title><rect x="205.6" y="469" width="0.5" height="15.0" fill="rgb(230,46,20)" rx="2" ry="2" />
<text  x="208.61" y="479.5" ></text>
</g>
<g >
<title>_int_free (4 samples, 0.18%)</title><rect x="78.4" y="677" width="2.1" height="15.0" fill="rgb(235,129,47)" rx="2" ry="2" />
<text  x="81.38" y="687.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::Symbol&gt;, true&gt; &gt; &gt;::allocate (1 samples, 0.04%)</title><rect x="189.7" y="485" width="0.5" height="15.0" fill="rgb(241,205,3)" rx="2" ry="2" />
<text  x="192.70" y="495.5" ></text>
</g>
<g >
<title>at::RecordFunction::RecordFunction (7 samples, 0.31%)</title><rect x="384.8" y="421" width="3.7" height="15.0" fill="rgb(205,155,2)" rx="2" ry="2" />
<text  x="387.78" y="431.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;torch::jit::Source&gt;::shared_ptr&lt;std::allocator&lt;torch::jit::Source&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.04%)</title><rect x="252.8" y="453" width="0.5" height="15.0" fill="rgb(226,182,34)" rx="2" ry="2" />
<text  x="255.79" y="463.5" ></text>
</g>
<g >
<title>c10::guts::detail::to_string_&lt;unsigned long, void&gt;::call[abi:cxx11] (1 samples, 0.04%)</title><rect x="213.6" y="437" width="0.5" height="15.0" fill="rgb(229,95,0)" rx="2" ry="2" />
<text  x="216.56" y="447.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash (1 samples, 0.04%)</title><rect x="192.4" y="341" width="0.5" height="15.0" fill="rgb(240,33,39)" rx="2" ry="2" />
<text  x="195.35" y="351.5" ></text>
</g>
<g >
<title>c10::impl::tls_local_dispatch_key_set (3 samples, 0.13%)</title><rect x="401.7" y="309" width="1.6" height="15.0" fill="rgb(239,17,20)" rx="2" ry="2" />
<text  x="404.74" y="319.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::IValue&gt;::~optional (1 samples, 0.04%)</title><rect x="320.1" y="149" width="0.5" height="15.0" fill="rgb(223,12,0)" rx="2" ry="2" />
<text  x="323.11" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;c10::Dispatcher::OperatorDef, std::allocator&lt;c10::Dispatcher::OperatorDef&gt; &gt;::_M_create_node&lt;c10::OperatorName&gt; (4 samples, 0.18%)</title><rect x="216.7" y="469" width="2.2" height="15.0" fill="rgb(250,104,23)" rx="2" ry="2" />
<text  x="219.74" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::replace (1 samples, 0.04%)</title><rect x="205.1" y="437" width="0.5" height="15.0" fill="rgb(217,228,45)" rx="2" ry="2" />
<text  x="208.08" y="447.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.04%)</title><rect x="169.6" y="453" width="0.5" height="15.0" fill="rgb(207,219,39)" rx="2" ry="2" />
<text  x="172.56" y="463.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (3 samples, 0.13%)</title><rect x="171.7" y="693" width="1.6" height="15.0" fill="rgb(226,69,30)" rx="2" ry="2" />
<text  x="174.68" y="703.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.04%)</title><rect x="252.8" y="421" width="0.5" height="15.0" fill="rgb(231,176,44)" rx="2" ry="2" />
<text  x="255.79" y="431.5" ></text>
</g>
<g >
<title>std::mutex::lock (1 samples, 0.04%)</title><rect x="204.0" y="501" width="0.5" height="15.0" fill="rgb(231,203,51)" rx="2" ry="2" />
<text  x="207.02" y="511.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (2 samples, 0.09%)</title><rect x="235.3" y="341" width="1.1" height="15.0" fill="rgb(223,182,24)" rx="2" ry="2" />
<text  x="238.29" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.04%)</title><rect x="227.3" y="325" width="0.6" height="15.0" fill="rgb(208,106,23)" rx="2" ry="2" />
<text  x="230.34" y="335.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor  (3 samples, 0.13%)</title><rect x="207.7" y="549" width="1.6" height="15.0" fill="rgb(224,51,23)" rx="2" ry="2" />
<text  x="210.73" y="559.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::~Lexer (1 samples, 0.04%)</title><rect x="193.4" y="485" width="0.5" height="15.0" fill="rgb(220,119,31)" rx="2" ry="2" />
<text  x="196.41" y="495.5" ></text>
</g>
<g >
<title>std::function&lt;void  (3 samples, 0.13%)</title><rect x="211.4" y="437" width="1.6" height="15.0" fill="rgb(241,67,7)" rx="2" ry="2" />
<text  x="214.44" y="447.5" ></text>
</g>
<g >
<title>[anon] (4 samples, 0.18%)</title><rect x="75.7" y="693" width="2.2" height="15.0" fill="rgb(225,115,20)" rx="2" ry="2" />
<text  x="78.73" y="703.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::_M_allocate (1 samples, 0.04%)</title><rect x="185.5" y="437" width="0.5" height="15.0" fill="rgb(221,133,38)" rx="2" ry="2" />
<text  x="188.46" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;c10::AutogradMetaInterface, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::get (1 samples, 0.04%)</title><rect x="362.5" y="549" width="0.5" height="15.0" fill="rgb(241,75,4)" rx="2" ry="2" />
<text  x="365.52" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt;, true&gt; &gt;::allocate (1 samples, 0.04%)</title><rect x="110.7" y="533" width="0.5" height="15.0" fill="rgb(229,108,34)" rx="2" ry="2" />
<text  x="113.72" y="543.5" ></text>
</g>
<g >
<title>typeMetaToScalarType (5 samples, 0.22%)</title><rect x="952.0" y="421" width="2.6" height="15.0" fill="rgb(232,77,12)" rx="2" ry="2" />
<text  x="954.99" y="431.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.04%)</title><rect x="179.1" y="357" width="0.5" height="15.0" fill="rgb(217,108,44)" rx="2" ry="2" />
<text  x="182.10" y="367.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;c10::OperatorKernel&gt;::operator= (2 samples, 0.09%)</title><rect x="316.4" y="325" width="1.1" height="15.0" fill="rgb(251,123,42)" rx="2" ry="2" />
<text  x="319.40" y="335.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::computeDispatchTableEntry (1 samples, 0.04%)</title><rect x="268.2" y="469" width="0.5" height="15.0" fill="rgb(208,186,22)" rx="2" ry="2" />
<text  x="271.16" y="479.5" ></text>
</g>
<g >
<title>torch::autograd::AutogradMeta::set_requires_grad (1 samples, 0.04%)</title><rect x="71.0" y="677" width="0.5" height="15.0" fill="rgb(252,121,26)" rx="2" ry="2" />
<text  x="73.96" y="687.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;c10::Type&gt;::~shared_ptr (1 samples, 0.04%)</title><rect x="253.3" y="469" width="0.5" height="15.0" fill="rgb(213,48,36)" rx="2" ry="2" />
<text  x="256.32" y="479.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::isNumber (1 samples, 0.04%)</title><rect x="169.6" y="389" width="0.5" height="15.0" fill="rgb(221,216,48)" rx="2" ry="2" />
<text  x="172.56" y="399.5" ></text>
</g>
<g >
<title>llvm::countLeadingZeros&lt;unsigned long&gt; (1 samples, 0.04%)</title><rect x="697.5" y="469" width="0.6" height="15.0" fill="rgb(235,112,26)" rx="2" ry="2" />
<text  x="700.54" y="479.5" ></text>
</g>
<g >
<title>torch::jit::Token::~Token (1 samples, 0.04%)</title><rect x="259.1" y="437" width="0.6" height="15.0" fill="rgb(224,156,34)" rx="2" ry="2" />
<text  x="262.15" y="447.5" ></text>
</g>
<g >
<title>at::detail::make_tensor&lt;c10::TensorImpl, c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;, c10::DispatchKey, caffe2::TypeMeta&amp;&gt; (8 samples, 0.36%)</title><rect x="397.0" y="325" width="4.2" height="15.0" fill="rgb(247,172,52)" rx="2" ry="2" />
<text  x="399.97" y="335.5" ></text>
</g>
<g >
<title>_dl_runtime_resolve_xsave (1 samples, 0.04%)</title><rect x="184.4" y="533" width="0.5" height="15.0" fill="rgb(237,8,11)" rx="2" ry="2" />
<text  x="187.40" y="543.5" ></text>
</g>
<g >
<title>onnx_torch::RegisterOpSetSchema&lt;onnx_torch::OpSet_PyTorch_ver1&gt; (1 samples, 0.04%)</title><rect x="269.2" y="565" width="0.5" height="15.0" fill="rgb(212,211,46)" rx="2" ry="2" />
<text  x="272.22" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::~new_allocator (2 samples, 0.09%)</title><rect x="986.4" y="197" width="1.1" height="15.0" fill="rgb(210,207,25)" rx="2" ry="2" />
<text  x="989.44" y="207.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (2 samples, 0.09%)</title><rect x="317.5" y="293" width="1.0" height="15.0" fill="rgb(221,70,18)" rx="2" ry="2" />
<text  x="320.46" y="303.5" ></text>
</g>
<g >
<title>google::protobuf::internal::EpsCopyInputStream::ReadString (1 samples, 0.04%)</title><rect x="296.3" y="421" width="0.5" height="15.0" fill="rgb(205,175,8)" rx="2" ry="2" />
<text  x="299.25" y="431.5" ></text>
</g>
<g >
<title>c10::Storage::Storage (1 samples, 0.04%)</title><rect x="736.2" y="213" width="0.6" height="15.0" fill="rgb(225,111,42)" rx="2" ry="2" />
<text  x="739.24" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (1 samples, 0.04%)</title><rect x="258.6" y="421" width="0.5" height="15.0" fill="rgb(245,29,35)" rx="2" ry="2" />
<text  x="261.62" y="431.5" ></text>
</g>
<g >
<title>std::equal_to&lt;c10::OperatorName&gt;::operator (1 samples, 0.04%)</title><rect x="286.2" y="437" width="0.5" height="15.0" fill="rgb(230,182,22)" rx="2" ry="2" />
<text  x="289.18" y="447.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="272.9" y="485" width="0.6" height="15.0" fill="rgb(214,52,18)" rx="2" ry="2" />
<text  x="275.93" y="495.5" ></text>
</g>
<g >
<title>c10::TensorImpl::dim (2 samples, 0.09%)</title><rect x="1050.1" y="293" width="1.0" height="15.0" fill="rgb(233,208,7)" rx="2" ry="2" />
<text  x="1053.05" y="303.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash (1 samples, 0.04%)</title><rect x="218.9" y="341" width="0.5" height="15.0" fill="rgb(238,174,43)" rx="2" ry="2" />
<text  x="221.86" y="351.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.04%)</title><rect x="201.4" y="469" width="0.5" height="15.0" fill="rgb(210,131,45)" rx="2" ry="2" />
<text  x="204.37" y="479.5" ></text>
</g>
<g >
<title>c10::either&lt;c10::OperatorName, c10::FunctionSchema&gt;::_destruct (1 samples, 0.04%)</title><rect x="226.8" y="485" width="0.5" height="15.0" fill="rgb(226,228,35)" rx="2" ry="2" />
<text  x="229.81" y="495.5" ></text>
</g>
<g >
<title>do_page_fault (2 samples, 0.09%)</title><rect x="1137.0" y="517" width="1.1" height="15.0" fill="rgb(227,68,2)" rx="2" ry="2" />
<text  x="1139.99" y="527.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.04%)</title><rect x="295.7" y="325" width="0.6" height="15.0" fill="rgb(225,172,41)" rx="2" ry="2" />
<text  x="298.72" y="335.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="1109.4" y="453" width="0.6" height="15.0" fill="rgb(237,23,52)" rx="2" ry="2" />
<text  x="1112.42" y="463.5" ></text>
</g>
<g >
<title>llvm::countLeadingZeros&lt;unsigned long&gt; (3 samples, 0.13%)</title><rect x="376.3" y="485" width="1.6" height="15.0" fill="rgb(213,106,52)" rx="2" ry="2" />
<text  x="379.30" y="495.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, torch::CppFunction&gt; (5 samples, 0.22%)</title><rect x="186.5" y="565" width="2.7" height="15.0" fill="rgb(226,155,46)" rx="2" ry="2" />
<text  x="189.52" y="575.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="256.5" y="437" width="0.5" height="15.0" fill="rgb(239,14,30)" rx="2" ry="2" />
<text  x="259.50" y="447.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (1 samples, 0.04%)</title><rect x="324.9" y="437" width="0.5" height="15.0" fill="rgb(231,112,9)" rx="2" ry="2" />
<text  x="327.88" y="447.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::MemoryFormat&gt;::optional (1 samples, 0.04%)</title><rect x="1099.9" y="341" width="0.5" height="15.0" fill="rgb(242,214,46)" rx="2" ry="2" />
<text  x="1102.88" y="351.5" ></text>
</g>
<g >
<title>parseDeclaration (1 samples, 0.04%)</title><rect x="259.1" y="469" width="0.6" height="15.0" fill="rgb(253,67,4)" rx="2" ry="2" />
<text  x="262.15" y="479.5" ></text>
</g>
<g >
<title>c10::TensorImpl::is_empty (1 samples, 0.04%)</title><rect x="793.0" y="245" width="0.5" height="15.0" fill="rgb(242,61,31)" rx="2" ry="2" />
<text  x="795.96" y="255.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (2 samples, 0.09%)</title><rect x="176.5" y="485" width="1.0" height="15.0" fill="rgb(218,227,17)" rx="2" ry="2" />
<text  x="179.45" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;::destroy&lt;c10::impl::AnnotatedKernel&gt; (5 samples, 0.22%)</title><rect x="319.0" y="341" width="2.7" height="15.0" fill="rgb(246,132,10)" rx="2" ry="2" />
<text  x="322.05" y="351.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="308.4" y="517" width="0.6" height="15.0" fill="rgb(237,110,51)" rx="2" ry="2" />
<text  x="311.45" y="527.5" ></text>
</g>
<g >
<title>native_write_msr (9 samples, 0.40%)</title><rect x="1185.2" y="501" width="4.8" height="15.0" fill="rgb(221,38,11)" rx="2" ry="2" />
<text  x="1188.23" y="511.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (1 samples, 0.04%)</title><rect x="183.9" y="469" width="0.5" height="15.0" fill="rgb(228,21,4)" rx="2" ry="2" />
<text  x="186.87" y="479.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.04%)</title><rect x="280.9" y="469" width="0.5" height="15.0" fill="rgb(232,192,17)" rx="2" ry="2" />
<text  x="283.88" y="479.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.04%)</title><rect x="106.5" y="629" width="0.5" height="15.0" fill="rgb(249,132,49)" rx="2" ry="2" />
<text  x="109.48" y="639.5" ></text>
</g>
<g >
<title>c10::SmallVectorImpl&lt;long&gt;::resize (5 samples, 0.22%)</title><rect x="782.9" y="293" width="2.6" height="15.0" fill="rgb(217,8,1)" rx="2" ry="2" />
<text  x="785.88" y="303.5" ></text>
</g>
<g >
<title>_IO_old_init (1 samples, 0.04%)</title><rect x="208.3" y="357" width="0.5" height="15.0" fill="rgb(240,212,29)" rx="2" ry="2" />
<text  x="211.26" y="367.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (1 samples, 0.04%)</title><rect x="23.3" y="677" width="0.5" height="15.0" fill="rgb(229,203,19)" rx="2" ry="2" />
<text  x="26.25" y="687.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (1 samples, 0.04%)</title><rect x="260.2" y="181" width="0.5" height="15.0" fill="rgb(236,227,15)" rx="2" ry="2" />
<text  x="263.21" y="191.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.04%)</title><rect x="243.8" y="357" width="0.5" height="15.0" fill="rgb(252,127,9)" rx="2" ry="2" />
<text  x="246.77" y="367.5" ></text>
</g>
<g >
<title>std::__array_traits&lt;c10::KernelFunction, 38ul&gt;::_S_ref (1 samples, 0.04%)</title><rect x="1100.4" y="373" width="0.5" height="15.0" fill="rgb(251,215,52)" rx="2" ry="2" />
<text  x="1103.41" y="383.5" ></text>
</g>
<g >
<title>torch::autograd::AutogradMeta::set_requires_grad (9 samples, 0.40%)</title><rect x="915.9" y="549" width="4.8" height="15.0" fill="rgb(218,63,43)" rx="2" ry="2" />
<text  x="918.94" y="559.5" ></text>
</g>
<g >
<title>_M_init_functor (1 samples, 0.04%)</title><rect x="256.5" y="485" width="0.5" height="15.0" fill="rgb(250,132,33)" rx="2" ry="2" />
<text  x="259.50" y="495.5" ></text>
</g>
<g >
<title>c10::callUnboxedKernelFunction&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::TensorOptions const&amp;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (113 samples, 5.08%)</title><rect x="534.3" y="405" width="59.9" height="15.0" fill="rgb(252,124,36)" rx="2" ry="2" />
<text  x="537.27" y="415.5" >c10::c..</text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;char const*, char const*&gt;, std::allocator&lt;std::pair&lt;char const*, char const*&gt; &gt; &gt;::_M_allocate (1 samples, 0.04%)</title><rect x="278.2" y="565" width="0.6" height="15.0" fill="rgb(238,76,12)" rx="2" ry="2" />
<text  x="281.23" y="575.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.04%)</title><rect x="275.6" y="501" width="0.5" height="15.0" fill="rgb(246,65,18)" rx="2" ry="2" />
<text  x="278.58" y="511.5" ></text>
</g>
<g >
<title>torch::Library::_def (1 samples, 0.04%)</title><rect x="210.4" y="549" width="0.5" height="15.0" fill="rgb(232,34,23)" rx="2" ry="2" />
<text  x="213.38" y="559.5" ></text>
</g>
<g >
<title>__vsnprintf_internal (1 samples, 0.04%)</title><rect x="213.6" y="389" width="0.5" height="15.0" fill="rgb(208,93,52)" rx="2" ry="2" />
<text  x="216.56" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;c10::NamedTensorMetaInterface, std::default_delete&lt;c10::NamedTensorMetaInterface&gt; &gt;::unique_ptr&lt;std::default_delete&lt;c10::NamedTensorMetaInterface&gt;, void&gt; (1 samples, 0.04%)</title><rect x="738.4" y="213" width="0.5" height="15.0" fill="rgb(244,125,8)" rx="2" ry="2" />
<text  x="741.36" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_brk (1 samples, 0.04%)</title><rect x="243.8" y="229" width="0.5" height="15.0" fill="rgb(220,48,44)" rx="2" ry="2" />
<text  x="246.77" y="239.5" ></text>
</g>
<g >
<title>torch::schema (3 samples, 0.13%)</title><rect x="265.5" y="549" width="1.6" height="15.0" fill="rgb(237,98,2)" rx="2" ry="2" />
<text  x="268.51" y="559.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="280.9" y="421" width="0.5" height="15.0" fill="rgb(242,64,16)" rx="2" ry="2" />
<text  x="283.88" y="431.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.04%)</title><rect x="1010.3" y="277" width="0.5" height="15.0" fill="rgb(230,110,46)" rx="2" ry="2" />
<text  x="1013.30" y="287.5" ></text>
</g>
<g >
<title>at::empty (6 samples, 0.27%)</title><rect x="938.2" y="501" width="3.2" height="15.0" fill="rgb(205,191,25)" rx="2" ry="2" />
<text  x="941.20" y="511.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.04%)</title><rect x="169.6" y="517" width="0.5" height="15.0" fill="rgb(251,210,52)" rx="2" ry="2" />
<text  x="172.56" y="527.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.04%)</title><rect x="304.2" y="453" width="0.5" height="15.0" fill="rgb(243,34,33)" rx="2" ry="2" />
<text  x="307.20" y="463.5" ></text>
</g>
<g >
<title>unordered_set (1 samples, 0.04%)</title><rect x="132.5" y="661" width="0.5" height="15.0" fill="rgb(226,77,1)" rx="2" ry="2" />
<text  x="135.45" y="671.5" ></text>
</g>
<g >
<title>torch::jit::SourceRange::~SourceRange (1 samples, 0.04%)</title><rect x="240.1" y="325" width="0.5" height="15.0" fill="rgb(223,109,3)" rx="2" ry="2" />
<text  x="243.06" y="335.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::MemoryFormat&gt;::optional (1 samples, 0.04%)</title><rect x="594.7" y="437" width="0.5" height="15.0" fill="rgb(214,146,53)" rx="2" ry="2" />
<text  x="597.70" y="447.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.22%)</title><rect x="544.9" y="277" width="2.6" height="15.0" fill="rgb(235,80,45)" rx="2" ry="2" />
<text  x="547.87" y="287.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;c10::Type&gt;::operator=&lt;c10::ListType&gt; (1 samples, 0.04%)</title><rect x="212.0" y="373" width="0.5" height="15.0" fill="rgb(241,228,44)" rx="2" ry="2" />
<text  x="214.97" y="383.5" ></text>
</g>
<g >
<title>torch::autograd::make_variable (4 samples, 0.18%)</title><rect x="362.0" y="613" width="2.1" height="15.0" fill="rgb(237,165,6)" rx="2" ry="2" />
<text  x="364.99" y="623.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="165.8" y="645" width="0.6" height="15.0" fill="rgb(228,39,21)" rx="2" ry="2" />
<text  x="168.85" y="655.5" ></text>
</g>
<g >
<title>get_task_policy.part.0 (1 samples, 0.04%)</title><rect x="181.2" y="37" width="0.6" height="15.0" fill="rgb(248,187,37)" rx="2" ry="2" />
<text  x="184.22" y="47.5" ></text>
</g>
<g >
<title>torch::autograd::make_variable (1 samples, 0.04%)</title><rect x="165.8" y="677" width="0.6" height="15.0" fill="rgb(237,199,14)" rx="2" ry="2" />
<text  x="168.85" y="687.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;torch::jit::Source, std::allocator&lt;torch::jit::Source&gt;,  (1 samples, 0.04%)</title><rect x="188.1" y="405" width="0.5" height="15.0" fill="rgb(246,89,33)" rx="2" ry="2" />
<text  x="191.11" y="415.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;::basic_ostream (1 samples, 0.04%)</title><rect x="200.8" y="501" width="0.6" height="15.0" fill="rgb(250,176,14)" rx="2" ry="2" />
<text  x="203.84" y="511.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="256.5" y="373" width="0.5" height="15.0" fill="rgb(235,228,51)" rx="2" ry="2" />
<text  x="259.50" y="383.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (2 samples, 0.09%)</title><rect x="500.9" y="565" width="1.0" height="15.0" fill="rgb(213,190,42)" rx="2" ry="2" />
<text  x="503.87" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;c10::Argument&gt;::allocate (1 samples, 0.04%)</title><rect x="226.3" y="405" width="0.5" height="15.0" fill="rgb(211,21,5)" rx="2" ry="2" />
<text  x="229.28" y="415.5" ></text>
</g>
<g >
<title>parseDeclarations (1 samples, 0.04%)</title><rect x="188.6" y="501" width="0.6" height="15.0" fill="rgb(227,24,5)" rx="2" ry="2" />
<text  x="191.64" y="511.5" ></text>
</g>
<g >
<title>c10::detail::UniqueVoidPtr::clear (18 samples, 0.81%)</title><rect x="623.3" y="437" width="9.6" height="15.0" fill="rgb(207,120,28)" rx="2" ry="2" />
<text  x="626.32" y="447.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::basic_ios (1 samples, 0.04%)</title><rect x="196.1" y="501" width="0.5" height="15.0" fill="rgb(226,116,21)" rx="2" ry="2" />
<text  x="199.06" y="511.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;c10::ThreadLocalDebugInfo&gt;::shared_ptr (1 samples, 0.04%)</title><rect x="337.1" y="341" width="0.5" height="15.0" fill="rgb(251,23,26)" rx="2" ry="2" />
<text  x="340.07" y="351.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1 samples, 0.04%)</title><rect x="260.7" y="501" width="0.6" height="15.0" fill="rgb(205,23,9)" rx="2" ry="2" />
<text  x="263.74" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;void, void  (7 samples, 0.31%)</title><rect x="334.4" y="437" width="3.7" height="15.0" fill="rgb(221,175,5)" rx="2" ry="2" />
<text  x="337.42" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (1 samples, 0.04%)</title><rect x="278.8" y="581" width="0.5" height="15.0" fill="rgb(212,2,30)" rx="2" ry="2" />
<text  x="281.76" y="591.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (1 samples, 0.04%)</title><rect x="322.8" y="309" width="0.5" height="15.0" fill="rgb(249,1,3)" rx="2" ry="2" />
<text  x="325.76" y="319.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.04%)</title><rect x="983.3" y="149" width="0.5" height="15.0" fill="rgb(225,137,45)" rx="2" ry="2" />
<text  x="986.26" y="159.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.04%)</title><rect x="180.7" y="245" width="0.5" height="15.0" fill="rgb(222,4,42)" rx="2" ry="2" />
<text  x="183.69" y="255.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (1 samples, 0.04%)</title><rect x="195.0" y="357" width="0.5" height="15.0" fill="rgb(222,101,10)" rx="2" ry="2" />
<text  x="198.00" y="367.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::optional&lt;caffe2::TypeMeta, false&gt; (1 samples, 0.04%)</title><rect x="360.9" y="613" width="0.6" height="15.0" fill="rgb(213,184,48)" rx="2" ry="2" />
<text  x="363.93" y="623.5" ></text>
</g>
<g >
<title>__sti____cudaRegisterAll (7 samples, 0.31%)</title><rect x="292.0" y="629" width="3.7" height="15.0" fill="rgb(252,151,20)" rx="2" ry="2" />
<text  x="295.01" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_List_node&lt;c10::Dispatcher::OperatorDef&gt; &gt;::deallocate (2 samples, 0.09%)</title><rect x="312.7" y="309" width="1.0" height="15.0" fill="rgb(227,211,5)" rx="2" ry="2" />
<text  x="315.69" y="319.5" ></text>
</g>
<g >
<title>c10::TensorOptions::set_device (2 samples, 0.09%)</title><rect x="352.4" y="597" width="1.1" height="15.0" fill="rgb(254,102,30)" rx="2" ry="2" />
<text  x="355.44" y="607.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor  (7 samples, 0.31%)</title><rect x="243.2" y="565" width="3.8" height="15.0" fill="rgb(214,169,14)" rx="2" ry="2" />
<text  x="246.24" y="575.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (1 samples, 0.04%)</title><rect x="231.1" y="101" width="0.5" height="15.0" fill="rgb(208,97,9)" rx="2" ry="2" />
<text  x="234.05" y="111.5" ></text>
</g>
<g >
<title>c10::optional&lt;int&gt;::optional (1 samples, 0.04%)</title><rect x="177.0" y="373" width="0.5" height="15.0" fill="rgb(216,142,53)" rx="2" ry="2" />
<text  x="179.98" y="383.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="175.4" y="517" width="0.5" height="15.0" fill="rgb(232,143,25)" rx="2" ry="2" />
<text  x="178.39" y="527.5" ></text>
</g>
<g >
<title>c10::dtype (9 samples, 0.40%)</title><rect x="490.3" y="629" width="4.7" height="15.0" fill="rgb(213,54,54)" rx="2" ry="2" />
<text  x="493.27" y="639.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (2 samples, 0.09%)</title><rect x="166.4" y="645" width="1.0" height="15.0" fill="rgb(214,62,22)" rx="2" ry="2" />
<text  x="169.38" y="655.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::clear (1 samples, 0.04%)</title><rect x="181.8" y="341" width="0.5" height="15.0" fill="rgb(234,223,41)" rx="2" ry="2" />
<text  x="184.75" y="351.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.04%)</title><rect x="204.0" y="469" width="0.5" height="15.0" fill="rgb(253,88,0)" rx="2" ry="2" />
<text  x="207.02" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::CreateInstance (1 samples, 0.04%)</title><rect x="295.7" y="421" width="0.6" height="15.0" fill="rgb(219,45,32)" rx="2" ry="2" />
<text  x="298.72" y="431.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (1 samples, 0.04%)</title><rect x="183.9" y="453" width="0.5" height="15.0" fill="rgb(220,100,7)" rx="2" ry="2" />
<text  x="186.87" y="463.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (1 samples, 0.04%)</title><rect x="203.5" y="533" width="0.5" height="15.0" fill="rgb(220,87,34)" rx="2" ry="2" />
<text  x="206.49" y="543.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.04%)</title><rect x="1106.2" y="421" width="0.6" height="15.0" fill="rgb(216,187,38)" rx="2" ry="2" />
<text  x="1109.24" y="431.5" ></text>
</g>
<g >
<title>__tls_get_addr (2 samples, 0.09%)</title><rect x="548.6" y="293" width="1.0" height="15.0" fill="rgb(219,197,50)" rx="2" ry="2" />
<text  x="551.58" y="303.5" ></text>
</g>
<g >
<title>c10::SmallVectorTemplateCommon&lt;long, void&gt;::operator[] (2 samples, 0.09%)</title><rect x="1060.1" y="293" width="1.1" height="15.0" fill="rgb(232,58,33)" rx="2" ry="2" />
<text  x="1063.13" y="303.5" ></text>
</g>
<g >
<title>parseList (1 samples, 0.04%)</title><rect x="169.0" y="613" width="0.6" height="15.0" fill="rgb(228,25,10)" rx="2" ry="2" />
<text  x="172.03" y="623.5" ></text>
</g>
<g >
<title>c10::alloc_cpu (3 samples, 0.13%)</title><rect x="61.9" y="677" width="1.6" height="15.0" fill="rgb(205,147,29)" rx="2" ry="2" />
<text  x="64.95" y="687.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.04%)</title><rect x="260.2" y="245" width="0.5" height="15.0" fill="rgb(242,67,23)" rx="2" ry="2" />
<text  x="263.21" y="255.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (1 samples, 0.04%)</title><rect x="290.4" y="437" width="0.6" height="15.0" fill="rgb(217,114,52)" rx="2" ry="2" />
<text  x="293.42" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (1 samples, 0.04%)</title><rect x="319.0" y="261" width="0.6" height="15.0" fill="rgb(248,194,0)" rx="2" ry="2" />
<text  x="322.05" y="271.5" ></text>
</g>
<g >
<title>c10::FunctionSchema::FunctionSchema (1 samples, 0.04%)</title><rect x="210.9" y="453" width="0.5" height="15.0" fill="rgb(254,100,26)" rx="2" ry="2" />
<text  x="213.91" y="463.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.04%)</title><rect x="213.0" y="405" width="0.6" height="15.0" fill="rgb(240,195,41)" rx="2" ry="2" />
<text  x="216.03" y="415.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.04%)</title><rect x="337.1" y="309" width="0.5" height="15.0" fill="rgb(208,105,11)" rx="2" ry="2" />
<text  x="340.07" y="319.5" ></text>
</g>
<g >
<title>filemap_fault (1 samples, 0.04%)</title><rect x="1152.4" y="421" width="0.5" height="15.0" fill="rgb(215,130,8)" rx="2" ry="2" />
<text  x="1155.36" y="431.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.04%)</title><rect x="291.0" y="533" width="0.5" height="15.0" fill="rgb(249,173,37)" rx="2" ry="2" />
<text  x="293.95" y="543.5" ></text>
</g>
<g >
<title>c10::Storage::operator= (6 samples, 0.27%)</title><rect x="466.4" y="565" width="3.2" height="15.0" fill="rgb(252,22,33)" rx="2" ry="2" />
<text  x="469.42" y="575.5" ></text>
</g>
<g >
<title>_dl_fixup (1 samples, 0.04%)</title><rect x="309.0" y="565" width="0.5" height="15.0" fill="rgb(237,59,40)" rx="2" ry="2" />
<text  x="311.98" y="575.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.04%)</title><rect x="170.1" y="485" width="0.5" height="15.0" fill="rgb(213,220,25)" rx="2" ry="2" />
<text  x="173.09" y="495.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.04%)</title><rect x="266.6" y="405" width="0.5" height="15.0" fill="rgb(225,210,12)" rx="2" ry="2" />
<text  x="269.57" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::~vector (1 samples, 0.04%)</title><rect x="322.2" y="341" width="0.6" height="15.0" fill="rgb(232,90,10)" rx="2" ry="2" />
<text  x="325.23" y="351.5" ></text>
</g>
<g >
<title>do_wp_page (1 samples, 0.04%)</title><rect x="1155.0" y="469" width="0.5" height="15.0" fill="rgb(247,161,8)" rx="2" ry="2" />
<text  x="1158.01" y="479.5" ></text>
</g>
<g >
<title>std::function&lt;void  (25 samples, 1.12%)</title><rect x="312.2" y="453" width="13.2" height="15.0" fill="rgb(217,173,46)" rx="2" ry="2" />
<text  x="315.16" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::operator[] (1 samples, 0.04%)</title><rect x="219.9" y="469" width="0.5" height="15.0" fill="rgb(217,101,27)" rx="2" ry="2" />
<text  x="222.92" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.04%)</title><rect x="189.2" y="517" width="0.5" height="15.0" fill="rgb(221,99,33)" rx="2" ry="2" />
<text  x="192.17" y="527.5" ></text>
</g>
<g >
<title>[libcusparse.so.11.1.0.218] (1 samples, 0.04%)</title><rect x="305.3" y="581" width="0.5" height="15.0" fill="rgb(230,188,40)" rx="2" ry="2" />
<text  x="308.27" y="591.5" ></text>
</g>
<g >
<title>c10::str&lt;char [15], char const*, char [2], unsigned int&gt; (1 samples, 0.04%)</title><rect x="209.8" y="517" width="0.6" height="15.0" fill="rgb(236,65,45)" rx="2" ry="2" />
<text  x="212.85" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, true&gt; &gt;::allocate (1 samples, 0.04%)</title><rect x="181.2" y="245" width="0.6" height="15.0" fill="rgb(230,140,3)" rx="2" ry="2" />
<text  x="184.22" y="255.5" ></text>
</g>
<g >
<title>__mmap64 (3 samples, 0.13%)</title><rect x="1106.8" y="517" width="1.6" height="15.0" fill="rgb(226,3,43)" rx="2" ry="2" />
<text  x="1109.77" y="527.5" ></text>
</g>
<g >
<title>c10::RegisterOperators::op&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;  (1 samples, 0.04%)</title><rect x="108.6" y="661" width="0.5" height="15.0" fill="rgb(232,214,20)" rx="2" ry="2" />
<text  x="111.60" y="671.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="276.1" y="437" width="0.5" height="15.0" fill="rgb(219,36,20)" rx="2" ry="2" />
<text  x="279.11" y="447.5" ></text>
</g>
<g >
<title>checked_request2size (1 samples, 0.04%)</title><rect x="741.0" y="229" width="0.5" height="15.0" fill="rgb(211,101,10)" rx="2" ry="2" />
<text  x="744.01" y="239.5" ></text>
</g>
<g >
<title>c10::FunctionSchema::checkSchema (1 samples, 0.04%)</title><rect x="176.5" y="453" width="0.5" height="15.0" fill="rgb(233,141,43)" rx="2" ry="2" />
<text  x="179.45" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;c10::Argument&gt; &gt;::allocate (4 samples, 0.18%)</title><rect x="229.5" y="357" width="2.1" height="15.0" fill="rgb(220,210,2)" rx="2" ry="2" />
<text  x="232.46" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string (1 samples, 0.04%)</title><rect x="203.5" y="421" width="0.5" height="15.0" fill="rgb(228,199,33)" rx="2" ry="2" />
<text  x="206.49" y="431.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.04%)</title><rect x="166.9" y="357" width="0.5" height="15.0" fill="rgb(246,26,20)" rx="2" ry="2" />
<text  x="169.91" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string (1 samples, 0.04%)</title><rect x="285.7" y="437" width="0.5" height="15.0" fill="rgb(225,102,27)" rx="2" ry="2" />
<text  x="288.65" y="447.5" ></text>
</g>
<g >
<title>c10::KernelFunction::~KernelFunction (2 samples, 0.09%)</title><rect x="315.3" y="261" width="1.1" height="15.0" fill="rgb(251,195,54)" rx="2" ry="2" />
<text  x="318.34" y="271.5" ></text>
</g>
<g >
<title>__cxa_guard_acquire (1 samples, 0.04%)</title><rect x="22.7" y="677" width="0.6" height="15.0" fill="rgb(253,188,31)" rx="2" ry="2" />
<text  x="25.72" y="687.5" ></text>
</g>
<g >
<title>torch::jit::Token::Token (1 samples, 0.04%)</title><rect x="249.1" y="405" width="0.5" height="15.0" fill="rgb(206,180,12)" rx="2" ry="2" />
<text  x="252.07" y="415.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.04%)</title><rect x="1156.6" y="485" width="0.5" height="15.0" fill="rgb(223,122,4)" rx="2" ry="2" />
<text  x="1159.60" y="495.5" ></text>
</g>
<g >
<title>checked_request2size (2 samples, 0.09%)</title><rect x="990.2" y="229" width="1.0" height="15.0" fill="rgb(215,16,15)" rx="2" ry="2" />
<text  x="993.15" y="239.5" ></text>
</g>
<g >
<title>c10::TensorOptions::merge_in (22 samples, 0.99%)</title><rect x="799.3" y="309" width="11.7" height="15.0" fill="rgb(244,109,11)" rx="2" ry="2" />
<text  x="802.32" y="319.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.04%)</title><rect x="627.0" y="373" width="0.6" height="15.0" fill="rgb(223,145,41)" rx="2" ry="2" />
<text  x="630.04" y="383.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;c10::Type,  (1 samples, 0.04%)</title><rect x="267.6" y="405" width="0.6" height="15.0" fill="rgb(235,47,16)" rx="2" ry="2" />
<text  x="270.63" y="415.5" ></text>
</g>
<g >
<title>do_exit (21 samples, 0.94%)</title><rect x="1169.9" y="629" width="11.1" height="15.0" fill="rgb(209,82,15)" rx="2" ry="2" />
<text  x="1172.86" y="639.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="181.2" y="229" width="0.6" height="15.0" fill="rgb(217,46,11)" rx="2" ry="2" />
<text  x="184.22" y="239.5" ></text>
</g>
<g >
<title>parseDeclarations (2 samples, 0.09%)</title><rect x="166.4" y="629" width="1.0" height="15.0" fill="rgb(212,193,20)" rx="2" ry="2" />
<text  x="169.38" y="639.5" ></text>
</g>
<g >
<title>c10::DispatchKeySet::DispatchKeySet (1 samples, 0.04%)</title><rect x="210.4" y="341" width="0.5" height="15.0" fill="rgb(221,171,37)" rx="2" ry="2" />
<text  x="213.38" y="351.5" ></text>
</g>
<g >
<title>at::Tensor::~Tensor (77 samples, 3.46%)</title><rect x="833.2" y="613" width="40.9" height="15.0" fill="rgb(227,70,48)" rx="2" ry="2" />
<text  x="836.24" y="623.5" >at:..</text>
</g>
<g >
<title>c10::optional&lt;c10::MemoryFormat&gt;::optional (2 samples, 0.09%)</title><rect x="820.0" y="517" width="1.1" height="15.0" fill="rgb(211,43,7)" rx="2" ry="2" />
<text  x="822.99" y="527.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.09%)</title><rect x="23.8" y="677" width="1.0" height="15.0" fill="rgb(217,163,44)" rx="2" ry="2" />
<text  x="26.78" y="687.5" ></text>
</g>
<g >
<title>tcache_get (1 samples, 0.04%)</title><rect x="814.7" y="245" width="0.5" height="15.0" fill="rgb(212,64,1)" rx="2" ry="2" />
<text  x="817.69" y="255.5" ></text>
</g>
<g >
<title>page_add_file_rmap (1 samples, 0.04%)</title><rect x="1156.6" y="437" width="0.5" height="15.0" fill="rgb(249,152,15)" rx="2" ry="2" />
<text  x="1159.60" y="447.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.04%)</title><rect x="834.8" y="565" width="0.6" height="15.0" fill="rgb(226,22,4)" rx="2" ry="2" />
<text  x="837.83" y="575.5" ></text>
</g>
<g >
<title>std::make_pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, caffe2::OpSchema&gt; (1 samples, 0.04%)</title><rect x="279.3" y="597" width="0.5" height="15.0" fill="rgb(226,46,1)" rx="2" ry="2" />
<text  x="282.29" y="607.5" ></text>
</g>
<g >
<title>registerer (2 samples, 0.09%)</title><rect x="296.8" y="629" width="1.0" height="15.0" fill="rgb(247,221,23)" rx="2" ry="2" />
<text  x="299.78" y="639.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.04%)</title><rect x="257.0" y="485" width="0.6" height="15.0" fill="rgb(247,190,16)" rx="2" ry="2" />
<text  x="260.03" y="495.5" ></text>
</g>
<g >
<title>c10::callUnboxedKernelFunction&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::TensorOptions const&amp;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (291 samples, 13.07%)</title><rect x="947.7" y="501" width="154.3" height="15.0" fill="rgb(220,128,40)" rx="2" ry="2" />
<text  x="950.74" y="511.5" >c10::callUnboxedKer..</text>
</g>
<g >
<title>_int_malloc (1 samples, 0.04%)</title><rect x="272.9" y="469" width="0.6" height="15.0" fill="rgb(218,16,0)" rx="2" ry="2" />
<text  x="275.93" y="479.5" ></text>
</g>
<g >
<title>hasThreadLocalCallbacks (1 samples, 0.04%)</title><rect x="388.0" y="373" width="0.5" height="15.0" fill="rgb(249,84,12)" rx="2" ry="2" />
<text  x="390.96" y="383.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.04%)</title><rect x="175.4" y="437" width="0.5" height="15.0" fill="rgb(248,175,51)" rx="2" ry="2" />
<text  x="178.39" y="447.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="189.2" y="357" width="0.5" height="15.0" fill="rgb(244,35,19)" rx="2" ry="2" />
<text  x="192.17" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, char&gt; (1 samples, 0.04%)</title><rect x="213.6" y="405" width="0.5" height="15.0" fill="rgb(239,108,26)" rx="2" ry="2" />
<text  x="216.56" y="415.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.04%)</title><rect x="106.5" y="613" width="0.5" height="15.0" fill="rgb(216,144,16)" rx="2" ry="2" />
<text  x="109.48" y="623.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::basic_ios (1 samples, 0.04%)</title><rect x="177.5" y="501" width="0.5" height="15.0" fill="rgb(245,76,31)" rx="2" ry="2" />
<text  x="180.51" y="511.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;c10::NamedTensorMetaInterface, std::default_delete&lt;c10::NamedTensorMetaInterface&gt; &gt;::__uniq_ptr_impl (1 samples, 0.04%)</title><rect x="738.4" y="197" width="0.5" height="15.0" fill="rgb(242,190,30)" rx="2" ry="2" />
<text  x="741.36" y="207.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (9 samples, 0.40%)</title><rect x="1185.2" y="517" width="4.8" height="15.0" fill="rgb(220,147,8)" rx="2" ry="2" />
<text  x="1188.23" y="527.5" ></text>
</g>
<g >
<title>createArgumentVector (3 samples, 0.13%)</title><rect x="207.7" y="469" width="1.6" height="15.0" fill="rgb(209,201,11)" rx="2" ry="2" />
<text  x="210.73" y="479.5" ></text>
</g>
<g >
<title>__GI___open64_nocancel (1 samples, 0.04%)</title><rect x="1112.1" y="533" width="0.5" height="15.0" fill="rgb(229,142,54)" rx="2" ry="2" />
<text  x="1115.08" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char const*, char const*&gt;, std::allocator&lt;std::pair&lt;char const*, char const*&gt; &gt; &gt;::~vector (1 samples, 0.04%)</title><rect x="311.6" y="357" width="0.6" height="15.0" fill="rgb(209,65,46)" rx="2" ry="2" />
<text  x="314.63" y="367.5" ></text>
</g>
<g >
<title>c10::RegisterOperators::op (1 samples, 0.04%)</title><rect x="272.4" y="597" width="0.5" height="15.0" fill="rgb(245,79,41)" rx="2" ry="2" />
<text  x="275.40" y="607.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor  (3 samples, 0.13%)</title><rect x="257.6" y="565" width="1.5" height="15.0" fill="rgb(217,2,54)" rx="2" ry="2" />
<text  x="260.56" y="575.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr_target::intrusive_ptr_target (1 samples, 0.04%)</title><rect x="813.1" y="261" width="0.5" height="15.0" fill="rgb(245,202,1)" rx="2" ry="2" />
<text  x="816.10" y="271.5" ></text>
</g>
<g >
<title>torch::jit::parseName (1 samples, 0.04%)</title><rect x="214.1" y="533" width="0.5" height="15.0" fill="rgb(253,176,54)" rx="2" ry="2" />
<text  x="217.09" y="543.5" ></text>
</g>
<g >
<title>at::RecordFunction::RecordFunction (5 samples, 0.22%)</title><rect x="699.7" y="517" width="2.6" height="15.0" fill="rgb(225,2,0)" rx="2" ry="2" />
<text  x="702.66" y="527.5" ></text>
</g>
<g >
<title>caffe2::internal::Caffe2InitializeRegistry::Register (1 samples, 0.04%)</title><rect x="263.4" y="581" width="0.5" height="15.0" fill="rgb(216,88,17)" rx="2" ry="2" />
<text  x="266.39" y="591.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.04%)</title><rect x="283.0" y="533" width="0.5" height="15.0" fill="rgb(210,109,28)" rx="2" ry="2" />
<text  x="286.00" y="543.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;torch::jit::Source&gt; &gt;::construct&lt;torch::jit::Source, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.04%)</title><rect x="188.1" y="389" width="0.5" height="15.0" fill="rgb(222,54,48)" rx="2" ry="2" />
<text  x="191.11" y="399.5" ></text>
</g>
<g >
<title>c10::dtype (19 samples, 0.85%)</title><rect x="656.7" y="613" width="10.1" height="15.0" fill="rgb(242,38,34)" rx="2" ry="2" />
<text  x="659.72" y="623.5" ></text>
</g>
<g >
<title>torch::jit::Token::~Token (1 samples, 0.04%)</title><rect x="214.1" y="389" width="0.5" height="15.0" fill="rgb(219,49,41)" rx="2" ry="2" />
<text  x="217.09" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::~_Vector_base (1 samples, 0.04%)</title><rect x="325.9" y="229" width="0.6" height="15.0" fill="rgb(219,99,14)" rx="2" ry="2" />
<text  x="328.94" y="239.5" ></text>
</g>
<g >
<title>Xbyak::Reg16::Reg16 (1 samples, 0.04%)</title><rect x="265.0" y="597" width="0.5" height="15.0" fill="rgb(234,228,39)" rx="2" ry="2" />
<text  x="267.98" y="607.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTable_ (1 samples, 0.04%)</title><rect x="316.9" y="261" width="0.6" height="15.0" fill="rgb(248,115,12)" rx="2" ry="2" />
<text  x="319.93" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.04%)</title><rect x="132.5" y="501" width="0.5" height="15.0" fill="rgb(251,54,49)" rx="2" ry="2" />
<text  x="135.45" y="511.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="180.7" y="325" width="0.5" height="15.0" fill="rgb(206,125,34)" rx="2" ry="2" />
<text  x="183.69" y="335.5" ></text>
</g>
<g >
<title>torch::Library::_impl (3 samples, 0.13%)</title><rect x="250.1" y="549" width="1.6" height="15.0" fill="rgb(220,20,27)" rx="2" ry="2" />
<text  x="253.13" y="559.5" ></text>
</g>
<g >
<title>c10::TensorImpl::compute_contiguous (1 samples, 0.04%)</title><rect x="427.7" y="293" width="0.5" height="15.0" fill="rgb(252,6,13)" rx="2" ry="2" />
<text  x="430.72" y="303.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::detail::intrusive_target_default_null_type&lt;c10::TensorImpl&gt; &gt;::make&lt;c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;, c10::DispatchKey, caffe2::TypeMeta&amp;&gt; (2 samples, 0.09%)</title><rect x="101.2" y="629" width="1.0" height="15.0" fill="rgb(238,173,2)" rx="2" ry="2" />
<text  x="104.18" y="639.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.04%)</title><rect x="182.8" y="469" width="0.5" height="15.0" fill="rgb(224,164,30)" rx="2" ry="2" />
<text  x="185.81" y="479.5" ></text>
</g>
<g >
<title>c10::GetCPUAllocator (1 samples, 0.04%)</title><rect x="778.1" y="309" width="0.5" height="15.0" fill="rgb(242,139,44)" rx="2" ry="2" />
<text  x="781.11" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.04%)</title><rect x="252.8" y="309" width="0.5" height="15.0" fill="rgb(215,0,48)" rx="2" ry="2" />
<text  x="255.79" y="319.5" ></text>
</g>
<g >
<title>do_anonymous_page (2 samples, 0.09%)</title><rect x="293.1" y="437" width="1.0" height="15.0" fill="rgb(235,44,3)" rx="2" ry="2" />
<text  x="296.07" y="447.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.09%)</title><rect x="347.1" y="501" width="1.1" height="15.0" fill="rgb(234,127,27)" rx="2" ry="2" />
<text  x="350.14" y="511.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.04%)</title><rect x="175.4" y="565" width="0.5" height="15.0" fill="rgb(248,104,9)" rx="2" ry="2" />
<text  x="178.39" y="575.5" ></text>
</g>
<g >
<title>__static_initialization_and_destruction_0 (4 samples, 0.18%)</title><rect x="257.0" y="613" width="2.1" height="15.0" fill="rgb(241,34,2)" rx="2" ry="2" />
<text  x="260.03" y="623.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.04%)</title><rect x="281.9" y="565" width="0.6" height="15.0" fill="rgb(205,102,40)" rx="2" ry="2" />
<text  x="284.94" y="575.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.04%)</title><rect x="229.5" y="165" width="0.5" height="15.0" fill="rgb(213,110,25)" rx="2" ry="2" />
<text  x="232.46" y="175.5" ></text>
</g>
<g >
<title>torch::Library::fallback&lt;torch::CppFunction&gt; (1 samples, 0.04%)</title><rect x="259.7" y="565" width="0.5" height="15.0" fill="rgb(251,43,15)" rx="2" ry="2" />
<text  x="262.68" y="575.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (1 samples, 0.04%)</title><rect x="209.8" y="453" width="0.6" height="15.0" fill="rgb(215,51,52)" rx="2" ry="2" />
<text  x="212.85" y="463.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;c10::Type,  (1 samples, 0.04%)</title><rect x="272.4" y="437" width="0.5" height="15.0" fill="rgb(233,67,53)" rx="2" ry="2" />
<text  x="275.40" y="447.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::validIdent (1 samples, 0.04%)</title><rect x="228.4" y="405" width="0.5" height="15.0" fill="rgb(250,148,9)" rx="2" ry="2" />
<text  x="231.40" y="415.5" ></text>
</g>
<g >
<title>openaux (12 samples, 0.54%)</title><rect x="1106.2" y="581" width="6.4" height="15.0" fill="rgb(229,138,54)" rx="2" ry="2" />
<text  x="1109.24" y="591.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.04%)</title><rect x="1108.9" y="501" width="0.5" height="15.0" fill="rgb(206,140,11)" rx="2" ry="2" />
<text  x="1111.89" y="511.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.04%)</title><rect x="112.8" y="453" width="0.6" height="15.0" fill="rgb(205,86,21)" rx="2" ry="2" />
<text  x="115.84" y="463.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.04%)</title><rect x="276.6" y="453" width="0.6" height="15.0" fill="rgb(240,219,52)" rx="2" ry="2" />
<text  x="279.64" y="463.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;c10::DebugInfoBase,  (1 samples, 0.04%)</title><rect x="632.3" y="325" width="0.6" height="15.0" fill="rgb(205,43,6)" rx="2" ry="2" />
<text  x="635.34" y="335.5" ></text>
</g>
<g >
<title>do_wp_page (1 samples, 0.04%)</title><rect x="1149.2" y="469" width="0.5" height="15.0" fill="rgb(205,190,27)" rx="2" ry="2" />
<text  x="1152.18" y="479.5" ></text>
</g>
<g >
<title>do_filp_open (1 samples, 0.04%)</title><rect x="1110.5" y="437" width="0.5" height="15.0" fill="rgb(215,164,8)" rx="2" ry="2" />
<text  x="1113.49" y="447.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;c10::RegistrationHandleRAII*&gt; (2 samples, 0.09%)</title><rect x="309.5" y="517" width="1.1" height="15.0" fill="rgb(237,145,19)" rx="2" ry="2" />
<text  x="312.51" y="527.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (2 samples, 0.09%)</title><rect x="240.6" y="389" width="1.1" height="15.0" fill="rgb(218,150,45)" rx="2" ry="2" />
<text  x="243.59" y="399.5" ></text>
</g>
<g >
<title>free_perturb (1 samples, 0.04%)</title><rect x="416.6" y="213" width="0.5" height="15.0" fill="rgb(242,12,2)" rx="2" ry="2" />
<text  x="419.59" y="223.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseDeclaration (2 samples, 0.09%)</title><rect x="265.5" y="421" width="1.1" height="15.0" fill="rgb(245,20,23)" rx="2" ry="2" />
<text  x="268.51" y="431.5" ></text>
</g>
<g >
<title>c10::SmallVectorTemplateBase&lt;unsigned long, true&gt;::SmallVectorTemplateBase (1 samples, 0.04%)</title><rect x="532.1" y="373" width="0.6" height="15.0" fill="rgb(209,182,27)" rx="2" ry="2" />
<text  x="535.15" y="383.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="189.7" y="437" width="0.5" height="15.0" fill="rgb(232,190,22)" rx="2" ry="2" />
<text  x="192.70" y="447.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;::basic_ostream (1 samples, 0.04%)</title><rect x="209.8" y="469" width="0.6" height="15.0" fill="rgb(250,209,15)" rx="2" ry="2" />
<text  x="212.85" y="479.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseDeclaration (1 samples, 0.04%)</title><rect x="113.9" y="485" width="0.5" height="15.0" fill="rgb(253,66,30)" rx="2" ry="2" />
<text  x="116.90" y="495.5" ></text>
</g>
<g >
<title>c10::TensorImpl::TensorImpl (18 samples, 0.81%)</title><rect x="978.0" y="229" width="9.5" height="15.0" fill="rgb(212,153,40)" rx="2" ry="2" />
<text  x="980.96" y="239.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_CUDAHooks.cpp (1 samples, 0.04%)</title><rect x="184.4" y="629" width="0.5" height="15.0" fill="rgb(205,80,29)" rx="2" ry="2" />
<text  x="187.40" y="639.5" ></text>
</g>
<g >
<title>Xbyak::Fpu::Fpu (1 samples, 0.04%)</title><rect x="263.9" y="597" width="0.5" height="15.0" fill="rgb(250,215,15)" rx="2" ry="2" />
<text  x="266.92" y="607.5" ></text>
</g>
<g >
<title>_M_init_functor (1 samples, 0.04%)</title><rect x="221.5" y="501" width="0.5" height="15.0" fill="rgb(246,135,0)" rx="2" ry="2" />
<text  x="224.51" y="511.5" ></text>
</g>
<g >
<title>c10::TensorImpl::compute_contiguous (2 samples, 0.09%)</title><rect x="136.2" y="677" width="1.0" height="15.0" fill="rgb(233,189,5)" rx="2" ry="2" />
<text  x="139.16" y="687.5" ></text>
</g>
<g >
<title>at::hasCallbacks@plt (1 samples, 0.04%)</title><rect x="701.8" y="501" width="0.5" height="15.0" fill="rgb(249,121,7)" rx="2" ry="2" />
<text  x="704.78" y="511.5" ></text>
</g>
<g >
<title>torch::detail::TorchLibraryInit::TorchLibraryInit (2 samples, 0.09%)</title><rect x="193.9" y="597" width="1.1" height="15.0" fill="rgb(221,211,51)" rx="2" ry="2" />
<text  x="196.94" y="607.5" ></text>
</g>
<g >
<title>c10::TensorImpl::TensorImpl (3 samples, 0.13%)</title><rect x="134.6" y="677" width="1.6" height="15.0" fill="rgb(235,47,20)" rx="2" ry="2" />
<text  x="137.57" y="687.5" ></text>
</g>
<g >
<title>c10::detail::_str&lt;char const*, char const*, char const*, unsigned int&gt; (1 samples, 0.04%)</title><rect x="223.6" y="485" width="0.6" height="15.0" fill="rgb(221,52,41)" rx="2" ry="2" />
<text  x="226.63" y="495.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (1 samples, 0.04%)</title><rect x="293.6" y="421" width="0.5" height="15.0" fill="rgb(246,179,35)" rx="2" ry="2" />
<text  x="296.60" y="431.5" ></text>
</g>
<g >
<title>torch::empty (197 samples, 8.85%)</title><rect x="495.0" y="629" width="104.5" height="15.0" fill="rgb(236,22,24)" rx="2" ry="2" />
<text  x="498.04" y="639.5" >torch::empty</text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="212.5" y="149" width="0.5" height="15.0" fill="rgb(224,133,53)" rx="2" ry="2" />
<text  x="215.50" y="159.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="254.9" y="421" width="0.5" height="15.0" fill="rgb(241,137,33)" rx="2" ry="2" />
<text  x="257.91" y="431.5" ></text>
</g>
<g >
<title>xas_load (1 samples, 0.04%)</title><rect x="304.2" y="421" width="0.5" height="15.0" fill="rgb(209,226,22)" rx="2" ry="2" />
<text  x="307.20" y="431.5" ></text>
</g>
<g >
<title>c10::make_intrusive&lt;c10::TensorImpl, c10::detail::intrusive_target_default_null_type&lt;c10::TensorImpl&gt;, c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;, c10::DispatchKey, caffe2::TypeMeta&amp;&gt; (13 samples, 0.58%)</title><rect x="540.6" y="309" width="6.9" height="15.0" fill="rgb(228,180,11)" rx="2" ry="2" />
<text  x="543.63" y="319.5" ></text>
</g>
<g >
<title>c10::DefaultCPUAllocator::allocate (39 samples, 1.75%)</title><rect x="404.9" y="325" width="20.7" height="15.0" fill="rgb(251,189,34)" rx="2" ry="2" />
<text  x="407.92" y="335.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_VariableType_4.cpp (4 samples, 0.18%)</title><rect x="257.0" y="629" width="2.1" height="15.0" fill="rgb(241,106,8)" rx="2" ry="2" />
<text  x="260.03" y="639.5" ></text>
</g>
<g >
<title>at::RecordFunction::~RecordFunction@plt (2 samples, 0.09%)</title><rect x="961.5" y="405" width="1.1" height="15.0" fill="rgb(230,184,10)" rx="2" ry="2" />
<text  x="964.53" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;at::RecordFunctionCallback, unsigned long&gt;, std::allocator&lt;std::pair&lt;at::RecordFunctionCallback, unsigned long&gt; &gt; &gt;::empty (1 samples, 0.04%)</title><rect x="388.0" y="357" width="0.5" height="15.0" fill="rgb(214,35,28)" rx="2" ry="2" />
<text  x="390.96" y="367.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.04%)</title><rect x="212.0" y="309" width="0.5" height="15.0" fill="rgb(217,66,3)" rx="2" ry="2" />
<text  x="214.97" y="319.5" ></text>
</g>
<g >
<title>[libcublasLt.so.11.1.0.229] (1 samples, 0.04%)</title><rect x="173.3" y="629" width="0.5" height="15.0" fill="rgb(227,204,54)" rx="2" ry="2" />
<text  x="176.27" y="639.5" ></text>
</g>
<g >
<title>c10::TensorOptions::requires_grad (2 samples, 0.09%)</title><rect x="452.6" y="597" width="1.1" height="15.0" fill="rgb(253,190,43)" rx="2" ry="2" />
<text  x="455.63" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;torch::jit::Token*, std::vector&lt;torch::jit::Token, std::allocator&lt;torch::jit::Token&gt; &gt; &gt;::operator+ (1 samples, 0.04%)</title><rect x="281.9" y="389" width="0.6" height="15.0" fill="rgb(252,66,4)" rx="2" ry="2" />
<text  x="284.94" y="399.5" ></text>
</g>
<g >
<title>c10::either&lt;c10::OperatorName, c10::FunctionSchema&gt;::_construct_right&lt;c10::FunctionSchema const&amp;&gt; (1 samples, 0.04%)</title><rect x="210.9" y="469" width="0.5" height="15.0" fill="rgb(246,199,48)" rx="2" ry="2" />
<text  x="213.91" y="479.5" ></text>
</g>
<g >
<title>c10::DispatchKeySet::highestPriorityTypeId (1 samples, 0.04%)</title><rect x="520.5" y="501" width="0.5" height="15.0" fill="rgb(227,217,30)" rx="2" ry="2" />
<text  x="523.49" y="511.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.04%)</title><rect x="268.2" y="549" width="0.5" height="15.0" fill="rgb(227,139,15)" rx="2" ry="2" />
<text  x="271.16" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;c10::Argument&gt;::allocate (1 samples, 0.04%)</title><rect x="287.8" y="485" width="0.5" height="15.0" fill="rgb(230,225,7)" rx="2" ry="2" />
<text  x="290.77" y="495.5" ></text>
</g>
<g >
<title>c10::TensorImpl::compute_numel (1 samples, 0.04%)</title><rect x="435.7" y="293" width="0.5" height="15.0" fill="rgb(211,110,10)" rx="2" ry="2" />
<text  x="438.67" y="303.5" ></text>
</g>
<g >
<title>mmap_region (1 samples, 0.04%)</title><rect x="1168.8" y="533" width="0.5" height="15.0" fill="rgb(236,48,53)" rx="2" ry="2" />
<text  x="1171.80" y="543.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (2 samples, 0.09%)</title><rect x="235.3" y="357" width="1.1" height="15.0" fill="rgb(214,180,32)" rx="2" ry="2" />
<text  x="238.29" y="367.5" ></text>
</g>
<g >
<title>c10::ThreadLocalDebugInfo::get (3 samples, 0.13%)</title><rect x="406.0" y="277" width="1.6" height="15.0" fill="rgb(247,35,2)" rx="2" ry="2" />
<text  x="408.98" y="287.5" ></text>
</g>
<g >
<title>c10::AliasInfo::~AliasInfo (1 samples, 0.04%)</title><rect x="232.1" y="373" width="0.5" height="15.0" fill="rgb(230,2,12)" rx="2" ry="2" />
<text  x="235.11" y="383.5" ></text>
</g>
<g >
<title>inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;torch::jit::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_CatchAll (1 samples, 0.04%)</title><rect x="285.7" y="549" width="0.5" height="15.0" fill="rgb(228,98,4)" rx="2" ry="2" />
<text  x="288.65" y="559.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;c10::Dispatcher::OperatorDef&gt; &gt; &gt;::construct&lt;c10::Dispatcher::OperatorDef, c10::OperatorName&gt; (3 samples, 0.13%)</title><rect x="190.2" y="453" width="1.6" height="15.0" fill="rgb(238,54,6)" rx="2" ry="2" />
<text  x="193.23" y="463.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_fbgemm_utils.cpp (1 samples, 0.04%)</title><rect x="262.3" y="613" width="0.6" height="15.0" fill="rgb(248,24,27)" rx="2" ry="2" />
<text  x="265.33" y="623.5" ></text>
</g>
<g >
<title>_int_malloc (3 samples, 0.13%)</title><rect x="11.6" y="677" width="1.6" height="15.0" fill="rgb(253,128,12)" rx="2" ry="2" />
<text  x="14.59" y="687.5" ></text>
</g>
<g >
<title>at::native::check_size_nonnegative (1 samples, 0.04%)</title><rect x="746.8" y="309" width="0.6" height="15.0" fill="rgb(215,152,52)" rx="2" ry="2" />
<text  x="749.84" y="319.5" ></text>
</g>
<g >
<title>c10::DispatchKeySet::operator- (1 samples, 0.04%)</title><rect x="515.7" y="565" width="0.5" height="15.0" fill="rgb(208,8,41)" rx="2" ry="2" />
<text  x="518.71" y="575.5" ></text>
</g>
<g >
<title>c10::FunctionSchema::~FunctionSchema (4 samples, 0.18%)</title><rect x="319.6" y="261" width="2.1" height="15.0" fill="rgb(214,40,9)" rx="2" ry="2" />
<text  x="322.58" y="271.5" ></text>
</g>
<g >
<title>[libcudart.so.11.0.194] (5 samples, 0.22%)</title><rect x="292.5" y="581" width="2.7" height="15.0" fill="rgb(230,168,34)" rx="2" ry="2" />
<text  x="295.54" y="591.5" ></text>
</g>
<g >
<title>__do_global_dtors_aux (38 samples, 1.71%)</title><rect x="306.3" y="613" width="20.2" height="15.0" fill="rgb(229,16,47)" rx="2" ry="2" />
<text  x="309.33" y="623.5" ></text>
</g>
<g >
<title>c10::TensorImpl::refresh_contiguous (2 samples, 0.09%)</title><rect x="427.2" y="309" width="1.0" height="15.0" fill="rgb(219,125,14)" rx="2" ry="2" />
<text  x="430.19" y="319.5" ></text>
</g>
<g >
<title>vmacache_find (1 samples, 0.04%)</title><rect x="1151.3" y="485" width="0.5" height="15.0" fill="rgb(237,45,45)" rx="2" ry="2" />
<text  x="1154.30" y="495.5" ></text>
</g>
<g >
<title>torch::jit::parseSchema (4 samples, 0.18%)</title><rect x="111.2" y="645" width="2.2" height="15.0" fill="rgb(223,102,47)" rx="2" ry="2" />
<text  x="114.25" y="655.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;c10::NamedTensorMetaInterface, std::default_delete&lt;c10::NamedTensorMetaInterface&gt; &gt;::~unique_ptr (2 samples, 0.09%)</title><rect x="647.7" y="533" width="1.1" height="15.0" fill="rgb(248,166,26)" rx="2" ry="2" />
<text  x="650.71" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::_S_relocate (1 samples, 0.04%)</title><rect x="288.8" y="453" width="0.6" height="15.0" fill="rgb(242,109,27)" rx="2" ry="2" />
<text  x="291.83" y="463.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;unsigned char&gt; (1 samples, 0.04%)</title><rect x="506.2" y="517" width="0.5" height="15.0" fill="rgb(232,206,46)" rx="2" ry="2" />
<text  x="509.17" y="527.5" ></text>
</g>
<g >
<title>torch::autograd::AutogradMeta::~AutogradMeta (1 samples, 0.04%)</title><rect x="165.3" y="677" width="0.5" height="15.0" fill="rgb(242,98,52)" rx="2" ry="2" />
<text  x="168.32" y="687.5" ></text>
</g>
<g >
<title>at::hasCallbacks (2 samples, 0.09%)</title><rect x="956.2" y="389" width="1.1" height="15.0" fill="rgb(248,126,42)" rx="2" ry="2" />
<text  x="959.23" y="399.5" ></text>
</g>
<g >
<title>isalpha@plt (1 samples, 0.04%)</title><rect x="241.1" y="341" width="0.6" height="15.0" fill="rgb(212,52,54)" rx="2" ry="2" />
<text  x="244.12" y="351.5" ></text>
</g>
<g >
<title>strnlen_user (1 samples, 0.04%)</title><rect x="1168.3" y="581" width="0.5" height="15.0" fill="rgb(248,20,0)" rx="2" ry="2" />
<text  x="1171.27" y="591.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.04%)</title><rect x="186.0" y="485" width="0.5" height="15.0" fill="rgb(213,141,21)" rx="2" ry="2" />
<text  x="188.99" y="495.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;signed char&gt; (2 samples, 0.09%)</title><rect x="952.5" y="389" width="1.1" height="15.0" fill="rgb(219,185,49)" rx="2" ry="2" />
<text  x="955.52" y="399.5" ></text>
</g>
<g >
<title>_M_bucket_index (1 samples, 0.04%)</title><rect x="131.9" y="613" width="0.6" height="15.0" fill="rgb(252,36,23)" rx="2" ry="2" />
<text  x="134.92" y="623.5" ></text>
</g>
<g >
<title>_dl_fixup (1 samples, 0.04%)</title><rect x="184.4" y="517" width="0.5" height="15.0" fill="rgb(216,216,4)" rx="2" ry="2" />
<text  x="187.40" y="527.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.04%)</title><rect x="203.0" y="549" width="0.5" height="15.0" fill="rgb(233,33,7)" rx="2" ry="2" />
<text  x="205.96" y="559.5" ></text>
</g>
<g >
<title>c10::KernelFunction::isValid (1 samples, 0.04%)</title><rect x="270.8" y="469" width="0.5" height="15.0" fill="rgb(213,121,19)" rx="2" ry="2" />
<text  x="273.81" y="479.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (1 samples, 0.04%)</title><rect x="254.9" y="437" width="0.5" height="15.0" fill="rgb(234,96,30)" rx="2" ry="2" />
<text  x="257.91" y="447.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.04%)</title><rect x="259.1" y="357" width="0.6" height="15.0" fill="rgb(215,191,14)" rx="2" ry="2" />
<text  x="262.15" y="367.5" ></text>
</g>
<g >
<title>tcache_put (1 samples, 0.04%)</title><rect x="646.6" y="469" width="0.6" height="15.0" fill="rgb(239,190,13)" rx="2" ry="2" />
<text  x="649.65" y="479.5" ></text>
</g>
<g >
<title>setup_new_exec (9 samples, 0.40%)</title><rect x="1185.2" y="597" width="4.8" height="15.0" fill="rgb(224,9,27)" rx="2" ry="2" />
<text  x="1188.23" y="607.5" ></text>
</g>
<g >
<title>interrupt_entry (1 samples, 0.04%)</title><rect x="1181.0" y="693" width="0.5" height="15.0" fill="rgb(239,53,20)" rx="2" ry="2" />
<text  x="1183.99" y="703.5" ></text>
</g>
<g >
<title>c10::TensorImpl::empty_tensor_restride (4 samples, 0.18%)</title><rect x="426.1" y="325" width="2.1" height="15.0" fill="rgb(208,202,10)" rx="2" ry="2" />
<text  x="429.13" y="335.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="274.5" y="357" width="0.5" height="15.0" fill="rgb(247,178,27)" rx="2" ry="2" />
<text  x="277.52" y="367.5" ></text>
</g>
<g >
<title>main (1,470 samples, 66.04%)</title><rect x="326.5" y="661" width="779.2" height="15.0" fill="rgb(214,226,54)" rx="2" ry="2" />
<text  x="329.47" y="671.5" >main</text>
</g>
<g >
<title>c10::DispatchKeyExtractor::getDispatchKeyUnboxed&lt;c10::ArrayRef&lt;long&gt;, c10::TensorOptions const&amp;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (4 samples, 0.18%)</title><rect x="375.8" y="549" width="2.1" height="15.0" fill="rgb(211,43,24)" rx="2" ry="2" />
<text  x="378.77" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.04%)</title><rect x="257.0" y="437" width="0.6" height="15.0" fill="rgb(238,54,54)" rx="2" ry="2" />
<text  x="260.03" y="447.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.04%)</title><rect x="226.3" y="181" width="0.5" height="15.0" fill="rgb(250,91,6)" rx="2" ry="2" />
<text  x="229.28" y="191.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;c10::DebugInfoBase,  (1 samples, 0.04%)</title><rect x="853.9" y="325" width="0.5" height="15.0" fill="rgb(225,13,25)" rx="2" ry="2" />
<text  x="856.92" y="335.5" ></text>
</g>
<g >
<title>std::accumulate&lt;long const*, long long, std::multiplies&lt;long&gt; &gt; (1 samples, 0.04%)</title><rect x="1000.8" y="293" width="0.5" height="15.0" fill="rgb(206,43,40)" rx="2" ry="2" />
<text  x="1003.75" y="303.5" ></text>
</g>
<g >
<title>c10::TensorOptions::dtype (1 samples, 0.04%)</title><rect x="1070.7" y="309" width="0.6" height="15.0" fill="rgb(205,182,43)" rx="2" ry="2" />
<text  x="1073.73" y="319.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTable_@plt (1 samples, 0.04%)</title><rect x="286.7" y="549" width="0.5" height="15.0" fill="rgb(250,94,45)" rx="2" ry="2" />
<text  x="289.71" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt; &gt;::_M_put_node (2 samples, 0.09%)</title><rect x="310.6" y="453" width="1.0" height="15.0" fill="rgb(225,49,13)" rx="2" ry="2" />
<text  x="313.57" y="463.5" ></text>
</g>
<g >
<title>dl_main (98 samples, 4.40%)</title><rect x="1105.7" y="629" width="52.0" height="15.0" fill="rgb(225,51,45)" rx="2" ry="2" />
<text  x="1108.71" y="639.5" >dl_main</text>
</g>
<g >
<title>c10::Dispatcher::findOp (1 samples, 0.04%)</title><rect x="286.2" y="565" width="0.5" height="15.0" fill="rgb(248,20,23)" rx="2" ry="2" />
<text  x="289.18" y="575.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="283.0" y="517" width="0.5" height="15.0" fill="rgb(245,55,37)" rx="2" ry="2" />
<text  x="286.00" y="527.5" ></text>
</g>
<g >
<title>__GI___default_morecore (1 samples, 0.04%)</title><rect x="243.8" y="325" width="0.5" height="15.0" fill="rgb(213,106,38)" rx="2" ry="2" />
<text  x="246.77" y="335.5" ></text>
</g>
<g >
<title>ska::detailv3::functor_storage&lt;unsigned long, std::hash&lt;c10::OperatorName&gt; &gt;::operator (1 samples, 0.04%)</title><rect x="218.9" y="389" width="0.5" height="15.0" fill="rgb(208,37,24)" rx="2" ry="2" />
<text  x="221.86" y="399.5" ></text>
</g>
<g >
<title>std::__weak_count&lt; (2 samples, 0.09%)</title><rect x="863.5" y="453" width="1.0" height="15.0" fill="rgb(243,59,33)" rx="2" ry="2" />
<text  x="866.46" y="463.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.04%)</title><rect x="335.5" y="373" width="0.5" height="15.0" fill="rgb(205,106,52)" rx="2" ry="2" />
<text  x="338.48" y="383.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (4 samples, 0.18%)</title><rect x="229.5" y="309" width="2.1" height="15.0" fill="rgb(244,118,35)" rx="2" ry="2" />
<text  x="232.46" y="319.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;bool  (1 samples, 0.04%)</title><rect x="215.1" y="565" width="0.6" height="15.0" fill="rgb(220,162,3)" rx="2" ry="2" />
<text  x="218.15" y="575.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (1 samples, 0.04%)</title><rect x="231.6" y="325" width="0.5" height="15.0" fill="rgb(235,192,48)" rx="2" ry="2" />
<text  x="234.58" y="335.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.04%)</title><rect x="206.7" y="533" width="0.5" height="15.0" fill="rgb(233,182,17)" rx="2" ry="2" />
<text  x="209.67" y="543.5" ></text>
</g>
<g >
<title>onOperatorRegistered (1 samples, 0.04%)</title><rect x="296.8" y="581" width="0.5" height="15.0" fill="rgb(247,20,4)" rx="2" ry="2" />
<text  x="299.78" y="591.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.04%)</title><rect x="321.2" y="165" width="0.5" height="15.0" fill="rgb(227,132,27)" rx="2" ry="2" />
<text  x="324.17" y="175.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (1 samples, 0.04%)</title><rect x="1154.5" y="421" width="0.5" height="15.0" fill="rgb(223,85,10)" rx="2" ry="2" />
<text  x="1157.48" y="431.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::RegistrationListener::onOperatorRegistered (1 samples, 0.04%)</title><rect x="297.3" y="581" width="0.5" height="15.0" fill="rgb(214,95,48)" rx="2" ry="2" />
<text  x="300.31" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node (1 samples, 0.04%)</title><rect x="181.8" y="309" width="0.5" height="15.0" fill="rgb(231,30,46)" rx="2" ry="2" />
<text  x="184.75" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;c10::Argument&gt; &gt;::allocate (1 samples, 0.04%)</title><rect x="260.2" y="421" width="0.5" height="15.0" fill="rgb(231,61,12)" rx="2" ry="2" />
<text  x="263.21" y="431.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.04%)</title><rect x="206.7" y="405" width="0.5" height="15.0" fill="rgb(234,12,28)" rx="2" ry="2" />
<text  x="209.67" y="415.5" ></text>
</g>
<g >
<title>c10::TensorOptions::dtype (21 samples, 0.94%)</title><rect x="893.1" y="597" width="11.2" height="15.0" fill="rgb(239,175,48)" rx="2" ry="2" />
<text  x="896.14" y="607.5" ></text>
</g>
<g >
<title>do_brk_flags (1 samples, 0.04%)</title><rect x="243.8" y="213" width="0.5" height="15.0" fill="rgb(233,55,36)" rx="2" ry="2" />
<text  x="246.77" y="223.5" ></text>
</g>
<g >
<title>unlink_chunk (7 samples, 0.31%)</title><rect x="17.4" y="677" width="3.7" height="15.0" fill="rgb(235,25,19)" rx="2" ry="2" />
<text  x="20.42" y="687.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.04%)</title><rect x="178.0" y="501" width="0.6" height="15.0" fill="rgb(215,150,7)" rx="2" ry="2" />
<text  x="181.04" y="511.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.04%)</title><rect x="275.6" y="533" width="0.5" height="15.0" fill="rgb(226,116,31)" rx="2" ry="2" />
<text  x="278.58" y="543.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTable_ (1 samples, 0.04%)</title><rect x="318.0" y="277" width="0.5" height="15.0" fill="rgb(253,60,46)" rx="2" ry="2" />
<text  x="320.99" y="287.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::(anonymous namespace)::createArgumentVector (1 samples, 0.04%)</title><rect x="243.2" y="469" width="0.6" height="15.0" fill="rgb(235,143,20)" rx="2" ry="2" />
<text  x="246.24" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;c10::AutogradMetaInterface, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::operator= (1 samples, 0.04%)</title><rect x="670.5" y="565" width="0.5" height="15.0" fill="rgb(248,47,1)" rx="2" ry="2" />
<text  x="673.50" y="575.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.04%)</title><rect x="1108.9" y="405" width="0.5" height="15.0" fill="rgb(209,179,54)" rx="2" ry="2" />
<text  x="1111.89" y="415.5" ></text>
</g>
<g >
<title>typeMetaToScalarType (8 samples, 0.36%)</title><rect x="916.5" y="533" width="4.2" height="15.0" fill="rgb(214,202,46)" rx="2" ry="2" />
<text  x="919.47" y="543.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;c10::ThreadLocalDebugInfo,  (2 samples, 0.09%)</title><rect x="1007.1" y="229" width="1.1" height="15.0" fill="rgb(224,141,53)" rx="2" ry="2" />
<text  x="1010.12" y="239.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.04%)</title><rect x="214.6" y="549" width="0.5" height="15.0" fill="rgb(225,84,20)" rx="2" ry="2" />
<text  x="217.62" y="559.5" ></text>
</g>
<g >
<title>mmap_region (3 samples, 0.13%)</title><rect x="1106.8" y="389" width="1.6" height="15.0" fill="rgb(246,55,7)" rx="2" ry="2" />
<text  x="1109.77" y="399.5" ></text>
</g>
<g >
<title>torch::detail::TorchLibraryInit::TorchLibraryInit (1 samples, 0.04%)</title><rect x="267.6" y="597" width="0.6" height="15.0" fill="rgb(242,201,31)" rx="2" ry="2" />
<text  x="270.63" y="607.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.04%)</title><rect x="478.6" y="581" width="0.5" height="15.0" fill="rgb(212,54,51)" rx="2" ry="2" />
<text  x="481.61" y="591.5" ></text>
</g>
<g >
<title>c10::StorageImpl::release_resources (16 samples, 0.72%)</title><rect x="846.0" y="469" width="8.4" height="15.0" fill="rgb(207,101,40)" rx="2" ry="2" />
<text  x="848.97" y="479.5" ></text>
</g>
<g >
<title>c10::InternedStrings::InternedStrings (2 samples, 0.09%)</title><rect x="189.2" y="549" width="1.0" height="15.0" fill="rgb(248,142,40)" rx="2" ry="2" />
<text  x="192.17" y="559.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.04%)</title><rect x="702.8" y="453" width="0.6" height="15.0" fill="rgb(234,168,7)" rx="2" ry="2" />
<text  x="705.84" y="463.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (31 samples, 1.39%)</title><rect x="332.8" y="597" width="16.5" height="15.0" fill="rgb(230,47,0)" rx="2" ry="2" />
<text  x="335.83" y="607.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseDeclaration (3 samples, 0.13%)</title><rect x="211.4" y="421" width="1.6" height="15.0" fill="rgb(205,130,4)" rx="2" ry="2" />
<text  x="214.44" y="431.5" ></text>
</g>
<g >
<title>parseDeclaration (4 samples, 0.18%)</title><rect x="211.4" y="469" width="2.2" height="15.0" fill="rgb(219,113,10)" rx="2" ry="2" />
<text  x="214.44" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char const*, char const*&gt;, std::allocator&lt;std::pair&lt;char const*, char const*&gt; &gt; &gt;::_M_default_append (1 samples, 0.04%)</title><rect x="278.2" y="581" width="0.6" height="15.0" fill="rgb(232,90,51)" rx="2" ry="2" />
<text  x="281.23" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;c10::AutogradMetaInterface, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::reset (9 samples, 0.40%)</title><rect x="469.6" y="565" width="4.8" height="15.0" fill="rgb(209,16,15)" rx="2" ry="2" />
<text  x="472.60" y="575.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (1 samples, 0.04%)</title><rect x="111.2" y="421" width="0.6" height="15.0" fill="rgb(209,19,21)" rx="2" ry="2" />
<text  x="114.25" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;c10::Argument&gt;::allocate (1 samples, 0.04%)</title><rect x="186.0" y="405" width="0.5" height="15.0" fill="rgb(205,209,11)" rx="2" ry="2" />
<text  x="188.99" y="415.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;torch::autograd::Node,  (2 samples, 0.09%)</title><rect x="863.5" y="469" width="1.0" height="15.0" fill="rgb(248,102,48)" rx="2" ry="2" />
<text  x="866.46" y="479.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.04%)</title><rect x="275.6" y="517" width="0.5" height="15.0" fill="rgb(252,47,31)" rx="2" ry="2" />
<text  x="278.58" y="527.5" ></text>
</g>
<g >
<title>at::RecordFunction::RecordFunction (5 samples, 0.22%)</title><rect x="943.0" y="517" width="2.6" height="15.0" fill="rgb(207,146,48)" rx="2" ry="2" />
<text  x="945.97" y="527.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.04%)</title><rect x="293.1" y="389" width="0.5" height="15.0" fill="rgb(230,36,25)" rx="2" ry="2" />
<text  x="296.07" y="399.5" ></text>
</g>
<g >
<title>c10::make_right&lt;c10::OperatorName, c10::FunctionSchema, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;, std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;, bool&amp;, bool&amp;&gt; (1 samples, 0.04%)</title><rect x="195.5" y="453" width="0.6" height="15.0" fill="rgb(218,82,27)" rx="2" ry="2" />
<text  x="198.53" y="463.5" ></text>
</g>
<g >
<title>__vsnprintf_internal (1 samples, 0.04%)</title><rect x="196.6" y="389" width="0.5" height="15.0" fill="rgb(238,19,11)" rx="2" ry="2" />
<text  x="199.59" y="399.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.04%)</title><rect x="290.4" y="485" width="0.6" height="15.0" fill="rgb(218,85,5)" rx="2" ry="2" />
<text  x="293.42" y="495.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.04%)</title><rect x="230.0" y="133" width="0.5" height="15.0" fill="rgb(222,108,50)" rx="2" ry="2" />
<text  x="232.99" y="143.5" ></text>
</g>
<g >
<title>debugString (1 samples, 0.04%)</title><rect x="209.8" y="533" width="0.6" height="15.0" fill="rgb(242,29,35)" rx="2" ry="2" />
<text  x="212.85" y="543.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.04%)</title><rect x="296.8" y="533" width="0.5" height="15.0" fill="rgb(235,72,16)" rx="2" ry="2" />
<text  x="299.78" y="543.5" ></text>
</g>
<g >
<title>c10::constexpr_storage_t&lt;c10::MemoryFormat&gt;::constexpr_storage_t (1 samples, 0.04%)</title><rect x="594.7" y="405" width="0.5" height="15.0" fill="rgb(222,137,41)" rx="2" ry="2" />
<text  x="597.70" y="415.5" ></text>
</g>
<g >
<title>torch::autograd::AutogradMeta::~AutogradMeta (5 samples, 0.22%)</title><rect x="861.9" y="501" width="2.6" height="15.0" fill="rgb(242,100,6)" rx="2" ry="2" />
<text  x="864.87" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;void, void  (7 samples, 0.31%)</title><rect x="334.4" y="421" width="3.7" height="15.0" fill="rgb(233,206,11)" rx="2" ry="2" />
<text  x="337.42" y="431.5" ></text>
</g>
<g >
<title>c10::Dispatcher::OperatorDef::~OperatorDef (1 samples, 0.04%)</title><rect x="321.7" y="341" width="0.5" height="15.0" fill="rgb(216,217,23)" rx="2" ry="2" />
<text  x="324.70" y="351.5" ></text>
</g>
<g >
<title>write&lt;c10::Dispatcher::findOrRegisterName_ (1 samples, 0.04%)</title><rect x="218.9" y="501" width="0.5" height="15.0" fill="rgb(205,137,51)" rx="2" ry="2" />
<text  x="221.86" y="511.5" ></text>
</g>
<g >
<title>tcache_get (1 samples, 0.04%)</title><rect x="109.1" y="565" width="0.6" height="15.0" fill="rgb(205,2,31)" rx="2" ry="2" />
<text  x="112.13" y="575.5" ></text>
</g>
<g >
<title>c10::StorageImpl::release_resources (18 samples, 0.81%)</title><rect x="623.3" y="469" width="9.6" height="15.0" fill="rgb(249,189,50)" rx="2" ry="2" />
<text  x="626.32" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;c10::Dispatcher::OperatorDef, std::allocator&lt;c10::Dispatcher::OperatorDef&gt; &gt;::emplace_back&lt;c10::OperatorName&gt; (4 samples, 0.18%)</title><rect x="216.7" y="501" width="2.2" height="15.0" fill="rgb(222,179,0)" rx="2" ry="2" />
<text  x="219.74" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (1 samples, 0.04%)</title><rect x="114.4" y="469" width="0.6" height="15.0" fill="rgb(228,108,28)" rx="2" ry="2" />
<text  x="117.43" y="479.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (7 samples, 0.31%)</title><rect x="288.3" y="581" width="3.7" height="15.0" fill="rgb(251,110,41)" rx="2" ry="2" />
<text  x="291.30" y="591.5" ></text>
</g>
<g >
<title>c10::Registry&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unique_ptr&lt;caffe2::OperatorBase, std::default_delete&lt;caffe2::OperatorBase&gt; &gt;, caffe2::OperatorDef const&amp;, caffe2::Workspace*&gt;::Register (3 samples, 0.13%)</title><rect x="274.0" y="597" width="1.6" height="15.0" fill="rgb(233,200,25)" rx="2" ry="2" />
<text  x="276.99" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;c10::RegistrationHandleRAII&gt;::construct&lt;c10::RegistrationHandleRAII, c10::RegistrationHandleRAII&gt; (1 samples, 0.04%)</title><rect x="224.7" y="501" width="0.5" height="15.0" fill="rgb(254,173,37)" rx="2" ry="2" />
<text  x="227.69" y="511.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::lookup (1 samples, 0.04%)</title><rect x="1100.4" y="405" width="0.5" height="15.0" fill="rgb(244,92,52)" rx="2" ry="2" />
<text  x="1103.41" y="415.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="294.1" y="517" width="0.6" height="15.0" fill="rgb(209,156,49)" rx="2" ry="2" />
<text  x="297.13" y="527.5" ></text>
</g>
<g >
<title>free_perturb (2 samples, 0.09%)</title><rect x="1029.9" y="197" width="1.1" height="15.0" fill="rgb(252,206,16)" rx="2" ry="2" />
<text  x="1032.91" y="207.5" ></text>
</g>
<g >
<title>torch::empty (1 samples, 0.04%)</title><rect x="157.4" y="645" width="0.5" height="15.0" fill="rgb(213,166,49)" rx="2" ry="2" />
<text  x="160.37" y="655.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.04%)</title><rect x="289.9" y="421" width="0.5" height="15.0" fill="rgb(246,68,49)" rx="2" ry="2" />
<text  x="292.89" y="431.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerDef (1 samples, 0.04%)</title><rect x="210.4" y="533" width="0.5" height="15.0" fill="rgb(216,194,36)" rx="2" ry="2" />
<text  x="213.38" y="543.5" ></text>
</g>
<g >
<title>c10::Dispatcher::findOp (1 samples, 0.04%)</title><rect x="245.4" y="501" width="0.5" height="15.0" fill="rgb(237,122,37)" rx="2" ry="2" />
<text  x="248.36" y="511.5" ></text>
</g>
<g >
<title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;, c10::DispatchKey, std::hash&lt;c10::DispatchKey&gt;, ska::detailv3::KeyOrValueHasher&lt;c10::DispatchKey, std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;, std::hash&lt;c10::DispatchKey&gt; &gt;, std::equal_to&lt;c10::DispatchKey&gt;, ska::detailv3::KeyOrValueEquality&lt;c10::DispatchKey, std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;, std::equal_to&lt;c10::DispatchKey&gt; &gt;, std::allocator&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt; &gt; &gt; &gt;::emplace&lt;c10::DispatchKey const&amp;, ska::flat_hash_map&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt;, std::hash&lt;c10::DispatchKey&gt;, std::equal_to&lt;c10::DispatchKey&gt;, std::allocator&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt; &gt; &gt;::convertible_to_value&gt; (1 samples, 0.04%)</title><rect x="175.9" y="469" width="0.6" height="15.0" fill="rgb(213,117,25)" rx="2" ry="2" />
<text  x="178.92" y="479.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (1 samples, 0.04%)</title><rect x="225.2" y="501" width="0.6" height="15.0" fill="rgb(252,58,17)" rx="2" ry="2" />
<text  x="228.22" y="511.5" ></text>
</g>
<g >
<title>__GI___sbrk (1 samples, 0.04%)</title><rect x="243.8" y="309" width="0.5" height="15.0" fill="rgb(209,210,38)" rx="2" ry="2" />
<text  x="246.77" y="319.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (1 samples, 0.04%)</title><rect x="209.8" y="389" width="0.6" height="15.0" fill="rgb(242,185,38)" rx="2" ry="2" />
<text  x="212.85" y="399.5" ></text>
</g>
<g >
<title>google::protobuf::Arena::DoCreateMaybeMessage&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.04%)</title><rect x="295.7" y="357" width="0.6" height="15.0" fill="rgb(219,108,19)" rx="2" ry="2" />
<text  x="298.72" y="367.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;c10::Type,  (1 samples, 0.04%)</title><rect x="255.4" y="453" width="0.6" height="15.0" fill="rgb(246,10,54)" rx="2" ry="2" />
<text  x="258.44" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_List_node&lt;c10::Dispatcher::OperatorDef&gt; &gt;::construct&lt;c10::Dispatcher::OperatorDef, c10::OperatorName&gt; (1 samples, 0.04%)</title><rect x="210.4" y="437" width="0.5" height="15.0" fill="rgb(242,28,26)" rx="2" ry="2" />
<text  x="213.38" y="447.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;c10::Type,  (1 samples, 0.04%)</title><rect x="250.7" y="437" width="0.5" height="15.0" fill="rgb(237,191,45)" rx="2" ry="2" />
<text  x="253.66" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;void, void  (16 samples, 0.72%)</title><rect x="846.0" y="405" width="8.4" height="15.0" fill="rgb(251,38,37)" rx="2" ry="2" />
<text  x="848.97" y="415.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (1 samples, 0.04%)</title><rect x="268.2" y="533" width="0.5" height="15.0" fill="rgb(212,88,42)" rx="2" ry="2" />
<text  x="271.16" y="543.5" ></text>
</g>
<g >
<title>elf_map (1 samples, 0.04%)</title><rect x="1168.8" y="597" width="0.5" height="15.0" fill="rgb(231,38,34)" rx="2" ry="2" />
<text  x="1171.80" y="607.5" ></text>
</g>
<g >
<title>__GI___libc_free (3 samples, 0.13%)</title><rect x="856.0" y="517" width="1.6" height="15.0" fill="rgb(231,74,47)" rx="2" ry="2" />
<text  x="859.04" y="527.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::expect (1 samples, 0.04%)</title><rect x="266.6" y="437" width="0.5" height="15.0" fill="rgb(233,185,48)" rx="2" ry="2" />
<text  x="269.57" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (1 samples, 0.04%)</title><rect x="192.9" y="405" width="0.5" height="15.0" fill="rgb(226,162,52)" rx="2" ry="2" />
<text  x="195.88" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;torch::jit::Token, std::allocator&lt;torch::jit::Token&gt; &gt;::_M_allocate (1 samples, 0.04%)</title><rect x="214.6" y="405" width="0.5" height="15.0" fill="rgb(230,72,20)" rx="2" ry="2" />
<text  x="217.62" y="415.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="1108.9" y="437" width="0.5" height="15.0" fill="rgb(226,120,6)" rx="2" ry="2" />
<text  x="1111.89" y="447.5" ></text>
</g>
<g >
<title>c10::TensorImpl::compute_contiguous (4 samples, 0.18%)</title><rect x="1051.6" y="277" width="2.2" height="15.0" fill="rgb(231,28,29)" rx="2" ry="2" />
<text  x="1054.64" y="287.5" ></text>
</g>
<g >
<title>caffe2::OpSchema::OpSchema (1 samples, 0.04%)</title><rect x="279.3" y="565" width="0.5" height="15.0" fill="rgb(229,127,45)" rx="2" ry="2" />
<text  x="282.29" y="575.5" ></text>
</g>
<g >
<title>parseDeclaration (1 samples, 0.04%)</title><rect x="281.4" y="533" width="0.5" height="15.0" fill="rgb(235,152,36)" rx="2" ry="2" />
<text  x="284.41" y="543.5" ></text>
</g>
<g >
<title>c10::inferFunctionSchemaFlattenedReturns&lt;at::Tensor&amp;  (1 samples, 0.04%)</title><rect x="196.6" y="517" width="0.5" height="15.0" fill="rgb(215,177,41)" rx="2" ry="2" />
<text  x="199.59" y="527.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (1 samples, 0.04%)</title><rect x="248.5" y="405" width="0.6" height="15.0" fill="rgb(235,168,34)" rx="2" ry="2" />
<text  x="251.54" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (2 samples, 0.09%)</title><rect x="983.8" y="149" width="1.1" height="15.0" fill="rgb(223,30,9)" rx="2" ry="2" />
<text  x="986.79" y="159.5" ></text>
</g>
<g >
<title>__count_memcg_events (1 samples, 0.04%)</title><rect x="178.0" y="437" width="0.6" height="15.0" fill="rgb(241,214,15)" rx="2" ry="2" />
<text  x="181.04" y="447.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (1 samples, 0.04%)</title><rect x="182.8" y="501" width="0.5" height="15.0" fill="rgb(228,194,18)" rx="2" ry="2" />
<text  x="185.81" y="511.5" ></text>
</g>
<g >
<title>_int_free (7 samples, 0.31%)</title><rect x="857.6" y="517" width="3.7" height="15.0" fill="rgb(242,224,19)" rx="2" ry="2" />
<text  x="860.63" y="527.5" ></text>
</g>
<g >
<title>at::native::empty_cpu (256 samples, 11.50%)</title><rect x="963.1" y="325" width="135.7" height="15.0" fill="rgb(237,183,18)" rx="2" ry="2" />
<text  x="966.12" y="335.5" >at::native::empty..</text>
</g>
<g >
<title>torch::jit::Source::Source (1 samples, 0.04%)</title><rect x="188.1" y="357" width="0.5" height="15.0" fill="rgb(223,173,23)" rx="2" ry="2" />
<text  x="191.11" y="367.5" ></text>
</g>
<g >
<title>c10::AliasInfo::AliasInfo (1 samples, 0.04%)</title><rect x="242.2" y="405" width="0.5" height="15.0" fill="rgb(216,205,10)" rx="2" ry="2" />
<text  x="245.18" y="415.5" ></text>
</g>
<g >
<title>std::accumulate&lt;long const*, long long, std::multiplies&lt;long&gt; &gt; (1 samples, 0.04%)</title><rect x="404.4" y="309" width="0.5" height="15.0" fill="rgb(249,113,40)" rx="2" ry="2" />
<text  x="407.39" y="319.5" ></text>
</g>
<g >
<title>c10::Dispatcher::findOrRegisterName_ (1 samples, 0.04%)</title><rect x="210.4" y="517" width="0.5" height="15.0" fill="rgb(234,213,31)" rx="2" ry="2" />
<text  x="213.38" y="527.5" ></text>
</g>
<g >
<title>caffe2::_c10_ops::schema_LayerNorm (1 samples, 0.04%)</title><rect x="281.4" y="613" width="0.5" height="15.0" fill="rgb(220,89,32)" rx="2" ry="2" />
<text  x="284.41" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign&lt;char*, void&gt; (1 samples, 0.04%)</title><rect x="205.1" y="453" width="0.5" height="15.0" fill="rgb(232,155,53)" rx="2" ry="2" />
<text  x="208.08" y="463.5" ></text>
</g>
<g >
<title>operator (2 samples, 0.09%)</title><rect x="191.8" y="453" width="1.1" height="15.0" fill="rgb(220,60,11)" rx="2" ry="2" />
<text  x="194.82" y="463.5" ></text>
</g>
<g >
<title>_dl_map_object (12 samples, 0.54%)</title><rect x="1106.2" y="565" width="6.4" height="15.0" fill="rgb(209,28,44)" rx="2" ry="2" />
<text  x="1109.24" y="575.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;torch::autograd::Node&gt;::weak_ptr (1 samples, 0.04%)</title><rect x="504.1" y="565" width="0.5" height="15.0" fill="rgb(253,119,18)" rx="2" ry="2" />
<text  x="507.05" y="575.5" ></text>
</g>
<g >
<title>__lru_cache_add (1 samples, 0.04%)</title><rect x="230.0" y="149" width="0.5" height="15.0" fill="rgb(226,121,43)" rx="2" ry="2" />
<text  x="232.99" y="159.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;torch::jit::Source&gt;::~shared_ptr (1 samples, 0.04%)</title><rect x="193.4" y="357" width="0.5" height="15.0" fill="rgb(227,220,4)" rx="2" ry="2" />
<text  x="196.41" y="367.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~shared_ptr (1 samples, 0.04%)</title><rect x="524.2" y="501" width="0.5" height="15.0" fill="rgb(211,156,47)" rx="2" ry="2" />
<text  x="527.20" y="511.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;std::unique_ptr&lt;caffe2::OperatorBase, std::default_delete&lt;caffe2::OperatorBase&gt; &gt;  (1 samples, 0.04%)</title><rect x="275.0" y="533" width="0.6" height="15.0" fill="rgb(237,18,9)" rx="2" ry="2" />
<text  x="278.05" y="543.5" ></text>
</g>
<g >
<title>torch::schema (34 samples, 1.53%)</title><rect x="225.2" y="549" width="18.0" height="15.0" fill="rgb(238,204,13)" rx="2" ry="2" />
<text  x="228.22" y="559.5" ></text>
</g>
<g >
<title>std::unordered_set&lt;c10::Symbol, std::hash&lt;c10::Symbol&gt;, std::equal_to&lt;c10::Symbol&gt;, std::allocator&lt;c10::Symbol&gt; &gt;::unordered_set (1 samples, 0.04%)</title><rect x="291.5" y="485" width="0.5" height="15.0" fill="rgb(211,226,36)" rx="2" ry="2" />
<text  x="294.48" y="495.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="180.7" y="389" width="0.5" height="15.0" fill="rgb(235,163,43)" rx="2" ry="2" />
<text  x="183.69" y="399.5" ></text>
</g>
<g >
<title>createArgumentVector (1 samples, 0.04%)</title><rect x="185.5" y="469" width="0.5" height="15.0" fill="rgb(218,18,38)" rx="2" ry="2" />
<text  x="188.46" y="479.5" ></text>
</g>
<g >
<title>c10::SmallVectorTemplateBase&lt;long, true&gt;::SmallVectorTemplateBase (5 samples, 0.22%)</title><rect x="980.6" y="181" width="2.7" height="15.0" fill="rgb(250,86,54)" rx="2" ry="2" />
<text  x="983.61" y="191.5" ></text>
</g>
<g >
<title>c10::TensorOptions::set_device (2 samples, 0.09%)</title><rect x="884.1" y="581" width="1.1" height="15.0" fill="rgb(216,177,17)" rx="2" ry="2" />
<text  x="887.13" y="591.5" ></text>
</g>
<g >
<title>__tls_get_addr (2 samples, 0.09%)</title><rect x="745.8" y="277" width="1.0" height="15.0" fill="rgb(238,69,41)" rx="2" ry="2" />
<text  x="748.78" y="287.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::operator++ (1 samples, 0.04%)</title><rect x="737.3" y="165" width="0.5" height="15.0" fill="rgb(235,146,1)" rx="2" ry="2" />
<text  x="740.30" y="175.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="277.7" y="565" width="0.5" height="15.0" fill="rgb(228,216,11)" rx="2" ry="2" />
<text  x="280.70" y="575.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseBaseType (1 samples, 0.04%)</title><rect x="170.1" y="549" width="0.5" height="15.0" fill="rgb(233,82,31)" rx="2" ry="2" />
<text  x="173.09" y="559.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.04%)</title><rect x="255.4" y="421" width="0.6" height="15.0" fill="rgb(226,118,38)" rx="2" ry="2" />
<text  x="258.44" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;c10::Symbol, c10::Symbol, std::allocator&lt;c10::Symbol&gt;, std::__detail::_Identity, std::equal_to&lt;c10::Symbol&gt;, std::hash&lt;c10::Symbol&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_Hashtable@plt (1 samples, 0.04%)</title><rect x="291.5" y="469" width="0.5" height="15.0" fill="rgb(233,145,4)" rx="2" ry="2" />
<text  x="294.48" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;c10::Argument&gt; &gt;::deallocate (1 samples, 0.04%)</title><rect x="325.9" y="197" width="0.6" height="15.0" fill="rgb(207,45,21)" rx="2" ry="2" />
<text  x="328.94" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;c10::Argument&gt; &gt;::allocate (1 samples, 0.04%)</title><rect x="210.9" y="373" width="0.5" height="15.0" fill="rgb(244,212,18)" rx="2" ry="2" />
<text  x="213.91" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;c10::Argument&gt; &gt;::allocate (1 samples, 0.04%)</title><rect x="243.8" y="421" width="0.5" height="15.0" fill="rgb(218,183,22)" rx="2" ry="2" />
<text  x="246.77" y="431.5" ></text>
</g>
<g >
<title>__libc_calloc (1 samples, 0.04%)</title><rect x="304.7" y="549" width="0.6" height="15.0" fill="rgb(231,17,15)" rx="2" ry="2" />
<text  x="307.73" y="559.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="1149.2" y="485" width="0.5" height="15.0" fill="rgb(228,180,50)" rx="2" ry="2" />
<text  x="1152.18" y="495.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (1 samples, 0.04%)</title><rect x="169.0" y="565" width="0.6" height="15.0" fill="rgb(237,77,17)" rx="2" ry="2" />
<text  x="172.03" y="575.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.04%)</title><rect x="284.1" y="581" width="0.5" height="15.0" fill="rgb(236,122,35)" rx="2" ry="2" />
<text  x="287.06" y="591.5" ></text>
</g>
<g >
<title>__find_specmb (1 samples, 0.04%)</title><rect x="208.8" y="357" width="0.5" height="15.0" fill="rgb(246,112,24)" rx="2" ry="2" />
<text  x="211.79" y="367.5" ></text>
</g>
<g >
<title>torch::Library::_impl (7 samples, 0.31%)</title><rect x="180.7" y="549" width="3.7" height="15.0" fill="rgb(215,179,14)" rx="2" ry="2" />
<text  x="183.69" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_ostringstream (1 samples, 0.04%)</title><rect x="246.4" y="485" width="0.6" height="15.0" fill="rgb(208,125,32)" rx="2" ry="2" />
<text  x="249.42" y="495.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::~OperatorEntry (1 samples, 0.04%)</title><rect x="321.7" y="325" width="0.5" height="15.0" fill="rgb(225,3,38)" rx="2" ry="2" />
<text  x="324.70" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_ostringstream (1 samples, 0.04%)</title><rect x="196.1" y="517" width="0.5" height="15.0" fill="rgb(246,14,32)" rx="2" ry="2" />
<text  x="199.06" y="527.5" ></text>
</g>
<g >
<title>torch::autograd::AutogradMeta::~AutogradMeta (5 samples, 0.22%)</title><rect x="471.7" y="517" width="2.7" height="15.0" fill="rgb(210,141,49)" rx="2" ry="2" />
<text  x="474.72" y="527.5" ></text>
</g>
<g >
<title>ska::detailv3::KeyOrValueHasher&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::hash&lt;c10::OperatorName&gt; &gt;::operator (1 samples, 0.04%)</title><rect x="192.4" y="405" width="0.5" height="15.0" fill="rgb(209,26,30)" rx="2" ry="2" />
<text  x="195.35" y="415.5" ></text>
</g>
<g >
<title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (1 samples, 0.04%)</title><rect x="15.3" y="677" width="0.5" height="15.0" fill="rgb(230,8,36)" rx="2" ry="2" />
<text  x="18.30" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.04%)</title><rect x="170.6" y="453" width="0.6" height="15.0" fill="rgb(218,70,14)" rx="2" ry="2" />
<text  x="173.62" y="463.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="179.1" y="373" width="0.5" height="15.0" fill="rgb(239,88,54)" rx="2" ry="2" />
<text  x="182.10" y="383.5" ></text>
</g>
<g >
<title>c10::GetCurrentNUMANode (1 samples, 0.04%)</title><rect x="37.6" y="645" width="0.5" height="15.0" fill="rgb(206,2,41)" rx="2" ry="2" />
<text  x="40.57" y="655.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::lookup (1 samples, 0.04%)</title><rect x="1102.0" y="517" width="0.5" height="15.0" fill="rgb(223,51,29)" rx="2" ry="2" />
<text  x="1105.00" y="527.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.04%)</title><rect x="111.2" y="437" width="0.6" height="15.0" fill="rgb(208,50,21)" rx="2" ry="2" />
<text  x="114.25" y="447.5" ></text>
</g>
<g >
<title>unmap_region (1 samples, 0.04%)</title><rect x="1107.3" y="357" width="0.5" height="15.0" fill="rgb(254,61,10)" rx="2" ry="2" />
<text  x="1110.30" y="367.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::Lexer (1 samples, 0.04%)</title><rect x="113.4" y="533" width="0.5" height="15.0" fill="rgb(249,161,35)" rx="2" ry="2" />
<text  x="116.37" y="543.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.04%)</title><rect x="274.5" y="453" width="0.5" height="15.0" fill="rgb(237,16,52)" rx="2" ry="2" />
<text  x="277.52" y="463.5" ></text>
</g>
<g >
<title>c10::detail::getTypePtr_&lt;at::Tensor&gt;::call (1 samples, 0.04%)</title><rect x="199.8" y="453" width="0.5" height="15.0" fill="rgb(229,114,42)" rx="2" ry="2" />
<text  x="202.78" y="463.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1147.6" y="485" width="0.5" height="15.0" fill="rgb(233,144,46)" rx="2" ry="2" />
<text  x="1150.59" y="495.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="269.7" y="549" width="0.6" height="15.0" fill="rgb(215,122,11)" rx="2" ry="2" />
<text  x="272.75" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;c10::Argument&gt;::allocate (1 samples, 0.04%)</title><rect x="260.2" y="405" width="0.5" height="15.0" fill="rgb(210,39,18)" rx="2" ry="2" />
<text  x="263.21" y="415.5" ></text>
</g>
<g >
<title>c10::OperatorName::setNamespaceIfNotSet (1 samples, 0.04%)</title><rect x="196.1" y="533" width="0.5" height="15.0" fill="rgb(220,81,13)" rx="2" ry="2" />
<text  x="199.06" y="543.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (3 samples, 0.13%)</title><rect x="1106.8" y="437" width="1.6" height="15.0" fill="rgb(238,155,14)" rx="2" ry="2" />
<text  x="1109.77" y="447.5" ></text>
</g>
<g >
<title>at::CPUType::empty_memory_format (113 samples, 5.08%)</title><rect x="390.6" y="357" width="59.9" height="15.0" fill="rgb(214,71,19)" rx="2" ry="2" />
<text  x="393.61" y="367.5" >at::CP..</text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.04%)</title><rect x="111.8" y="421" width="0.5" height="15.0" fill="rgb(208,63,25)" rx="2" ry="2" />
<text  x="114.78" y="431.5" ></text>
</g>
<g >
<title>torch::empty (2 samples, 0.09%)</title><rect x="158.4" y="661" width="1.1" height="15.0" fill="rgb(239,28,28)" rx="2" ry="2" />
<text  x="161.43" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::emplace_back&lt;char const* const&amp;, std::shared_ptr&lt;c10::OptionalType&gt;, c10::nullopt_t const&amp;, c10::IValue&gt; (1 samples, 0.04%)</title><rect x="280.9" y="581" width="0.5" height="15.0" fill="rgb(208,43,19)" rx="2" ry="2" />
<text  x="283.88" y="591.5" ></text>
</g>
<g >
<title>c10::TensorImpl::empty_tensor_restride (6 samples, 0.27%)</title><rect x="432.5" y="309" width="3.2" height="15.0" fill="rgb(252,119,45)" rx="2" ry="2" />
<text  x="435.49" y="319.5" ></text>
</g>
<g >
<title>parseList (3 samples, 0.13%)</title><rect x="169.6" y="629" width="1.6" height="15.0" fill="rgb(248,86,2)" rx="2" ry="2" />
<text  x="172.56" y="639.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_if_op.cc (1 samples, 0.04%)</title><rect x="262.9" y="613" width="0.5" height="15.0" fill="rgb(230,129,16)" rx="2" ry="2" />
<text  x="265.86" y="623.5" ></text>
</g>
<g >
<title>torch::detail::TorchLibraryInit::TorchLibraryInit (8 samples, 0.36%)</title><rect x="184.9" y="597" width="4.3" height="15.0" fill="rgb(254,62,50)" rx="2" ry="2" />
<text  x="187.93" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.04%)</title><rect x="187.1" y="533" width="0.5" height="15.0" fill="rgb(237,51,36)" rx="2" ry="2" />
<text  x="190.05" y="543.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_dropout_op.cc (1 samples, 0.04%)</title><rect x="261.3" y="629" width="0.5" height="15.0" fill="rgb(230,171,24)" rx="2" ry="2" />
<text  x="264.27" y="639.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.04%)</title><rect x="320.6" y="165" width="0.6" height="15.0" fill="rgb(226,166,45)" rx="2" ry="2" />
<text  x="323.64" y="175.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.04%)</title><rect x="256.5" y="261" width="0.5" height="15.0" fill="rgb(206,48,6)" rx="2" ry="2" />
<text  x="259.50" y="271.5" ></text>
</g>
<g >
<title>caffe2::_c10_ops::schema_Percentile (1 samples, 0.04%)</title><rect x="281.9" y="613" width="0.6" height="15.0" fill="rgb(250,35,27)" rx="2" ry="2" />
<text  x="284.94" y="623.5" ></text>
</g>
<g >
<title>ska::detailv3::KeyOrValueEquality&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::equal_to&lt;c10::OperatorName&gt; &gt;::operator (1 samples, 0.04%)</title><rect x="286.2" y="469" width="0.5" height="15.0" fill="rgb(243,170,42)" rx="2" ry="2" />
<text  x="289.18" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Insert_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::insert (1 samples, 0.04%)</title><rect x="110.7" y="613" width="0.5" height="15.0" fill="rgb(213,144,0)" rx="2" ry="2" />
<text  x="113.72" y="623.5" ></text>
</g>
<g >
<title>c10::TensorOptions::dtype (19 samples, 0.85%)</title><rect x="656.7" y="597" width="10.1" height="15.0" fill="rgb(238,0,27)" rx="2" ry="2" />
<text  x="659.72" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::replace (1 samples, 0.04%)</title><rect x="183.3" y="469" width="0.6" height="15.0" fill="rgb(227,60,40)" rx="2" ry="2" />
<text  x="186.34" y="479.5" ></text>
</g>
<g >
<title>c10::either&lt;c10::FunctionSchema, torch::jit::Operator::UnparsedFunctionSchema&gt;::_destruct (1 samples, 0.04%)</title><rect x="325.9" y="277" width="0.6" height="15.0" fill="rgb(231,43,54)" rx="2" ry="2" />
<text  x="328.94" y="287.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr_target::intrusive_ptr_target (2 samples, 0.09%)</title><rect x="397.5" y="165" width="1.1" height="15.0" fill="rgb(248,104,37)" rx="2" ry="2" />
<text  x="400.50" y="175.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.04%)</title><rect x="221.5" y="405" width="0.5" height="15.0" fill="rgb(207,212,46)" rx="2" ry="2" />
<text  x="224.51" y="415.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.04%)</title><rect x="106.5" y="501" width="0.5" height="15.0" fill="rgb(209,143,42)" rx="2" ry="2" />
<text  x="109.48" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;torch::jit::Operator&gt;::destroy&lt;torch::jit::Operator&gt; (1 samples, 0.04%)</title><rect x="325.9" y="373" width="0.6" height="15.0" fill="rgb(224,126,32)" rx="2" ry="2" />
<text  x="328.94" y="383.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::nextIf (1 samples, 0.04%)</title><rect x="249.1" y="453" width="0.5" height="15.0" fill="rgb(223,147,9)" rx="2" ry="2" />
<text  x="252.07" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;torch::jit::Operator&gt;, std::allocator&lt;std::shared_ptr&lt;torch::jit::Operator&gt; &gt; &gt;::~vector (2 samples, 0.09%)</title><rect x="325.4" y="565" width="1.1" height="15.0" fill="rgb(223,71,15)" rx="2" ry="2" />
<text  x="328.41" y="575.5" ></text>
</g>
<g >
<title>createArgumentVector (1 samples, 0.04%)</title><rect x="186.0" y="469" width="0.5" height="15.0" fill="rgb(206,207,45)" rx="2" ry="2" />
<text  x="188.99" y="479.5" ></text>
</g>
<g >
<title>c10::TensorOptions::requires_grad (7 samples, 0.31%)</title><rect x="822.6" y="581" width="3.8" height="15.0" fill="rgb(242,192,54)" rx="2" ry="2" />
<text  x="825.64" y="591.5" ></text>
</g>
<g >
<title>c10::TensorImpl::numel (1 samples, 0.04%)</title><rect x="793.0" y="229" width="0.5" height="15.0" fill="rgb(236,85,53)" rx="2" ry="2" />
<text  x="795.96" y="239.5" ></text>
</g>
<g >
<title>~OperatorRegistry (2 samples, 0.09%)</title><rect x="325.4" y="581" width="1.1" height="15.0" fill="rgb(207,161,34)" rx="2" ry="2" />
<text  x="328.41" y="591.5" ></text>
</g>
<g >
<title>std::make_unique&lt;torch::autograd::AutogradMeta, c10::TensorImpl*, bool&amp;&gt; (17 samples, 0.76%)</title><rect x="497.7" y="597" width="9.0" height="15.0" fill="rgb(223,112,6)" rx="2" ry="2" />
<text  x="500.69" y="607.5" ></text>
</g>
<g >
<title>c10::constexpr_storage_t&lt;caffe2::TypeMeta&gt;::constexpr_storage_t&lt;caffe2::TypeMeta&gt; (1 samples, 0.04%)</title><rect x="360.9" y="581" width="0.6" height="15.0" fill="rgb(208,194,29)" rx="2" ry="2" />
<text  x="363.93" y="591.5" ></text>
</g>
<g >
<title>std::accumulate&lt;long const*, long long, std::multiplies&lt;long&gt; &gt; (1 samples, 0.04%)</title><rect x="550.7" y="309" width="0.5" height="15.0" fill="rgb(214,130,23)" rx="2" ry="2" />
<text  x="553.70" y="319.5" ></text>
</g>
<g >
<title>do_fault (5 samples, 0.22%)</title><rect x="1152.4" y="469" width="2.6" height="15.0" fill="rgb(247,94,22)" rx="2" ry="2" />
<text  x="1155.36" y="479.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.04%)</title><rect x="112.8" y="469" width="0.6" height="15.0" fill="rgb(248,103,31)" rx="2" ry="2" />
<text  x="115.84" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::RegistryPriority&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::RegistryPriority&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.04%)</title><rect x="270.3" y="501" width="0.5" height="15.0" fill="rgb(206,204,22)" rx="2" ry="2" />
<text  x="273.28" y="511.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.04%)</title><rect x="265.5" y="373" width="0.5" height="15.0" fill="rgb(208,9,49)" rx="2" ry="2" />
<text  x="268.51" y="383.5" ></text>
</g>
<g >
<title>vma_merge (1 samples, 0.04%)</title><rect x="243.8" y="197" width="0.5" height="15.0" fill="rgb(252,106,22)" rx="2" ry="2" />
<text  x="246.77" y="207.5" ></text>
</g>
<g >
<title>ksys_read (1 samples, 0.04%)</title><rect x="1111.5" y="453" width="0.6" height="15.0" fill="rgb(232,161,9)" rx="2" ry="2" />
<text  x="1114.55" y="463.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="1156.6" y="549" width="0.5" height="15.0" fill="rgb(210,183,24)" rx="2" ry="2" />
<text  x="1159.60" y="559.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.04%)</title><rect x="311.6" y="277" width="0.6" height="15.0" fill="rgb(227,136,7)" rx="2" ry="2" />
<text  x="314.63" y="287.5" ></text>
</g>
<g >
<title>at::detail::make_tensor&lt;c10::TensorImpl, c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;, c10::DispatchKey, caffe2::TypeMeta&amp;&gt; (28 samples, 1.26%)</title><rect x="728.8" y="309" width="14.9" height="15.0" fill="rgb(235,0,23)" rx="2" ry="2" />
<text  x="731.81" y="319.5" ></text>
</g>
<g >
<title>torch::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Tracer (5 samples, 0.22%)</title><rect x="207.7" y="581" width="2.7" height="15.0" fill="rgb(208,139,20)" rx="2" ry="2" />
<text  x="210.73" y="591.5" ></text>
</g>
<g >
<title>std::unordered_set&lt;c10::Symbol, std::hash&lt;c10::Symbol&gt;, std::equal_to&lt;c10::Symbol&gt;, std::allocator&lt;c10::Symbol&gt; &gt;::~unordered_set (1 samples, 0.04%)</title><rect x="266.0" y="341" width="0.6" height="15.0" fill="rgb(231,35,41)" rx="2" ry="2" />
<text  x="269.04" y="351.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerDef (1 samples, 0.04%)</title><rect x="221.5" y="485" width="0.5" height="15.0" fill="rgb(226,157,46)" rx="2" ry="2" />
<text  x="224.51" y="495.5" ></text>
</g>
<g >
<title>std::default_delete&lt;c10::AutogradMetaInterface&gt;::operator (3 samples, 0.13%)</title><rect x="138.8" y="645" width="1.6" height="15.0" fill="rgb(207,84,12)" rx="2" ry="2" />
<text  x="141.81" y="655.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.04%)</title><rect x="308.4" y="469" width="0.6" height="15.0" fill="rgb(239,167,30)" rx="2" ry="2" />
<text  x="311.45" y="479.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (2 samples, 0.09%)</title><rect x="240.6" y="405" width="1.1" height="15.0" fill="rgb(213,75,8)" rx="2" ry="2" />
<text  x="243.59" y="415.5" ></text>
</g>
<g >
<title>c10::TensorImpl::refresh_numel (1 samples, 0.04%)</title><rect x="581.4" y="309" width="0.6" height="15.0" fill="rgb(223,45,33)" rx="2" ry="2" />
<text  x="584.45" y="319.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.04%)</title><rect x="180.7" y="357" width="0.5" height="15.0" fill="rgb(212,182,4)" rx="2" ry="2" />
<text  x="183.69" y="367.5" ></text>
</g>
<g >
<title>ska::detailv3::functor_storage&lt;unsigned long, std::hash&lt;c10::OperatorName&gt; &gt;::operator (1 samples, 0.04%)</title><rect x="192.4" y="389" width="0.5" height="15.0" fill="rgb(245,226,37)" rx="2" ry="2" />
<text  x="195.35" y="399.5" ></text>
</g>
<g >
<title>at::(anonymous namespace)::empty_memory_format (8 samples, 0.36%)</title><rect x="525.3" y="469" width="4.2" height="15.0" fill="rgb(237,122,12)" rx="2" ry="2" />
<text  x="528.26" y="479.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="210.9" y="325" width="0.5" height="15.0" fill="rgb(214,161,18)" rx="2" ry="2" />
<text  x="213.91" y="335.5" ></text>
</g>
<g >
<title>std::unordered_set&lt;c10::Symbol, std::hash&lt;c10::Symbol&gt;, std::equal_to&lt;c10::Symbol&gt;, std::allocator&lt;c10::Symbol&gt; &gt;::unordered_set (1 samples, 0.04%)</title><rect x="236.9" y="293" width="0.5" height="15.0" fill="rgb(207,140,47)" rx="2" ry="2" />
<text  x="239.88" y="303.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1157.1" y="565" width="0.6" height="15.0" fill="rgb(242,22,27)" rx="2" ry="2" />
<text  x="1160.13" y="575.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor  (1 samples, 0.04%)</title><rect x="257.0" y="549" width="0.6" height="15.0" fill="rgb(245,145,52)" rx="2" ry="2" />
<text  x="260.03" y="559.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.04%)</title><rect x="266.6" y="389" width="0.5" height="15.0" fill="rgb(223,103,53)" rx="2" ry="2" />
<text  x="269.57" y="399.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.04%)</title><rect x="261.3" y="485" width="0.5" height="15.0" fill="rgb(250,38,41)" rx="2" ry="2" />
<text  x="264.27" y="495.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="262.3" y="533" width="0.6" height="15.0" fill="rgb(224,4,15)" rx="2" ry="2" />
<text  x="265.33" y="543.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::deregisterSchema (2 samples, 0.09%)</title><rect x="322.2" y="421" width="1.1" height="15.0" fill="rgb(249,129,8)" rx="2" ry="2" />
<text  x="325.23" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (1 samples, 0.04%)</title><rect x="322.8" y="293" width="0.5" height="15.0" fill="rgb(237,220,1)" rx="2" ry="2" />
<text  x="325.76" y="303.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_register_prim_ops_c10.cpp (1 samples, 0.04%)</title><rect x="268.2" y="629" width="0.5" height="15.0" fill="rgb(237,52,0)" rx="2" ry="2" />
<text  x="271.16" y="639.5" ></text>
</g>
<g >
<title>error_entry (1 samples, 0.04%)</title><rect x="173.3" y="549" width="0.5" height="15.0" fill="rgb(246,185,23)" rx="2" ry="2" />
<text  x="176.27" y="559.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::expect (1 samples, 0.04%)</title><rect x="214.1" y="485" width="0.5" height="15.0" fill="rgb(250,126,17)" rx="2" ry="2" />
<text  x="217.09" y="495.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (1 samples, 0.04%)</title><rect x="259.1" y="325" width="0.6" height="15.0" fill="rgb(225,159,16)" rx="2" ry="2" />
<text  x="262.15" y="335.5" ></text>
</g>
<g >
<title>_mid_memalign (33 samples, 1.48%)</title><rect x="408.1" y="261" width="17.5" height="15.0" fill="rgb(228,182,34)" rx="2" ry="2" />
<text  x="411.10" y="271.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (1 samples, 0.04%)</title><rect x="206.1" y="533" width="0.6" height="15.0" fill="rgb(243,214,12)" rx="2" ry="2" />
<text  x="209.14" y="543.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseAliasAnnotation (4 samples, 0.18%)</title><rect x="111.2" y="501" width="2.2" height="15.0" fill="rgb(219,214,25)" rx="2" ry="2" />
<text  x="114.25" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;c10::AutogradMetaInterface, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::reset (3 samples, 0.13%)</title><rect x="138.8" y="661" width="1.6" height="15.0" fill="rgb(224,81,25)" rx="2" ry="2" />
<text  x="141.81" y="671.5" ></text>
</g>
<g >
<title>xas_find (1 samples, 0.04%)</title><rect x="174.9" y="469" width="0.5" height="15.0" fill="rgb(217,0,4)" rx="2" ry="2" />
<text  x="177.86" y="479.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="261.3" y="517" width="0.5" height="15.0" fill="rgb(235,130,0)" rx="2" ry="2" />
<text  x="264.27" y="527.5" ></text>
</g>
<g >
<title>tryTypeMetaToScalarType (3 samples, 0.13%)</title><rect x="505.1" y="533" width="1.6" height="15.0" fill="rgb(240,137,17)" rx="2" ry="2" />
<text  x="508.11" y="543.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (2 samples, 0.09%)</title><rect x="235.3" y="325" width="1.1" height="15.0" fill="rgb(231,144,32)" rx="2" ry="2" />
<text  x="238.29" y="335.5" ></text>
</g>
<g >
<title>c10::TensorImpl::refresh_contiguous (2 samples, 0.09%)</title><rect x="576.1" y="309" width="1.1" height="15.0" fill="rgb(245,9,26)" rx="2" ry="2" />
<text  x="579.15" y="319.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::nextIf (1 samples, 0.04%)</title><rect x="111.8" y="469" width="0.5" height="15.0" fill="rgb(217,28,3)" rx="2" ry="2" />
<text  x="114.78" y="479.5" ></text>
</g>
<g >
<title>__static_initialization_and_destruction_0 (1 samples, 0.04%)</title><rect x="196.6" y="613" width="0.5" height="15.0" fill="rgb(208,31,13)" rx="2" ry="2" />
<text  x="199.59" y="623.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.04%)</title><rect x="188.6" y="469" width="0.6" height="15.0" fill="rgb(242,225,3)" rx="2" ry="2" />
<text  x="191.64" y="479.5" ></text>
</g>
<g >
<title>search_binary_handler (3 samples, 0.13%)</title><rect x="1168.3" y="629" width="1.6" height="15.0" fill="rgb(229,195,11)" rx="2" ry="2" />
<text  x="1171.27" y="639.5" ></text>
</g>
<g >
<title>std::tuple&lt;c10::FunctionSchema*, std::default_delete&lt;c10::FunctionSchema&gt; &gt;::tuple&lt;c10::FunctionSchema*&amp;, std::default_delete&lt;c10::FunctionSchema&gt;, true&gt; (1 samples, 0.04%)</title><rect x="259.7" y="469" width="0.5" height="15.0" fill="rgb(223,17,47)" rx="2" ry="2" />
<text  x="262.68" y="479.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (1 samples, 0.04%)</title><rect x="286.2" y="389" width="0.5" height="15.0" fill="rgb(225,200,49)" rx="2" ry="2" />
<text  x="289.18" y="399.5" ></text>
</g>
<g >
<title>std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt; (1 samples, 0.04%)</title><rect x="222.6" y="501" width="0.5" height="15.0" fill="rgb(251,214,11)" rx="2" ry="2" />
<text  x="225.57" y="511.5" ></text>
</g>
<g >
<title>c10::str&lt;char [15], char const*, char [2], unsigned int&gt; (1 samples, 0.04%)</title><rect x="254.9" y="501" width="0.5" height="15.0" fill="rgb(234,182,52)" rx="2" ry="2" />
<text  x="257.91" y="511.5" ></text>
</g>
<g >
<title>__x64_sys_read (1 samples, 0.04%)</title><rect x="197.7" y="389" width="0.5" height="15.0" fill="rgb(244,149,39)" rx="2" ry="2" />
<text  x="200.65" y="399.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::MemoryFormat&gt;::optional (1 samples, 0.04%)</title><rect x="451.0" y="485" width="0.6" height="15.0" fill="rgb(245,178,37)" rx="2" ry="2" />
<text  x="454.04" y="495.5" ></text>
</g>
<g >
<title>c10::TensorOptions::dtype (14 samples, 0.63%)</title><rect x="353.5" y="613" width="7.4" height="15.0" fill="rgb(228,214,43)" rx="2" ry="2" />
<text  x="356.50" y="623.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::registerSchema (1 samples, 0.04%)</title><rect x="272.4" y="533" width="0.5" height="15.0" fill="rgb(206,68,7)" rx="2" ry="2" />
<text  x="275.40" y="543.5" ></text>
</g>
<g >
<title>c10::TensorOptions::set_device (4 samples, 0.18%)</title><rect x="485.5" y="597" width="2.1" height="15.0" fill="rgb(211,222,6)" rx="2" ry="2" />
<text  x="488.50" y="607.5" ></text>
</g>
<g >
<title>std::function&lt;void  (2 samples, 0.09%)</title><rect x="265.5" y="437" width="1.1" height="15.0" fill="rgb(205,51,26)" rx="2" ry="2" />
<text  x="268.51" y="447.5" ></text>
</g>
<g >
<title>at::RecordFunction::RecordFunction@plt (1 samples, 0.04%)</title><rect x="716.6" y="405" width="0.6" height="15.0" fill="rgb(254,227,22)" rx="2" ry="2" />
<text  x="719.62" y="415.5" ></text>
</g>
<g >
<title>torch::schema (3 samples, 0.13%)</title><rect x="265.5" y="533" width="1.6" height="15.0" fill="rgb(252,113,0)" rx="2" ry="2" />
<text  x="268.51" y="543.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.04%)</title><rect x="751.6" y="245" width="0.5" height="15.0" fill="rgb(221,0,51)" rx="2" ry="2" />
<text  x="754.61" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_Hashtable (1 samples, 0.04%)</title><rect x="217.3" y="357" width="0.5" height="15.0" fill="rgb(210,0,10)" rx="2" ry="2" />
<text  x="220.27" y="367.5" ></text>
</g>
<g >
<title>TORCH_LIBRARY_IMPL_init___Autocast (1 samples, 0.04%)</title><rect x="259.7" y="581" width="0.5" height="15.0" fill="rgb(243,8,18)" rx="2" ry="2" />
<text  x="262.68" y="591.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, true&gt; &gt; &gt;::destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="190.2" y="293" width="0.6" height="15.0" fill="rgb(218,57,34)" rx="2" ry="2" />
<text  x="193.23" y="303.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::isNumber (1 samples, 0.04%)</title><rect x="198.2" y="373" width="0.5" height="15.0" fill="rgb(207,42,48)" rx="2" ry="2" />
<text  x="201.19" y="383.5" ></text>
</g>
<g >
<title>do_last (1 samples, 0.04%)</title><rect x="1112.1" y="421" width="0.5" height="15.0" fill="rgb(233,68,32)" rx="2" ry="2" />
<text  x="1115.08" y="431.5" ></text>
</g>
<g >
<title>std::ostream::sentry::~sentry (1 samples, 0.04%)</title><rect x="203.0" y="485" width="0.5" height="15.0" fill="rgb(241,152,32)" rx="2" ry="2" />
<text  x="205.96" y="495.5" ></text>
</g>
<g >
<title>[libcufft.so.10.2.0.218] (1 samples, 0.04%)</title><rect x="173.8" y="581" width="0.5" height="15.0" fill="rgb(227,29,11)" rx="2" ry="2" />
<text  x="176.80" y="591.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.04%)</title><rect x="180.7" y="373" width="0.5" height="15.0" fill="rgb(214,143,50)" rx="2" ry="2" />
<text  x="183.69" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.04%)</title><rect x="189.2" y="533" width="0.5" height="15.0" fill="rgb(206,141,49)" rx="2" ry="2" />
<text  x="192.17" y="543.5" ></text>
</g>
<g >
<title>torch::autograd::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Autograd (3 samples, 0.13%)</title><rect x="253.3" y="565" width="1.6" height="15.0" fill="rgb(252,189,29)" rx="2" ry="2" />
<text  x="256.32" y="575.5" ></text>
</g>
<g >
<title>c10::TensorImpl::~TensorImpl (8 samples, 0.36%)</title><rect x="474.4" y="581" width="4.2" height="15.0" fill="rgb(222,173,20)" rx="2" ry="2" />
<text  x="477.37" y="591.5" ></text>
</g>
<g >
<title>c10::str&lt;char [15], char const*, char [2], unsigned int&gt; (1 samples, 0.04%)</title><rect x="246.4" y="517" width="0.6" height="15.0" fill="rgb(218,219,29)" rx="2" ry="2" />
<text  x="249.42" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="243.8" y="245" width="0.5" height="15.0" fill="rgb(244,15,42)" rx="2" ry="2" />
<text  x="246.77" y="255.5" ></text>
</g>
<g >
<title>c10::SmallVectorTemplateCommon&lt;long, void&gt;::capacity (1 samples, 0.04%)</title><rect x="790.3" y="261" width="0.5" height="15.0" fill="rgb(250,225,20)" rx="2" ry="2" />
<text  x="793.31" y="271.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="110.7" y="517" width="0.5" height="15.0" fill="rgb(227,79,15)" rx="2" ry="2" />
<text  x="113.72" y="527.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.09%)</title><rect x="325.4" y="453" width="1.1" height="15.0" fill="rgb(245,37,15)" rx="2" ry="2" />
<text  x="328.41" y="463.5" ></text>
</g>
<g >
<title>wp_page_copy (1 samples, 0.04%)</title><rect x="1155.0" y="453" width="0.5" height="15.0" fill="rgb(232,8,54)" rx="2" ry="2" />
<text  x="1158.01" y="463.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (1 samples, 0.04%)</title><rect x="210.9" y="165" width="0.5" height="15.0" fill="rgb(206,198,54)" rx="2" ry="2" />
<text  x="213.91" y="175.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;::make&lt;c10::StorageImpl::use_byte_size_t, long&amp;, c10::DataPtr, c10::Allocator*&amp;, bool&gt; (7 samples, 0.31%)</title><rect x="589.9" y="309" width="3.7" height="15.0" fill="rgb(233,222,22)" rx="2" ry="2" />
<text  x="592.93" y="319.5" ></text>
</g>
<g >
<title>SchemaParser (1 samples, 0.04%)</title><rect x="113.4" y="549" width="0.5" height="15.0" fill="rgb(215,134,7)" rx="2" ry="2" />
<text  x="116.37" y="559.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.04%)</title><rect x="192.4" y="325" width="0.5" height="15.0" fill="rgb(242,26,34)" rx="2" ry="2" />
<text  x="195.35" y="335.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (1 samples, 0.04%)</title><rect x="200.8" y="469" width="0.6" height="15.0" fill="rgb(250,128,49)" rx="2" ry="2" />
<text  x="203.84" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::Arena::Create&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.04%)</title><rect x="295.7" y="405" width="0.6" height="15.0" fill="rgb(246,197,14)" rx="2" ry="2" />
<text  x="298.72" y="415.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (2 samples, 0.09%)</title><rect x="245.4" y="533" width="1.0" height="15.0" fill="rgb(232,129,47)" rx="2" ry="2" />
<text  x="248.36" y="543.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::VariableVersion::VersionCounter, c10::detail::intrusive_target_default_null_type&lt;c10::VariableVersion::VersionCounter&gt; &gt;::use_count (1 samples, 0.04%)</title><rect x="363.0" y="565" width="0.6" height="15.0" fill="rgb(218,223,12)" rx="2" ry="2" />
<text  x="366.05" y="575.5" ></text>
</g>
<g >
<title>c10::operator== (1 samples, 0.04%)</title><rect x="286.2" y="421" width="0.5" height="15.0" fill="rgb(231,222,43)" rx="2" ry="2" />
<text  x="289.18" y="431.5" ></text>
</g>
<g >
<title>torch::Library::_impl (3 samples, 0.13%)</title><rect x="257.6" y="549" width="1.5" height="15.0" fill="rgb(222,111,4)" rx="2" ry="2" />
<text  x="260.56" y="559.5" ></text>
</g>
<g >
<title>change_protection_range (1 samples, 0.04%)</title><rect x="1108.4" y="405" width="0.5" height="15.0" fill="rgb(206,157,22)" rx="2" ry="2" />
<text  x="1111.36" y="415.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.04%)</title><rect x="200.8" y="549" width="0.6" height="15.0" fill="rgb(243,181,18)" rx="2" ry="2" />
<text  x="203.84" y="559.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.04%)</title><rect x="170.1" y="501" width="0.5" height="15.0" fill="rgb(227,156,36)" rx="2" ry="2" />
<text  x="173.09" y="511.5" ></text>
</g>
<g >
<title>c10::impl::ExcludeDispatchKeyGuard::ExcludeDispatchKeyGuard (7 samples, 0.31%)</title><rect x="931.8" y="565" width="3.8" height="15.0" fill="rgb(228,35,21)" rx="2" ry="2" />
<text  x="934.84" y="575.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.04%)</title><rect x="67.8" y="613" width="0.5" height="15.0" fill="rgb(221,142,18)" rx="2" ry="2" />
<text  x="70.78" y="623.5" ></text>
</g>
<g >
<title>c10::VariableVersion::VersionCounter::~VersionCounter (2 samples, 0.09%)</title><rect x="872.5" y="485" width="1.0" height="15.0" fill="rgb(218,16,26)" rx="2" ry="2" />
<text  x="875.47" y="495.5" ></text>
</g>
<g >
<title>c10::SmallVectorImpl&lt;long&gt;::resize (1 samples, 0.04%)</title><rect x="580.4" y="293" width="0.5" height="15.0" fill="rgb(237,29,36)" rx="2" ry="2" />
<text  x="583.39" y="303.5" ></text>
</g>
<g >
<title>debugString (1 samples, 0.04%)</title><rect x="201.9" y="517" width="0.5" height="15.0" fill="rgb(213,189,20)" rx="2" ry="2" />
<text  x="204.90" y="527.5" ></text>
</g>
<g >
<title>torch::detail::TorchLibraryInit::TorchLibraryInit (1 samples, 0.04%)</title><rect x="259.1" y="597" width="0.6" height="15.0" fill="rgb(244,65,32)" rx="2" ry="2" />
<text  x="262.15" y="607.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;, std::allocator&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt; &gt;::_M_deallocate (2 samples, 0.09%)</title><rect x="473.3" y="469" width="1.1" height="15.0" fill="rgb(232,156,8)" rx="2" ry="2" />
<text  x="476.31" y="479.5" ></text>
</g>
<g >
<title>c10::detail::_str&lt;unsigned int&gt; (1 samples, 0.04%)</title><rect x="223.6" y="437" width="0.6" height="15.0" fill="rgb(245,126,52)" rx="2" ry="2" />
<text  x="226.63" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;torch::jit::Token&gt;::destroy&lt;torch::jit::Token&gt; (1 samples, 0.04%)</title><rect x="214.1" y="405" width="0.5" height="15.0" fill="rgb(253,104,15)" rx="2" ry="2" />
<text  x="217.09" y="415.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (2 samples, 0.09%)</title><rect x="166.4" y="549" width="1.0" height="15.0" fill="rgb(228,148,37)" rx="2" ry="2" />
<text  x="169.38" y="559.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;torch::jit::Token&gt; &gt;::allocate (1 samples, 0.04%)</title><rect x="214.6" y="389" width="0.5" height="15.0" fill="rgb(253,53,54)" rx="2" ry="2" />
<text  x="217.62" y="399.5" ></text>
</g>
<g >
<title>torch::jit::registerOperator (3 samples, 0.13%)</title><rect x="113.4" y="645" width="1.6" height="15.0" fill="rgb(253,163,49)" rx="2" ry="2" />
<text  x="116.37" y="655.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;c10::OperatorKernel,  (1 samples, 0.04%)</title><rect x="257.6" y="453" width="0.5" height="15.0" fill="rgb(234,197,12)" rx="2" ry="2" />
<text  x="260.56" y="463.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.04%)</title><rect x="175.4" y="549" width="0.5" height="15.0" fill="rgb(233,197,24)" rx="2" ry="2" />
<text  x="178.39" y="559.5" ></text>
</g>
<g >
<title>c10::RegisterOperators::op (1 samples, 0.04%)</title><rect x="272.4" y="613" width="0.5" height="15.0" fill="rgb(207,93,12)" rx="2" ry="2" />
<text  x="275.40" y="623.5" ></text>
</g>
<g >
<title>c10::DefaultCPUAllocator::allocate (83 samples, 3.73%)</title><rect x="1001.3" y="309" width="44.0" height="15.0" fill="rgb(220,182,34)" rx="2" ry="2" />
<text  x="1004.28" y="319.5" >c10:..</text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="174.9" y="517" width="0.5" height="15.0" fill="rgb(231,9,31)" rx="2" ry="2" />
<text  x="177.86" y="527.5" ></text>
</g>
<g >
<title>c10::TensorImpl::TensorImpl (12 samples, 0.54%)</title><rect x="732.5" y="229" width="6.4" height="15.0" fill="rgb(239,83,21)" rx="2" ry="2" />
<text  x="735.52" y="239.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.04%)</title><rect x="111.8" y="453" width="0.5" height="15.0" fill="rgb(222,44,37)" rx="2" ry="2" />
<text  x="114.78" y="463.5" ></text>
</g>
<g >
<title>c10::StorageImpl::StorageImpl (1 samples, 0.04%)</title><rect x="589.9" y="293" width="0.6" height="15.0" fill="rgb(240,78,7)" rx="2" ry="2" />
<text  x="592.93" y="303.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.04%)</title><rect x="250.7" y="421" width="0.5" height="15.0" fill="rgb(223,228,48)" rx="2" ry="2" />
<text  x="253.66" y="431.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="108.6" y="485" width="0.5" height="15.0" fill="rgb(238,181,11)" rx="2" ry="2" />
<text  x="111.60" y="495.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.04%)</title><rect x="182.3" y="245" width="0.5" height="15.0" fill="rgb(251,133,11)" rx="2" ry="2" />
<text  x="185.28" y="255.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::VariableVersion::VersionCounter, c10::detail::intrusive_target_default_null_type&lt;c10::VariableVersion::VersionCounter&gt; &gt;::reset_ (18 samples, 0.81%)</title><rect x="864.5" y="501" width="9.6" height="15.0" fill="rgb(216,16,3)" rx="2" ry="2" />
<text  x="867.52" y="511.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.04%)</title><rect x="267.1" y="437" width="0.5" height="15.0" fill="rgb(240,53,16)" rx="2" ry="2" />
<text  x="270.10" y="447.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.18%)</title><rect x="590.5" y="293" width="2.1" height="15.0" fill="rgb(239,35,23)" rx="2" ry="2" />
<text  x="593.46" y="303.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.22%)</title><rect x="911.7" y="565" width="2.6" height="15.0" fill="rgb(247,47,38)" rx="2" ry="2" />
<text  x="914.70" y="575.5" ></text>
</g>
<g >
<title>unlink_chunk (2 samples, 0.09%)</title><rect x="424.0" y="197" width="1.1" height="15.0" fill="rgb(219,8,15)" rx="2" ry="2" />
<text  x="427.01" y="207.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.04%)</title><rect x="198.2" y="437" width="0.5" height="15.0" fill="rgb(215,219,26)" rx="2" ry="2" />
<text  x="201.19" y="447.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="272.9" y="501" width="0.6" height="15.0" fill="rgb(206,133,50)" rx="2" ry="2" />
<text  x="275.93" y="511.5" ></text>
</g>
<g >
<title>page_fault (10 samples, 0.45%)</title><rect x="1150.2" y="565" width="5.3" height="15.0" fill="rgb(236,64,14)" rx="2" ry="2" />
<text  x="1153.24" y="575.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.04%)</title><rect x="108.6" y="453" width="0.5" height="15.0" fill="rgb(218,218,24)" rx="2" ry="2" />
<text  x="111.60" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;c10::Dispatcher::OperatorDef&gt; &gt; &gt;::construct&lt;c10::Dispatcher::OperatorDef, c10::OperatorName&gt; (2 samples, 0.09%)</title><rect x="181.2" y="453" width="1.1" height="15.0" fill="rgb(224,105,3)" rx="2" ry="2" />
<text  x="184.22" y="463.5" ></text>
</g>
<g >
<title>c10::impl::tls_local_dispatch_key_set (8 samples, 0.36%)</title><rect x="994.9" y="293" width="4.3" height="15.0" fill="rgb(235,14,8)" rx="2" ry="2" />
<text  x="997.92" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::replace (1 samples, 0.04%)</title><rect x="201.9" y="421" width="0.5" height="15.0" fill="rgb(223,73,25)" rx="2" ry="2" />
<text  x="204.90" y="431.5" ></text>
</g>
<g >
<title>read&lt;c10::Dispatcher::findOp (2 samples, 0.09%)</title><rect x="215.7" y="485" width="1.0" height="15.0" fill="rgb(218,75,45)" rx="2" ry="2" />
<text  x="218.68" y="495.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="198.7" y="373" width="0.5" height="15.0" fill="rgb(220,67,10)" rx="2" ry="2" />
<text  x="201.72" y="383.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.04%)</title><rect x="261.3" y="565" width="0.5" height="15.0" fill="rgb(206,75,24)" rx="2" ry="2" />
<text  x="264.27" y="575.5" ></text>
</g>
<g >
<title>at::RecordFunction::RecordFunction (13 samples, 0.58%)</title><rect x="709.7" y="405" width="6.9" height="15.0" fill="rgb(229,180,0)" rx="2" ry="2" />
<text  x="712.73" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::IValue, std::allocator&lt;c10::IValue&gt; &gt;::~vector (1 samples, 0.04%)</title><rect x="388.5" y="405" width="0.5" height="15.0" fill="rgb(215,58,39)" rx="2" ry="2" />
<text  x="391.49" y="415.5" ></text>
</g>
<g >
<title>std::array&lt;c10::KernelFunction, 38ul&gt;::operator[] (1 samples, 0.04%)</title><rect x="1100.4" y="389" width="0.5" height="15.0" fill="rgb(224,109,23)" rx="2" ry="2" />
<text  x="1103.41" y="399.5" ></text>
</g>
<g >
<title>__tls_get_addr (2 samples, 0.09%)</title><rect x="939.3" y="469" width="1.0" height="15.0" fill="rgb(209,7,33)" rx="2" ry="2" />
<text  x="942.26" y="479.5" ></text>
</g>
<g >
<title>THFloatVector_startup::THFloatVector_startup (1 samples, 0.04%)</title><rect x="197.7" y="597" width="0.5" height="15.0" fill="rgb(242,108,53)" rx="2" ry="2" />
<text  x="200.65" y="607.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.04%)</title><rect x="255.4" y="437" width="0.6" height="15.0" fill="rgb(232,199,46)" rx="2" ry="2" />
<text  x="258.44" y="447.5" ></text>
</g>
<g >
<title>c10::SmallVectorImpl&lt;unsigned long&gt;::SmallVectorImpl (1 samples, 0.04%)</title><rect x="523.1" y="501" width="0.6" height="15.0" fill="rgb(239,227,12)" rx="2" ry="2" />
<text  x="526.14" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::Arena::CreateNoMessage&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.04%)</title><rect x="295.7" y="389" width="0.6" height="15.0" fill="rgb(231,192,38)" rx="2" ry="2" />
<text  x="298.72" y="399.5" ></text>
</g>
<g >
<title>c10::SmallVectorTemplateCommon&lt;long, void&gt;::size (2 samples, 0.09%)</title><rect x="784.5" y="277" width="1.0" height="15.0" fill="rgb(231,97,33)" rx="2" ry="2" />
<text  x="787.47" y="287.5" ></text>
</g>
<g >
<title>__static_initialization_and_destruction_0 (8 samples, 0.36%)</title><rect x="184.9" y="613" width="4.3" height="15.0" fill="rgb(222,186,26)" rx="2" ry="2" />
<text  x="187.93" y="623.5" ></text>
</g>
<g >
<title>c10::ThreadLocalDebugInfo::get (8 samples, 0.36%)</title><rect x="628.1" y="341" width="4.2" height="15.0" fill="rgb(226,218,42)" rx="2" ry="2" />
<text  x="631.10" y="351.5" ></text>
</g>
<g >
<title>std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::unordered_set (1 samples, 0.04%)</title><rect x="217.3" y="373" width="0.5" height="15.0" fill="rgb(249,19,51)" rx="2" ry="2" />
<text  x="220.27" y="383.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::isNumber (1 samples, 0.04%)</title><rect x="240.6" y="357" width="0.5" height="15.0" fill="rgb(208,42,22)" rx="2" ry="2" />
<text  x="243.59" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="280.9" y="485" width="0.5" height="15.0" fill="rgb(241,130,43)" rx="2" ry="2" />
<text  x="283.88" y="495.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::validIdent (1 samples, 0.04%)</title><rect x="205.6" y="421" width="0.5" height="15.0" fill="rgb(210,201,35)" rx="2" ry="2" />
<text  x="208.61" y="431.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;torch::jit::Operator&gt;::shared_ptr (1 samples, 0.04%)</title><rect x="297.3" y="373" width="0.5" height="15.0" fill="rgb(226,193,6)" rx="2" ry="2" />
<text  x="300.31" y="383.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.04%)</title><rect x="276.6" y="341" width="0.6" height="15.0" fill="rgb(251,149,33)" rx="2" ry="2" />
<text  x="279.64" y="351.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;::reset_ (21 samples, 0.94%)</title><rect x="621.7" y="485" width="11.2" height="15.0" fill="rgb(225,39,7)" rx="2" ry="2" />
<text  x="624.73" y="495.5" ></text>
</g>
<g >
<title>c10::FunctionSchema::FunctionSchema (2 samples, 0.09%)</title><rect x="225.8" y="501" width="1.0" height="15.0" fill="rgb(217,105,3)" rx="2" ry="2" />
<text  x="228.75" y="511.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="276.1" y="453" width="0.5" height="15.0" fill="rgb(248,220,15)" rx="2" ry="2" />
<text  x="279.11" y="463.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.04%)</title><rect x="266.6" y="421" width="0.5" height="15.0" fill="rgb(246,208,22)" rx="2" ry="2" />
<text  x="269.57" y="431.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (1 samples, 0.04%)</title><rect x="280.4" y="549" width="0.5" height="15.0" fill="rgb(208,92,37)" rx="2" ry="2" />
<text  x="283.35" y="559.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (5 samples, 0.22%)</title><rect x="210.9" y="501" width="2.7" height="15.0" fill="rgb(242,34,38)" rx="2" ry="2" />
<text  x="213.91" y="511.5" ></text>
</g>
<g >
<title>__do_page_fault (3 samples, 0.13%)</title><rect x="292.5" y="501" width="1.6" height="15.0" fill="rgb(216,140,53)" rx="2" ry="2" />
<text  x="295.54" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;, std::allocator&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt; &gt;::vector (1 samples, 0.04%)</title><rect x="915.4" y="549" width="0.5" height="15.0" fill="rgb(253,36,40)" rx="2" ry="2" />
<text  x="918.41" y="559.5" ></text>
</g>
<g >
<title>parseDeclarations (1 samples, 0.04%)</title><rect x="214.1" y="501" width="0.5" height="15.0" fill="rgb(240,186,31)" rx="2" ry="2" />
<text  x="217.09" y="511.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.04%)</title><rect x="290.4" y="453" width="0.6" height="15.0" fill="rgb(217,79,11)" rx="2" ry="2" />
<text  x="293.42" y="463.5" ></text>
</g>
<g >
<title>torch::CppFunction::CppFunction&lt;c10::CompileTimeFunctionPointer&lt;std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt;  (1 samples, 0.04%)</title><rect x="247.0" y="549" width="0.5" height="15.0" fill="rgb(241,38,42)" rx="2" ry="2" />
<text  x="249.95" y="559.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_RNN.cpp (2 samples, 0.09%)</title><rect x="195.0" y="613" width="1.1" height="15.0" fill="rgb(210,75,20)" rx="2" ry="2" />
<text  x="198.00" y="623.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;c10::intrusive_ptr&lt;LinearPackedParamsBase, c10::detail::intrusive_target_default_null_type&lt;LinearPackedParamsBase&gt; &gt;  (1 samples, 0.04%)</title><rect x="267.6" y="533" width="0.6" height="15.0" fill="rgb(218,32,48)" rx="2" ry="2" />
<text  x="270.63" y="543.5" ></text>
</g>
<g >
<title>c10::TensorOptions::computeDispatchKey (2 samples, 0.09%)</title><rect x="57.7" y="677" width="1.1" height="15.0" fill="rgb(248,177,25)" rx="2" ry="2" />
<text  x="60.71" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::RegistrationHandleRAII, std::allocator&lt;c10::RegistrationHandleRAII&gt; &gt;::emplace_back&lt;c10::RegistrationHandleRAII&gt; (1 samples, 0.04%)</title><rect x="224.7" y="533" width="0.5" height="15.0" fill="rgb(240,68,6)" rx="2" ry="2" />
<text  x="227.69" y="543.5" ></text>
</g>
<g >
<title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, c10::OperatorName, std::hash&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueHasher&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::hash&lt;c10::OperatorName&gt; &gt;, std::equal_to&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueEquality&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::equal_to&lt;c10::OperatorName&gt; &gt;, std::allocator&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt; &gt; &gt;::find (1 samples, 0.04%)</title><rect x="286.2" y="517" width="0.5" height="15.0" fill="rgb(217,177,32)" rx="2" ry="2" />
<text  x="289.18" y="527.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.04%)</title><rect x="11.1" y="677" width="0.5" height="15.0" fill="rgb(244,138,39)" rx="2" ry="2" />
<text  x="14.06" y="687.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.04%)</title><rect x="293.1" y="405" width="0.5" height="15.0" fill="rgb(213,206,14)" rx="2" ry="2" />
<text  x="296.07" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.40%)</title><rect x="1185.2" y="693" width="4.8" height="15.0" fill="rgb(218,227,4)" rx="2" ry="2" />
<text  x="1188.23" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::IValue, std::allocator&lt;c10::IValue&gt; &gt;::vector (1 samples, 0.04%)</title><rect x="957.8" y="389" width="0.5" height="15.0" fill="rgb(250,12,51)" rx="2" ry="2" />
<text  x="960.82" y="399.5" ></text>
</g>
<g >
<title>__GI___read_nocancel (2 samples, 0.09%)</title><rect x="1111.0" y="517" width="1.1" height="15.0" fill="rgb(242,184,50)" rx="2" ry="2" />
<text  x="1114.02" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str (1 samples, 0.04%)</title><rect x="192.9" y="485" width="0.5" height="15.0" fill="rgb(226,51,4)" rx="2" ry="2" />
<text  x="195.88" y="495.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (2 samples, 0.09%)</title><rect x="188.1" y="517" width="1.1" height="15.0" fill="rgb(237,215,7)" rx="2" ry="2" />
<text  x="191.11" y="527.5" ></text>
</g>
<g >
<title>c10::ProfiledCPUMemoryReporter::New (13 samples, 0.58%)</title><rect x="1002.3" y="293" width="6.9" height="15.0" fill="rgb(234,65,23)" rx="2" ry="2" />
<text  x="1005.35" y="303.5" ></text>
</g>
<g >
<title>c10::FunctionSchema::~FunctionSchema (1 samples, 0.04%)</title><rect x="223.1" y="533" width="0.5" height="15.0" fill="rgb(254,139,14)" rx="2" ry="2" />
<text  x="226.10" y="543.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::registerKernel (1 samples, 0.04%)</title><rect x="250.7" y="517" width="0.5" height="15.0" fill="rgb(225,198,6)" rx="2" ry="2" />
<text  x="253.66" y="527.5" ></text>
</g>
<g >
<title>c10::TensorImpl::TensorImpl (5 samples, 0.22%)</title><rect x="542.2" y="245" width="2.7" height="15.0" fill="rgb(207,77,42)" rx="2" ry="2" />
<text  x="545.22" y="255.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;c10::MemoryFormat&gt;::constexpr_optional_base (1 samples, 0.04%)</title><rect x="594.7" y="421" width="0.5" height="15.0" fill="rgb(234,184,0)" rx="2" ry="2" />
<text  x="597.70" y="431.5" ></text>
</g>
<g >
<title>torch::jit::SourceRange::text[abi:cxx11] (1 samples, 0.04%)</title><rect x="170.6" y="517" width="0.6" height="15.0" fill="rgb(217,4,54)" rx="2" ry="2" />
<text  x="173.62" y="527.5" ></text>
</g>
<g >
<title>c10::TensorOptions::memory_format_opt (1 samples, 0.04%)</title><rect x="1093.0" y="293" width="0.5" height="15.0" fill="rgb(215,199,24)" rx="2" ry="2" />
<text  x="1095.99" y="303.5" ></text>
</g>
<g >
<title>std::function&lt;void  (2 samples, 0.09%)</title><rect x="309.5" y="469" width="1.1" height="15.0" fill="rgb(240,77,5)" rx="2" ry="2" />
<text  x="312.51" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_ostringstream (1 samples, 0.04%)</title><rect x="222.0" y="501" width="0.6" height="15.0" fill="rgb(239,13,28)" rx="2" ry="2" />
<text  x="225.04" y="511.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.09%)</title><rect x="229.5" y="197" width="1.0" height="15.0" fill="rgb(220,225,1)" rx="2" ry="2" />
<text  x="232.46" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt; &gt;::_M_erase (3 samples, 0.13%)</title><rect x="310.6" y="501" width="1.6" height="15.0" fill="rgb(223,113,54)" rx="2" ry="2" />
<text  x="313.57" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;c10::AutogradMetaInterface, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::reset (19 samples, 0.85%)</title><rect x="854.4" y="549" width="10.1" height="15.0" fill="rgb(206,224,14)" rx="2" ry="2" />
<text  x="857.45" y="559.5" ></text>
</g>
<g >
<title>c10::StorageImpl::release_resources (7 samples, 0.31%)</title><rect x="334.4" y="485" width="3.7" height="15.0" fill="rgb(215,43,12)" rx="2" ry="2" />
<text  x="337.42" y="495.5" ></text>
</g>
<g >
<title>torch::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Tracer (2 samples, 0.09%)</title><rect x="205.1" y="565" width="1.0" height="15.0" fill="rgb(232,154,35)" rx="2" ry="2" />
<text  x="208.08" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (1 samples, 0.04%)</title><rect x="252.3" y="389" width="0.5" height="15.0" fill="rgb(242,216,18)" rx="2" ry="2" />
<text  x="255.26" y="399.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::createFunctionSchemaFromTraitsFlattenedReturns&lt;c10::guts::function_traits&lt;at::Tensor  (1 samples, 0.04%)</title><rect x="179.1" y="501" width="0.5" height="15.0" fill="rgb(227,81,7)" rx="2" ry="2" />
<text  x="182.10" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;torch::jit::Token, std::allocator&lt;torch::jit::Token&gt; &gt;::_M_erase (1 samples, 0.04%)</title><rect x="240.1" y="389" width="0.5" height="15.0" fill="rgb(241,48,40)" rx="2" ry="2" />
<text  x="243.06" y="399.5" ></text>
</g>
<g >
<title>c10::Dispatcher::deregisterDef_ (5 samples, 0.22%)</title><rect x="321.7" y="437" width="2.6" height="15.0" fill="rgb(210,121,7)" rx="2" ry="2" />
<text  x="324.70" y="447.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="187.1" y="469" width="0.5" height="15.0" fill="rgb(248,29,11)" rx="2" ry="2" />
<text  x="190.05" y="479.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;::intrusive_ptr (1 samples, 0.04%)</title><rect x="736.2" y="197" width="0.6" height="15.0" fill="rgb(209,208,15)" rx="2" ry="2" />
<text  x="739.24" y="207.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.04%)</title><rect x="269.2" y="469" width="0.5" height="15.0" fill="rgb(253,142,15)" rx="2" ry="2" />
<text  x="272.22" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;void, void  (4 samples, 0.18%)</title><rect x="467.5" y="421" width="2.1" height="15.0" fill="rgb(206,207,24)" rx="2" ry="2" />
<text  x="470.48" y="431.5" ></text>
</g>
<g >
<title>dl_new_hash (42 samples, 1.89%)</title><rect x="1115.8" y="549" width="22.3" height="15.0" fill="rgb(222,75,7)" rx="2" ry="2" />
<text  x="1118.79" y="559.5" >d..</text>
</g>
<g >
<title>at::hasCallbacks (6 samples, 0.27%)</title><rect x="710.8" y="389" width="3.2" height="15.0" fill="rgb(235,69,37)" rx="2" ry="2" />
<text  x="713.79" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;c10::FunctionSchema, std::default_delete&lt;c10::FunctionSchema&gt; &gt;::get (1 samples, 0.04%)</title><rect x="207.2" y="485" width="0.5" height="15.0" fill="rgb(245,144,29)" rx="2" ry="2" />
<text  x="210.20" y="495.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;short&gt;@plt (1 samples, 0.04%)</title><rect x="707.6" y="373" width="0.5" height="15.0" fill="rgb(240,114,51)" rx="2" ry="2" />
<text  x="710.61" y="383.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;::intrusive_ptr (1 samples, 0.04%)</title><rect x="738.9" y="261" width="0.5" height="15.0" fill="rgb(245,146,6)" rx="2" ry="2" />
<text  x="741.89" y="271.5" ></text>
</g>
<g >
<title>c10::TensorOptions::dtype_opt (2 samples, 0.09%)</title><rect x="1091.4" y="293" width="1.1" height="15.0" fill="rgb(251,41,45)" rx="2" ry="2" />
<text  x="1094.40" y="303.5" ></text>
</g>
<g >
<title>c10::KernelFunction::operator= (2 samples, 0.09%)</title><rect x="317.5" y="357" width="1.0" height="15.0" fill="rgb(237,54,5)" rx="2" ry="2" />
<text  x="320.46" y="367.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.04%)</title><rect x="631.3" y="293" width="0.5" height="15.0" fill="rgb(233,25,15)" rx="2" ry="2" />
<text  x="634.28" y="303.5" ></text>
</g>
<g >
<title>c10::Device::validate (3 samples, 0.13%)</title><rect x="1068.6" y="277" width="1.6" height="15.0" fill="rgb(222,2,14)" rx="2" ry="2" />
<text  x="1071.61" y="287.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.04%)</title><rect x="272.4" y="421" width="0.5" height="15.0" fill="rgb(230,148,7)" rx="2" ry="2" />
<text  x="275.40" y="431.5" ></text>
</g>
<g >
<title>c10::demangle_type&lt;caffe2::UnaryElementwiseWithArgsDNNLowPOp&lt;unsigned char, caffe2::SigmoidFunctor&lt;unsigned char&gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="269.7" y="597" width="0.6" height="15.0" fill="rgb(227,177,10)" rx="2" ry="2" />
<text  x="272.75" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;torch::jit::Token, std::allocator&lt;torch::jit::Token&gt; &gt;::_M_realloc_insert&lt;torch::jit::Token&gt; (1 samples, 0.04%)</title><rect x="214.6" y="421" width="0.5" height="15.0" fill="rgb(232,135,39)" rx="2" ry="2" />
<text  x="217.62" y="431.5" ></text>
</g>
<g >
<title>_dl_fixup (1 samples, 0.04%)</title><rect x="195.0" y="373" width="0.5" height="15.0" fill="rgb(238,18,40)" rx="2" ry="2" />
<text  x="198.00" y="383.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (1 samples, 0.04%)</title><rect x="253.3" y="389" width="0.5" height="15.0" fill="rgb(234,153,26)" rx="2" ry="2" />
<text  x="256.32" y="399.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (1 samples, 0.04%)</title><rect x="213.0" y="357" width="0.6" height="15.0" fill="rgb(232,54,40)" rx="2" ry="2" />
<text  x="216.03" y="367.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.04%)</title><rect x="323.8" y="373" width="0.5" height="15.0" fill="rgb(209,225,22)" rx="2" ry="2" />
<text  x="326.82" y="383.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::basic_ios (1 samples, 0.04%)</title><rect x="246.4" y="469" width="0.6" height="15.0" fill="rgb(243,135,35)" rx="2" ry="2" />
<text  x="249.42" y="479.5" ></text>
</g>
<g >
<title>torch::autograd::AutogradMeta::~AutogradMeta (1 samples, 0.04%)</title><rect x="1164.0" y="677" width="0.6" height="15.0" fill="rgb(227,25,13)" rx="2" ry="2" />
<text  x="1167.03" y="687.5" ></text>
</g>
<g >
<title>__static_initialization_and_destruction_0 (4 samples, 0.18%)</title><rect x="203.0" y="613" width="2.1" height="15.0" fill="rgb(221,59,0)" rx="2" ry="2" />
<text  x="205.96" y="623.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::intrusive_ptr (1 samples, 0.04%)</title><rect x="497.2" y="581" width="0.5" height="15.0" fill="rgb(228,108,11)" rx="2" ry="2" />
<text  x="500.16" y="591.5" ></text>
</g>
<g >
<title>c10::Dispatcher::call&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::TensorOptions const&amp;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (311 samples, 13.97%)</title><rect x="937.7" y="549" width="164.8" height="15.0" fill="rgb(242,92,15)" rx="2" ry="2" />
<text  x="940.67" y="559.5" >c10::Dispatcher::call..</text>
</g>
<g >
<title>c10::memoryProfilingEnabled (6 samples, 0.27%)</title><rect x="750.5" y="277" width="3.2" height="15.0" fill="rgb(205,192,16)" rx="2" ry="2" />
<text  x="753.55" y="287.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (2 samples, 0.09%)</title><rect x="257.6" y="533" width="1.0" height="15.0" fill="rgb(232,205,53)" rx="2" ry="2" />
<text  x="260.56" y="543.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::VariableVersion::VersionCounter, c10::detail::intrusive_target_default_null_type&lt;c10::VariableVersion::VersionCounter&gt; &gt;::~intrusive_ptr (7 samples, 0.31%)</title><rect x="474.9" y="533" width="3.7" height="15.0" fill="rgb(221,67,7)" rx="2" ry="2" />
<text  x="477.90" y="543.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.04%)</title><rect x="182.8" y="453" width="0.5" height="15.0" fill="rgb(246,33,41)" rx="2" ry="2" />
<text  x="185.81" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::_M_allocate (1 samples, 0.04%)</title><rect x="287.8" y="517" width="0.5" height="15.0" fill="rgb(208,176,24)" rx="2" ry="2" />
<text  x="290.77" y="527.5" ></text>
</g>
<g >
<title>c10::DispatchKeyExtractor::getDispatchKeyUnboxed&lt;c10::ArrayRef&lt;long&gt;, c10::TensorOptions const&amp;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (7 samples, 0.31%)</title><rect x="694.4" y="533" width="3.7" height="15.0" fill="rgb(246,148,35)" rx="2" ry="2" />
<text  x="697.36" y="543.5" ></text>
</g>
<g >
<title>c10::detail::_str&lt;char const*&gt; (1 samples, 0.04%)</title><rect x="252.3" y="453" width="0.5" height="15.0" fill="rgb(232,206,17)" rx="2" ry="2" />
<text  x="255.26" y="463.5" ></text>
</g>
<g >
<title>c10::StorageImpl::StorageImpl (1 samples, 0.04%)</title><rect x="1094.1" y="277" width="0.5" height="15.0" fill="rgb(223,48,10)" rx="2" ry="2" />
<text  x="1097.05" y="287.5" ></text>
</g>
<g >
<title>at::TORCH_LIBRARY_init_aten (64 samples, 2.88%)</title><rect x="215.7" y="581" width="33.9" height="15.0" fill="rgb(230,130,39)" rx="2" ry="2" />
<text  x="218.68" y="591.5" >at..</text>
</g>
<g >
<title>c10::TensorOptions::requires_grad_opt (1 samples, 0.04%)</title><rect x="589.4" y="309" width="0.5" height="15.0" fill="rgb(227,120,11)" rx="2" ry="2" />
<text  x="592.40" y="319.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::impl::AnnotatedSchema&gt;::operator= (2 samples, 0.09%)</title><rect x="322.2" y="405" width="1.1" height="15.0" fill="rgb(212,44,23)" rx="2" ry="2" />
<text  x="325.23" y="415.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.04%)</title><rect x="741.5" y="261" width="0.6" height="15.0" fill="rgb(243,73,18)" rx="2" ry="2" />
<text  x="744.54" y="271.5" ></text>
</g>
<g >
<title>torch::schema (5 samples, 0.22%)</title><rect x="210.9" y="533" width="2.7" height="15.0" fill="rgb(248,140,19)" rx="2" ry="2" />
<text  x="213.91" y="543.5" ></text>
</g>
<g >
<title>c10::SmallVectorTemplateCommon&lt;unsigned long, void&gt;::SmallVectorTemplateCommon (1 samples, 0.04%)</title><rect x="957.3" y="341" width="0.5" height="15.0" fill="rgb(219,133,18)" rx="2" ry="2" />
<text  x="960.29" y="351.5" ></text>
</g>
<g >
<title>c10::TensorOptions::device&lt;c10::DeviceType const&amp;, int&gt; (13 samples, 0.58%)</title><rect x="649.8" y="613" width="6.9" height="15.0" fill="rgb(247,118,19)" rx="2" ry="2" />
<text  x="652.83" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (1 samples, 0.04%)</title><rect x="258.6" y="389" width="0.5" height="15.0" fill="rgb(245,92,48)" rx="2" ry="2" />
<text  x="261.62" y="399.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::computeDispatchTableEntryWithDebug (1 samples, 0.04%)</title><rect x="256.0" y="469" width="0.5" height="15.0" fill="rgb(250,147,27)" rx="2" ry="2" />
<text  x="258.97" y="479.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.04%)</title><rect x="1106.2" y="437" width="0.6" height="15.0" fill="rgb(220,152,0)" rx="2" ry="2" />
<text  x="1109.24" y="447.5" ></text>
</g>
<g >
<title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, c10::OperatorName, std::hash&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueHasher&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::hash&lt;c10::OperatorName&gt; &gt;, std::equal_to&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueEquality&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::equal_to&lt;c10::OperatorName&gt; &gt;, std::allocator&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt; &gt; &gt;::hash_object&lt;c10::OperatorName&gt; (1 samples, 0.04%)</title><rect x="218.9" y="421" width="0.5" height="15.0" fill="rgb(251,203,41)" rx="2" ry="2" />
<text  x="221.86" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;torch::jit::Token, std::allocator&lt;torch::jit::Token&gt; &gt;::emplace_back&lt;torch::jit::Token&gt; (1 samples, 0.04%)</title><rect x="214.6" y="437" width="0.5" height="15.0" fill="rgb(253,153,25)" rx="2" ry="2" />
<text  x="217.62" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;char const*, char const*&gt;, std::allocator&lt;std::pair&lt;char const*, char const*&gt; &gt; &gt;::~_Vector_base (1 samples, 0.04%)</title><rect x="311.6" y="341" width="0.6" height="15.0" fill="rgb(250,82,47)" rx="2" ry="2" />
<text  x="314.63" y="351.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.04%)</title><rect x="748.4" y="293" width="0.6" height="15.0" fill="rgb(218,137,32)" rx="2" ry="2" />
<text  x="751.43" y="303.5" ></text>
</g>
<g >
<title>__handle_mm_fault (7 samples, 0.31%)</title><rect x="1151.8" y="485" width="3.7" height="15.0" fill="rgb(253,100,0)" rx="2" ry="2" />
<text  x="1154.83" y="495.5" ></text>
</g>
<g >
<title>__mprotect (1 samples, 0.04%)</title><rect x="1108.4" y="517" width="0.5" height="15.0" fill="rgb(244,160,35)" rx="2" ry="2" />
<text  x="1111.36" y="527.5" ></text>
</g>
<g >
<title>torch::Library::impl_UNBOXED&lt;char const*, at::Tensor  (1 samples, 0.04%)</title><rect x="175.9" y="565" width="0.6" height="15.0" fill="rgb(244,117,35)" rx="2" ry="2" />
<text  x="178.92" y="575.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1156.1" y="549" width="0.5" height="15.0" fill="rgb(247,5,42)" rx="2" ry="2" />
<text  x="1159.07" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.04%)</title><rect x="132.5" y="533" width="0.5" height="15.0" fill="rgb(206,199,29)" rx="2" ry="2" />
<text  x="135.45" y="543.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.04%)</title><rect x="193.4" y="517" width="0.5" height="15.0" fill="rgb(247,16,45)" rx="2" ry="2" />
<text  x="196.41" y="527.5" ></text>
</g>
<g >
<title>c10::guts::to_string&lt;unsigned long&gt; (1 samples, 0.04%)</title><rect x="203.5" y="453" width="0.5" height="15.0" fill="rgb(214,77,52)" rx="2" ry="2" />
<text  x="206.49" y="463.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTable_ (2 samples, 0.09%)</title><rect x="317.5" y="373" width="1.0" height="15.0" fill="rgb(239,54,7)" rx="2" ry="2" />
<text  x="320.46" y="383.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;short&gt; (3 samples, 0.13%)</title><rect x="527.9" y="405" width="1.6" height="15.0" fill="rgb(222,25,43)" rx="2" ry="2" />
<text  x="530.91" y="415.5" ></text>
</g>
<g >
<title>std::ostream::_M_insert&lt;unsigned long&gt; (1 samples, 0.04%)</title><rect x="223.6" y="405" width="0.6" height="15.0" fill="rgb(210,41,8)" rx="2" ry="2" />
<text  x="226.63" y="415.5" ></text>
</g>
<g >
<title>c10::TensorOptions::requires_grad_opt (1 samples, 0.04%)</title><rect x="810.4" y="293" width="0.6" height="15.0" fill="rgb(211,71,42)" rx="2" ry="2" />
<text  x="813.45" y="303.5" ></text>
</g>
<g >
<title>c10::StorageImpl::StorageImpl (4 samples, 0.18%)</title><rect x="811.5" y="277" width="2.1" height="15.0" fill="rgb(221,141,15)" rx="2" ry="2" />
<text  x="814.51" y="287.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.04%)</title><rect x="281.4" y="453" width="0.5" height="15.0" fill="rgb(227,163,7)" rx="2" ry="2" />
<text  x="284.41" y="463.5" ></text>
</g>
<g >
<title>c10::Dispatcher::callWithDispatchKey&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::TensorOptions const&amp;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (140 samples, 6.29%)</title><rect x="377.9" y="549" width="74.2" height="15.0" fill="rgb(252,92,14)" rx="2" ry="2" />
<text  x="380.89" y="559.5" >c10::Dis..</text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (1 samples, 0.04%)</title><rect x="224.2" y="453" width="0.5" height="15.0" fill="rgb(221,58,6)" rx="2" ry="2" />
<text  x="227.16" y="463.5" ></text>
</g>
<g >
<title>c10::TensorImpl::set_sizes_contiguous (9 samples, 0.40%)</title><rect x="577.2" y="325" width="4.8" height="15.0" fill="rgb(221,227,39)" rx="2" ry="2" />
<text  x="580.21" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt; &gt;::_M_lower_bound (1 samples, 0.04%)</title><rect x="280.4" y="565" width="0.5" height="15.0" fill="rgb(231,152,36)" rx="2" ry="2" />
<text  x="283.35" y="575.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseDeclaration (1 samples, 0.04%)</title><rect x="153.1" y="565" width="0.6" height="15.0" fill="rgb(207,71,29)" rx="2" ry="2" />
<text  x="156.13" y="575.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;c10::Argument&gt; &gt;::allocate (1 samples, 0.04%)</title><rect x="198.7" y="421" width="0.5" height="15.0" fill="rgb(242,26,44)" rx="2" ry="2" />
<text  x="201.72" y="431.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;::~intrusive_ptr (1 samples, 0.04%)</title><rect x="811.0" y="309" width="0.5" height="15.0" fill="rgb(205,118,44)" rx="2" ry="2" />
<text  x="813.98" y="319.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_if_op.cc (1 samples, 0.04%)</title><rect x="262.9" y="629" width="0.5" height="15.0" fill="rgb(240,205,50)" rx="2" ry="2" />
<text  x="265.86" y="639.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerDef (1 samples, 0.04%)</title><rect x="272.4" y="549" width="0.5" height="15.0" fill="rgb(224,109,34)" rx="2" ry="2" />
<text  x="275.40" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_List_node&lt;c10::Dispatcher::OperatorDef&gt; &gt;::destroy&lt;c10::Dispatcher::OperatorDef&gt; (1 samples, 0.04%)</title><rect x="321.7" y="357" width="0.5" height="15.0" fill="rgb(240,179,15)" rx="2" ry="2" />
<text  x="324.70" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (1 samples, 0.04%)</title><rect x="272.9" y="549" width="0.6" height="15.0" fill="rgb(206,151,31)" rx="2" ry="2" />
<text  x="275.93" y="559.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;c10::Symbol, c10::Symbol, std::allocator&lt;c10::Symbol&gt;, std::__detail::_Identity, std::equal_to&lt;c10::Symbol&gt;, std::hash&lt;c10::Symbol&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_deallocate_buckets (1 samples, 0.04%)</title><rect x="266.0" y="309" width="0.6" height="15.0" fill="rgb(252,120,29)" rx="2" ry="2" />
<text  x="269.04" y="319.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="260.2" y="293" width="0.5" height="15.0" fill="rgb(243,34,34)" rx="2" ry="2" />
<text  x="263.21" y="303.5" ></text>
</g>
<g >
<title>c10::DispatchKeySet::highestPriorityTypeId (2 samples, 0.09%)</title><rect x="941.4" y="485" width="1.0" height="15.0" fill="rgb(237,177,6)" rx="2" ry="2" />
<text  x="944.38" y="495.5" ></text>
</g>
<g >
<title>torch::schema (34 samples, 1.53%)</title><rect x="225.2" y="533" width="18.0" height="15.0" fill="rgb(239,11,8)" rx="2" ry="2" />
<text  x="228.22" y="543.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="243.8" y="261" width="0.5" height="15.0" fill="rgb(232,119,25)" rx="2" ry="2" />
<text  x="246.77" y="271.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.04%)</title><rect x="111.2" y="453" width="0.6" height="15.0" fill="rgb(205,228,12)" rx="2" ry="2" />
<text  x="114.25" y="463.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (2 samples, 0.09%)</title><rect x="72.6" y="661" width="1.0" height="15.0" fill="rgb(206,200,41)" rx="2" ry="2" />
<text  x="75.55" y="671.5" ></text>
</g>
<g >
<title>at::RecordFunction::~RecordFunction (1 samples, 0.04%)</title><rect x="382.1" y="533" width="0.6" height="15.0" fill="rgb(222,56,6)" rx="2" ry="2" />
<text  x="385.13" y="543.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::expect (1 samples, 0.04%)</title><rect x="242.7" y="453" width="0.5" height="15.0" fill="rgb(242,78,32)" rx="2" ry="2" />
<text  x="245.71" y="463.5" ></text>
</g>
<g >
<title>c10::NUMAMove (1 samples, 0.04%)</title><rect x="38.1" y="645" width="0.5" height="15.0" fill="rgb(232,36,33)" rx="2" ry="2" />
<text  x="41.10" y="655.5" ></text>
</g>
<g >
<title>do_sys_open (1 samples, 0.04%)</title><rect x="1112.1" y="469" width="0.5" height="15.0" fill="rgb(225,108,24)" rx="2" ry="2" />
<text  x="1115.08" y="479.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;int&gt; (1 samples, 0.04%)</title><rect x="93.8" y="677" width="0.5" height="15.0" fill="rgb(219,30,48)" rx="2" ry="2" />
<text  x="96.76" y="687.5" ></text>
</g>
<g >
<title>lru_add_drain_cpu (1 samples, 0.04%)</title><rect x="1107.3" y="325" width="0.5" height="15.0" fill="rgb(250,180,27)" rx="2" ry="2" />
<text  x="1110.30" y="335.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;c10::Argument*&gt; (2 samples, 0.09%)</title><rect x="319.6" y="213" width="1.0" height="15.0" fill="rgb(211,48,21)" rx="2" ry="2" />
<text  x="322.58" y="223.5" ></text>
</g>
<g >
<title>c10::detail::_str&lt;char const*, char const*, unsigned int&gt; (1 samples, 0.04%)</title><rect x="252.3" y="469" width="0.5" height="15.0" fill="rgb(229,140,2)" rx="2" ry="2" />
<text  x="255.26" y="479.5" ></text>
</g>
<g >
<title>c10::inferFunctionSchemaFlattenedReturns&lt;at::Tensor  (3 samples, 0.13%)</title><rect x="207.7" y="517" width="1.6" height="15.0" fill="rgb(209,51,29)" rx="2" ry="2" />
<text  x="210.73" y="527.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="284.6" y="533" width="0.5" height="15.0" fill="rgb(216,69,51)" rx="2" ry="2" />
<text  x="287.59" y="543.5" ></text>
</g>
<g >
<title>__static_initialization_and_destruction_0 (6 samples, 0.27%)</title><rect x="199.8" y="613" width="3.2" height="15.0" fill="rgb(231,58,40)" rx="2" ry="2" />
<text  x="202.78" y="623.5" ></text>
</g>
<g >
<title>at::TORCH_LIBRARY_IMPL_init_aten_QuantizedCPU (2 samples, 0.09%)</title><rect x="193.9" y="581" width="1.1" height="15.0" fill="rgb(211,143,26)" rx="2" ry="2" />
<text  x="196.94" y="591.5" ></text>
</g>
<g >
<title>c10::either&lt;c10::OperatorName, c10::FunctionSchema&gt;::~either (1 samples, 0.04%)</title><rect x="226.8" y="501" width="0.5" height="15.0" fill="rgb(243,97,41)" rx="2" ry="2" />
<text  x="229.81" y="511.5" ></text>
</g>
<g >
<title>seq_printf (1 samples, 0.04%)</title><rect x="197.7" y="277" width="0.5" height="15.0" fill="rgb(222,164,23)" rx="2" ry="2" />
<text  x="200.65" y="287.5" ></text>
</g>
<g >
<title>at::hasCallbacks (2 samples, 0.09%)</title><rect x="1184.2" y="645" width="1.0" height="15.0" fill="rgb(236,197,7)" rx="2" ry="2" />
<text  x="1187.17" y="655.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.04%)</title><rect x="32.3" y="677" width="0.5" height="15.0" fill="rgb(220,102,3)" rx="2" ry="2" />
<text  x="35.26" y="687.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="205.1" y="357" width="0.5" height="15.0" fill="rgb(218,58,30)" rx="2" ry="2" />
<text  x="208.08" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;c10::Symbol, c10::Symbol, std::allocator&lt;c10::Symbol&gt;, std::__detail::_Identity, std::equal_to&lt;c10::Symbol&gt;, std::hash&lt;c10::Symbol&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::~_Hashtable (1 samples, 0.04%)</title><rect x="266.0" y="325" width="0.6" height="15.0" fill="rgb(250,119,10)" rx="2" ry="2" />
<text  x="269.04" y="335.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.04%)</title><rect x="1109.4" y="517" width="0.6" height="15.0" fill="rgb(244,160,44)" rx="2" ry="2" />
<text  x="1112.42" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;c10::Argument&gt;::allocate (1 samples, 0.04%)</title><rect x="198.7" y="405" width="0.5" height="15.0" fill="rgb(212,70,35)" rx="2" ry="2" />
<text  x="201.72" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;at::RecordFunctionCallback, unsigned long&gt;, std::allocator&lt;std::pair&lt;at::RecordFunctionCallback, unsigned long&gt; &gt; &gt;::empty (1 samples, 0.04%)</title><rect x="47.6" y="629" width="0.6" height="15.0" fill="rgb(205,122,1)" rx="2" ry="2" />
<text  x="50.64" y="639.5" ></text>
</g>
<g >
<title>c10::TensorOptions::computeDispatchKey (10 samples, 0.45%)</title><rect x="949.3" y="437" width="5.3" height="15.0" fill="rgb(250,47,26)" rx="2" ry="2" />
<text  x="952.34" y="447.5" ></text>
</g>
<g >
<title>c10::VariableVersion::~VariableVersion (9 samples, 0.40%)</title><rect x="140.9" y="645" width="4.8" height="15.0" fill="rgb(234,26,50)" rx="2" ry="2" />
<text  x="143.93" y="655.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::Registerer::op (2 samples, 0.09%)</title><rect x="166.4" y="677" width="1.0" height="15.0" fill="rgb(249,110,15)" rx="2" ry="2" />
<text  x="169.38" y="687.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_tracer.cpp (1 samples, 0.04%)</title><rect x="270.8" y="629" width="0.5" height="15.0" fill="rgb(245,211,48)" rx="2" ry="2" />
<text  x="273.81" y="639.5" ></text>
</g>
<g >
<title>zap_pte_range.isra.0 (20 samples, 0.90%)</title><rect x="1170.4" y="533" width="10.6" height="15.0" fill="rgb(253,171,18)" rx="2" ry="2" />
<text  x="1173.39" y="543.5" ></text>
</g>
<g >
<title>_int_memalign (33 samples, 1.48%)</title><rect x="408.1" y="245" width="17.5" height="15.0" fill="rgb(223,215,28)" rx="2" ry="2" />
<text  x="411.10" y="255.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;::~intrusive_ptr (6 samples, 0.27%)</title><rect x="466.4" y="517" width="3.2" height="15.0" fill="rgb(212,201,54)" rx="2" ry="2" />
<text  x="469.42" y="527.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_TypeDefault.cpp (74 samples, 3.32%)</title><rect x="210.4" y="629" width="39.2" height="15.0" fill="rgb(208,52,17)" rx="2" ry="2" />
<text  x="213.38" y="639.5" >_GL..</text>
</g>
<g >
<title>std::unique_ptr&lt;c10::AutogradMetaInterface, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::release (1 samples, 0.04%)</title><rect x="362.5" y="565" width="0.5" height="15.0" fill="rgb(249,104,19)" rx="2" ry="2" />
<text  x="365.52" y="575.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;short&gt; (2 samples, 0.09%)</title><rect x="505.1" y="517" width="1.1" height="15.0" fill="rgb(248,90,21)" rx="2" ry="2" />
<text  x="508.11" y="527.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (1 samples, 0.04%)</title><rect x="255.4" y="405" width="0.6" height="15.0" fill="rgb(215,87,29)" rx="2" ry="2" />
<text  x="258.44" y="415.5" ></text>
</g>
<g >
<title>_dl_map_segments (4 samples, 0.18%)</title><rect x="1106.8" y="533" width="2.1" height="15.0" fill="rgb(213,195,20)" rx="2" ry="2" />
<text  x="1109.77" y="543.5" ></text>
</g>
<g >
<title>torch::detail::TorchLibraryInit::TorchLibraryInit (4 samples, 0.18%)</title><rect x="253.3" y="597" width="2.1" height="15.0" fill="rgb(246,152,46)" rx="2" ry="2" />
<text  x="256.32" y="607.5" ></text>
</g>
<g >
<title>SchemaParser (1 samples, 0.04%)</title><rect x="258.6" y="501" width="0.5" height="15.0" fill="rgb(209,122,54)" rx="2" ry="2" />
<text  x="261.62" y="511.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.04%)</title><rect x="191.8" y="261" width="0.6" height="15.0" fill="rgb(219,20,53)" rx="2" ry="2" />
<text  x="194.82" y="271.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (1 samples, 0.04%)</title><rect x="1169.9" y="581" width="0.5" height="15.0" fill="rgb(216,204,49)" rx="2" ry="2" />
<text  x="1172.86" y="591.5" ></text>
</g>
<g >
<title>c10::Device::Device (1 samples, 0.04%)</title><rect x="582.0" y="309" width="0.5" height="15.0" fill="rgb(240,214,16)" rx="2" ry="2" />
<text  x="584.98" y="319.5" ></text>
</g>
<g >
<title>c10::Dispatcher::call&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::TensorOptions const&amp;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (239 samples, 10.74%)</title><rect x="694.4" y="549" width="126.7" height="15.0" fill="rgb(221,35,45)" rx="2" ry="2" />
<text  x="697.36" y="559.5" >c10::Dispatcher..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.04%)</title><rect x="227.3" y="341" width="0.6" height="15.0" fill="rgb(210,79,46)" rx="2" ry="2" />
<text  x="230.34" y="351.5" ></text>
</g>
<g >
<title>c10::findSchemaDifferences[abi:cxx11] (1 samples, 0.04%)</title><rect x="253.3" y="373" width="0.5" height="15.0" fill="rgb(227,185,47)" rx="2" ry="2" />
<text  x="256.32" y="383.5" ></text>
</g>
<g >
<title>std::default_delete&lt;c10::FunctionSchema&gt;::operator (4 samples, 0.18%)</title><rect x="319.6" y="277" width="2.1" height="15.0" fill="rgb(205,2,19)" rx="2" ry="2" />
<text  x="322.58" y="287.5" ></text>
</g>
<g >
<title>c10::TensorOptions::device_opt (1 samples, 0.04%)</title><rect x="1090.9" y="293" width="0.5" height="15.0" fill="rgb(225,8,2)" rx="2" ry="2" />
<text  x="1093.87" y="303.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;c10::ThreadLocalDebugInfo,  (3 samples, 0.13%)</title><rect x="852.3" y="309" width="1.6" height="15.0" fill="rgb(244,35,48)" rx="2" ry="2" />
<text  x="855.33" y="319.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (2 samples, 0.09%)</title><rect x="235.3" y="373" width="1.1" height="15.0" fill="rgb(211,143,32)" rx="2" ry="2" />
<text  x="238.29" y="383.5" ></text>
</g>
<g >
<title>at::native::check_size_nonnegative (3 samples, 0.13%)</title><rect x="999.2" y="309" width="1.6" height="15.0" fill="rgb(241,102,5)" rx="2" ry="2" />
<text  x="1002.16" y="319.5" ></text>
</g>
<g >
<title>unmap_single_vma (20 samples, 0.90%)</title><rect x="1170.4" y="565" width="10.6" height="15.0" fill="rgb(224,36,14)" rx="2" ry="2" />
<text  x="1173.39" y="575.5" ></text>
</g>
<g >
<title>torch::autograd::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Autograd (1 samples, 0.04%)</title><rect x="249.6" y="549" width="0.5" height="15.0" fill="rgb(220,70,49)" rx="2" ry="2" />
<text  x="252.60" y="559.5" ></text>
</g>
<g >
<title>at::hasCallbacks (1 samples, 0.04%)</title><rect x="700.7" y="469" width="0.5" height="15.0" fill="rgb(206,206,15)" rx="2" ry="2" />
<text  x="703.72" y="479.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;torch::jit::Source, std::allocator&lt;torch::jit::Source&gt;,  (1 samples, 0.04%)</title><rect x="227.3" y="389" width="0.6" height="15.0" fill="rgb(249,56,43)" rx="2" ry="2" />
<text  x="230.34" y="399.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.04%)</title><rect x="1149.2" y="565" width="0.5" height="15.0" fill="rgb(221,213,36)" rx="2" ry="2" />
<text  x="1152.18" y="575.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseType (1 samples, 0.04%)</title><rect x="242.2" y="437" width="0.5" height="15.0" fill="rgb(253,222,12)" rx="2" ry="2" />
<text  x="245.18" y="447.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.04%)</title><rect x="162.1" y="597" width="0.6" height="15.0" fill="rgb(223,173,15)" rx="2" ry="2" />
<text  x="165.14" y="607.5" ></text>
</g>
<g >
<title>debugString (1 samples, 0.04%)</title><rect x="183.9" y="533" width="0.5" height="15.0" fill="rgb(228,61,36)" rx="2" ry="2" />
<text  x="186.87" y="543.5" ></text>
</g>
<g >
<title>parseDeclarations (3 samples, 0.13%)</title><rect x="265.5" y="485" width="1.6" height="15.0" fill="rgb(227,23,54)" rx="2" ry="2" />
<text  x="268.51" y="495.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.04%)</title><rect x="260.2" y="485" width="0.5" height="15.0" fill="rgb(213,94,31)" rx="2" ry="2" />
<text  x="263.21" y="495.5" ></text>
</g>
<g >
<title>_int_free (4 samples, 0.18%)</title><rect x="847.6" y="389" width="2.1" height="15.0" fill="rgb(206,195,35)" rx="2" ry="2" />
<text  x="850.56" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="231.1" y="181" width="0.5" height="15.0" fill="rgb(219,197,28)" rx="2" ry="2" />
<text  x="234.05" y="191.5" ></text>
</g>
<g >
<title>std::function&lt;void  (21 samples, 0.94%)</title><rect x="228.9" y="437" width="11.2" height="15.0" fill="rgb(231,148,40)" rx="2" ry="2" />
<text  x="231.93" y="447.5" ></text>
</g>
<g >
<title>TORCH_LIBRARY_IMPL_init_aten_Tracer (1 samples, 0.04%)</title><rect x="198.2" y="581" width="0.5" height="15.0" fill="rgb(229,192,33)" rx="2" ry="2" />
<text  x="201.19" y="591.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;::reset_ (16 samples, 0.72%)</title><rect x="846.0" y="485" width="8.4" height="15.0" fill="rgb(254,9,31)" rx="2" ry="2" />
<text  x="848.97" y="495.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.04%)</title><rect x="214.1" y="517" width="0.5" height="15.0" fill="rgb(244,78,54)" rx="2" ry="2" />
<text  x="217.09" y="527.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="226.3" y="389" width="0.5" height="15.0" fill="rgb(227,27,37)" rx="2" ry="2" />
<text  x="229.28" y="399.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;torch::autograd::Node&gt;::~shared_ptr (2 samples, 0.09%)</title><rect x="862.4" y="485" width="1.1" height="15.0" fill="rgb(239,119,19)" rx="2" ry="2" />
<text  x="865.40" y="495.5" ></text>
</g>
<g >
<title>c10::DispatchKeySet::operator- (1 samples, 0.04%)</title><rect x="689.6" y="549" width="0.5" height="15.0" fill="rgb(234,138,48)" rx="2" ry="2" />
<text  x="692.59" y="559.5" ></text>
</g>
<g >
<title>Xbyak::Operand::Operand (1 samples, 0.04%)</title><rect x="263.9" y="565" width="0.5" height="15.0" fill="rgb(221,94,40)" rx="2" ry="2" />
<text  x="266.92" y="575.5" ></text>
</g>
<g >
<title>c10::TensorImpl::TensorImpl (6 samples, 0.27%)</title><rect x="541.7" y="277" width="3.2" height="15.0" fill="rgb(240,19,28)" rx="2" ry="2" />
<text  x="544.69" y="287.5" ></text>
</g>
<g >
<title>at::native::empty_cpu (112 samples, 5.03%)</title><rect x="391.1" y="341" width="59.4" height="15.0" fill="rgb(225,128,3)" rx="2" ry="2" />
<text  x="394.14" y="351.5" >at::na..</text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::RegistryPriority&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::RegistryPriority&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (1 samples, 0.04%)</title><rect x="273.5" y="549" width="0.5" height="15.0" fill="rgb(236,0,31)" rx="2" ry="2" />
<text  x="276.46" y="559.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_SparseCPUType.cpp (1 samples, 0.04%)</title><rect x="196.6" y="629" width="0.5" height="15.0" fill="rgb(212,73,44)" rx="2" ry="2" />
<text  x="199.59" y="639.5" ></text>
</g>
<g >
<title>c10::impl::ExcludeDispatchKeyGuard::ExcludeDispatchKeyGuard (3 samples, 0.13%)</title><rect x="688.5" y="565" width="1.6" height="15.0" fill="rgb(214,39,3)" rx="2" ry="2" />
<text  x="691.53" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.04%)</title><rect x="189.2" y="485" width="0.5" height="15.0" fill="rgb(253,30,38)" rx="2" ry="2" />
<text  x="192.17" y="495.5" ></text>
</g>
<g >
<title>c10::SmallVectorTemplateCommon&lt;long, void&gt;::size (1 samples, 0.04%)</title><rect x="580.4" y="277" width="0.5" height="15.0" fill="rgb(248,223,22)" rx="2" ry="2" />
<text  x="583.39" y="287.5" ></text>
</g>
<g >
<title>hasThreadLocalCallbacks (2 samples, 0.09%)</title><rect x="381.1" y="485" width="1.0" height="15.0" fill="rgb(233,34,13)" rx="2" ry="2" />
<text  x="384.07" y="495.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::createFunctionSchemaFromTraitsFlattenedReturns&lt;c10::guts::function_traits&lt;at::Tensor  (1 samples, 0.04%)</title><rect x="203.5" y="501" width="0.5" height="15.0" fill="rgb(222,40,20)" rx="2" ry="2" />
<text  x="206.49" y="511.5" ></text>
</g>
<g >
<title>c10::TensorOptions::computeDispatchKey (5 samples, 0.22%)</title><rect x="706.0" y="437" width="2.7" height="15.0" fill="rgb(214,207,0)" rx="2" ry="2" />
<text  x="709.02" y="447.5" ></text>
</g>
<g >
<title>c10::Dispatcher::cleanup (7 samples, 0.31%)</title><rect x="312.7" y="389" width="3.7" height="15.0" fill="rgb(237,27,31)" rx="2" ry="2" />
<text  x="315.69" y="399.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;::reset_ (6 samples, 0.27%)</title><rect x="466.4" y="501" width="3.2" height="15.0" fill="rgb(253,136,16)" rx="2" ry="2" />
<text  x="469.42" y="511.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.04%)</title><rect x="284.6" y="501" width="0.5" height="15.0" fill="rgb(250,59,39)" rx="2" ry="2" />
<text  x="287.59" y="511.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (2 samples, 0.09%)</title><rect x="612.2" y="565" width="1.1" height="15.0" fill="rgb(249,221,35)" rx="2" ry="2" />
<text  x="615.19" y="575.5" ></text>
</g>
<g >
<title>c10::TensorImpl::empty_tensor_restride (3 samples, 0.13%)</title><rect x="579.9" y="309" width="1.5" height="15.0" fill="rgb(243,14,41)" rx="2" ry="2" />
<text  x="582.86" y="319.5" ></text>
</g>
<g >
<title>lookup_fast (1 samples, 0.04%)</title><rect x="1110.5" y="373" width="0.5" height="15.0" fill="rgb(214,100,29)" rx="2" ry="2" />
<text  x="1113.49" y="383.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.04%)</title><rect x="275.6" y="565" width="0.5" height="15.0" fill="rgb(247,134,4)" rx="2" ry="2" />
<text  x="278.58" y="575.5" ></text>
</g>
<g >
<title>c10::demangle_type&lt;caffe2::UnaryElementwiseWithArgsOp&lt;caffe2::TensorTypes&lt;float&gt;, caffe2::CPUContext, caffe2::UnaryFunctorWithDefaultCtor&lt;caffe2::CbrtFunctor&lt;caffe2::CPUContext&gt; &gt;, caffe2::SameTypeAsInput&gt; &gt; (1 samples, 0.04%)</title><rect x="277.2" y="613" width="0.5" height="15.0" fill="rgb(205,3,38)" rx="2" ry="2" />
<text  x="280.17" y="623.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~shared_ptr (1 samples, 0.04%)</title><rect x="702.8" y="485" width="0.6" height="15.0" fill="rgb(222,85,38)" rx="2" ry="2" />
<text  x="705.84" y="495.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="736.8" y="149" width="0.5" height="15.0" fill="rgb(226,186,44)" rx="2" ry="2" />
<text  x="739.77" y="159.5" ></text>
</g>
<g >
<title>torch::detail::TorchLibraryInit::TorchLibraryInit (6 samples, 0.27%)</title><rect x="207.2" y="597" width="3.2" height="15.0" fill="rgb(215,221,32)" rx="2" ry="2" />
<text  x="210.20" y="607.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;long&gt; (1 samples, 0.04%)</title><rect x="707.1" y="389" width="0.5" height="15.0" fill="rgb(239,210,33)" rx="2" ry="2" />
<text  x="710.08" y="399.5" ></text>
</g>
<g >
<title>parseDeclarations (1 samples, 0.04%)</title><rect x="281.4" y="549" width="0.5" height="15.0" fill="rgb(254,89,24)" rx="2" ry="2" />
<text  x="284.41" y="559.5" ></text>
</g>
<g >
<title>at::StringView::StringView (1 samples, 0.04%)</title><rect x="522.1" y="501" width="0.5" height="15.0" fill="rgb(210,128,23)" rx="2" ry="2" />
<text  x="525.08" y="511.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;c10::DebugInfoBase&gt;::~shared_ptr (2 samples, 0.09%)</title><rect x="1008.2" y="261" width="1.0" height="15.0" fill="rgb(229,14,20)" rx="2" ry="2" />
<text  x="1011.18" y="271.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="1106.2" y="469" width="0.6" height="15.0" fill="rgb(220,73,51)" rx="2" ry="2" />
<text  x="1109.24" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::RegistryPriority&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::RegistryPriority&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (2 samples, 0.09%)</title><rect x="274.0" y="549" width="1.0" height="15.0" fill="rgb(239,130,53)" rx="2" ry="2" />
<text  x="276.99" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;torch::jit::Source&gt;::construct&lt;torch::jit::Source, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.04%)</title><rect x="227.3" y="357" width="0.6" height="15.0" fill="rgb(232,29,22)" rx="2" ry="2" />
<text  x="230.34" y="367.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.09%)</title><rect x="1137.0" y="453" width="1.1" height="15.0" fill="rgb(206,7,5)" rx="2" ry="2" />
<text  x="1139.99" y="463.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (1 samples, 0.04%)</title><rect x="1107.8" y="341" width="0.6" height="15.0" fill="rgb(254,204,39)" rx="2" ry="2" />
<text  x="1110.83" y="351.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (3 samples, 0.13%)</title><rect x="113.4" y="565" width="1.6" height="15.0" fill="rgb(236,47,30)" rx="2" ry="2" />
<text  x="116.37" y="575.5" ></text>
</g>
<g >
<title>__GI___libc_read (1 samples, 0.04%)</title><rect x="197.7" y="437" width="0.5" height="15.0" fill="rgb(224,27,4)" rx="2" ry="2" />
<text  x="200.65" y="447.5" ></text>
</g>
<g >
<title>c10::Device::Device (2 samples, 0.09%)</title><rect x="1001.3" y="293" width="1.0" height="15.0" fill="rgb(244,130,52)" rx="2" ry="2" />
<text  x="1004.28" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::_M_realloc_insert&lt;c10::Argument&gt; (1 samples, 0.04%)</title><rect x="69.4" y="677" width="0.5" height="15.0" fill="rgb(252,204,37)" rx="2" ry="2" />
<text  x="72.37" y="687.5" ></text>
</g>
<g >
<title>c10::str&lt;char [15], char const*, char [2], unsigned int&gt; (1 samples, 0.04%)</title><rect x="205.1" y="517" width="0.5" height="15.0" fill="rgb(251,94,54)" rx="2" ry="2" />
<text  x="208.08" y="527.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (1 samples, 0.04%)</title><rect x="175.9" y="517" width="0.6" height="15.0" fill="rgb(232,49,53)" rx="2" ry="2" />
<text  x="178.92" y="527.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.09%)</title><rect x="15.8" y="677" width="1.1" height="15.0" fill="rgb(205,96,25)" rx="2" ry="2" />
<text  x="18.83" y="687.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor  (1 samples, 0.04%)</title><rect x="252.8" y="565" width="0.5" height="15.0" fill="rgb(229,101,33)" rx="2" ry="2" />
<text  x="255.79" y="575.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="283.0" y="501" width="0.5" height="15.0" fill="rgb(214,122,19)" rx="2" ry="2" />
<text  x="286.00" y="511.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::createFunctionSchemaFromTraitsFlattenedReturns&lt;c10::guts::function_traits&lt;at::Tensor&amp;  (1 samples, 0.04%)</title><rect x="198.7" y="501" width="0.5" height="15.0" fill="rgb(215,46,9)" rx="2" ry="2" />
<text  x="201.72" y="511.5" ></text>
</g>
<g >
<title>caffe2::detail::make_function_schema_for_c10 (1 samples, 0.04%)</title><rect x="153.1" y="677" width="0.6" height="15.0" fill="rgb(233,206,46)" rx="2" ry="2" />
<text  x="156.13" y="687.5" ></text>
</g>
<g >
<title>_callWriteFuncOnBackgroundInstance&lt;c10::Dispatcher::findOrRegisterName_ (1 samples, 0.04%)</title><rect x="182.3" y="469" width="0.5" height="15.0" fill="rgb(234,79,26)" rx="2" ry="2" />
<text  x="185.28" y="479.5" ></text>
</g>
<g >
<title>c10::SmallVectorImpl&lt;long&gt;::resize (1 samples, 0.04%)</title><rect x="575.6" y="309" width="0.5" height="15.0" fill="rgb(242,209,27)" rx="2" ry="2" />
<text  x="578.62" y="319.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="398.6" y="165" width="0.5" height="15.0" fill="rgb(225,59,21)" rx="2" ry="2" />
<text  x="401.56" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt;::allocate (1 samples, 0.04%)</title><rect x="272.9" y="533" width="0.6" height="15.0" fill="rgb(224,128,41)" rx="2" ry="2" />
<text  x="275.93" y="543.5" ></text>
</g>
<g >
<title>torch::autograd::make_variable (4 samples, 0.18%)</title><rect x="71.5" y="677" width="2.1" height="15.0" fill="rgb(223,193,53)" rx="2" ry="2" />
<text  x="74.49" y="687.5" ></text>
</g>
<g >
<title>c10::DataPtr::clear (18 samples, 0.81%)</title><rect x="623.3" y="453" width="9.6" height="15.0" fill="rgb(207,140,15)" rx="2" ry="2" />
<text  x="626.32" y="463.5" ></text>
</g>
<g >
<title>torch::detail::TorchLibraryInit::TorchLibraryInit (7 samples, 0.31%)</title><rect x="190.2" y="597" width="3.7" height="15.0" fill="rgb(222,84,16)" rx="2" ry="2" />
<text  x="193.23" y="607.5" ></text>
</g>
<g >
<title>torch::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Tracer (1 samples, 0.04%)</title><rect x="198.2" y="565" width="0.5" height="15.0" fill="rgb(238,119,29)" rx="2" ry="2" />
<text  x="201.19" y="575.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;c10::Type,  (1 samples, 0.04%)</title><rect x="231.6" y="373" width="0.5" height="15.0" fill="rgb(207,151,28)" rx="2" ry="2" />
<text  x="234.58" y="383.5" ></text>
</g>
<g >
<title>c10::ProfiledCPUMemoryReporter::Delete (3 samples, 0.13%)</title><rect x="53.5" y="677" width="1.6" height="15.0" fill="rgb(251,184,42)" rx="2" ry="2" />
<text  x="56.47" y="687.5" ></text>
</g>
<g >
<title>SchemaParser (1 samples, 0.04%)</title><rect x="252.8" y="501" width="0.5" height="15.0" fill="rgb(243,86,7)" rx="2" ry="2" />
<text  x="255.79" y="511.5" ></text>
</g>
<g >
<title>torch::jit::parseName (1 samples, 0.04%)</title><rect x="201.4" y="533" width="0.5" height="15.0" fill="rgb(229,161,4)" rx="2" ry="2" />
<text  x="204.37" y="543.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.04%)</title><rect x="209.8" y="549" width="0.6" height="15.0" fill="rgb(218,161,41)" rx="2" ry="2" />
<text  x="212.85" y="559.5" ></text>
</g>
<g >
<title>createArgumentVector (1 samples, 0.04%)</title><rect x="198.7" y="469" width="0.5" height="15.0" fill="rgb(221,37,1)" rx="2" ry="2" />
<text  x="201.72" y="479.5" ></text>
</g>
<g >
<title>c10::optional_base&lt;c10::IValue&gt;::~optional_base (1 samples, 0.04%)</title><rect x="320.1" y="133" width="0.5" height="15.0" fill="rgb(240,20,23)" rx="2" ry="2" />
<text  x="323.11" y="143.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::Lexer (1 samples, 0.04%)</title><rect x="258.6" y="485" width="0.5" height="15.0" fill="rgb(253,204,19)" rx="2" ry="2" />
<text  x="261.62" y="495.5" ></text>
</g>
<g >
<title>torch::dispatch&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor&gt;  (1 samples, 0.04%)</title><rect x="186.0" y="565" width="0.5" height="15.0" fill="rgb(215,20,36)" rx="2" ry="2" />
<text  x="188.99" y="575.5" ></text>
</g>
<g >
<title>TORCH_LIBRARY_IMPL_init___Tracer (1 samples, 0.04%)</title><rect x="270.8" y="581" width="0.5" height="15.0" fill="rgb(234,47,38)" rx="2" ry="2" />
<text  x="273.81" y="591.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;c10::Dispatcher::OperatorDef&gt; &gt; &gt;::construct&lt;c10::Dispatcher::OperatorDef, c10::OperatorName&gt; (1 samples, 0.04%)</title><rect x="210.4" y="453" width="0.5" height="15.0" fill="rgb(222,136,21)" rx="2" ry="2" />
<text  x="213.38" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (1 samples, 0.04%)</title><rect x="203.5" y="389" width="0.5" height="15.0" fill="rgb(229,108,31)" rx="2" ry="2" />
<text  x="206.49" y="399.5" ></text>
</g>
<g >
<title>at::native::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_quantized_CPU (1 samples, 0.04%)</title><rect x="267.6" y="549" width="0.6" height="15.0" fill="rgb(221,150,15)" rx="2" ry="2" />
<text  x="270.63" y="559.5" ></text>
</g>
<g >
<title>parseList (4 samples, 0.18%)</title><rect x="288.8" y="533" width="2.2" height="15.0" fill="rgb(231,196,37)" rx="2" ry="2" />
<text  x="291.83" y="543.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="183.3" y="405" width="0.6" height="15.0" fill="rgb(231,127,51)" rx="2" ry="2" />
<text  x="186.34" y="415.5" ></text>
</g>
<g >
<title>open_path (4 samples, 0.18%)</title><rect x="1110.0" y="549" width="2.1" height="15.0" fill="rgb(223,179,40)" rx="2" ry="2" />
<text  x="1112.96" y="559.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (1 samples, 0.04%)</title><rect x="204.5" y="533" width="0.6" height="15.0" fill="rgb(244,7,48)" rx="2" ry="2" />
<text  x="207.55" y="543.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;torch::jit::(anonymous namespace)::SchemaParser::parseDeclaration (1 samples, 0.04%)</title><rect x="281.4" y="469" width="0.5" height="15.0" fill="rgb(221,70,26)" rx="2" ry="2" />
<text  x="284.41" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;c10::Dispatcher::OperatorDef&gt; &gt; &gt;::deallocate (2 samples, 0.09%)</title><rect x="312.7" y="325" width="1.0" height="15.0" fill="rgb(212,227,52)" rx="2" ry="2" />
<text  x="315.69" y="335.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.04%)</title><rect x="201.9" y="533" width="0.5" height="15.0" fill="rgb(242,38,51)" rx="2" ry="2" />
<text  x="204.90" y="543.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.04%)</title><rect x="195.5" y="325" width="0.6" height="15.0" fill="rgb(253,58,16)" rx="2" ry="2" />
<text  x="198.53" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;c10::Dispatcher::OperatorDef, std::allocator&lt;c10::Dispatcher::OperatorDef&gt; &gt;::_M_create_node&lt;c10::OperatorName&gt; (3 samples, 0.13%)</title><rect x="190.2" y="469" width="1.6" height="15.0" fill="rgb(218,112,18)" rx="2" ry="2" />
<text  x="193.23" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;c10::Symbol, c10::Symbol, std::allocator&lt;c10::Symbol&gt;, std::__detail::_Identity, std::equal_to&lt;c10::Symbol&gt;, std::hash&lt;c10::Symbol&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_deallocate_buckets (1 samples, 0.04%)</title><rect x="266.0" y="293" width="0.6" height="15.0" fill="rgb(231,134,26)" rx="2" ry="2" />
<text  x="269.04" y="303.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;torch::autograd::Node,  (2 samples, 0.09%)</title><rect x="862.4" y="469" width="1.1" height="15.0" fill="rgb(230,227,28)" rx="2" ry="2" />
<text  x="865.40" y="479.5" ></text>
</g>
<g >
<title>torch::jit::parseSchema (1 samples, 0.04%)</title><rect x="195.5" y="517" width="0.6" height="15.0" fill="rgb(246,21,19)" rx="2" ry="2" />
<text  x="198.53" y="527.5" ></text>
</g>
<g >
<title>torch::detail::TorchLibraryInit::TorchLibraryInit (1 samples, 0.04%)</title><rect x="175.9" y="597" width="0.6" height="15.0" fill="rgb(209,32,51)" rx="2" ry="2" />
<text  x="178.92" y="607.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (1 samples, 0.04%)</title><rect x="222.6" y="469" width="0.5" height="15.0" fill="rgb(211,228,34)" rx="2" ry="2" />
<text  x="225.57" y="479.5" ></text>
</g>
<g >
<title>c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (132 samples, 5.93%)</title><rect x="525.3" y="485" width="69.9" height="15.0" fill="rgb(240,196,49)" rx="2" ry="2" />
<text  x="528.26" y="495.5" >c10::im..</text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.04%)</title><rect x="261.8" y="549" width="0.5" height="15.0" fill="rgb(207,125,14)" rx="2" ry="2" />
<text  x="264.80" y="559.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;c10::MemoryFormat&gt;::constexpr_optional_base (1 samples, 0.04%)</title><rect x="819.5" y="405" width="0.5" height="15.0" fill="rgb(239,95,30)" rx="2" ry="2" />
<text  x="822.46" y="415.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.04%)</title><rect x="873.5" y="485" width="0.6" height="15.0" fill="rgb(216,103,16)" rx="2" ry="2" />
<text  x="876.53" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::push_back (1 samples, 0.04%)</title><rect x="288.8" y="485" width="0.6" height="15.0" fill="rgb(209,22,40)" rx="2" ry="2" />
<text  x="291.83" y="495.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor  (1 samples, 0.04%)</title><rect x="196.1" y="565" width="0.5" height="15.0" fill="rgb(226,71,21)" rx="2" ry="2" />
<text  x="199.06" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;c10::Dispatcher::OperatorDef, std::allocator&lt;c10::Dispatcher::OperatorDef&gt; &gt;::erase (1 samples, 0.04%)</title><rect x="321.7" y="405" width="0.5" height="15.0" fill="rgb(221,210,8)" rx="2" ry="2" />
<text  x="324.70" y="415.5" ></text>
</g>
<g >
<title>c10::globalStrings (2 samples, 0.09%)</title><rect x="189.2" y="565" width="1.0" height="15.0" fill="rgb(221,128,9)" rx="2" ry="2" />
<text  x="192.17" y="575.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.04%)</title><rect x="203.5" y="485" width="0.5" height="15.0" fill="rgb(231,188,51)" rx="2" ry="2" />
<text  x="206.49" y="495.5" ></text>
</g>
<g >
<title>c10::SmallVectorTemplateCommon&lt;long, void&gt;::data (1 samples, 0.04%)</title><rect x="794.5" y="229" width="0.6" height="15.0" fill="rgb(236,50,7)" rx="2" ry="2" />
<text  x="797.55" y="239.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.04%)</title><rect x="226.3" y="229" width="0.5" height="15.0" fill="rgb(222,78,16)" rx="2" ry="2" />
<text  x="229.28" y="239.5" ></text>
</g>
<g >
<title>__static_initialization_and_destruction_0 (2 samples, 0.09%)</title><rect x="252.3" y="613" width="1.0" height="15.0" fill="rgb(251,74,35)" rx="2" ry="2" />
<text  x="255.26" y="623.5" ></text>
</g>
<g >
<title>c10::ProfiledCPUMemoryReporter::Delete (1 samples, 0.04%)</title><rect x="13.2" y="677" width="0.5" height="15.0" fill="rgb(227,14,36)" rx="2" ry="2" />
<text  x="16.18" y="687.5" ></text>
</g>
<g >
<title>free_perturb (1 samples, 0.04%)</title><rect x="765.9" y="197" width="0.6" height="15.0" fill="rgb(253,210,46)" rx="2" ry="2" />
<text  x="768.92" y="207.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;torch::jit::Operator&gt;::~shared_ptr (2 samples, 0.09%)</title><rect x="325.4" y="485" width="1.1" height="15.0" fill="rgb(212,28,8)" rx="2" ry="2" />
<text  x="328.41" y="495.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.04%)</title><rect x="280.4" y="485" width="0.5" height="15.0" fill="rgb(213,174,26)" rx="2" ry="2" />
<text  x="283.35" y="495.5" ></text>
</g>
<g >
<title>__GI_____strtod_l_internal (1 samples, 0.04%)</title><rect x="169.6" y="373" width="0.5" height="15.0" fill="rgb(241,152,14)" rx="2" ry="2" />
<text  x="172.56" y="383.5" ></text>
</g>
<g >
<title>at::hasCallbacks (5 samples, 0.22%)</title><rect x="379.5" y="517" width="2.6" height="15.0" fill="rgb(228,135,29)" rx="2" ry="2" />
<text  x="382.48" y="527.5" ></text>
</g>
<g >
<title>_dl_catch_exception (12 samples, 0.54%)</title><rect x="1106.2" y="597" width="6.4" height="15.0" fill="rgb(233,56,27)" rx="2" ry="2" />
<text  x="1109.24" y="607.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.04%)</title><rect x="234.2" y="293" width="0.6" height="15.0" fill="rgb(219,184,29)" rx="2" ry="2" />
<text  x="237.23" y="303.5" ></text>
</g>
<g >
<title>__tls_get_addr@plt (1 samples, 0.04%)</title><rect x="956.8" y="325" width="0.5" height="15.0" fill="rgb(249,203,25)" rx="2" ry="2" />
<text  x="959.76" y="335.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.04%)</title><rect x="197.1" y="453" width="0.6" height="15.0" fill="rgb(213,109,21)" rx="2" ry="2" />
<text  x="200.12" y="463.5" ></text>
</g>
<g >
<title>torch::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Tracer (5 samples, 0.22%)</title><rect x="200.3" y="581" width="2.7" height="15.0" fill="rgb(251,200,3)" rx="2" ry="2" />
<text  x="203.31" y="591.5" ></text>
</g>
<g >
<title>c10::str&lt;char [15], char const*, char [2], unsigned int&gt; (1 samples, 0.04%)</title><rect x="201.9" y="501" width="0.5" height="15.0" fill="rgb(225,156,21)" rx="2" ry="2" />
<text  x="204.90" y="511.5" ></text>
</g>
<g >
<title>std::swap&lt;void  (1 samples, 0.04%)</title><rect x="187.6" y="437" width="0.5" height="15.0" fill="rgb(250,225,32)" rx="2" ry="2" />
<text  x="190.58" y="447.5" ></text>
</g>
<g >
<title>__do_execve_file.isra.0 (3 samples, 0.13%)</title><rect x="1168.3" y="645" width="1.6" height="15.0" fill="rgb(221,15,14)" rx="2" ry="2" />
<text  x="1171.27" y="655.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="701.2" y="437" width="0.6" height="15.0" fill="rgb(215,179,35)" rx="2" ry="2" />
<text  x="704.25" y="447.5" ></text>
</g>
<g >
<title>_int_memalign (7 samples, 0.31%)</title><rect x="125.0" y="677" width="3.7" height="15.0" fill="rgb(220,58,33)" rx="2" ry="2" />
<text  x="128.03" y="687.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::AliasInfo&gt;::optional (1 samples, 0.04%)</title><rect x="291.5" y="517" width="0.5" height="15.0" fill="rgb(242,208,25)" rx="2" ry="2" />
<text  x="294.48" y="527.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="277.2" y="565" width="0.5" height="15.0" fill="rgb(228,201,3)" rx="2" ry="2" />
<text  x="280.17" y="575.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="304.2" y="501" width="0.5" height="15.0" fill="rgb(238,65,21)" rx="2" ry="2" />
<text  x="307.20" y="511.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (3 samples, 0.13%)</title><rect x="813.6" y="261" width="1.6" height="15.0" fill="rgb(242,124,5)" rx="2" ry="2" />
<text  x="816.63" y="271.5" ></text>
</g>
<g >
<title>google::protobuf::internal::MergePartialFromImpl&lt;false&gt; (2 samples, 0.09%)</title><rect x="295.7" y="549" width="1.1" height="15.0" fill="rgb(237,134,26)" rx="2" ry="2" />
<text  x="298.72" y="559.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.09%)</title><rect x="1137.0" y="469" width="1.1" height="15.0" fill="rgb(240,3,2)" rx="2" ry="2" />
<text  x="1139.99" y="479.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;torch::jit::Source,  (1 samples, 0.04%)</title><rect x="166.9" y="421" width="0.5" height="15.0" fill="rgb(243,114,2)" rx="2" ry="2" />
<text  x="169.91" y="431.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.04%)</title><rect x="189.2" y="293" width="0.5" height="15.0" fill="rgb(232,189,44)" rx="2" ry="2" />
<text  x="192.17" y="303.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;unsigned char&gt;@plt (1 samples, 0.04%)</title><rect x="954.1" y="373" width="0.5" height="15.0" fill="rgb(226,220,6)" rx="2" ry="2" />
<text  x="957.11" y="383.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;::operator=&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt; (16 samples, 0.72%)</title><rect x="846.0" y="517" width="8.4" height="15.0" fill="rgb(223,169,54)" rx="2" ry="2" />
<text  x="848.97" y="527.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.18%)</title><rect x="229.5" y="325" width="2.1" height="15.0" fill="rgb(215,157,53)" rx="2" ry="2" />
<text  x="232.46" y="335.5" ></text>
</g>
<g >
<title>read&lt;c10::Dispatcher::findOp (1 samples, 0.04%)</title><rect x="245.4" y="485" width="0.5" height="15.0" fill="rgb(236,189,15)" rx="2" ry="2" />
<text  x="248.36" y="495.5" ></text>
</g>
<g >
<title>parseDeclarations (1 samples, 0.04%)</title><rect x="195.5" y="485" width="0.6" height="15.0" fill="rgb(211,2,30)" rx="2" ry="2" />
<text  x="198.53" y="495.5" ></text>
</g>
<g >
<title>c10::profiledCPUMemoryReporter (1 samples, 0.04%)</title><rect x="1044.8" y="293" width="0.5" height="15.0" fill="rgb(233,43,17)" rx="2" ry="2" />
<text  x="1047.75" y="303.5" ></text>
</g>
<g >
<title>torch::autograd::make_variable (21 samples, 0.94%)</title><rect x="496.1" y="613" width="11.1" height="15.0" fill="rgb(233,150,35)" rx="2" ry="2" />
<text  x="499.10" y="623.5" ></text>
</g>
<g >
<title>c10::TensorImpl::set_autograd_meta (1 samples, 0.04%)</title><rect x="906.9" y="581" width="0.6" height="15.0" fill="rgb(222,175,15)" rx="2" ry="2" />
<text  x="909.93" y="591.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (1 samples, 0.04%)</title><rect x="214.1" y="277" width="0.5" height="15.0" fill="rgb(219,6,9)" rx="2" ry="2" />
<text  x="217.09" y="287.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.04%)</title><rect x="295.2" y="549" width="0.5" height="15.0" fill="rgb(230,119,33)" rx="2" ry="2" />
<text  x="298.19" y="559.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt; &gt; &gt;::unordered_map (1 samples, 0.04%)</title><rect x="110.7" y="661" width="0.5" height="15.0" fill="rgb(241,117,19)" rx="2" ry="2" />
<text  x="113.72" y="671.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (1 samples, 0.04%)</title><rect x="204.0" y="517" width="0.5" height="15.0" fill="rgb(222,182,30)" rx="2" ry="2" />
<text  x="207.02" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1 samples, 0.04%)</title><rect x="234.8" y="373" width="0.5" height="15.0" fill="rgb(215,47,8)" rx="2" ry="2" />
<text  x="237.76" y="383.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;torch::jit::Operator,  (2 samples, 0.09%)</title><rect x="325.4" y="469" width="1.1" height="15.0" fill="rgb(244,51,23)" rx="2" ry="2" />
<text  x="328.41" y="479.5" ></text>
</g>
<g >
<title>c10::GetCPUAllocator@plt (1 samples, 0.04%)</title><rect x="425.6" y="325" width="0.5" height="15.0" fill="rgb(249,32,23)" rx="2" ry="2" />
<text  x="428.60" y="335.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.04%)</title><rect x="853.9" y="309" width="0.5" height="15.0" fill="rgb(227,52,23)" rx="2" ry="2" />
<text  x="856.92" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;c10::either&lt;c10::OperatorName, c10::FunctionSchema&gt; &gt;::allocate (1 samples, 0.04%)</title><rect x="69.9" y="629" width="0.5" height="15.0" fill="rgb(238,223,21)" rx="2" ry="2" />
<text  x="72.90" y="639.5" ></text>
</g>
<g >
<title>_int_free (7 samples, 0.31%)</title><rect x="462.2" y="581" width="3.7" height="15.0" fill="rgb(233,178,33)" rx="2" ry="2" />
<text  x="465.17" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;c10::Dispatcher::OperatorDef, std::allocator&lt;c10::Dispatcher::OperatorDef&gt; &gt;::_M_insert&lt;c10::OperatorName&gt; (3 samples, 0.13%)</title><rect x="190.2" y="485" width="1.6" height="15.0" fill="rgb(217,62,22)" rx="2" ry="2" />
<text  x="193.23" y="495.5" ></text>
</g>
<g >
<title>c10::memoryProfilingEnabled (2 samples, 0.09%)</title><rect x="552.8" y="293" width="1.1" height="15.0" fill="rgb(213,208,32)" rx="2" ry="2" />
<text  x="555.82" y="303.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (2 samples, 0.09%)</title><rect x="176.5" y="533" width="1.0" height="15.0" fill="rgb(243,74,35)" rx="2" ry="2" />
<text  x="179.45" y="543.5" ></text>
</g>
<g >
<title>torch::Library::_fallback (1 samples, 0.04%)</title><rect x="259.7" y="549" width="0.5" height="15.0" fill="rgb(244,186,22)" rx="2" ry="2" />
<text  x="262.68" y="559.5" ></text>
</g>
<g >
<title>_M_destroy (1 samples, 0.04%)</title><rect x="324.9" y="405" width="0.5" height="15.0" fill="rgb(217,222,37)" rx="2" ry="2" />
<text  x="327.88" y="415.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.04%)</title><rect x="251.2" y="437" width="0.5" height="15.0" fill="rgb(205,5,53)" rx="2" ry="2" />
<text  x="254.19" y="447.5" ></text>
</g>
<g >
<title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (1 samples, 0.04%)</title><rect x="203.0" y="501" width="0.5" height="15.0" fill="rgb(214,118,28)" rx="2" ry="2" />
<text  x="205.96" y="511.5" ></text>
</g>
<g >
<title>torch::jit::parseSchema (3 samples, 0.13%)</title><rect x="113.4" y="581" width="1.6" height="15.0" fill="rgb(229,88,4)" rx="2" ry="2" />
<text  x="116.37" y="591.5" ></text>
</g>
<g >
<title>c10::inferFunctionSchemaFlattenedReturns&lt;at::Tensor  (1 samples, 0.04%)</title><rect x="257.0" y="517" width="0.6" height="15.0" fill="rgb(250,205,49)" rx="2" ry="2" />
<text  x="260.03" y="527.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;c10::Half&gt; (1 samples, 0.04%)</title><rect x="952.0" y="389" width="0.5" height="15.0" fill="rgb(231,159,12)" rx="2" ry="2" />
<text  x="954.99" y="399.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::registerKernel (1 samples, 0.04%)</title><rect x="206.1" y="517" width="0.6" height="15.0" fill="rgb(207,214,7)" rx="2" ry="2" />
<text  x="209.14" y="527.5" ></text>
</g>
<g >
<title>c10::alloc_cpu (67 samples, 3.01%)</title><rect x="1009.2" y="293" width="35.6" height="15.0" fill="rgb(254,104,16)" rx="2" ry="2" />
<text  x="1012.24" y="303.5" >c10..</text>
</g>
<g >
<title>[libcublasLt.so.11.1.0.229] (1 samples, 0.04%)</title><rect x="304.7" y="613" width="0.6" height="15.0" fill="rgb(247,83,31)" rx="2" ry="2" />
<text  x="307.73" y="623.5" ></text>
</g>
<g >
<title>isalpha@plt (1 samples, 0.04%)</title><rect x="205.6" y="405" width="0.5" height="15.0" fill="rgb(242,124,53)" rx="2" ry="2" />
<text  x="208.61" y="415.5" ></text>
</g>
<g >
<title>proc_reg_read (1 samples, 0.04%)</title><rect x="197.7" y="325" width="0.5" height="15.0" fill="rgb(217,176,46)" rx="2" ry="2" />
<text  x="200.65" y="335.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::setManuallyBoxedKernel_ (1 samples, 0.04%)</title><rect x="286.7" y="581" width="0.5" height="15.0" fill="rgb(233,197,31)" rx="2" ry="2" />
<text  x="289.71" y="591.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::MemoryFormat&gt;::optional (2 samples, 0.09%)</title><rect x="1100.9" y="405" width="1.1" height="15.0" fill="rgb(249,198,54)" rx="2" ry="2" />
<text  x="1103.94" y="415.5" ></text>
</g>
<g >
<title>c10::SmallVector&lt;unsigned long, 4u&gt;::~SmallVector (3 samples, 0.13%)</title><rect x="703.4" y="501" width="1.6" height="15.0" fill="rgb(249,85,47)" rx="2" ry="2" />
<text  x="706.37" y="511.5" ></text>
</g>
<g >
<title>[libc10.so] (3 samples, 0.13%)</title><rect x="401.7" y="293" width="1.6" height="15.0" fill="rgb(231,12,50)" rx="2" ry="2" />
<text  x="404.74" y="303.5" ></text>
</g>
<g >
<title>c10::detail::_str&lt;char const*, char const*, unsigned int&gt; (1 samples, 0.04%)</title><rect x="223.6" y="469" width="0.6" height="15.0" fill="rgb(254,175,10)" rx="2" ry="2" />
<text  x="226.63" y="479.5" ></text>
</g>
<g >
<title>c10::AliasInfo::AliasInfo (1 samples, 0.04%)</title><rect x="236.4" y="357" width="0.5" height="15.0" fill="rgb(221,25,16)" rx="2" ry="2" />
<text  x="239.35" y="367.5" ></text>
</g>
<g >
<title>unmap_page_range (20 samples, 0.90%)</title><rect x="1170.4" y="549" width="10.6" height="15.0" fill="rgb(247,15,19)" rx="2" ry="2" />
<text  x="1173.39" y="559.5" ></text>
</g>
<g >
<title>search_binary_handler (9 samples, 0.40%)</title><rect x="1185.2" y="629" width="4.8" height="15.0" fill="rgb(207,77,2)" rx="2" ry="2" />
<text  x="1188.23" y="639.5" ></text>
</g>
<g >
<title>empty_memory_format (124 samples, 5.57%)</title><rect x="529.5" y="469" width="65.7" height="15.0" fill="rgb(205,37,10)" rx="2" ry="2" />
<text  x="532.50" y="479.5" >empty_m..</text>
</g>
<g >
<title>torch::dispatch&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor  (1 samples, 0.04%)</title><rect x="179.1" y="565" width="0.5" height="15.0" fill="rgb(213,52,15)" rx="2" ry="2" />
<text  x="182.10" y="575.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseAliasAnnotation (1 samples, 0.04%)</title><rect x="212.5" y="373" width="0.5" height="15.0" fill="rgb(216,181,18)" rx="2" ry="2" />
<text  x="215.50" y="383.5" ></text>
</g>
<g >
<title>c10::ProfiledCPUMemoryReporter::Delete (5 samples, 0.22%)</title><rect x="335.5" y="389" width="2.6" height="15.0" fill="rgb(251,25,24)" rx="2" ry="2" />
<text  x="338.48" y="399.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.04%)</title><rect x="1111.5" y="325" width="0.6" height="15.0" fill="rgb(245,100,39)" rx="2" ry="2" />
<text  x="1114.55" y="335.5" ></text>
</g>
<g >
<title>c10::TensorImpl::compute_contiguous (4 samples, 0.18%)</title><rect x="1051.6" y="261" width="2.2" height="15.0" fill="rgb(215,221,43)" rx="2" ry="2" />
<text  x="1054.64" y="271.5" ></text>
</g>
<g >
<title>__do_fault (1 samples, 0.04%)</title><rect x="1152.4" y="453" width="0.5" height="15.0" fill="rgb(228,181,0)" rx="2" ry="2" />
<text  x="1155.36" y="463.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::expect (1 samples, 0.04%)</title><rect x="188.6" y="485" width="0.6" height="15.0" fill="rgb(226,87,44)" rx="2" ry="2" />
<text  x="191.64" y="495.5" ></text>
</g>
<g >
<title>at::hasCallbacks@plt (1 samples, 0.04%)</title><rect x="522.6" y="517" width="0.5" height="15.0" fill="rgb(248,128,22)" rx="2" ry="2" />
<text  x="525.61" y="527.5" ></text>
</g>
<g >
<title>__cudaUnregisterBinaryUtil (1 samples, 0.04%)</title><rect x="308.4" y="581" width="0.6" height="15.0" fill="rgb(239,77,20)" rx="2" ry="2" />
<text  x="311.45" y="591.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.04%)</title><rect x="308.4" y="453" width="0.6" height="15.0" fill="rgb(237,127,44)" rx="2" ry="2" />
<text  x="311.45" y="463.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.04%)</title><rect x="213.0" y="389" width="0.6" height="15.0" fill="rgb(225,23,42)" rx="2" ry="2" />
<text  x="216.03" y="399.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.04%)</title><rect x="195.0" y="437" width="0.5" height="15.0" fill="rgb(251,30,32)" rx="2" ry="2" />
<text  x="198.00" y="447.5" ></text>
</g>
<g >
<title>c10::Registry&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unique_ptr&lt;caffe2::GradientMakerBase, std::default_delete&lt;caffe2::GradientMakerBase&gt; &gt;, caffe2::OperatorDef const&amp;, std::vector&lt;caffe2::GradientWrapper, std::allocator&lt;caffe2::GradientWrapper&gt; &gt; const&amp;&gt;::Register (1 samples, 0.04%)</title><rect x="273.5" y="581" width="0.5" height="15.0" fill="rgb(233,71,4)" rx="2" ry="2" />
<text  x="276.46" y="591.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="212.5" y="165" width="0.5" height="15.0" fill="rgb(218,37,38)" rx="2" ry="2" />
<text  x="215.50" y="175.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;signed char&gt; (1 samples, 0.04%)</title><rect x="919.1" y="501" width="0.5" height="15.0" fill="rgb(229,220,50)" rx="2" ry="2" />
<text  x="922.12" y="511.5" ></text>
</g>
<g >
<title>at::RecordFunction::RecordFunction (3 samples, 0.13%)</title><rect x="130.3" y="677" width="1.6" height="15.0" fill="rgb(232,95,43)" rx="2" ry="2" />
<text  x="133.33" y="687.5" ></text>
</g>
<g >
<title>ska::detailv3::KeyOrValueHasher&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::hash&lt;c10::OperatorName&gt; &gt;::operator (1 samples, 0.04%)</title><rect x="218.9" y="405" width="0.5" height="15.0" fill="rgb(250,109,4)" rx="2" ry="2" />
<text  x="221.86" y="415.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;c10::Argument&gt; (1 samples, 0.04%)</title><rect x="322.2" y="277" width="0.6" height="15.0" fill="rgb(235,206,31)" rx="2" ry="2" />
<text  x="325.23" y="287.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="1181.5" y="693" width="0.5" height="15.0" fill="rgb(207,44,46)" rx="2" ry="2" />
<text  x="1184.52" y="703.5" ></text>
</g>
<g >
<title>__cxa_demangle (1 samples, 0.04%)</title><rect x="276.1" y="581" width="0.5" height="15.0" fill="rgb(253,122,12)" rx="2" ry="2" />
<text  x="279.11" y="591.5" ></text>
</g>
<g >
<title>__cxa_finalize (1 samples, 0.04%)</title><rect x="305.8" y="597" width="0.5" height="15.0" fill="rgb(225,48,20)" rx="2" ry="2" />
<text  x="308.80" y="607.5" ></text>
</g>
<g >
<title>at::(anonymous namespace)::empty_memory_format (6 samples, 0.27%)</title><rect x="705.5" y="453" width="3.2" height="15.0" fill="rgb(239,202,39)" rx="2" ry="2" />
<text  x="708.49" y="463.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.04%)</title><rect x="835.4" y="565" width="0.5" height="15.0" fill="rgb(232,106,37)" rx="2" ry="2" />
<text  x="838.36" y="575.5" ></text>
</g>
<g >
<title>c10::Dispatcher::callWithDispatchKey&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::TensorOptions const&amp;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (142 samples, 6.38%)</title><rect x="521.0" y="549" width="75.3" height="15.0" fill="rgb(231,188,15)" rx="2" ry="2" />
<text  x="524.02" y="559.5" >c10::Dis..</text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.04%)</title><rect x="200.8" y="453" width="0.6" height="15.0" fill="rgb(217,17,29)" rx="2" ry="2" />
<text  x="203.84" y="463.5" ></text>
</g>
<g >
<title>__do_page_fault (2 samples, 0.09%)</title><rect x="229.5" y="245" width="1.0" height="15.0" fill="rgb(206,122,16)" rx="2" ry="2" />
<text  x="232.46" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;c10::RegistrationHandleRAII&gt; &gt;::construct&lt;c10::RegistrationHandleRAII, c10::RegistrationHandleRAII&gt; (1 samples, 0.04%)</title><rect x="224.7" y="517" width="0.5" height="15.0" fill="rgb(205,92,38)" rx="2" ry="2" />
<text  x="227.69" y="527.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.04%)</title><rect x="278.8" y="517" width="0.5" height="15.0" fill="rgb(253,193,37)" rx="2" ry="2" />
<text  x="281.76" y="527.5" ></text>
</g>
<g >
<title>malloc_consolidate (8 samples, 0.36%)</title><rect x="568.2" y="213" width="4.2" height="15.0" fill="rgb(217,188,8)" rx="2" ry="2" />
<text  x="571.19" y="223.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.04%)</title><rect x="231.6" y="293" width="0.5" height="15.0" fill="rgb(252,129,51)" rx="2" ry="2" />
<text  x="234.58" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (4 samples, 0.18%)</title><rect x="282.5" y="613" width="2.1" height="15.0" fill="rgb(249,30,38)" rx="2" ry="2" />
<text  x="285.47" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt;::erase (6 samples, 0.27%)</title><rect x="318.5" y="373" width="3.2" height="15.0" fill="rgb(231,60,49)" rx="2" ry="2" />
<text  x="321.52" y="383.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;c10::DebugInfoBase,  (2 samples, 0.09%)</title><rect x="1008.2" y="245" width="1.0" height="15.0" fill="rgb(208,62,36)" rx="2" ry="2" />
<text  x="1011.18" y="255.5" ></text>
</g>
<g >
<title>c10::TensorImpl::release_resources (10 samples, 0.45%)</title><rect x="333.9" y="581" width="5.3" height="15.0" fill="rgb(239,224,8)" rx="2" ry="2" />
<text  x="336.89" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;char const*, char const*&gt; &gt;::deallocate (1 samples, 0.04%)</title><rect x="311.6" y="293" width="0.6" height="15.0" fill="rgb(223,216,1)" rx="2" ry="2" />
<text  x="314.63" y="303.5" ></text>
</g>
<g >
<title>c10::inferFunctionSchemaFlattenedReturns&lt;at::Tensor  (2 samples, 0.09%)</title><rect x="243.2" y="517" width="1.1" height="15.0" fill="rgb(245,28,23)" rx="2" ry="2" />
<text  x="246.24" y="527.5" ></text>
</g>
<g >
<title>parseDeclarations (2 samples, 0.09%)</title><rect x="113.9" y="549" width="1.1" height="15.0" fill="rgb(233,204,5)" rx="2" ry="2" />
<text  x="116.90" y="559.5" ></text>
</g>
<g >
<title>SchemaParser (1 samples, 0.04%)</title><rect x="214.6" y="501" width="0.5" height="15.0" fill="rgb(225,45,25)" rx="2" ry="2" />
<text  x="217.62" y="511.5" ></text>
</g>
<g >
<title>c10::findSchemaDifferences[abi:cxx11] (1 samples, 0.04%)</title><rect x="250.7" y="485" width="0.5" height="15.0" fill="rgb(232,61,18)" rx="2" ry="2" />
<text  x="253.66" y="495.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="175.4" y="469" width="0.5" height="15.0" fill="rgb(242,112,12)" rx="2" ry="2" />
<text  x="178.39" y="479.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (1 samples, 0.04%)</title><rect x="223.6" y="389" width="0.6" height="15.0" fill="rgb(215,116,45)" rx="2" ry="2" />
<text  x="226.63" y="399.5" ></text>
</g>
<g >
<title>at::empty (1 samples, 0.04%)</title><rect x="375.8" y="517" width="0.5" height="15.0" fill="rgb(211,179,34)" rx="2" ry="2" />
<text  x="378.77" y="527.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.04%)</title><rect x="286.2" y="373" width="0.5" height="15.0" fill="rgb(214,153,39)" rx="2" ry="2" />
<text  x="289.18" y="383.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::createFunctionSchemaFromTraitsFlattenedReturns&lt;c10::guts::function_traits&lt;at::Tensor  (3 samples, 0.13%)</title><rect x="207.7" y="501" width="1.6" height="15.0" fill="rgb(244,142,40)" rx="2" ry="2" />
<text  x="210.73" y="511.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (1 samples, 0.04%)</title><rect x="197.1" y="437" width="0.6" height="15.0" fill="rgb(251,172,54)" rx="2" ry="2" />
<text  x="200.12" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::_M_allocate (1 samples, 0.04%)</title><rect x="210.9" y="389" width="0.5" height="15.0" fill="rgb(242,157,50)" rx="2" ry="2" />
<text  x="213.91" y="399.5" ></text>
</g>
<g >
<title>at::detail::make_tensor&lt;c10::TensorImpl, c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;, c10::DispatchKey, caffe2::TypeMeta&amp;&gt; (2 samples, 0.09%)</title><rect x="101.2" y="661" width="1.0" height="15.0" fill="rgb(249,35,34)" rx="2" ry="2" />
<text  x="104.18" y="671.5" ></text>
</g>
<g >
<title>checked_request2size (3 samples, 0.13%)</title><rect x="545.9" y="245" width="1.6" height="15.0" fill="rgb(252,201,1)" rx="2" ry="2" />
<text  x="548.93" y="255.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseAliasAnnotation (1 samples, 0.04%)</title><rect x="242.2" y="421" width="0.5" height="15.0" fill="rgb(220,216,17)" rx="2" ry="2" />
<text  x="245.18" y="431.5" ></text>
</g>
<g >
<title>__static_initialization_and_destruction_0 (1 samples, 0.04%)</title><rect x="267.1" y="613" width="0.5" height="15.0" fill="rgb(231,223,0)" rx="2" ry="2" />
<text  x="270.10" y="623.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="295.2" y="533" width="0.5" height="15.0" fill="rgb(208,4,50)" rx="2" ry="2" />
<text  x="298.19" y="543.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;c10::Type&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;c10::Type&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.04%)</title><rect x="66.2" y="677" width="0.5" height="15.0" fill="rgb(235,78,41)" rx="2" ry="2" />
<text  x="69.19" y="687.5" ></text>
</g>
<g >
<title>c10::Dispatcher::addRegistrationListener (2 samples, 0.09%)</title><rect x="296.8" y="597" width="1.0" height="15.0" fill="rgb(222,84,18)" rx="2" ry="2" />
<text  x="299.78" y="607.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::VariableVersion::VersionCounter, c10::detail::intrusive_target_default_null_type&lt;c10::VariableVersion::VersionCounter&gt; &gt;::make&lt;unsigned int&amp;&gt; (2 samples, 0.09%)</title><rect x="736.8" y="181" width="1.0" height="15.0" fill="rgb(249,59,37)" rx="2" ry="2" />
<text  x="739.77" y="191.5" ></text>
</g>
<g >
<title>parseList (4 samples, 0.18%)</title><rect x="211.4" y="453" width="2.2" height="15.0" fill="rgb(231,124,21)" rx="2" ry="2" />
<text  x="214.44" y="463.5" ></text>
</g>
<g >
<title>[libcublasLt.so.11.1.0.229] (1 samples, 0.04%)</title><rect x="304.7" y="565" width="0.6" height="15.0" fill="rgb(210,162,26)" rx="2" ry="2" />
<text  x="307.73" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.04%)</title><rect x="276.6" y="565" width="0.6" height="15.0" fill="rgb(247,217,14)" rx="2" ry="2" />
<text  x="279.64" y="575.5" ></text>
</g>
<g >
<title>page_fault (4 samples, 0.18%)</title><rect x="1182.0" y="693" width="2.2" height="15.0" fill="rgb(253,58,39)" rx="2" ry="2" />
<text  x="1185.05" y="703.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_Hashtable (1 samples, 0.04%)</title><rect x="181.2" y="357" width="0.6" height="15.0" fill="rgb(232,217,7)" rx="2" ry="2" />
<text  x="184.22" y="367.5" ></text>
</g>
<g >
<title>c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (289 samples, 12.98%)</title><rect x="948.8" y="469" width="153.2" height="15.0" fill="rgb(235,4,29)" rx="2" ry="2" />
<text  x="951.81" y="479.5" >c10::impl::detail::..</text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTable_ (1 samples, 0.04%)</title><rect x="190.8" y="373" width="0.5" height="15.0" fill="rgb(212,118,30)" rx="2" ry="2" />
<text  x="193.76" y="383.5" ></text>
</g>
<g >
<title>c10::TensorImpl::sizes (1 samples, 0.04%)</title><rect x="435.7" y="277" width="0.5" height="15.0" fill="rgb(218,53,42)" rx="2" ry="2" />
<text  x="438.67" y="287.5" ></text>
</g>
<g >
<title>_int_malloc (2 samples, 0.09%)</title><rect x="124.0" y="677" width="1.0" height="15.0" fill="rgb(239,11,13)" rx="2" ry="2" />
<text  x="126.97" y="687.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.04%)</title><rect x="201.4" y="421" width="0.5" height="15.0" fill="rgb(248,142,36)" rx="2" ry="2" />
<text  x="204.37" y="431.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_jit_sse41_u8_copy_bn_kern_autogen.cpp (1 samples, 0.04%)</title><rect x="265.0" y="629" width="0.5" height="15.0" fill="rgb(243,135,27)" rx="2" ry="2" />
<text  x="267.98" y="639.5" ></text>
</g>
<g >
<title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, c10::OperatorName, std::hash&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueHasher&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::hash&lt;c10::OperatorName&gt; &gt;, std::equal_to&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueEquality&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::equal_to&lt;c10::OperatorName&gt; &gt;, std::allocator&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt; &gt; &gt;::emplace&lt;c10::OperatorName const&amp;, c10::OperatorHandle&amp;&gt; (1 samples, 0.04%)</title><rect x="218.9" y="437" width="0.5" height="15.0" fill="rgb(239,202,41)" rx="2" ry="2" />
<text  x="221.86" y="447.5" ></text>
</g>
<g >
<title>caffe2::detail::make_function_schema_for_c10 (1 samples, 0.04%)</title><rect x="281.9" y="597" width="0.6" height="15.0" fill="rgb(250,108,46)" rx="2" ry="2" />
<text  x="284.94" y="607.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.04%)</title><rect x="234.2" y="309" width="0.6" height="15.0" fill="rgb(250,77,51)" rx="2" ry="2" />
<text  x="237.23" y="319.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.09%)</title><rect x="1155.5" y="565" width="1.1" height="15.0" fill="rgb(249,10,7)" rx="2" ry="2" />
<text  x="1158.54" y="575.5" ></text>
</g>
<g >
<title>torch::jit::deregisterOperator (2 samples, 0.09%)</title><rect x="309.5" y="389" width="1.1" height="15.0" fill="rgb(214,106,52)" rx="2" ry="2" />
<text  x="312.51" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.04%)</title><rect x="178.0" y="565" width="0.6" height="15.0" fill="rgb(227,216,12)" rx="2" ry="2" />
<text  x="181.04" y="575.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::detail::intrusive_target_default_null_type&lt;c10::TensorImpl&gt; &gt;::make&lt;c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;, c10::DispatchKey, caffe2::TypeMeta&amp;&gt; (37 samples, 1.66%)</title><rect x="975.3" y="277" width="19.6" height="15.0" fill="rgb(213,148,53)" rx="2" ry="2" />
<text  x="978.31" y="287.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_BatchingRegistrations.cpp (4 samples, 0.18%)</title><rect x="176.5" y="629" width="2.1" height="15.0" fill="rgb(212,101,25)" rx="2" ry="2" />
<text  x="179.45" y="639.5" ></text>
</g>
<g >
<title>c10::SmallVectorTemplateBase&lt;long, true&gt;::SmallVectorTemplateBase (3 samples, 0.13%)</title><rect x="734.6" y="181" width="1.6" height="15.0" fill="rgb(239,188,13)" rx="2" ry="2" />
<text  x="737.65" y="191.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="1108.9" y="453" width="0.5" height="15.0" fill="rgb(206,169,23)" rx="2" ry="2" />
<text  x="1111.89" y="463.5" ></text>
</g>
<g >
<title>c10::make_intrusive&lt;c10::VariableVersion::VersionCounter, c10::detail::intrusive_target_default_null_type&lt;c10::VariableVersion::VersionCounter&gt;, unsigned int&amp;&gt; (4 samples, 0.18%)</title><rect x="397.0" y="213" width="2.1" height="15.0" fill="rgb(219,80,53)" rx="2" ry="2" />
<text  x="399.97" y="223.5" ></text>
</g>
<g >
<title>c10::impl::ExcludeDispatchKeyGuard::ExcludeDispatchKeyGuard (9 samples, 0.40%)</title><rect x="511.5" y="581" width="4.7" height="15.0" fill="rgb(205,74,15)" rx="2" ry="2" />
<text  x="514.47" y="591.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, caffe2::OpSchema, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt; &gt;::find (1 samples, 0.04%)</title><rect x="280.4" y="597" width="0.5" height="15.0" fill="rgb(220,212,2)" rx="2" ry="2" />
<text  x="283.35" y="607.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::AliasInfo&gt;::~optional (1 samples, 0.04%)</title><rect x="322.2" y="245" width="0.6" height="15.0" fill="rgb(216,96,36)" rx="2" ry="2" />
<text  x="325.23" y="255.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.04%)</title><rect x="269.7" y="421" width="0.6" height="15.0" fill="rgb(215,25,42)" rx="2" ry="2" />
<text  x="272.75" y="431.5" ></text>
</g>
<g >
<title>c10::SmallVectorImpl&lt;unsigned long&gt;::~SmallVectorImpl (1 samples, 0.04%)</title><rect x="524.7" y="501" width="0.6" height="15.0" fill="rgb(239,42,39)" rx="2" ry="2" />
<text  x="527.73" y="511.5" ></text>
</g>
<g >
<title>c10::ProfiledCPUMemoryReporter::New (2 samples, 0.09%)</title><rect x="55.1" y="677" width="1.0" height="15.0" fill="rgb(249,126,31)" rx="2" ry="2" />
<text  x="58.06" y="687.5" ></text>
</g>
<g >
<title>google::protobuf::(anonymous namespace)::AddDescriptorsImpl (2 samples, 0.09%)</title><rect x="295.7" y="629" width="1.1" height="15.0" fill="rgb(205,209,25)" rx="2" ry="2" />
<text  x="298.72" y="639.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;c10::RegistrationHandleRAII&gt; (25 samples, 1.12%)</title><rect x="312.2" y="485" width="13.2" height="15.0" fill="rgb(230,149,28)" rx="2" ry="2" />
<text  x="315.16" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;c10::IValue, std::allocator&lt;c10::IValue&gt; &gt;::_Vector_base (1 samples, 0.04%)</title><rect x="532.7" y="389" width="0.5" height="15.0" fill="rgb(251,118,41)" rx="2" ry="2" />
<text  x="535.68" y="399.5" ></text>
</g>
<g >
<title>alloc_set_pte (1 samples, 0.04%)</title><rect x="1156.6" y="453" width="0.5" height="15.0" fill="rgb(234,62,24)" rx="2" ry="2" />
<text  x="1159.60" y="463.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::Lexer (1 samples, 0.04%)</title><rect x="205.6" y="485" width="0.5" height="15.0" fill="rgb(253,186,0)" rx="2" ry="2" />
<text  x="208.61" y="495.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.04%)</title><rect x="169.0" y="661" width="0.6" height="15.0" fill="rgb(245,121,34)" rx="2" ry="2" />
<text  x="172.03" y="671.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_BatchingRegistrations.cpp (4 samples, 0.18%)</title><rect x="176.5" y="613" width="2.1" height="15.0" fill="rgb(233,146,25)" rx="2" ry="2" />
<text  x="179.45" y="623.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.04%)</title><rect x="274.5" y="309" width="0.5" height="15.0" fill="rgb(234,20,35)" rx="2" ry="2" />
<text  x="277.52" y="319.5" ></text>
</g>
<g >
<title>__cxa_demangle (1 samples, 0.04%)</title><rect x="275.6" y="581" width="0.5" height="15.0" fill="rgb(209,115,18)" rx="2" ry="2" />
<text  x="278.58" y="591.5" ></text>
</g>
<g >
<title>TORCH_LIBRARY_IMPL_init_quantized_QuantizedCPU (1 samples, 0.04%)</title><rect x="267.1" y="581" width="0.5" height="15.0" fill="rgb(253,160,7)" rx="2" ry="2" />
<text  x="270.10" y="591.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.04%)</title><rect x="181.2" y="85" width="0.6" height="15.0" fill="rgb(236,48,23)" rx="2" ry="2" />
<text  x="184.22" y="95.5" ></text>
</g>
<g >
<title>at::empty (315 samples, 14.15%)</title><rect x="936.1" y="581" width="167.0" height="15.0" fill="rgb(250,164,29)" rx="2" ry="2" />
<text  x="939.08" y="591.5" >at::empty</text>
</g>
<g >
<title>__static_initialization_and_destruction_0 (11 samples, 0.49%)</title><rect x="178.6" y="613" width="5.8" height="15.0" fill="rgb(239,216,32)" rx="2" ry="2" />
<text  x="181.57" y="623.5" ></text>
</g>
<g >
<title>do_lookup_x (20 samples, 0.90%)</title><rect x="1138.1" y="549" width="10.6" height="15.0" fill="rgb(248,163,18)" rx="2" ry="2" />
<text  x="1141.05" y="559.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.04%)</title><rect x="201.4" y="405" width="0.5" height="15.0" fill="rgb(221,177,9)" rx="2" ry="2" />
<text  x="204.37" y="415.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (3 samples, 0.13%)</title><rect x="149.9" y="677" width="1.6" height="15.0" fill="rgb(241,207,26)" rx="2" ry="2" />
<text  x="152.95" y="687.5" ></text>
</g>
<g >
<title>c10::TensorImpl::sizes (1 samples, 0.04%)</title><rect x="794.5" y="261" width="0.6" height="15.0" fill="rgb(214,102,25)" rx="2" ry="2" />
<text  x="797.55" y="271.5" ></text>
</g>
<g >
<title>at::empty (151 samples, 6.78%)</title><rect x="372.6" y="597" width="80.0" height="15.0" fill="rgb(221,113,8)" rx="2" ry="2" />
<text  x="375.59" y="607.5" >at::empty</text>
</g>
<g >
<title>_GLOBAL__sub_I_RegisterOpContextClass.cpp (1 samples, 0.04%)</title><rect x="196.1" y="629" width="0.5" height="15.0" fill="rgb(236,40,13)" rx="2" ry="2" />
<text  x="199.06" y="639.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::OperatorEntry (3 samples, 0.13%)</title><rect x="190.2" y="405" width="1.6" height="15.0" fill="rgb(224,72,10)" rx="2" ry="2" />
<text  x="193.23" y="415.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.04%)</title><rect x="169.0" y="469" width="0.6" height="15.0" fill="rgb(235,101,21)" rx="2" ry="2" />
<text  x="172.03" y="479.5" ></text>
</g>
<g >
<title>parseList (2 samples, 0.09%)</title><rect x="166.4" y="597" width="1.0" height="15.0" fill="rgb(228,215,16)" rx="2" ry="2" />
<text  x="169.38" y="607.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (1 samples, 0.04%)</title><rect x="1155.0" y="437" width="0.5" height="15.0" fill="rgb(211,212,30)" rx="2" ry="2" />
<text  x="1158.01" y="447.5" ></text>
</g>
<g >
<title>std::max&lt;long&gt; (1 samples, 0.04%)</title><rect x="435.1" y="293" width="0.6" height="15.0" fill="rgb(231,16,48)" rx="2" ry="2" />
<text  x="438.14" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::_M_create_storage (1 samples, 0.04%)</title><rect x="210.9" y="405" width="0.5" height="15.0" fill="rgb(251,182,17)" rx="2" ry="2" />
<text  x="213.91" y="415.5" ></text>
</g>
<g >
<title>torch::jit::parseSchema (1 samples, 0.04%)</title><rect x="195.0" y="517" width="0.5" height="15.0" fill="rgb(234,98,8)" rx="2" ry="2" />
<text  x="198.00" y="527.5" ></text>
</g>
<g >
<title>operator (1 samples, 0.04%)</title><rect x="169.6" y="485" width="0.5" height="15.0" fill="rgb(238,108,33)" rx="2" ry="2" />
<text  x="172.56" y="495.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.04%)</title><rect x="197.1" y="469" width="0.6" height="15.0" fill="rgb(225,186,24)" rx="2" ry="2" />
<text  x="200.12" y="479.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="280.9" y="501" width="0.5" height="15.0" fill="rgb(216,166,53)" rx="2" ry="2" />
<text  x="283.88" y="511.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;torch::jit::Source&gt;::shared_ptr (1 samples, 0.04%)</title><rect x="166.9" y="437" width="0.5" height="15.0" fill="rgb(207,8,35)" rx="2" ry="2" />
<text  x="169.91" y="447.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (1 samples, 0.04%)</title><rect x="256.5" y="517" width="0.5" height="15.0" fill="rgb(228,47,5)" rx="2" ry="2" />
<text  x="259.50" y="527.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="269.2" y="421" width="0.5" height="15.0" fill="rgb(219,152,16)" rx="2" ry="2" />
<text  x="272.22" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;c10::Dispatcher::OperatorDef, std::allocator&lt;c10::Dispatcher::OperatorDef&gt; &gt;::erase (7 samples, 0.31%)</title><rect x="312.7" y="373" width="3.7" height="15.0" fill="rgb(215,138,49)" rx="2" ry="2" />
<text  x="315.69" y="383.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.04%)</title><rect x="284.6" y="517" width="0.5" height="15.0" fill="rgb(227,205,39)" rx="2" ry="2" />
<text  x="287.59" y="527.5" ></text>
</g>
<g >
<title>[libc10.so] (2 samples, 0.09%)</title><rect x="938.2" y="469" width="1.1" height="15.0" fill="rgb(234,56,9)" rx="2" ry="2" />
<text  x="941.20" y="479.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::VariableVersion::VersionCounter, c10::detail::intrusive_target_default_null_type&lt;c10::VariableVersion::VersionCounter&gt; &gt;::reset_ (28 samples, 1.26%)</title><rect x="632.9" y="501" width="14.8" height="15.0" fill="rgb(211,77,31)" rx="2" ry="2" />
<text  x="635.87" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.04%)</title><rect x="278.8" y="565" width="0.5" height="15.0" fill="rgb(218,36,23)" rx="2" ry="2" />
<text  x="281.76" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;c10::Argument&gt;::deallocate (1 samples, 0.04%)</title><rect x="325.9" y="181" width="0.6" height="15.0" fill="rgb(223,196,13)" rx="2" ry="2" />
<text  x="328.94" y="191.5" ></text>
</g>
<g >
<title>c10::DispatchKeySet::operator- (2 samples, 0.09%)</title><rect x="934.0" y="549" width="1.0" height="15.0" fill="rgb(221,92,28)" rx="2" ry="2" />
<text  x="936.96" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.04%)</title><rect x="170.6" y="485" width="0.6" height="15.0" fill="rgb(222,61,11)" rx="2" ry="2" />
<text  x="173.62" y="495.5" ></text>
</g>
<g >
<title>c10::detail::_str_wrapper&lt;char const*, char const* const&amp;, char const*, unsigned int const&amp;&gt;::call[abi:cxx11] (1 samples, 0.04%)</title><rect x="183.9" y="501" width="0.5" height="15.0" fill="rgb(247,101,21)" rx="2" ry="2" />
<text  x="186.87" y="511.5" ></text>
</g>
<g >
<title>c10::inferFunctionSchemaFlattenedReturns&lt;at::Tensor&amp;  (1 samples, 0.04%)</title><rect x="185.5" y="517" width="0.5" height="15.0" fill="rgb(243,191,17)" rx="2" ry="2" />
<text  x="188.46" y="527.5" ></text>
</g>
<g >
<title>typeMetaToScalarType (4 samples, 0.18%)</title><rect x="706.5" y="421" width="2.2" height="15.0" fill="rgb(254,127,29)" rx="2" ry="2" />
<text  x="709.55" y="431.5" ></text>
</g>
<g >
<title>c10::callUnboxedKernelFunction&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::TensorOptions const&amp;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (116 samples, 5.21%)</title><rect x="389.0" y="405" width="61.5" height="15.0" fill="rgb(206,173,24)" rx="2" ry="2" />
<text  x="392.02" y="415.5" >c10::c..</text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="515.2" y="565" width="0.5" height="15.0" fill="rgb(237,6,52)" rx="2" ry="2" />
<text  x="518.18" y="575.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (3 samples, 0.13%)</title><rect x="253.3" y="533" width="1.6" height="15.0" fill="rgb(207,136,33)" rx="2" ry="2" />
<text  x="256.32" y="543.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.04%)</title><rect x="188.1" y="421" width="0.5" height="15.0" fill="rgb(249,8,18)" rx="2" ry="2" />
<text  x="191.11" y="431.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (1 samples, 0.04%)</title><rect x="207.2" y="533" width="0.5" height="15.0" fill="rgb(222,179,18)" rx="2" ry="2" />
<text  x="210.20" y="543.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.04%)</title><rect x="397.0" y="181" width="0.5" height="15.0" fill="rgb(207,205,15)" rx="2" ry="2" />
<text  x="399.97" y="191.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::expect (1 samples, 0.04%)</title><rect x="169.6" y="469" width="0.5" height="15.0" fill="rgb(209,14,21)" rx="2" ry="2" />
<text  x="172.56" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;c10::either&lt;c10::OperatorName, c10::FunctionSchema&gt;, std::allocator&lt;c10::either&lt;c10::OperatorName, c10::FunctionSchema&gt; &gt; &gt;::_M_allocate (1 samples, 0.04%)</title><rect x="69.9" y="661" width="0.5" height="15.0" fill="rgb(214,87,34)" rx="2" ry="2" />
<text  x="72.90" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, true&gt; &gt;::deallocate (1 samples, 0.04%)</title><rect x="181.8" y="261" width="0.5" height="15.0" fill="rgb(213,215,21)" rx="2" ry="2" />
<text  x="184.75" y="271.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="189.2" y="373" width="0.5" height="15.0" fill="rgb(251,198,38)" rx="2" ry="2" />
<text  x="192.17" y="383.5" ></text>
</g>
<g >
<title>TORCH_LIBRARY_FRAGMENT_init_quantized_k (1 samples, 0.04%)</title><rect x="195.5" y="581" width="0.6" height="15.0" fill="rgb(215,207,35)" rx="2" ry="2" />
<text  x="198.53" y="591.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.04%)</title><rect x="216.2" y="325" width="0.5" height="15.0" fill="rgb(207,94,39)" rx="2" ry="2" />
<text  x="219.21" y="335.5" ></text>
</g>
<g >
<title>c10::inferFunctionSchemaFlattenedReturns&lt;at::Tensor&amp;  (1 samples, 0.04%)</title><rect x="198.7" y="517" width="0.5" height="15.0" fill="rgb(227,3,12)" rx="2" ry="2" />
<text  x="201.72" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;c10::Argument&gt;::allocate (1 samples, 0.04%)</title><rect x="179.1" y="405" width="0.5" height="15.0" fill="rgb(234,84,12)" rx="2" ry="2" />
<text  x="182.10" y="415.5" ></text>
</g>
<g >
<title>impl&lt;char const*, torch::jit::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_CatchAll (1 samples, 0.04%)</title><rect x="285.7" y="581" width="0.5" height="15.0" fill="rgb(250,189,30)" rx="2" ry="2" />
<text  x="288.65" y="591.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.04%)</title><rect x="522.1" y="437" width="0.5" height="15.0" fill="rgb(207,174,29)" rx="2" ry="2" />
<text  x="525.08" y="447.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;c10::RegistrationHandleRAII*&gt; (25 samples, 1.12%)</title><rect x="312.2" y="517" width="13.2" height="15.0" fill="rgb(240,92,6)" rx="2" ry="2" />
<text  x="315.16" y="527.5" ></text>
</g>
<g >
<title>SchemaParser (1 samples, 0.04%)</title><rect x="197.1" y="501" width="0.6" height="15.0" fill="rgb(217,16,20)" rx="2" ry="2" />
<text  x="200.12" y="511.5" ></text>
</g>
<g >
<title>c10::TensorOptions::device&lt;c10::DeviceType const&amp;, int&gt; (8 samples, 0.36%)</title><rect x="349.3" y="629" width="4.2" height="15.0" fill="rgb(223,149,26)" rx="2" ry="2" />
<text  x="352.26" y="639.5" ></text>
</g>
<g >
<title>c10::Dispatcher::call&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::TensorOptions const&amp;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (145 samples, 6.51%)</title><rect x="519.4" y="565" width="76.9" height="15.0" fill="rgb(215,92,38)" rx="2" ry="2" />
<text  x="522.42" y="575.5" >c10::Dis..</text>
</g>
<g >
<title>c10::inferFunctionSchemaFlattenedReturns&lt;at::Tensor  (1 samples, 0.04%)</title><rect x="213.6" y="517" width="0.5" height="15.0" fill="rgb(222,6,47)" rx="2" ry="2" />
<text  x="216.56" y="527.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;::reset_ (1 samples, 0.04%)</title><rect x="811.0" y="293" width="0.5" height="15.0" fill="rgb(236,157,49)" rx="2" ry="2" />
<text  x="813.98" y="303.5" ></text>
</g>
<g >
<title>std::atomic&lt;unsigned long&gt;::atomic (1 samples, 0.04%)</title><rect x="813.1" y="245" width="0.5" height="15.0" fill="rgb(213,104,17)" rx="2" ry="2" />
<text  x="816.10" y="255.5" ></text>
</g>
<g >
<title>impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor (1 samples, 0.04%)</title><rect x="200.3" y="565" width="0.5" height="15.0" fill="rgb(217,77,48)" rx="2" ry="2" />
<text  x="203.31" y="575.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.04%)</title><rect x="106.5" y="581" width="0.5" height="15.0" fill="rgb(220,106,0)" rx="2" ry="2" />
<text  x="109.48" y="591.5" ></text>
</g>
<g >
<title>llvm::detail::LeadingZerosCounter&lt;unsigned long, 8ul&gt;::count (2 samples, 0.09%)</title><rect x="941.4" y="453" width="1.0" height="15.0" fill="rgb(219,193,6)" rx="2" ry="2" />
<text  x="944.38" y="463.5" ></text>
</g>
<g >
<title>function&lt;c10::Dispatcher::registerDef (1 samples, 0.04%)</title><rect x="221.5" y="517" width="0.5" height="15.0" fill="rgb(252,162,24)" rx="2" ry="2" />
<text  x="224.51" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::push_back (4 samples, 0.18%)</title><rect x="229.5" y="405" width="2.1" height="15.0" fill="rgb(236,138,40)" rx="2" ry="2" />
<text  x="232.46" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt; &gt;::_M_erase (3 samples, 0.13%)</title><rect x="310.6" y="533" width="1.6" height="15.0" fill="rgb(226,72,19)" rx="2" ry="2" />
<text  x="313.57" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_ostringstream (1 samples, 0.04%)</title><rect x="177.5" y="517" width="0.5" height="15.0" fill="rgb(224,15,51)" rx="2" ry="2" />
<text  x="180.51" y="527.5" ></text>
</g>
<g >
<title>c10::FunctionSchema::FunctionSchema (1 samples, 0.04%)</title><rect x="267.6" y="469" width="0.6" height="15.0" fill="rgb(216,184,3)" rx="2" ry="2" />
<text  x="270.63" y="479.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;c10::ThreadLocalDebugInfo&gt;::shared_ptr (1 samples, 0.04%)</title><rect x="752.7" y="245" width="0.5" height="15.0" fill="rgb(206,65,4)" rx="2" ry="2" />
<text  x="755.67" y="255.5" ></text>
</g>
<g >
<title>c10::SmallVector&lt;long, 5u&gt;::SmallVector (5 samples, 0.22%)</title><rect x="980.6" y="213" width="2.7" height="15.0" fill="rgb(217,152,19)" rx="2" ry="2" />
<text  x="983.61" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt; &gt;::_M_destroy_node (1 samples, 0.04%)</title><rect x="311.6" y="437" width="0.6" height="15.0" fill="rgb(230,206,6)" rx="2" ry="2" />
<text  x="314.63" y="447.5" ></text>
</g>
<g >
<title>c10::VariableVersion::VariableVersion (4 samples, 0.18%)</title><rect x="397.0" y="229" width="2.1" height="15.0" fill="rgb(236,197,39)" rx="2" ry="2" />
<text  x="399.97" y="239.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;long&gt;@plt (1 samples, 0.04%)</title><rect x="527.4" y="389" width="0.5" height="15.0" fill="rgb(214,30,11)" rx="2" ry="2" />
<text  x="530.38" y="399.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::__atomic_base (2 samples, 0.09%)</title><rect x="397.5" y="133" width="1.1" height="15.0" fill="rgb(225,130,28)" rx="2" ry="2" />
<text  x="400.50" y="143.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.04%)</title><rect x="189.2" y="309" width="0.5" height="15.0" fill="rgb(218,118,5)" rx="2" ry="2" />
<text  x="192.17" y="319.5" ></text>
</g>
<g >
<title>onOperatorDeregistered (2 samples, 0.09%)</title><rect x="309.5" y="421" width="1.1" height="15.0" fill="rgb(246,68,18)" rx="2" ry="2" />
<text  x="312.51" y="431.5" ></text>
</g>
<g >
<title>c10::TensorImpl::refresh_numel (2 samples, 0.09%)</title><rect x="794.0" y="293" width="1.1" height="15.0" fill="rgb(230,87,43)" rx="2" ry="2" />
<text  x="797.02" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::RegistryPriority&gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (1 samples, 0.04%)</title><rect x="273.5" y="485" width="0.5" height="15.0" fill="rgb(249,143,30)" rx="2" ry="2" />
<text  x="276.46" y="495.5" ></text>
</g>
<g >
<title>c10::TensorOptions::requires_grad_opt (2 samples, 0.09%)</title><rect x="447.3" y="309" width="1.1" height="15.0" fill="rgb(225,224,40)" rx="2" ry="2" />
<text  x="450.33" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign&lt;char*, void&gt; (1 samples, 0.04%)</title><rect x="201.9" y="437" width="0.5" height="15.0" fill="rgb(239,111,33)" rx="2" ry="2" />
<text  x="204.90" y="447.5" ></text>
</g>
<g >
<title>check_match (3 samples, 0.13%)</title><rect x="1147.1" y="533" width="1.6" height="15.0" fill="rgb(226,202,46)" rx="2" ry="2" />
<text  x="1150.06" y="543.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::registerKernel (1 samples, 0.04%)</title><rect x="175.9" y="501" width="0.6" height="15.0" fill="rgb(241,90,47)" rx="2" ry="2" />
<text  x="178.92" y="511.5" ></text>
</g>
<g >
<title>torch::Library::impl_UNBOXED&lt;char const*, at::Tensor&amp;  (1 samples, 0.04%)</title><rect x="256.5" y="565" width="0.5" height="15.0" fill="rgb(209,189,16)" rx="2" ry="2" />
<text  x="259.50" y="575.5" ></text>
</g>
<g >
<title>c10::TensorOptions::layout_opt (1 samples, 0.04%)</title><rect x="1092.5" y="293" width="0.5" height="15.0" fill="rgb(221,36,49)" rx="2" ry="2" />
<text  x="1095.46" y="303.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.04%)</title><rect x="178.6" y="485" width="0.5" height="15.0" fill="rgb(221,114,34)" rx="2" ry="2" />
<text  x="181.57" y="495.5" ></text>
</g>
<g >
<title>std::function&lt;void  (4 samples, 0.18%)</title><rect x="111.2" y="565" width="2.2" height="15.0" fill="rgb(209,36,50)" rx="2" ry="2" />
<text  x="114.25" y="575.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (1 samples, 0.04%)</title><rect x="214.1" y="293" width="0.5" height="15.0" fill="rgb(254,121,0)" rx="2" ry="2" />
<text  x="217.09" y="303.5" ></text>
</g>
<g >
<title>at::TORCH_LIBRARY_IMPL_init_aten_CUDA (5 samples, 0.22%)</title><rect x="186.5" y="581" width="2.7" height="15.0" fill="rgb(228,78,37)" rx="2" ry="2" />
<text  x="189.52" y="591.5" ></text>
</g>
<g >
<title>c10::findSchemaDifferences[abi:cxx11] (1 samples, 0.04%)</title><rect x="250.7" y="373" width="0.5" height="15.0" fill="rgb(232,89,54)" rx="2" ry="2" />
<text  x="253.66" y="383.5" ></text>
</g>
<g >
<title>c10::KernelFunction::call&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::TensorOptions const&amp;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (116 samples, 5.21%)</title><rect x="389.0" y="421" width="61.5" height="15.0" fill="rgb(212,109,22)" rx="2" ry="2" />
<text  x="392.02" y="431.5" >c10::K..</text>
</g>
<g >
<title>c10::detail::_str_wrapper&lt;char const*, char const* const&amp;, char const*, unsigned int const&amp;&gt;::call[abi:cxx11] (1 samples, 0.04%)</title><rect x="246.4" y="501" width="0.6" height="15.0" fill="rgb(242,24,19)" rx="2" ry="2" />
<text  x="249.42" y="511.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (3 samples, 0.13%)</title><rect x="1175.2" y="485" width="1.5" height="15.0" fill="rgb(207,160,7)" rx="2" ry="2" />
<text  x="1178.16" y="495.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::MemoryFormat&gt;::optional (1 samples, 0.04%)</title><rect x="819.5" y="421" width="0.5" height="15.0" fill="rgb(234,86,18)" rx="2" ry="2" />
<text  x="822.46" y="431.5" ></text>
</g>
<g >
<title>at::empty (152 samples, 6.83%)</title><rect x="516.2" y="597" width="80.6" height="15.0" fill="rgb(216,138,21)" rx="2" ry="2" />
<text  x="519.24" y="607.5" >at::empty</text>
</g>
<g >
<title>c10::DispatchKeySet::DispatchKeySet (1 samples, 0.04%)</title><rect x="541.7" y="261" width="0.5" height="15.0" fill="rgb(234,171,8)" rx="2" ry="2" />
<text  x="544.69" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.04%)</title><rect x="227.3" y="293" width="0.6" height="15.0" fill="rgb(241,24,28)" rx="2" ry="2" />
<text  x="230.34" y="303.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor  (1 samples, 0.04%)</title><rect x="204.0" y="565" width="0.5" height="15.0" fill="rgb(205,156,11)" rx="2" ry="2" />
<text  x="207.02" y="575.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (1 samples, 0.04%)</title><rect x="100.6" y="677" width="0.6" height="15.0" fill="rgb(223,163,40)" rx="2" ry="2" />
<text  x="103.65" y="687.5" ></text>
</g>
<g >
<title>c10::str&lt;char [15], char const*, char [2], unsigned int&gt; (1 samples, 0.04%)</title><rect x="192.9" y="517" width="0.5" height="15.0" fill="rgb(229,33,26)" rx="2" ry="2" />
<text  x="195.88" y="527.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;short&gt; (1 samples, 0.04%)</title><rect x="505.6" y="501" width="0.6" height="15.0" fill="rgb(230,223,24)" rx="2" ry="2" />
<text  x="508.64" y="511.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (1 samples, 0.04%)</title><rect x="262.9" y="581" width="0.5" height="15.0" fill="rgb(213,95,16)" rx="2" ry="2" />
<text  x="265.86" y="591.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (1 samples, 0.04%)</title><rect x="272.9" y="581" width="0.6" height="15.0" fill="rgb(215,69,18)" rx="2" ry="2" />
<text  x="275.93" y="591.5" ></text>
</g>
<g >
<title>c10::Dispatcher::findOrRegisterName_ (1 samples, 0.04%)</title><rect x="286.2" y="581" width="0.5" height="15.0" fill="rgb(239,207,53)" rx="2" ry="2" />
<text  x="289.18" y="591.5" ></text>
</g>
<g >
<title>c10::OperatorName::setNamespaceIfNotSet (1 samples, 0.04%)</title><rect x="200.8" y="533" width="0.6" height="15.0" fill="rgb(247,40,38)" rx="2" ry="2" />
<text  x="203.84" y="543.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.04%)</title><rect x="700.7" y="453" width="0.5" height="15.0" fill="rgb(227,118,42)" rx="2" ry="2" />
<text  x="703.72" y="463.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_jit_avx_f32_copy_bt_kern_autogen.cpp (1 samples, 0.04%)</title><rect x="263.9" y="629" width="0.5" height="15.0" fill="rgb(236,98,40)" rx="2" ry="2" />
<text  x="266.92" y="639.5" ></text>
</g>
<g >
<title>c10::KernelFunction::call&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::TensorOptions const&amp;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (291 samples, 13.07%)</title><rect x="947.7" y="517" width="154.3" height="15.0" fill="rgb(253,143,21)" rx="2" ry="2" />
<text  x="950.74" y="527.5" >c10::KernelFunction..</text>
</g>
<g >
<title>c10::detail::getTypePtr_&lt;c10::optional&lt;at::Tensor&gt; &gt;::call (1 samples, 0.04%)</title><rect x="179.6" y="453" width="0.6" height="15.0" fill="rgb(214,107,34)" rx="2" ry="2" />
<text  x="182.63" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str (1 samples, 0.04%)</title><rect x="192.9" y="469" width="0.5" height="15.0" fill="rgb(221,185,2)" rx="2" ry="2" />
<text  x="195.88" y="479.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="108.6" y="517" width="0.5" height="15.0" fill="rgb(249,172,5)" rx="2" ry="2" />
<text  x="111.60" y="527.5" ></text>
</g>
<g >
<title>c10::TypedOperatorHandle&lt;at::Tensor  (313 samples, 14.06%)</title><rect x="937.1" y="565" width="166.0" height="15.0" fill="rgb(220,122,54)" rx="2" ry="2" />
<text  x="940.14" y="575.5" >c10::TypedOperatorHan..</text>
</g>
<g >
<title>std::__cxx11::list&lt;c10::Dispatcher::OperatorDef, std::allocator&lt;c10::Dispatcher::OperatorDef&gt; &gt;::_M_create_node&lt;c10::OperatorName&gt; (3 samples, 0.13%)</title><rect x="180.7" y="469" width="1.6" height="15.0" fill="rgb(224,71,5)" rx="2" ry="2" />
<text  x="183.69" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_ostringstream (1 samples, 0.04%)</title><rect x="254.9" y="469" width="0.5" height="15.0" fill="rgb(227,78,44)" rx="2" ry="2" />
<text  x="257.91" y="479.5" ></text>
</g>
<g >
<title>std::locale::locale (1 samples, 0.04%)</title><rect x="177.5" y="485" width="0.5" height="15.0" fill="rgb(221,53,42)" rx="2" ry="2" />
<text  x="180.51" y="495.5" ></text>
</g>
<g >
<title>__sti____cudaRegisterAll (7 samples, 0.31%)</title><rect x="292.0" y="613" width="3.7" height="15.0" fill="rgb(236,11,39)" rx="2" ry="2" />
<text  x="295.01" y="623.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::expect (1 samples, 0.04%)</title><rect x="201.4" y="453" width="0.5" height="15.0" fill="rgb(245,205,29)" rx="2" ry="2" />
<text  x="204.37" y="463.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="276.1" y="469" width="0.5" height="15.0" fill="rgb(229,187,19)" rx="2" ry="2" />
<text  x="279.11" y="479.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.04%)</title><rect x="176.5" y="389" width="0.5" height="15.0" fill="rgb(245,99,35)" rx="2" ry="2" />
<text  x="179.45" y="399.5" ></text>
</g>
<g >
<title>at::native::compute_cpu_capability (1 samples, 0.04%)</title><rect x="197.7" y="549" width="0.5" height="15.0" fill="rgb(246,75,48)" rx="2" ry="2" />
<text  x="200.65" y="559.5" ></text>
</g>
<g >
<title>c10::findSchemaDifferences[abi:cxx11] (1 samples, 0.04%)</title><rect x="206.1" y="485" width="0.6" height="15.0" fill="rgb(211,124,33)" rx="2" ry="2" />
<text  x="209.14" y="495.5" ></text>
</g>
<g >
<title>c10::inferFunctionSchemaFlattenedReturns&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;  (1 samples, 0.04%)</title><rect x="285.7" y="533" width="0.5" height="15.0" fill="rgb(234,222,4)" rx="2" ry="2" />
<text  x="288.65" y="543.5" ></text>
</g>
<g >
<title>alloc_set_pte (2 samples, 0.09%)</title><rect x="1154.0" y="437" width="1.0" height="15.0" fill="rgb(233,21,46)" rx="2" ry="2" />
<text  x="1156.95" y="447.5" ></text>
</g>
<g >
<title>[microbenchmark] (2 samples, 0.09%)</title><rect x="499.8" y="581" width="1.1" height="15.0" fill="rgb(234,222,43)" rx="2" ry="2" />
<text  x="502.81" y="591.5" ></text>
</g>
<g >
<title>std::make_shared&lt;torch::jit::Source, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.04%)</title><rect x="188.1" y="485" width="0.5" height="15.0" fill="rgb(208,72,19)" rx="2" ry="2" />
<text  x="191.11" y="495.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;c10::Type,  (1 samples, 0.04%)</title><rect x="166.4" y="485" width="0.5" height="15.0" fill="rgb(239,25,20)" rx="2" ry="2" />
<text  x="169.38" y="495.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;std::tuple&lt;at::Tensor, at::Tensor&gt;  (1 samples, 0.04%)</title><rect x="179.6" y="533" width="0.6" height="15.0" fill="rgb(243,36,35)" rx="2" ry="2" />
<text  x="182.63" y="543.5" ></text>
</g>
<g >
<title>TORCH_LIBRARY_IMPL_init_aten_Tracer (1 samples, 0.04%)</title><rect x="203.0" y="581" width="0.5" height="15.0" fill="rgb(239,43,6)" rx="2" ry="2" />
<text  x="205.96" y="591.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_RNN.cpp (2 samples, 0.09%)</title><rect x="195.0" y="629" width="1.1" height="15.0" fill="rgb(208,200,3)" rx="2" ry="2" />
<text  x="198.00" y="639.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (1 samples, 0.04%)</title><rect x="206.7" y="437" width="0.5" height="15.0" fill="rgb(220,143,17)" rx="2" ry="2" />
<text  x="209.67" y="447.5" ></text>
</g>
<g >
<title>page_remove_rmap (3 samples, 0.13%)</title><rect x="1176.7" y="517" width="1.6" height="15.0" fill="rgb(227,26,24)" rx="2" ry="2" />
<text  x="1179.75" y="527.5" ></text>
</g>
<g >
<title>c10::Dispatcher::OperatorDef::OperatorDef (2 samples, 0.09%)</title><rect x="181.2" y="421" width="1.1" height="15.0" fill="rgb(251,30,10)" rx="2" ry="2" />
<text  x="184.22" y="431.5" ></text>
</g>
<g >
<title>torch::jit::SourceRange::SourceRange (1 samples, 0.04%)</title><rect x="266.6" y="357" width="0.5" height="15.0" fill="rgb(227,77,16)" rx="2" ry="2" />
<text  x="269.57" y="367.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;torch::jit::Source, std::allocator&lt;torch::jit::Source&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.04%)</title><rect x="252.8" y="469" width="0.5" height="15.0" fill="rgb(218,117,26)" rx="2" ry="2" />
<text  x="255.79" y="479.5" ></text>
</g>
<g >
<title>c10::make_intrusive&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt;, c10::StorageImpl::use_byte_size_t, long&amp;, c10::DataPtr, c10::Allocator*&amp;, bool&gt; (14 samples, 0.63%)</title><rect x="811.5" y="309" width="7.4" height="15.0" fill="rgb(209,222,43)" rx="2" ry="2" />
<text  x="814.51" y="319.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;torch::jit::Source&gt;::shared_ptr&lt;std::allocator&lt;torch::jit::Source&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.04%)</title><rect x="188.1" y="453" width="0.5" height="15.0" fill="rgb(242,94,52)" rx="2" ry="2" />
<text  x="191.11" y="463.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (1 samples, 0.04%)</title><rect x="293.6" y="405" width="0.5" height="15.0" fill="rgb(246,213,30)" rx="2" ry="2" />
<text  x="296.60" y="415.5" ></text>
</g>
<g >
<title>c10::VariableVersion::~VariableVersion (7 samples, 0.31%)</title><rect x="474.9" y="549" width="3.7" height="15.0" fill="rgb(224,101,22)" rx="2" ry="2" />
<text  x="477.90" y="559.5" ></text>
</g>
<g >
<title>at::autocast::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Autocast (1 samples, 0.04%)</title><rect x="260.7" y="581" width="0.6" height="15.0" fill="rgb(238,218,8)" rx="2" ry="2" />
<text  x="263.74" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (1 samples, 0.04%)</title><rect x="227.3" y="309" width="0.6" height="15.0" fill="rgb(246,37,40)" rx="2" ry="2" />
<text  x="230.34" y="319.5" ></text>
</g>
<g >
<title>tcache_get (1 samples, 0.04%)</title><rect x="501.4" y="549" width="0.5" height="15.0" fill="rgb(212,28,31)" rx="2" ry="2" />
<text  x="504.40" y="559.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTable_@plt (1 samples, 0.04%)</title><rect x="191.3" y="373" width="0.5" height="15.0" fill="rgb(236,13,4)" rx="2" ry="2" />
<text  x="194.29" y="383.5" ></text>
</g>
<g >
<title>torch::jit::parseSchema (1 samples, 0.04%)</title><rect x="153.1" y="661" width="0.6" height="15.0" fill="rgb(249,150,41)" rx="2" ry="2" />
<text  x="156.13" y="671.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.04%)</title><rect x="197.1" y="549" width="0.6" height="15.0" fill="rgb(248,204,30)" rx="2" ry="2" />
<text  x="200.12" y="559.5" ></text>
</g>
<g >
<title>std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~unordered_set (1 samples, 0.04%)</title><rect x="181.8" y="373" width="0.5" height="15.0" fill="rgb(247,192,52)" rx="2" ry="2" />
<text  x="184.75" y="383.5" ></text>
</g>
<g >
<title>c10::Argument::~Argument (2 samples, 0.09%)</title><rect x="319.6" y="165" width="1.0" height="15.0" fill="rgb(238,136,29)" rx="2" ry="2" />
<text  x="322.58" y="175.5" ></text>
</g>
<g >
<title>__x64_sys_brk (1 samples, 0.04%)</title><rect x="231.1" y="165" width="0.5" height="15.0" fill="rgb(226,33,46)" rx="2" ry="2" />
<text  x="234.05" y="175.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (1 samples, 0.04%)</title><rect x="310.0" y="325" width="0.6" height="15.0" fill="rgb(228,135,20)" rx="2" ry="2" />
<text  x="313.04" y="335.5" ></text>
</g>
<g >
<title>c10::SmallVectorTemplateCommon&lt;long, void&gt;::size (1 samples, 0.04%)</title><rect x="1064.9" y="213" width="0.5" height="15.0" fill="rgb(224,81,3)" rx="2" ry="2" />
<text  x="1067.90" y="223.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="243.8" y="389" width="0.5" height="15.0" fill="rgb(244,132,9)" rx="2" ry="2" />
<text  x="246.77" y="399.5" ></text>
</g>
<g >
<title>c10::AliasInfo::AliasInfo (1 samples, 0.04%)</title><rect x="291.5" y="501" width="0.5" height="15.0" fill="rgb(206,165,34)" rx="2" ry="2" />
<text  x="294.48" y="511.5" ></text>
</g>
<g >
<title>__vsnprintf_internal (1 samples, 0.04%)</title><rect x="285.7" y="405" width="0.5" height="15.0" fill="rgb(217,158,53)" rx="2" ry="2" />
<text  x="288.65" y="415.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::operator++ (4 samples, 0.18%)</title><rect x="1096.7" y="277" width="2.1" height="15.0" fill="rgb(211,48,53)" rx="2" ry="2" />
<text  x="1099.70" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;c10::Dispatcher::OperatorDef, std::allocator&lt;c10::Dispatcher::OperatorDef&gt; &gt;::_M_get_node (1 samples, 0.04%)</title><rect x="216.7" y="453" width="0.6" height="15.0" fill="rgb(244,150,22)" rx="2" ry="2" />
<text  x="219.74" y="463.5" ></text>
</g>
<g >
<title>parseDeclarations (1 samples, 0.04%)</title><rect x="153.1" y="629" width="0.6" height="15.0" fill="rgb(217,120,30)" rx="2" ry="2" />
<text  x="156.13" y="639.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.04%)</title><rect x="285.1" y="597" width="0.6" height="15.0" fill="rgb(237,27,44)" rx="2" ry="2" />
<text  x="288.12" y="607.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;int&gt; (1 samples, 0.04%)</title><rect x="706.5" y="389" width="0.6" height="15.0" fill="rgb(229,83,46)" rx="2" ry="2" />
<text  x="709.55" y="399.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.04%)</title><rect x="222.0" y="437" width="0.6" height="15.0" fill="rgb(237,32,15)" rx="2" ry="2" />
<text  x="225.04" y="447.5" ></text>
</g>
<g >
<title>_dl_start (98 samples, 4.40%)</title><rect x="1105.7" y="677" width="52.0" height="15.0" fill="rgb(241,16,22)" rx="2" ry="2" />
<text  x="1108.71" y="687.5" >_dl_s..</text>
</g>
<g >
<title>do_page_fault (1 samples, 0.04%)</title><rect x="256.5" y="389" width="0.5" height="15.0" fill="rgb(231,158,30)" rx="2" ry="2" />
<text  x="259.50" y="399.5" ></text>
</g>
<g >
<title>checked_request2size (1 samples, 0.04%)</title><rect x="400.7" y="245" width="0.5" height="15.0" fill="rgb(211,25,17)" rx="2" ry="2" />
<text  x="403.68" y="255.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.04%)</title><rect x="304.2" y="549" width="0.5" height="15.0" fill="rgb(251,92,6)" rx="2" ry="2" />
<text  x="307.20" y="559.5" ></text>
</g>
<g >
<title>xas_load (1 samples, 0.04%)</title><rect x="174.9" y="453" width="0.5" height="15.0" fill="rgb(231,140,23)" rx="2" ry="2" />
<text  x="177.86" y="463.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.04%)</title><rect x="76.3" y="677" width="0.5" height="15.0" fill="rgb(216,137,21)" rx="2" ry="2" />
<text  x="79.26" y="687.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor&amp;  (1 samples, 0.04%)</title><rect x="196.6" y="533" width="0.5" height="15.0" fill="rgb(251,202,7)" rx="2" ry="2" />
<text  x="199.59" y="543.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.04%)</title><rect x="264.4" y="517" width="0.6" height="15.0" fill="rgb(249,157,0)" rx="2" ry="2" />
<text  x="267.45" y="527.5" ></text>
</g>
<g >
<title>c10::guts::detail::to_string_&lt;unsigned long, void&gt;::call[abi:cxx11] (3 samples, 0.13%)</title><rect x="207.7" y="437" width="1.6" height="15.0" fill="rgb(211,196,47)" rx="2" ry="2" />
<text  x="210.73" y="447.5" ></text>
</g>
<g >
<title>__tls_get_addr@plt (1 samples, 0.04%)</title><rect x="381.6" y="453" width="0.5" height="15.0" fill="rgb(247,111,34)" rx="2" ry="2" />
<text  x="384.60" y="463.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.04%)</title><rect x="325.4" y="405" width="0.5" height="15.0" fill="rgb(227,99,47)" rx="2" ry="2" />
<text  x="328.41" y="415.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;c10::Type,  (1 samples, 0.04%)</title><rect x="176.5" y="421" width="0.5" height="15.0" fill="rgb(234,77,21)" rx="2" ry="2" />
<text  x="179.45" y="431.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseBaseType (1 samples, 0.04%)</title><rect x="169.0" y="533" width="0.6" height="15.0" fill="rgb(233,74,0)" rx="2" ry="2" />
<text  x="172.03" y="543.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::AliasInfo&gt;::optional&lt;c10::AliasInfo, false&gt; (1 samples, 0.04%)</title><rect x="236.9" y="357" width="0.5" height="15.0" fill="rgb(248,66,6)" rx="2" ry="2" />
<text  x="239.88" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;char const*, char const*&gt; &gt; &gt;::allocate (1 samples, 0.04%)</title><rect x="278.2" y="549" width="0.6" height="15.0" fill="rgb(254,204,32)" rx="2" ry="2" />
<text  x="281.23" y="559.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.04%)</title><rect x="266.6" y="453" width="0.5" height="15.0" fill="rgb(246,31,33)" rx="2" ry="2" />
<text  x="269.57" y="463.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (1 samples, 0.04%)</title><rect x="182.8" y="437" width="0.5" height="15.0" fill="rgb(226,189,1)" rx="2" ry="2" />
<text  x="185.81" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="197.7" y="421" width="0.5" height="15.0" fill="rgb(206,78,0)" rx="2" ry="2" />
<text  x="200.65" y="431.5" ></text>
</g>
<g >
<title>_M_manager (1 samples, 0.04%)</title><rect x="281.4" y="485" width="0.5" height="15.0" fill="rgb(240,13,5)" rx="2" ry="2" />
<text  x="284.41" y="495.5" ></text>
</g>
<g >
<title>onnx_torch::GetOpSchema&lt;onnx_torch::SparseLengthsSumFused8BitRowwise_PyTorch_ver1&gt; (1 samples, 0.04%)</title><rect x="269.2" y="533" width="0.5" height="15.0" fill="rgb(224,165,36)" rx="2" ry="2" />
<text  x="272.22" y="543.5" ></text>
</g>
<g >
<title>c10::Registry&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unique_ptr&lt;caffe2::OperatorBase, std::default_delete&lt;caffe2::OperatorBase&gt; &gt;, caffe2::OperatorDef const&amp;, caffe2::Workspace*&gt;::Register (1 samples, 0.04%)</title><rect x="270.3" y="581" width="0.5" height="15.0" fill="rgb(217,95,28)" rx="2" ry="2" />
<text  x="273.28" y="591.5" ></text>
</g>
<g >
<title>c10::SmallVectorBase::SmallVectorBase (1 samples, 0.04%)</title><rect x="957.3" y="325" width="0.5" height="15.0" fill="rgb(249,169,10)" rx="2" ry="2" />
<text  x="960.29" y="335.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::createFunctionSchemaFromTraitsFlattenedReturns&lt;c10::guts::function_traits&lt;c10::intrusive_ptr&lt;LinearPackedParamsBase, c10::detail::intrusive_target_default_null_type&lt;LinearPackedParamsBase&gt; &gt;  (1 samples, 0.04%)</title><rect x="267.6" y="501" width="0.6" height="15.0" fill="rgb(237,53,49)" rx="2" ry="2" />
<text  x="270.63" y="511.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.04%)</title><rect x="189.2" y="325" width="0.5" height="15.0" fill="rgb(206,177,17)" rx="2" ry="2" />
<text  x="192.17" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (1 samples, 0.04%)</title><rect x="275.0" y="501" width="0.6" height="15.0" fill="rgb(227,33,19)" rx="2" ry="2" />
<text  x="278.05" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1 samples, 0.04%)</title><rect x="324.9" y="357" width="0.5" height="15.0" fill="rgb(234,155,20)" rx="2" ry="2" />
<text  x="327.88" y="367.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt;::~pair (1 samples, 0.04%)</title><rect x="311.6" y="389" width="0.6" height="15.0" fill="rgb(232,151,54)" rx="2" ry="2" />
<text  x="314.63" y="399.5" ></text>
</g>
<g >
<title>c10::memoryProfilingEnabled (8 samples, 0.36%)</title><rect x="1005.0" y="277" width="4.2" height="15.0" fill="rgb(220,81,53)" rx="2" ry="2" />
<text  x="1008.00" y="287.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.04%)</title><rect x="190.2" y="181" width="0.6" height="15.0" fill="rgb(217,213,30)" rx="2" ry="2" />
<text  x="193.23" y="191.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.04%)</title><rect x="113.9" y="405" width="0.5" height="15.0" fill="rgb(248,20,1)" rx="2" ry="2" />
<text  x="116.90" y="415.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.04%)</title><rect x="267.6" y="389" width="0.6" height="15.0" fill="rgb(248,153,50)" rx="2" ry="2" />
<text  x="270.63" y="399.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTable_ (1 samples, 0.04%)</title><rect x="256.0" y="501" width="0.5" height="15.0" fill="rgb(238,78,39)" rx="2" ry="2" />
<text  x="258.97" y="511.5" ></text>
</g>
<g >
<title>c10::constexpr_storage_t&lt;c10::impl::CppSignature&gt;::constexpr_storage_t&lt;c10::impl::CppSignature&gt; (1 samples, 0.04%)</title><rect x="180.2" y="517" width="0.5" height="15.0" fill="rgb(241,11,49)" rx="2" ry="2" />
<text  x="183.16" y="527.5" ></text>
</g>
<g >
<title>[microbenchmark] (2 samples, 0.09%)</title><rect x="930.8" y="565" width="1.0" height="15.0" fill="rgb(210,61,15)" rx="2" ry="2" />
<text  x="933.78" y="575.5" ></text>
</g>
<g >
<title>c10::TensorOptions::device&lt;c10::DeviceType const&amp;, int&gt; (21 samples, 0.94%)</title><rect x="874.1" y="613" width="11.1" height="15.0" fill="rgb(253,208,44)" rx="2" ry="2" />
<text  x="877.06" y="623.5" ></text>
</g>
<g >
<title>do_syscall_64 (24 samples, 1.08%)</title><rect x="1168.3" y="677" width="12.7" height="15.0" fill="rgb(246,196,18)" rx="2" ry="2" />
<text  x="1171.27" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.04%)</title><rect x="191.8" y="373" width="0.6" height="15.0" fill="rgb(235,128,44)" rx="2" ry="2" />
<text  x="194.82" y="383.5" ></text>
</g>
<g >
<title>c10::DispatchKeyExtractor::setOperatorHasFallthroughForKey (1 samples, 0.04%)</title><rect x="210.4" y="373" width="0.5" height="15.0" fill="rgb(251,81,34)" rx="2" ry="2" />
<text  x="213.38" y="383.5" ></text>
</g>
<g >
<title>c10::ProfiledCPUMemoryReporter::New (8 samples, 0.36%)</title><rect x="749.5" y="293" width="4.2" height="15.0" fill="rgb(221,6,46)" rx="2" ry="2" />
<text  x="752.49" y="303.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="274.5" y="389" width="0.5" height="15.0" fill="rgb(222,164,43)" rx="2" ry="2" />
<text  x="277.52" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt;::allocate (1 samples, 0.04%)</title><rect x="272.9" y="517" width="0.6" height="15.0" fill="rgb(217,106,33)" rx="2" ry="2" />
<text  x="275.93" y="527.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_TraceType_0.cpp (3 samples, 0.13%)</title><rect x="198.2" y="629" width="1.6" height="15.0" fill="rgb(223,86,11)" rx="2" ry="2" />
<text  x="201.19" y="639.5" ></text>
</g>
<g >
<title>c10::SmallVectorTemplateCommon&lt;unsigned long, void&gt;::SmallVectorTemplateCommon (1 samples, 0.04%)</title><rect x="532.1" y="357" width="0.6" height="15.0" fill="rgb(207,50,14)" rx="2" ry="2" />
<text  x="535.15" y="367.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_tmpxft_0001b5ef_00000000_6_asin_op.compute_70.cudafe1.cpp (1 samples, 0.04%)</title><rect x="270.3" y="629" width="0.5" height="15.0" fill="rgb(208,23,37)" rx="2" ry="2" />
<text  x="273.28" y="639.5" ></text>
</g>
<g >
<title>parseDeclaration (2 samples, 0.09%)</title><rect x="166.4" y="613" width="1.0" height="15.0" fill="rgb(248,227,45)" rx="2" ry="2" />
<text  x="169.38" y="623.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (1 samples, 0.04%)</title><rect x="256.5" y="469" width="0.5" height="15.0" fill="rgb(212,2,21)" rx="2" ry="2" />
<text  x="259.50" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::substr (4 samples, 0.18%)</title><rect x="237.9" y="341" width="2.2" height="15.0" fill="rgb(222,56,30)" rx="2" ry="2" />
<text  x="240.94" y="351.5" ></text>
</g>
<g >
<title>[libc10.so] (3 samples, 0.13%)</title><rect x="744.2" y="277" width="1.6" height="15.0" fill="rgb(207,20,10)" rx="2" ry="2" />
<text  x="747.19" y="287.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.04%)</title><rect x="269.2" y="453" width="0.5" height="15.0" fill="rgb(213,0,39)" rx="2" ry="2" />
<text  x="272.22" y="463.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.04%)</title><rect x="180.7" y="213" width="0.5" height="15.0" fill="rgb(210,172,3)" rx="2" ry="2" />
<text  x="183.69" y="223.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.04%)</title><rect x="469.6" y="533" width="0.5" height="15.0" fill="rgb(254,16,17)" rx="2" ry="2" />
<text  x="472.60" y="543.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::intrusive_ptr (1 samples, 0.04%)</title><rect x="914.9" y="533" width="0.5" height="15.0" fill="rgb(229,177,36)" rx="2" ry="2" />
<text  x="917.88" y="543.5" ></text>
</g>
<g >
<title>TORCH_LIBRARY_IMPL_init_aten_Tracer (1 samples, 0.04%)</title><rect x="199.8" y="581" width="0.5" height="15.0" fill="rgb(222,97,12)" rx="2" ry="2" />
<text  x="202.78" y="591.5" ></text>
</g>
<g >
<title>at::hasCallbacks (2 samples, 0.09%)</title><rect x="711.9" y="357" width="1.0" height="15.0" fill="rgb(219,14,36)" rx="2" ry="2" />
<text  x="714.85" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::reserve (1 samples, 0.04%)</title><rect x="185.5" y="453" width="0.5" height="15.0" fill="rgb(213,208,22)" rx="2" ry="2" />
<text  x="188.46" y="463.5" ></text>
</g>
<g >
<title>c10::KernelFunction::operator= (2 samples, 0.09%)</title><rect x="316.4" y="341" width="1.1" height="15.0" fill="rgb(241,175,44)" rx="2" ry="2" />
<text  x="319.40" y="351.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="1109.4" y="437" width="0.6" height="15.0" fill="rgb(228,157,26)" rx="2" ry="2" />
<text  x="1112.42" y="447.5" ></text>
</g>
<g >
<title>at::TORCH_LIBRARY_IMPL_init_aten_Batched (3 samples, 0.13%)</title><rect x="176.5" y="581" width="1.5" height="15.0" fill="rgb(207,171,48)" rx="2" ry="2" />
<text  x="179.45" y="591.5" ></text>
</g>
<g >
<title>c10::TensorImpl::set_sizes_contiguous (25 samples, 1.12%)</title><rect x="1053.8" y="309" width="13.2" height="15.0" fill="rgb(229,41,35)" rx="2" ry="2" />
<text  x="1056.76" y="319.5" ></text>
</g>
<g >
<title>c10::TensorImpl::set_sizes_contiguous (15 samples, 0.67%)</title><rect x="428.2" y="325" width="8.0" height="15.0" fill="rgb(254,131,36)" rx="2" ry="2" />
<text  x="431.25" y="335.5" ></text>
</g>
<g >
<title>at::Tensor::Tensor (1 samples, 0.04%)</title><rect x="497.2" y="597" width="0.5" height="15.0" fill="rgb(228,35,52)" rx="2" ry="2" />
<text  x="500.16" y="607.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.09%)</title><rect x="400.2" y="277" width="1.0" height="15.0" fill="rgb(229,193,52)" rx="2" ry="2" />
<text  x="403.15" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::emplace_back&lt;c10::Argument&gt; (1 samples, 0.04%)</title><rect x="177.0" y="437" width="0.5" height="15.0" fill="rgb(206,207,48)" rx="2" ry="2" />
<text  x="179.98" y="447.5" ></text>
</g>
<g >
<title>torch::Library::_def (18 samples, 0.81%)</title><rect x="215.7" y="549" width="9.5" height="15.0" fill="rgb(206,142,20)" rx="2" ry="2" />
<text  x="218.68" y="559.5" ></text>
</g>
<g >
<title>c10::Dispatcher::findOrRegisterName_ (7 samples, 0.31%)</title><rect x="215.7" y="517" width="3.7" height="15.0" fill="rgb(229,84,27)" rx="2" ry="2" />
<text  x="218.68" y="527.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="221.5" y="373" width="0.5" height="15.0" fill="rgb(218,170,3)" rx="2" ry="2" />
<text  x="224.51" y="383.5" ></text>
</g>
<g >
<title>caffe2::OpSchema::~OpSchema (1 samples, 0.04%)</title><rect x="311.6" y="373" width="0.6" height="15.0" fill="rgb(207,165,16)" rx="2" ry="2" />
<text  x="314.63" y="383.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (1 samples, 0.04%)</title><rect x="224.2" y="469" width="0.5" height="15.0" fill="rgb(229,134,15)" rx="2" ry="2" />
<text  x="227.16" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str (1 samples, 0.04%)</title><rect x="205.1" y="485" width="0.5" height="15.0" fill="rgb(241,96,48)" rx="2" ry="2" />
<text  x="208.08" y="495.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTable_ (2 samples, 0.09%)</title><rect x="14.2" y="677" width="1.1" height="15.0" fill="rgb(207,173,24)" rx="2" ry="2" />
<text  x="17.24" y="687.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.04%)</title><rect x="214.6" y="469" width="0.5" height="15.0" fill="rgb(249,170,35)" rx="2" ry="2" />
<text  x="217.62" y="479.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::expect (3 samples, 0.13%)</title><rect x="240.1" y="437" width="1.6" height="15.0" fill="rgb(206,192,38)" rx="2" ry="2" />
<text  x="243.06" y="447.5" ></text>
</g>
<g >
<title>c10::detail::UniqueVoidPtr::clear (4 samples, 0.18%)</title><rect x="467.5" y="453" width="2.1" height="15.0" fill="rgb(233,111,17)" rx="2" ry="2" />
<text  x="470.48" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.04%)</title><rect x="284.1" y="597" width="0.5" height="15.0" fill="rgb(232,102,19)" rx="2" ry="2" />
<text  x="287.06" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_List_node&lt;c10::Dispatcher::OperatorDef&gt; &gt;::construct&lt;c10::Dispatcher::OperatorDef, c10::OperatorName&gt; (3 samples, 0.13%)</title><rect x="190.2" y="437" width="1.6" height="15.0" fill="rgb(207,210,28)" rx="2" ry="2" />
<text  x="193.23" y="447.5" ></text>
</g>
<g >
<title>c10::impl::tls_local_dispatch_key_set@plt (1 samples, 0.04%)</title><rect x="697.0" y="485" width="0.5" height="15.0" fill="rgb(211,154,46)" rx="2" ry="2" />
<text  x="700.01" y="495.5" ></text>
</g>
<g >
<title>torch::Library::def&lt;char const  (6 samples, 0.27%)</title><rect x="210.4" y="565" width="3.2" height="15.0" fill="rgb(248,35,21)" rx="2" ry="2" />
<text  x="213.38" y="575.5" ></text>
</g>
<g >
<title>__static_initialization_and_destruction_0 (12 samples, 0.54%)</title><rect x="108.6" y="677" width="6.4" height="15.0" fill="rgb(205,95,24)" rx="2" ry="2" />
<text  x="111.60" y="687.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTableFull_ (1 samples, 0.04%)</title><rect x="210.4" y="389" width="0.5" height="15.0" fill="rgb(239,198,2)" rx="2" ry="2" />
<text  x="213.38" y="399.5" ></text>
</g>
<g >
<title>c10::SmallVectorTemplateBase&lt;unsigned long, true&gt;::SmallVectorTemplateBase (1 samples, 0.04%)</title><rect x="957.3" y="357" width="0.5" height="15.0" fill="rgb(219,93,49)" rx="2" ry="2" />
<text  x="960.29" y="367.5" ></text>
</g>
<g >
<title>c10::make_intrusive&lt;c10::TensorImpl, c10::detail::intrusive_target_default_null_type&lt;c10::TensorImpl&gt;, c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;, c10::DispatchKey, caffe2::TypeMeta&amp;&gt; (2 samples, 0.09%)</title><rect x="101.2" y="645" width="1.0" height="15.0" fill="rgb(214,145,3)" rx="2" ry="2" />
<text  x="104.18" y="655.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (2 samples, 0.09%)</title><rect x="1176.7" y="501" width="1.1" height="15.0" fill="rgb(222,201,15)" rx="2" ry="2" />
<text  x="1179.75" y="511.5" ></text>
</g>
<g >
<title>onnx_torch::OpSchema::TypeConstraint (1 samples, 0.04%)</title><rect x="269.2" y="501" width="0.5" height="15.0" fill="rgb(232,40,34)" rx="2" ry="2" />
<text  x="272.22" y="511.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.04%)</title><rect x="254.9" y="533" width="0.5" height="15.0" fill="rgb(209,48,31)" rx="2" ry="2" />
<text  x="257.91" y="543.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;c10::Argument&gt; &gt;::allocate (1 samples, 0.04%)</title><rect x="186.0" y="421" width="0.5" height="15.0" fill="rgb(206,195,11)" rx="2" ry="2" />
<text  x="188.99" y="431.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (3 samples, 0.13%)</title><rect x="907.5" y="581" width="1.5" height="15.0" fill="rgb(221,196,45)" rx="2" ry="2" />
<text  x="910.46" y="591.5" ></text>
</g>
<g >
<title>c10::Device::Device (5 samples, 0.22%)</title><rect x="1067.5" y="293" width="2.7" height="15.0" fill="rgb(223,45,6)" rx="2" ry="2" />
<text  x="1070.55" y="303.5" ></text>
</g>
<g >
<title>std::array&lt;c10::KernelFunction, 38ul&gt;::operator[] (1 samples, 0.04%)</title><rect x="594.2" y="405" width="0.5" height="15.0" fill="rgb(209,0,8)" rx="2" ry="2" />
<text  x="597.17" y="415.5" ></text>
</g>
<g >
<title>at::hasCallbacks (4 samples, 0.18%)</title><rect x="699.7" y="501" width="2.1" height="15.0" fill="rgb(223,140,51)" rx="2" ry="2" />
<text  x="702.66" y="511.5" ></text>
</g>
<g >
<title>c10::IValue::~IValue (1 samples, 0.04%)</title><rect x="320.1" y="117" width="0.5" height="15.0" fill="rgb(210,91,48)" rx="2" ry="2" />
<text  x="323.11" y="127.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.04%)</title><rect x="166.4" y="469" width="0.5" height="15.0" fill="rgb(237,11,48)" rx="2" ry="2" />
<text  x="169.38" y="479.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.04%)</title><rect x="648.8" y="565" width="0.5" height="15.0" fill="rgb(239,175,21)" rx="2" ry="2" />
<text  x="651.77" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int&gt; (1 samples, 0.04%)</title><rect x="258.6" y="437" width="0.5" height="15.0" fill="rgb(240,125,52)" rx="2" ry="2" />
<text  x="261.62" y="447.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="284.6" y="453" width="0.5" height="15.0" fill="rgb(254,188,21)" rx="2" ry="2" />
<text  x="287.59" y="463.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.04%)</title><rect x="222.0" y="421" width="0.6" height="15.0" fill="rgb(208,2,6)" rx="2" ry="2" />
<text  x="225.04" y="431.5" ></text>
</g>
<g >
<title>_int_free (3 samples, 0.13%)</title><rect x="477.0" y="501" width="1.6" height="15.0" fill="rgb(235,97,31)" rx="2" ry="2" />
<text  x="480.02" y="511.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_Dimname.cpp (2 samples, 0.09%)</title><rect x="189.2" y="629" width="1.0" height="15.0" fill="rgb(208,191,46)" rx="2" ry="2" />
<text  x="192.17" y="639.5" ></text>
</g>
<g >
<title>handle_mm_fault (7 samples, 0.31%)</title><rect x="1151.8" y="501" width="3.7" height="15.0" fill="rgb(236,118,22)" rx="2" ry="2" />
<text  x="1154.83" y="511.5" ></text>
</g>
<g >
<title>caffe2::_c10_ops::schema_GenerateProposals2 (1 samples, 0.04%)</title><rect x="280.9" y="613" width="0.5" height="15.0" fill="rgb(229,2,11)" rx="2" ry="2" />
<text  x="283.88" y="623.5" ></text>
</g>
<g >
<title>c10::str&lt;char [15], char const*, char [2], unsigned int&gt; (1 samples, 0.04%)</title><rect x="252.3" y="517" width="0.5" height="15.0" fill="rgb(241,66,25)" rx="2" ry="2" />
<text  x="255.26" y="527.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::operator++ (2 samples, 0.09%)</title><rect x="984.9" y="165" width="1.0" height="15.0" fill="rgb(243,48,4)" rx="2" ry="2" />
<text  x="987.85" y="175.5" ></text>
</g>
<g >
<title>c10::detail::getTypePtr_&lt;c10::List&lt;c10::List&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::call (1 samples, 0.04%)</title><rect x="108.6" y="565" width="0.5" height="15.0" fill="rgb(212,155,31)" rx="2" ry="2" />
<text  x="111.60" y="575.5" ></text>
</g>
<g >
<title>std::function&lt;int  (1 samples, 0.04%)</title><rect x="279.3" y="549" width="0.5" height="15.0" fill="rgb(250,186,41)" rx="2" ry="2" />
<text  x="282.29" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (1 samples, 0.04%)</title><rect x="296.3" y="373" width="0.5" height="15.0" fill="rgb(231,161,23)" rx="2" ry="2" />
<text  x="299.25" y="383.5" ></text>
</g>
<g >
<title>SchemaParser (3 samples, 0.13%)</title><rect x="227.3" y="485" width="1.6" height="15.0" fill="rgb(209,160,30)" rx="2" ry="2" />
<text  x="230.34" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (3 samples, 0.13%)</title><rect x="1106.8" y="453" width="1.6" height="15.0" fill="rgb(210,216,38)" rx="2" ry="2" />
<text  x="1109.77" y="463.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.04%)</title><rect x="106.5" y="517" width="0.5" height="15.0" fill="rgb(218,47,19)" rx="2" ry="2" />
<text  x="109.48" y="527.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="181.2" y="213" width="0.6" height="15.0" fill="rgb(225,111,7)" rx="2" ry="2" />
<text  x="184.22" y="223.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.04%)</title><rect x="106.5" y="533" width="0.5" height="15.0" fill="rgb(240,189,13)" rx="2" ry="2" />
<text  x="109.48" y="543.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, true&gt; &gt; &gt;::deallocate (1 samples, 0.04%)</title><rect x="181.8" y="277" width="0.5" height="15.0" fill="rgb(218,217,40)" rx="2" ry="2" />
<text  x="184.75" y="287.5" ></text>
</g>
<g >
<title>torch::CppFunction::CppFunction&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor  (1 samples, 0.04%)</title><rect x="213.6" y="549" width="0.5" height="15.0" fill="rgb(205,215,26)" rx="2" ry="2" />
<text  x="216.56" y="559.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.04%)</title><rect x="169.0" y="485" width="0.6" height="15.0" fill="rgb(231,10,23)" rx="2" ry="2" />
<text  x="172.03" y="495.5" ></text>
</g>
<g >
<title>c10::demangle_type&lt;caffe2::RmsPropOp&lt;float, caffe2::CPUContext&gt; &gt; (1 samples, 0.04%)</title><rect x="276.1" y="613" width="0.5" height="15.0" fill="rgb(248,35,52)" rx="2" ry="2" />
<text  x="279.11" y="623.5" ></text>
</g>
<g >
<title>_IO_no_init (1 samples, 0.04%)</title><rect x="208.3" y="373" width="0.5" height="15.0" fill="rgb(222,1,32)" rx="2" ry="2" />
<text  x="211.26" y="383.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="277.7" y="549" width="0.5" height="15.0" fill="rgb(254,204,7)" rx="2" ry="2" />
<text  x="280.70" y="559.5" ></text>
</g>
<g >
<title>c10::Argument::type (1 samples, 0.04%)</title><rect x="267.6" y="437" width="0.6" height="15.0" fill="rgb(238,123,5)" rx="2" ry="2" />
<text  x="270.63" y="447.5" ></text>
</g>
<g >
<title>at::AutoNonVariableTypeMode::AutoNonVariableTypeMode (1 samples, 0.04%)</title><rect x="158.4" y="629" width="0.6" height="15.0" fill="rgb(220,39,1)" rx="2" ry="2" />
<text  x="161.43" y="639.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, torch::CppFunction&gt; (2 samples, 0.09%)</title><rect x="193.9" y="565" width="1.1" height="15.0" fill="rgb(218,13,27)" rx="2" ry="2" />
<text  x="196.94" y="575.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="272.9" y="453" width="0.6" height="15.0" fill="rgb(219,4,14)" rx="2" ry="2" />
<text  x="275.93" y="463.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::Registerer::op (4 samples, 0.18%)</title><rect x="111.2" y="661" width="2.2" height="15.0" fill="rgb(240,134,12)" rx="2" ry="2" />
<text  x="114.25" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_ostringstream (1 samples, 0.04%)</title><rect x="183.9" y="485" width="0.5" height="15.0" fill="rgb(250,159,14)" rx="2" ry="2" />
<text  x="186.87" y="495.5" ></text>
</g>
<g >
<title>__brk (1 samples, 0.04%)</title><rect x="243.8" y="277" width="0.5" height="15.0" fill="rgb(207,107,26)" rx="2" ry="2" />
<text  x="246.77" y="287.5" ></text>
</g>
<g >
<title>parseList (21 samples, 0.94%)</title><rect x="228.9" y="453" width="11.2" height="15.0" fill="rgb(219,72,28)" rx="2" ry="2" />
<text  x="231.93" y="463.5" ></text>
</g>
<g >
<title>__static_initialization_and_destruction_0 (6 samples, 0.27%)</title><rect x="207.2" y="613" width="3.2" height="15.0" fill="rgb(215,64,14)" rx="2" ry="2" />
<text  x="210.20" y="623.5" ></text>
</g>
<g >
<title>c10::TensorOptions::device (8 samples, 0.36%)</title><rect x="349.3" y="613" width="4.2" height="15.0" fill="rgb(231,223,6)" rx="2" ry="2" />
<text  x="352.26" y="623.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTable_ (1 samples, 0.04%)</title><rect x="253.8" y="501" width="0.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="256.85" y="511.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.04%)</title><rect x="226.3" y="325" width="0.5" height="15.0" fill="rgb(221,79,48)" rx="2" ry="2" />
<text  x="229.28" y="335.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;c10::OperatorKernel&gt;::operator= (1 samples, 0.04%)</title><rect x="257.6" y="469" width="0.5" height="15.0" fill="rgb(211,126,37)" rx="2" ry="2" />
<text  x="260.56" y="479.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;torch::jit::Source&gt;::shared_ptr&lt;std::allocator&lt;torch::jit::Source&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.04%)</title><rect x="227.3" y="437" width="0.6" height="15.0" fill="rgb(229,73,30)" rx="2" ry="2" />
<text  x="230.34" y="447.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (30 samples, 1.35%)</title><rect x="227.3" y="501" width="15.9" height="15.0" fill="rgb(241,90,29)" rx="2" ry="2" />
<text  x="230.34" y="511.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.04%)</title><rect x="229.5" y="149" width="0.5" height="15.0" fill="rgb(227,124,5)" rx="2" ry="2" />
<text  x="232.46" y="159.5" ></text>
</g>
<g >
<title>~&lt;lambda&gt; (1 samples, 0.04%)</title><rect x="324.9" y="389" width="0.5" height="15.0" fill="rgb(230,22,53)" rx="2" ry="2" />
<text  x="327.88" y="399.5" ></text>
</g>
<g >
<title>c10::TensorOptions::TensorOptions (1 samples, 0.04%)</title><rect x="157.9" y="645" width="0.5" height="15.0" fill="rgb(228,221,23)" rx="2" ry="2" />
<text  x="160.90" y="655.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (3 samples, 0.13%)</title><rect x="169.6" y="581" width="1.6" height="15.0" fill="rgb(229,171,54)" rx="2" ry="2" />
<text  x="172.56" y="591.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseAliasAnnotation (1 samples, 0.04%)</title><rect x="232.1" y="389" width="0.5" height="15.0" fill="rgb(254,167,21)" rx="2" ry="2" />
<text  x="235.11" y="399.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="308.4" y="533" width="0.6" height="15.0" fill="rgb(214,222,16)" rx="2" ry="2" />
<text  x="311.45" y="543.5" ></text>
</g>
<g >
<title>__brk (1 samples, 0.04%)</title><rect x="231.1" y="213" width="0.5" height="15.0" fill="rgb(218,84,29)" rx="2" ry="2" />
<text  x="234.05" y="223.5" ></text>
</g>
<g >
<title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;, c10::DispatchKey, std::hash&lt;c10::DispatchKey&gt;, ska::detailv3::KeyOrValueHasher&lt;c10::DispatchKey, std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;, std::hash&lt;c10::DispatchKey&gt; &gt;, std::equal_to&lt;c10::DispatchKey&gt;, ska::detailv3::KeyOrValueEquality&lt;c10::DispatchKey, std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;, std::equal_to&lt;c10::DispatchKey&gt; &gt;, std::allocator&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt; &gt; &gt; &gt;::deallocate_data (1 samples, 0.04%)</title><rect x="314.8" y="245" width="0.5" height="15.0" fill="rgb(251,38,40)" rx="2" ry="2" />
<text  x="317.81" y="255.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.04%)</title><rect x="262.3" y="517" width="0.6" height="15.0" fill="rgb(226,86,51)" rx="2" ry="2" />
<text  x="265.33" y="527.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTable_ (1 samples, 0.04%)</title><rect x="257.6" y="501" width="0.5" height="15.0" fill="rgb(219,65,34)" rx="2" ry="2" />
<text  x="260.56" y="511.5" ></text>
</g>
<g >
<title>perf_iterate_sb (1 samples, 0.04%)</title><rect x="1107.8" y="357" width="0.6" height="15.0" fill="rgb(229,149,3)" rx="2" ry="2" />
<text  x="1110.83" y="367.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="210.9" y="245" width="0.5" height="15.0" fill="rgb(242,53,20)" rx="2" ry="2" />
<text  x="213.91" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.04%)</title><rect x="244.3" y="517" width="0.5" height="15.0" fill="rgb(247,10,3)" rx="2" ry="2" />
<text  x="247.30" y="527.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="956.2" y="325" width="0.6" height="15.0" fill="rgb(238,91,51)" rx="2" ry="2" />
<text  x="959.23" y="335.5" ></text>
</g>
<g >
<title>at::hasCallbacks (6 samples, 0.27%)</title><rect x="385.3" y="389" width="3.2" height="15.0" fill="rgb(213,157,45)" rx="2" ry="2" />
<text  x="388.31" y="399.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (1 samples, 0.04%)</title><rect x="206.7" y="421" width="0.5" height="15.0" fill="rgb(229,74,44)" rx="2" ry="2" />
<text  x="209.67" y="431.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;short&gt; (1 samples, 0.04%)</title><rect x="707.6" y="389" width="0.5" height="15.0" fill="rgb(228,98,27)" rx="2" ry="2" />
<text  x="710.61" y="399.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;c10::Argument*, c10::Argument&gt; (2 samples, 0.09%)</title><rect x="319.6" y="229" width="1.0" height="15.0" fill="rgb(207,154,28)" rx="2" ry="2" />
<text  x="322.58" y="239.5" ></text>
</g>
<g >
<title>__sti____cudaRegisterAll (1 samples, 0.04%)</title><rect x="24.8" y="677" width="0.6" height="15.0" fill="rgb(254,224,21)" rx="2" ry="2" />
<text  x="27.84" y="687.5" ></text>
</g>
<g >
<title>error_entry (1 samples, 0.04%)</title><rect x="162.1" y="581" width="0.6" height="15.0" fill="rgb(215,23,2)" rx="2" ry="2" />
<text  x="165.14" y="591.5" ></text>
</g>
<g >
<title>at::empty (1 samples, 0.04%)</title><rect x="520.0" y="517" width="0.5" height="15.0" fill="rgb(245,91,23)" rx="2" ry="2" />
<text  x="522.96" y="527.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::VariableVersion::VersionCounter, c10::detail::intrusive_target_default_null_type&lt;c10::VariableVersion::VersionCounter&gt; &gt;::reset_ (17 samples, 0.76%)</title><rect x="339.2" y="517" width="9.0" height="15.0" fill="rgb(213,65,54)" rx="2" ry="2" />
<text  x="342.19" y="527.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.04%)</title><rect x="307.9" y="549" width="0.5" height="15.0" fill="rgb(210,147,14)" rx="2" ry="2" />
<text  x="310.92" y="559.5" ></text>
</g>
<g >
<title>c10::detail::_str_wrapper&lt;char const*, char const* const&amp;, char const*, unsigned int const&amp;&gt;::call[abi:cxx11] (1 samples, 0.04%)</title><rect x="201.9" y="485" width="0.5" height="15.0" fill="rgb(249,119,53)" rx="2" ry="2" />
<text  x="204.90" y="495.5" ></text>
</g>
<g >
<title>__tls_get_addr (2 samples, 0.09%)</title><rect x="1006.1" y="245" width="1.0" height="15.0" fill="rgb(249,223,25)" rx="2" ry="2" />
<text  x="1009.06" y="255.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (1 samples, 0.04%)</title><rect x="170.1" y="469" width="0.5" height="15.0" fill="rgb(239,91,18)" rx="2" ry="2" />
<text  x="173.09" y="479.5" ></text>
</g>
<g >
<title>torch::jit::SourceRange::~SourceRange (1 samples, 0.04%)</title><rect x="259.1" y="421" width="0.6" height="15.0" fill="rgb(239,111,16)" rx="2" ry="2" />
<text  x="262.15" y="431.5" ></text>
</g>
<g >
<title>__static_initialization_and_destruction_0 (1 samples, 0.04%)</title><rect x="175.9" y="613" width="0.6" height="15.0" fill="rgb(225,56,16)" rx="2" ry="2" />
<text  x="178.92" y="623.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.04%)</title><rect x="308.4" y="565" width="0.6" height="15.0" fill="rgb(238,29,34)" rx="2" ry="2" />
<text  x="311.45" y="575.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;c10::IValue, std::allocator&lt;c10::IValue&gt; &gt;::_Vector_impl_data::_Vector_impl_data (2 samples, 0.09%)</title><rect x="715.6" y="341" width="1.0" height="15.0" fill="rgb(212,168,12)" rx="2" ry="2" />
<text  x="718.56" y="351.5" ></text>
</g>
<g >
<title>torch::autograd::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Autograd (4 samples, 0.18%)</title><rect x="257.0" y="581" width="2.1" height="15.0" fill="rgb(213,104,29)" rx="2" ry="2" />
<text  x="260.03" y="591.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.04%)</title><rect x="240.1" y="277" width="0.5" height="15.0" fill="rgb(215,201,27)" rx="2" ry="2" />
<text  x="243.06" y="287.5" ></text>
</g>
<g >
<title>at::Tensor::~Tensor (31 samples, 1.39%)</title><rect x="332.8" y="629" width="16.5" height="15.0" fill="rgb(222,210,36)" rx="2" ry="2" />
<text  x="335.83" y="639.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, caffe2::OpSchema&gt;::pair&lt;caffe2::OpSchema, true&gt; (1 samples, 0.04%)</title><rect x="279.3" y="581" width="0.5" height="15.0" fill="rgb(220,82,36)" rx="2" ry="2" />
<text  x="282.29" y="591.5" ></text>
</g>
<g >
<title>c10::SmallVector&lt;unsigned long, 4u&gt;::SmallVector (1 samples, 0.04%)</title><rect x="523.1" y="517" width="0.6" height="15.0" fill="rgb(226,167,2)" rx="2" ry="2" />
<text  x="526.14" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;c10::Argument&gt;::allocate (1 samples, 0.04%)</title><rect x="243.8" y="405" width="0.5" height="15.0" fill="rgb(239,40,19)" rx="2" ry="2" />
<text  x="246.77" y="415.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (1 samples, 0.04%)</title><rect x="204.0" y="533" width="0.5" height="15.0" fill="rgb(212,169,20)" rx="2" ry="2" />
<text  x="207.02" y="543.5" ></text>
</g>
<g >
<title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;, c10::DispatchKey, std::hash&lt;c10::DispatchKey&gt;, ska::detailv3::KeyOrValueHasher&lt;c10::DispatchKey, std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;, std::hash&lt;c10::DispatchKey&gt; &gt;, std::equal_to&lt;c10::DispatchKey&gt;, ska::detailv3::KeyOrValueEquality&lt;c10::DispatchKey, std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;, std::equal_to&lt;c10::DispatchKey&gt; &gt;, std::allocator&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt; &gt; &gt; &gt;::deallocate_data (1 samples, 0.04%)</title><rect x="321.7" y="277" width="0.5" height="15.0" fill="rgb(225,21,33)" rx="2" ry="2" />
<text  x="324.70" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (1 samples, 0.04%)</title><rect x="291.0" y="517" width="0.5" height="15.0" fill="rgb(239,132,3)" rx="2" ry="2" />
<text  x="293.95" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (1 samples, 0.04%)</title><rect x="201.9" y="373" width="0.5" height="15.0" fill="rgb(248,120,25)" rx="2" ry="2" />
<text  x="204.90" y="383.5" ></text>
</g>
<g >
<title>c10::GetAllocator (2 samples, 0.09%)</title><rect x="1045.8" y="293" width="1.1" height="15.0" fill="rgb(209,212,5)" rx="2" ry="2" />
<text  x="1048.81" y="303.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.04%)</title><rect x="1156.6" y="565" width="0.5" height="15.0" fill="rgb(228,174,31)" rx="2" ry="2" />
<text  x="1159.60" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.04%)</title><rect x="191.8" y="293" width="0.6" height="15.0" fill="rgb(220,69,22)" rx="2" ry="2" />
<text  x="194.82" y="303.5" ></text>
</g>
<g >
<title>try_charge (1 samples, 0.04%)</title><rect x="210.9" y="149" width="0.5" height="15.0" fill="rgb(205,8,35)" rx="2" ry="2" />
<text  x="213.91" y="159.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.04%)</title><rect x="285.7" y="501" width="0.5" height="15.0" fill="rgb(237,8,42)" rx="2" ry="2" />
<text  x="288.65" y="511.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;c10::ThreadLocalDebugInfo&gt;::shared_ptr (3 samples, 0.13%)</title><rect x="630.7" y="325" width="1.6" height="15.0" fill="rgb(239,196,11)" rx="2" ry="2" />
<text  x="633.75" y="335.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;::operator=&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt; (6 samples, 0.27%)</title><rect x="466.4" y="533" width="3.2" height="15.0" fill="rgb(215,125,31)" rx="2" ry="2" />
<text  x="469.42" y="543.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.09%)</title><rect x="1111.0" y="485" width="1.1" height="15.0" fill="rgb(212,118,2)" rx="2" ry="2" />
<text  x="1114.02" y="495.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (74 samples, 3.32%)</title><rect x="610.6" y="581" width="39.2" height="15.0" fill="rgb(211,33,52)" rx="2" ry="2" />
<text  x="613.60" y="591.5" >c10..</text>
</g>
<g >
<title>_GLOBAL__sub_I_TraceType_3.cpp (4 samples, 0.18%)</title><rect x="205.1" y="629" width="2.1" height="15.0" fill="rgb(235,127,36)" rx="2" ry="2" />
<text  x="208.08" y="639.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::MemoryFormat&gt;::optional (1 samples, 0.04%)</title><rect x="452.1" y="581" width="0.5" height="15.0" fill="rgb(223,129,43)" rx="2" ry="2" />
<text  x="455.10" y="591.5" ></text>
</g>
<g >
<title>TORCH_LIBRARY_IMPL_init_aten_CatchAll (1 samples, 0.04%)</title><rect x="268.2" y="581" width="0.5" height="15.0" fill="rgb(241,42,18)" rx="2" ry="2" />
<text  x="271.16" y="591.5" ></text>
</g>
<g >
<title>c10::callUnboxedKernelFunction&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::TensorOptions const&amp;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (130 samples, 5.84%)</title><rect x="382.7" y="517" width="68.9" height="15.0" fill="rgb(246,98,41)" rx="2" ry="2" />
<text  x="385.66" y="527.5" >c10::ca..</text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (1 samples, 0.04%)</title><rect x="260.2" y="229" width="0.5" height="15.0" fill="rgb(225,104,11)" rx="2" ry="2" />
<text  x="263.21" y="239.5" ></text>
</g>
<g >
<title>c10::TensorImpl::refresh_numel (2 samples, 0.09%)</title><rect x="1066.0" y="293" width="1.0" height="15.0" fill="rgb(228,63,45)" rx="2" ry="2" />
<text  x="1068.96" y="303.5" ></text>
</g>
<g >
<title>release_pages (3 samples, 0.13%)</title><rect x="1178.9" y="485" width="1.6" height="15.0" fill="rgb(234,213,34)" rx="2" ry="2" />
<text  x="1181.87" y="495.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="185.5" y="373" width="0.5" height="15.0" fill="rgb(230,205,32)" rx="2" ry="2" />
<text  x="188.46" y="383.5" ></text>
</g>
<g >
<title>c10::KernelFunction::call&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::TensorOptions const&amp;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (132 samples, 5.93%)</title><rect x="525.3" y="533" width="69.9" height="15.0" fill="rgb(233,216,37)" rx="2" ry="2" />
<text  x="528.26" y="543.5" >c10::Ke..</text>
</g>
<g >
<title>checked_request2size (1 samples, 0.04%)</title><rect x="591.0" y="261" width="0.5" height="15.0" fill="rgb(225,41,30)" rx="2" ry="2" />
<text  x="593.99" y="271.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.04%)</title><rect x="227.3" y="405" width="0.6" height="15.0" fill="rgb(239,225,12)" rx="2" ry="2" />
<text  x="230.34" y="415.5" ></text>
</g>
<g >
<title>at::prod_intlist (1 samples, 0.04%)</title><rect x="550.7" y="325" width="0.5" height="15.0" fill="rgb(231,143,0)" rx="2" ry="2" />
<text  x="553.70" y="335.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (2 samples, 0.09%)</title><rect x="255.4" y="533" width="1.1" height="15.0" fill="rgb(241,119,4)" rx="2" ry="2" />
<text  x="258.44" y="543.5" ></text>
</g>
<g >
<title>at::RecordFunction::~RecordFunction (3 samples, 0.13%)</title><rect x="945.6" y="517" width="1.6" height="15.0" fill="rgb(251,200,1)" rx="2" ry="2" />
<text  x="948.62" y="527.5" ></text>
</g>
<g >
<title>THFloatVector_startup::THFloatVector_startup (1 samples, 0.04%)</title><rect x="197.7" y="581" width="0.5" height="15.0" fill="rgb(222,108,31)" rx="2" ry="2" />
<text  x="200.65" y="591.5" ></text>
</g>
<g >
<title>at::hasCallbacks (4 samples, 0.18%)</title><rect x="943.5" y="485" width="2.1" height="15.0" fill="rgb(218,182,53)" rx="2" ry="2" />
<text  x="946.50" y="495.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.09%)</title><rect x="1152.9" y="405" width="1.1" height="15.0" fill="rgb(246,89,4)" rx="2" ry="2" />
<text  x="1155.89" y="415.5" ></text>
</g>
<g >
<title>at::RecordFunction::end (1 samples, 0.04%)</title><rect x="958.9" y="389" width="0.5" height="15.0" fill="rgb(223,154,19)" rx="2" ry="2" />
<text  x="961.88" y="399.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.04%)</title><rect x="302.6" y="693" width="0.5" height="15.0" fill="rgb(235,203,11)" rx="2" ry="2" />
<text  x="305.61" y="703.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.04%)</title><rect x="260.2" y="357" width="0.5" height="15.0" fill="rgb(241,124,11)" rx="2" ry="2" />
<text  x="263.21" y="367.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt;::~pair (1 samples, 0.04%)</title><rect x="110.2" y="661" width="0.5" height="15.0" fill="rgb(213,174,46)" rx="2" ry="2" />
<text  x="113.19" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.04%)</title><rect x="203.5" y="373" width="0.5" height="15.0" fill="rgb(240,24,44)" rx="2" ry="2" />
<text  x="206.49" y="383.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_library.cpp (3 samples, 0.13%)</title><rect x="265.5" y="629" width="1.6" height="15.0" fill="rgb(224,211,24)" rx="2" ry="2" />
<text  x="268.51" y="639.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;c10::Argument*, c10::Argument*, std::allocator&lt;c10::Argument&gt; &gt; (1 samples, 0.04%)</title><rect x="288.8" y="421" width="0.6" height="15.0" fill="rgb(244,177,3)" rx="2" ry="2" />
<text  x="291.83" y="431.5" ></text>
</g>
<g >
<title>c10::TensorImpl::~TensorImpl (2 samples, 0.09%)</title><rect x="86.9" y="677" width="1.0" height="15.0" fill="rgb(243,124,51)" rx="2" ry="2" />
<text  x="89.86" y="687.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.04%)</title><rect x="256.5" y="277" width="0.5" height="15.0" fill="rgb(219,160,24)" rx="2" ry="2" />
<text  x="259.50" y="287.5" ></text>
</g>
<g >
<title>c10::dtype (15 samples, 0.67%)</title><rect x="353.5" y="629" width="8.0" height="15.0" fill="rgb(225,160,6)" rx="2" ry="2" />
<text  x="356.50" y="639.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_VmapModeRegistrations.cpp (1 samples, 0.04%)</title><rect x="259.1" y="613" width="0.6" height="15.0" fill="rgb(223,94,51)" rx="2" ry="2" />
<text  x="262.15" y="623.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="388.0" y="341" width="0.5" height="15.0" fill="rgb(228,87,40)" rx="2" ry="2" />
<text  x="390.96" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt; &gt;::_M_erase (3 samples, 0.13%)</title><rect x="310.6" y="517" width="1.6" height="15.0" fill="rgb(221,39,0)" rx="2" ry="2" />
<text  x="313.57" y="527.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="258.6" y="357" width="0.5" height="15.0" fill="rgb(254,37,5)" rx="2" ry="2" />
<text  x="261.62" y="367.5" ></text>
</g>
<g >
<title>load_elf_binary (3 samples, 0.13%)</title><rect x="1168.3" y="613" width="1.6" height="15.0" fill="rgb(226,101,52)" rx="2" ry="2" />
<text  x="1171.27" y="623.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;void, void  (4 samples, 0.18%)</title><rect x="467.5" y="437" width="2.1" height="15.0" fill="rgb(237,101,49)" rx="2" ry="2" />
<text  x="470.48" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;char const*, char const*&gt; &gt;::allocate (1 samples, 0.04%)</title><rect x="278.2" y="533" width="0.6" height="15.0" fill="rgb(248,84,21)" rx="2" ry="2" />
<text  x="281.23" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, char&gt; (1 samples, 0.04%)</title><rect x="196.6" y="405" width="0.5" height="15.0" fill="rgb(222,119,10)" rx="2" ry="2" />
<text  x="199.59" y="415.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_dropout_op.cc (1 samples, 0.04%)</title><rect x="261.3" y="613" width="0.5" height="15.0" fill="rgb(244,129,2)" rx="2" ry="2" />
<text  x="264.27" y="623.5" ></text>
</g>
<g >
<title>onnx_torch::RegisterPyTorchOperatorSetSchema (1 samples, 0.04%)</title><rect x="269.2" y="581" width="0.5" height="15.0" fill="rgb(206,79,2)" rx="2" ry="2" />
<text  x="272.22" y="591.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, c10::RegistryPriority, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::RegistryPriority&gt; &gt; &gt;::operator[] (1 samples, 0.04%)</title><rect x="184.4" y="549" width="0.5" height="15.0" fill="rgb(211,213,47)" rx="2" ry="2" />
<text  x="187.40" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, true&gt; &gt; &gt;::operator (1 samples, 0.04%)</title><rect x="181.2" y="293" width="0.6" height="15.0" fill="rgb(227,2,38)" rx="2" ry="2" />
<text  x="184.22" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.09%)</title><rect x="1110.0" y="485" width="1.0" height="15.0" fill="rgb(234,43,35)" rx="2" ry="2" />
<text  x="1112.96" y="495.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::OperatorEntry (2 samples, 0.09%)</title><rect x="181.2" y="405" width="1.1" height="15.0" fill="rgb(253,8,52)" rx="2" ry="2" />
<text  x="184.22" y="415.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::detail::intrusive_target_default_null_type&lt;c10::TensorImpl&gt; &gt;::make&lt;c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;, c10::DispatchKey, caffe2::TypeMeta&amp;&gt; (26 samples, 1.17%)</title><rect x="729.9" y="277" width="13.8" height="15.0" fill="rgb(220,169,54)" rx="2" ry="2" />
<text  x="732.87" y="287.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (4 samples, 0.18%)</title><rect x="1178.3" y="501" width="2.2" height="15.0" fill="rgb(210,195,44)" rx="2" ry="2" />
<text  x="1181.34" y="511.5" ></text>
</g>
<g >
<title>c10::Dispatcher::callWithDispatchKey&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::TensorOptions const&amp;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (122 samples, 5.48%)</title><rect x="530.0" y="437" width="64.7" height="15.0" fill="rgb(212,143,29)" rx="2" ry="2" />
<text  x="533.03" y="447.5" >c10::Di..</text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="188.1" y="213" width="0.5" height="15.0" fill="rgb(236,213,14)" rx="2" ry="2" />
<text  x="191.11" y="223.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.04%)</title><rect x="170.6" y="421" width="0.6" height="15.0" fill="rgb(239,144,47)" rx="2" ry="2" />
<text  x="173.62" y="431.5" ></text>
</g>
<g >
<title>c10::GetAllocator (2 samples, 0.09%)</title><rect x="574.0" y="309" width="1.1" height="15.0" fill="rgb(232,121,33)" rx="2" ry="2" />
<text  x="577.03" y="319.5" ></text>
</g>
<g >
<title>c10::detail::UniqueVoidPtr::clear (16 samples, 0.72%)</title><rect x="846.0" y="437" width="8.4" height="15.0" fill="rgb(209,76,4)" rx="2" ry="2" />
<text  x="848.97" y="447.5" ></text>
</g>
<g >
<title>torch::Library::impl_UNBOXED&lt;char const*, at::Tensor&amp;  (1 samples, 0.04%)</title><rect x="254.9" y="565" width="0.5" height="15.0" fill="rgb(210,172,6)" rx="2" ry="2" />
<text  x="257.91" y="575.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="277.7" y="517" width="0.5" height="15.0" fill="rgb(209,155,1)" rx="2" ry="2" />
<text  x="280.70" y="527.5" ></text>
</g>
<g >
<title>sync_regs (1 samples, 0.04%)</title><rect x="1148.1" y="517" width="0.6" height="15.0" fill="rgb(246,49,39)" rx="2" ry="2" />
<text  x="1151.12" y="527.5" ></text>
</g>
<g >
<title>c10::SmallVectorImpl&lt;long&gt;::resize (5 samples, 0.22%)</title><rect x="1057.5" y="293" width="2.6" height="15.0" fill="rgb(237,27,37)" rx="2" ry="2" />
<text  x="1060.48" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;c10::Argument&gt; &gt;::allocate (1 samples, 0.04%)</title><rect x="280.9" y="533" width="0.5" height="15.0" fill="rgb(232,103,21)" rx="2" ry="2" />
<text  x="283.88" y="543.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (2 samples, 0.09%)</title><rect x="247.5" y="533" width="1.0" height="15.0" fill="rgb(212,62,15)" rx="2" ry="2" />
<text  x="250.48" y="543.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.04%)</title><rect x="1109.4" y="501" width="0.6" height="15.0" fill="rgb(228,20,28)" rx="2" ry="2" />
<text  x="1112.42" y="511.5" ></text>
</g>
<g >
<title>torch::jit::Operator::schema (3 samples, 0.13%)</title><rect x="113.4" y="629" width="1.6" height="15.0" fill="rgb(252,125,13)" rx="2" ry="2" />
<text  x="116.37" y="639.5" ></text>
</g>
<g >
<title>micro_requires_grad_true (3 samples, 0.13%)</title><rect x="157.9" y="677" width="1.6" height="15.0" fill="rgb(220,11,0)" rx="2" ry="2" />
<text  x="160.90" y="687.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTableFull_ (1 samples, 0.04%)</title><rect x="248.0" y="501" width="0.5" height="15.0" fill="rgb(230,161,54)" rx="2" ry="2" />
<text  x="251.01" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, true&gt; &gt;::destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="190.2" y="277" width="0.6" height="15.0" fill="rgb(212,160,4)" rx="2" ry="2" />
<text  x="193.23" y="287.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (1 samples, 0.04%)</title><rect x="522.1" y="453" width="0.5" height="15.0" fill="rgb(225,173,2)" rx="2" ry="2" />
<text  x="525.08" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.04%)</title><rect x="276.6" y="533" width="0.6" height="15.0" fill="rgb(239,149,2)" rx="2" ry="2" />
<text  x="279.64" y="543.5" ></text>
</g>
<g >
<title>std::swap&lt;int  (1 samples, 0.04%)</title><rect x="279.3" y="517" width="0.5" height="15.0" fill="rgb(231,201,33)" rx="2" ry="2" />
<text  x="282.29" y="527.5" ></text>
</g>
<g >
<title>c10::AliasInfo::addBeforeSet (1 samples, 0.04%)</title><rect x="212.5" y="293" width="0.5" height="15.0" fill="rgb(252,82,33)" rx="2" ry="2" />
<text  x="215.50" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_ostringstream (1 samples, 0.04%)</title><rect x="206.7" y="469" width="0.5" height="15.0" fill="rgb(250,138,14)" rx="2" ry="2" />
<text  x="209.67" y="479.5" ></text>
</g>
<g >
<title>c10::make_intrusive&lt;c10::TensorImpl, c10::detail::intrusive_target_default_null_type&lt;c10::TensorImpl&gt;, c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;, c10::DispatchKey, caffe2::TypeMeta&amp;&gt; (8 samples, 0.36%)</title><rect x="397.0" y="309" width="4.2" height="15.0" fill="rgb(249,104,13)" rx="2" ry="2" />
<text  x="399.97" y="319.5" ></text>
</g>
<g >
<title>torch::CppFunction::CppFunction&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor&gt;  (1 samples, 0.04%)</title><rect x="179.6" y="549" width="0.6" height="15.0" fill="rgb(225,150,36)" rx="2" ry="2" />
<text  x="182.63" y="559.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::_M_allocate (2 samples, 0.09%)</title><rect x="225.8" y="437" width="1.0" height="15.0" fill="rgb(217,0,5)" rx="2" ry="2" />
<text  x="228.75" y="447.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_autocast_mode.cpp (3 samples, 0.13%)</title><rect x="259.7" y="613" width="1.6" height="15.0" fill="rgb(211,200,22)" rx="2" ry="2" />
<text  x="262.68" y="623.5" ></text>
</g>
<g >
<title>llvm::detail::LeadingZerosCounter&lt;unsigned long, 8ul&gt;::count (1 samples, 0.04%)</title><rect x="697.5" y="453" width="0.6" height="15.0" fill="rgb(214,79,44)" rx="2" ry="2" />
<text  x="700.54" y="463.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (4 samples, 0.18%)</title><rect x="1178.3" y="517" width="2.2" height="15.0" fill="rgb(238,140,40)" rx="2" ry="2" />
<text  x="1181.34" y="527.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (1 samples, 0.04%)</title><rect x="113.9" y="389" width="0.5" height="15.0" fill="rgb(250,198,47)" rx="2" ry="2" />
<text  x="116.90" y="399.5" ></text>
</g>
<g >
<title>c10::impl::tls_local_dispatch_key_set (1 samples, 0.04%)</title><rect x="375.8" y="501" width="0.5" height="15.0" fill="rgb(231,69,5)" rx="2" ry="2" />
<text  x="378.77" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::internal::EpsCopyInputStream::ReadString (1 samples, 0.04%)</title><rect x="296.3" y="437" width="0.5" height="15.0" fill="rgb(235,94,9)" rx="2" ry="2" />
<text  x="299.25" y="447.5" ></text>
</g>
<g >
<title>at::hasCallbacks (5 samples, 0.22%)</title><rect x="711.3" y="373" width="2.7" height="15.0" fill="rgb(252,23,28)" rx="2" ry="2" />
<text  x="714.32" y="383.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (1 samples, 0.04%)</title><rect x="230.0" y="117" width="0.5" height="15.0" fill="rgb(218,162,17)" rx="2" ry="2" />
<text  x="232.99" y="127.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.04%)</title><rect x="272.4" y="357" width="0.5" height="15.0" fill="rgb(248,157,46)" rx="2" ry="2" />
<text  x="275.40" y="367.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (2 samples, 0.09%)</title><rect x="325.4" y="421" width="1.1" height="15.0" fill="rgb(232,92,37)" rx="2" ry="2" />
<text  x="328.41" y="431.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (2 samples, 0.09%)</title><rect x="495.0" y="581" width="1.1" height="15.0" fill="rgb(238,45,48)" rx="2" ry="2" />
<text  x="498.04" y="591.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::shared_ptr&lt;torch::jit::Operator&gt;*&gt; (2 samples, 0.09%)</title><rect x="325.4" y="533" width="1.1" height="15.0" fill="rgb(210,3,49)" rx="2" ry="2" />
<text  x="328.41" y="543.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_rnn.cpp (1 samples, 0.04%)</title><rect x="268.7" y="629" width="0.5" height="15.0" fill="rgb(251,80,42)" rx="2" ry="2" />
<text  x="271.69" y="639.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="752.1" y="245" width="0.6" height="15.0" fill="rgb(253,98,32)" rx="2" ry="2" />
<text  x="755.14" y="255.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (1 samples, 0.04%)</title><rect x="361.5" y="581" width="0.5" height="15.0" fill="rgb(206,6,39)" rx="2" ry="2" />
<text  x="364.46" y="591.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.09%)</title><rect x="317.5" y="309" width="1.0" height="15.0" fill="rgb(206,211,6)" rx="2" ry="2" />
<text  x="320.46" y="319.5" ></text>
</g>
<g >
<title>std::function&lt;void  (3 samples, 0.13%)</title><rect x="288.8" y="517" width="1.6" height="15.0" fill="rgb(250,47,51)" rx="2" ry="2" />
<text  x="291.83" y="527.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="406.5" y="229" width="0.5" height="15.0" fill="rgb(226,165,6)" rx="2" ry="2" />
<text  x="409.51" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;c10::IValue, std::allocator&lt;c10::IValue&gt; &gt;::~_Vector_base (1 samples, 0.04%)</title><rect x="961.0" y="373" width="0.5" height="15.0" fill="rgb(207,56,0)" rx="2" ry="2" />
<text  x="964.00" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;torch::jit::Token, std::allocator&lt;torch::jit::Token&gt; &gt;::erase (1 samples, 0.04%)</title><rect x="240.1" y="405" width="0.5" height="15.0" fill="rgb(223,55,47)" rx="2" ry="2" />
<text  x="243.06" y="415.5" ></text>
</g>
<g >
<title>torch::jit::SourceRange::~SourceRange (1 samples, 0.04%)</title><rect x="193.4" y="373" width="0.5" height="15.0" fill="rgb(235,107,16)" rx="2" ry="2" />
<text  x="196.41" y="383.5" ></text>
</g>
<g >
<title>c10::TensorImpl::set_sizes_contiguous (3 samples, 0.13%)</title><rect x="56.1" y="677" width="1.6" height="15.0" fill="rgb(248,152,3)" rx="2" ry="2" />
<text  x="59.12" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt;@plt (1 samples, 0.04%)</title><rect x="178.0" y="533" width="0.6" height="15.0" fill="rgb(254,165,32)" rx="2" ry="2" />
<text  x="181.04" y="543.5" ></text>
</g>
<g >
<title>c10::DispatchKeySet::operator| (2 samples, 0.09%)</title><rect x="371.5" y="565" width="1.1" height="15.0" fill="rgb(246,177,35)" rx="2" ry="2" />
<text  x="374.53" y="575.5" ></text>
</g>
<g >
<title>torch::jit::parseSchema (1 samples, 0.04%)</title><rect x="169.0" y="677" width="0.6" height="15.0" fill="rgb(250,153,8)" rx="2" ry="2" />
<text  x="172.03" y="687.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.04%)</title><rect x="284.6" y="357" width="0.5" height="15.0" fill="rgb(233,35,48)" rx="2" ry="2" />
<text  x="287.59" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_read (1 samples, 0.04%)</title><rect x="1111.5" y="469" width="0.6" height="15.0" fill="rgb(217,220,35)" rx="2" ry="2" />
<text  x="1114.55" y="479.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_sigmoid_dnnlowp_op.cc (1 samples, 0.04%)</title><rect x="269.7" y="613" width="0.6" height="15.0" fill="rgb(220,20,25)" rx="2" ry="2" />
<text  x="272.75" y="623.5" ></text>
</g>
<g >
<title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;, c10::DispatchKey, std::hash&lt;c10::DispatchKey&gt;, ska::detailv3::KeyOrValueHasher&lt;c10::DispatchKey, std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;, std::hash&lt;c10::DispatchKey&gt; &gt;, std::equal_to&lt;c10::DispatchKey&gt;, ska::detailv3::KeyOrValueEquality&lt;c10::DispatchKey, std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;, std::equal_to&lt;c10::DispatchKey&gt; &gt;, std::allocator&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt; &gt; &gt; &gt;::~sherwood_v3_table (1 samples, 0.04%)</title><rect x="321.7" y="293" width="0.5" height="15.0" fill="rgb(213,27,39)" rx="2" ry="2" />
<text  x="324.70" y="303.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;c10::ThreadLocalDebugInfo&gt;::~shared_ptr (1 samples, 0.04%)</title><rect x="753.2" y="245" width="0.5" height="15.0" fill="rgb(251,194,16)" rx="2" ry="2" />
<text  x="756.20" y="255.5" ></text>
</g>
<g >
<title>std::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1 samples, 0.04%)</title><rect x="203.0" y="517" width="0.5" height="15.0" fill="rgb(245,9,23)" rx="2" ry="2" />
<text  x="205.96" y="527.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.04%)</title><rect x="206.1" y="549" width="0.6" height="15.0" fill="rgb(252,186,21)" rx="2" ry="2" />
<text  x="209.14" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;c10::Dispatcher::OperatorDef, std::allocator&lt;c10::Dispatcher::OperatorDef&gt; &gt;::_M_insert&lt;c10::OperatorName&gt; (1 samples, 0.04%)</title><rect x="210.4" y="485" width="0.5" height="15.0" fill="rgb(218,142,50)" rx="2" ry="2" />
<text  x="213.38" y="495.5" ></text>
</g>
<g >
<title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, c10::OperatorName, std::hash&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueHasher&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::hash&lt;c10::OperatorName&gt; &gt;, std::equal_to&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueEquality&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::equal_to&lt;c10::OperatorName&gt; &gt;, std::allocator&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt; &gt; &gt;::grow (1 samples, 0.04%)</title><rect x="182.3" y="405" width="0.5" height="15.0" fill="rgb(231,144,21)" rx="2" ry="2" />
<text  x="185.28" y="415.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;c10::Argument*&gt; (2 samples, 0.09%)</title><rect x="319.6" y="197" width="1.0" height="15.0" fill="rgb(252,87,31)" rx="2" ry="2" />
<text  x="322.58" y="207.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (1 samples, 0.04%)</title><rect x="75.2" y="677" width="0.5" height="15.0" fill="rgb(237,59,45)" rx="2" ry="2" />
<text  x="78.20" y="687.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseList (2 samples, 0.09%)</title><rect x="112.3" y="485" width="1.1" height="15.0" fill="rgb(245,119,52)" rx="2" ry="2" />
<text  x="115.31" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;c10::Argument&gt;::allocate (4 samples, 0.18%)</title><rect x="229.5" y="341" width="2.1" height="15.0" fill="rgb(215,194,7)" rx="2" ry="2" />
<text  x="232.46" y="351.5" ></text>
</g>
<g >
<title>c10::UndefinedTensorImpl::_singleton (2 samples, 0.09%)</title><rect x="1163.5" y="693" width="1.1" height="15.0" fill="rgb(221,209,25)" rx="2" ry="2" />
<text  x="1166.50" y="703.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseType (1 samples, 0.04%)</title><rect x="169.0" y="549" width="0.6" height="15.0" fill="rgb(236,200,52)" rx="2" ry="2" />
<text  x="172.03" y="559.5" ></text>
</g>
<g >
<title>c10::TensorImpl::TensorImpl (4 samples, 0.18%)</title><rect x="397.0" y="245" width="2.1" height="15.0" fill="rgb(229,148,28)" rx="2" ry="2" />
<text  x="399.97" y="255.5" ></text>
</g>
<g >
<title>operator (2 samples, 0.09%)</title><rect x="215.7" y="469" width="1.0" height="15.0" fill="rgb(238,122,36)" rx="2" ry="2" />
<text  x="218.68" y="479.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, torch::CppFunction&gt; (7 samples, 0.31%)</title><rect x="190.2" y="565" width="3.7" height="15.0" fill="rgb(230,136,21)" rx="2" ry="2" />
<text  x="193.23" y="575.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="201.9" y="357" width="0.5" height="15.0" fill="rgb(214,204,48)" rx="2" ry="2" />
<text  x="204.90" y="367.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::createFunctionSchemaFromTraitsFlattenedReturns&lt;c10::guts::function_traits&lt;at::Tensor  (1 samples, 0.04%)</title><rect x="184.9" y="501" width="0.6" height="15.0" fill="rgb(218,148,53)" rx="2" ry="2" />
<text  x="187.93" y="511.5" ></text>
</g>
<g >
<title>_int_memalign (4 samples, 0.18%)</title><rect x="32.8" y="677" width="2.1" height="15.0" fill="rgb(246,122,20)" rx="2" ry="2" />
<text  x="35.79" y="687.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="398.6" y="181" width="0.5" height="15.0" fill="rgb(228,144,38)" rx="2" ry="2" />
<text  x="401.56" y="191.5" ></text>
</g>
<g >
<title>do_page_fault (3 samples, 0.13%)</title><rect x="292.5" y="517" width="1.6" height="15.0" fill="rgb(218,182,31)" rx="2" ry="2" />
<text  x="295.54" y="527.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;c10::Type,  (1 samples, 0.04%)</title><rect x="212.0" y="341" width="0.5" height="15.0" fill="rgb(245,214,3)" rx="2" ry="2" />
<text  x="214.97" y="351.5" ></text>
</g>
<g >
<title>malloc_consolidate (1 samples, 0.04%)</title><rect x="155.2" y="677" width="0.6" height="15.0" fill="rgb(208,138,35)" rx="2" ry="2" />
<text  x="158.25" y="687.5" ></text>
</g>
<g >
<title>c10::ObservedOperators::isObserved (2 samples, 0.09%)</title><rect x="217.3" y="389" width="1.0" height="15.0" fill="rgb(219,90,22)" rx="2" ry="2" />
<text  x="220.27" y="399.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseDeclaration (1 samples, 0.04%)</title><rect x="281.9" y="485" width="0.6" height="15.0" fill="rgb(233,150,50)" rx="2" ry="2" />
<text  x="284.94" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (1 samples, 0.04%)</title><rect x="252.8" y="325" width="0.5" height="15.0" fill="rgb(253,61,12)" rx="2" ry="2" />
<text  x="255.79" y="335.5" ></text>
</g>
<g >
<title>parseArgument (1 samples, 0.04%)</title><rect x="231.6" y="405" width="0.5" height="15.0" fill="rgb(224,179,26)" rx="2" ry="2" />
<text  x="234.58" y="415.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;torch::jit::Token*&gt; (1 samples, 0.04%)</title><rect x="193.4" y="437" width="0.5" height="15.0" fill="rgb(229,170,45)" rx="2" ry="2" />
<text  x="196.41" y="447.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="178.0" y="469" width="0.6" height="15.0" fill="rgb(250,20,7)" rx="2" ry="2" />
<text  x="181.04" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;c10::Dispatcher::OperatorDef, std::allocator&lt;c10::Dispatcher::OperatorDef&gt; &gt;::_M_get_node (1 samples, 0.04%)</title><rect x="180.7" y="453" width="0.5" height="15.0" fill="rgb(210,168,17)" rx="2" ry="2" />
<text  x="183.69" y="463.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.04%)</title><rect x="166.9" y="405" width="0.5" height="15.0" fill="rgb(243,215,44)" rx="2" ry="2" />
<text  x="169.91" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt; &gt;::find (1 samples, 0.04%)</title><rect x="280.4" y="581" width="0.5" height="15.0" fill="rgb(236,162,31)" rx="2" ry="2" />
<text  x="283.35" y="591.5" ></text>
</g>
<g >
<title>_dl_start_user (235 samples, 10.56%)</title><rect x="173.3" y="693" width="124.5" height="15.0" fill="rgb(238,202,36)" rx="2" ry="2" />
<text  x="176.27" y="703.5" >_dl_start_user</text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::VariableVersion::VersionCounter, c10::detail::intrusive_target_default_null_type&lt;c10::VariableVersion::VersionCounter&gt; &gt;::~intrusive_ptr (9 samples, 0.40%)</title><rect x="140.9" y="629" width="4.8" height="15.0" fill="rgb(206,217,29)" rx="2" ry="2" />
<text  x="143.93" y="639.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.04%)</title><rect x="261.8" y="533" width="0.5" height="15.0" fill="rgb(215,108,22)" rx="2" ry="2" />
<text  x="264.80" y="543.5" ></text>
</g>
<g >
<title>apparmor_bprm_committing_creds (1 samples, 0.04%)</title><rect x="1169.3" y="581" width="0.6" height="15.0" fill="rgb(242,67,32)" rx="2" ry="2" />
<text  x="1172.33" y="591.5" ></text>
</g>
<g >
<title>__tls_get_addr@plt (2 samples, 0.09%)</title><rect x="711.9" y="325" width="1.0" height="15.0" fill="rgb(218,112,36)" rx="2" ry="2" />
<text  x="714.85" y="335.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::validIdent (1 samples, 0.04%)</title><rect x="241.1" y="357" width="0.6" height="15.0" fill="rgb(227,184,41)" rx="2" ry="2" />
<text  x="244.12" y="367.5" ></text>
</g>
<g >
<title>[libcudart.so.11.0.194] (3 samples, 0.13%)</title><rect x="306.9" y="565" width="1.5" height="15.0" fill="rgb(246,161,48)" rx="2" ry="2" />
<text  x="309.86" y="575.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;c10::Dispatcher::OperatorDef&gt; &gt; &gt;::allocate (1 samples, 0.04%)</title><rect x="180.7" y="437" width="0.5" height="15.0" fill="rgb(220,110,8)" rx="2" ry="2" />
<text  x="183.69" y="447.5" ></text>
</g>
<g >
<title>torch::Library::def&lt;char const  (3 samples, 0.13%)</title><rect x="265.5" y="565" width="1.6" height="15.0" fill="rgb(241,53,17)" rx="2" ry="2" />
<text  x="268.51" y="575.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="210.9" y="213" width="0.5" height="15.0" fill="rgb(236,55,26)" rx="2" ry="2" />
<text  x="213.91" y="223.5" ></text>
</g>
<g >
<title>torch::detail::TorchLibraryInit::~TorchLibraryInit (25 samples, 1.12%)</title><rect x="312.2" y="581" width="13.2" height="15.0" fill="rgb(231,39,53)" rx="2" ry="2" />
<text  x="315.16" y="591.5" ></text>
</g>
<g >
<title>perf_event_mmap (1 samples, 0.04%)</title><rect x="1107.8" y="373" width="0.6" height="15.0" fill="rgb(243,229,10)" rx="2" ry="2" />
<text  x="1110.83" y="383.5" ></text>
</g>
<g >
<title>at::native::empty_cpu (112 samples, 5.03%)</title><rect x="534.3" y="341" width="59.3" height="15.0" fill="rgb(211,102,34)" rx="2" ry="2" />
<text  x="537.27" y="351.5" >at::na..</text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.04%)</title><rect x="1176.2" y="453" width="0.5" height="15.0" fill="rgb(229,202,39)" rx="2" ry="2" />
<text  x="1179.22" y="463.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="181.2" y="133" width="0.6" height="15.0" fill="rgb(213,18,20)" rx="2" ry="2" />
<text  x="184.22" y="143.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="1149.2" y="501" width="0.5" height="15.0" fill="rgb(240,22,36)" rx="2" ry="2" />
<text  x="1152.18" y="511.5" ></text>
</g>
<g >
<title>c10::ProfiledCPUMemoryReporter::Delete (10 samples, 0.45%)</title><rect x="627.6" y="373" width="5.3" height="15.0" fill="rgb(246,87,12)" rx="2" ry="2" />
<text  x="630.57" y="383.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseType (1 samples, 0.04%)</title><rect x="281.9" y="453" width="0.6" height="15.0" fill="rgb(217,20,3)" rx="2" ry="2" />
<text  x="284.94" y="463.5" ></text>
</g>
<g >
<title>torch::CppFunction::makeUnboxedOnly&lt;at::Tensor&amp;  (1 samples, 0.04%)</title><rect x="180.2" y="565" width="0.5" height="15.0" fill="rgb(206,216,27)" rx="2" ry="2" />
<text  x="183.16" y="575.5" ></text>
</g>
<g >
<title>caffe2::OpSchema::SetDoc (1 samples, 0.04%)</title><rect x="278.8" y="613" width="0.5" height="15.0" fill="rgb(208,63,5)" rx="2" ry="2" />
<text  x="281.76" y="623.5" ></text>
</g>
<g >
<title>alloc_set_pte (1 samples, 0.04%)</title><rect x="269.7" y="453" width="0.6" height="15.0" fill="rgb(211,121,52)" rx="2" ry="2" />
<text  x="272.75" y="463.5" ></text>
</g>
<g >
<title>tryTypeMetaToScalarType (5 samples, 0.22%)</title><rect x="952.0" y="405" width="2.6" height="15.0" fill="rgb(221,18,9)" rx="2" ry="2" />
<text  x="954.99" y="415.5" ></text>
</g>
<g >
<title>get_page_from_freelist (2 samples, 0.09%)</title><rect x="1152.9" y="421" width="1.1" height="15.0" fill="rgb(254,153,14)" rx="2" ry="2" />
<text  x="1155.89" y="431.5" ></text>
</g>
<g >
<title>c10::Argument::~Argument (1 samples, 0.04%)</title><rect x="322.2" y="261" width="0.6" height="15.0" fill="rgb(228,15,54)" rx="2" ry="2" />
<text  x="325.23" y="271.5" ></text>
</g>
<g >
<title>at::RecordFunction::~RecordFunction (4 samples, 0.18%)</title><rect x="702.8" y="517" width="2.2" height="15.0" fill="rgb(232,132,29)" rx="2" ry="2" />
<text  x="705.84" y="527.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="198.7" y="325" width="0.5" height="15.0" fill="rgb(205,172,45)" rx="2" ry="2" />
<text  x="201.72" y="335.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="180.7" y="309" width="0.5" height="15.0" fill="rgb(206,43,34)" rx="2" ry="2" />
<text  x="183.69" y="319.5" ></text>
</g>
<g >
<title>c10::DispatchKeySet::DispatchKeySet (1 samples, 0.04%)</title><rect x="218.3" y="341" width="0.6" height="15.0" fill="rgb(224,64,42)" rx="2" ry="2" />
<text  x="221.33" y="351.5" ></text>
</g>
<g >
<title>c10::DispatchKeySet::operator| (1 samples, 0.04%)</title><rect x="935.0" y="549" width="0.6" height="15.0" fill="rgb(242,225,15)" rx="2" ry="2" />
<text  x="938.02" y="559.5" ></text>
</g>
<g >
<title>torch::autograd::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Autograd (1 samples, 0.04%)</title><rect x="252.3" y="565" width="0.5" height="15.0" fill="rgb(224,223,45)" rx="2" ry="2" />
<text  x="255.26" y="575.5" ></text>
</g>
<g >
<title>parseArgument (1 samples, 0.04%)</title><rect x="291.5" y="533" width="0.5" height="15.0" fill="rgb(250,63,25)" rx="2" ry="2" />
<text  x="294.48" y="543.5" ></text>
</g>
<g >
<title>c10::DefaultCPUAllocator::allocate (3 samples, 0.13%)</title><rect x="48.2" y="677" width="1.6" height="15.0" fill="rgb(206,171,50)" rx="2" ry="2" />
<text  x="51.17" y="687.5" ></text>
</g>
<g >
<title>parseDeclarations (1 samples, 0.04%)</title><rect x="259.1" y="485" width="0.6" height="15.0" fill="rgb(238,40,33)" rx="2" ry="2" />
<text  x="262.15" y="495.5" ></text>
</g>
<g >
<title>c10::TensorImpl::empty_tensor_restride (12 samples, 0.54%)</title><rect x="1047.4" y="309" width="6.4" height="15.0" fill="rgb(251,57,9)" rx="2" ry="2" />
<text  x="1050.40" y="319.5" ></text>
</g>
<g >
<title>_int_free (12 samples, 0.54%)</title><rect x="838.5" y="565" width="6.4" height="15.0" fill="rgb(234,0,36)" rx="2" ry="2" />
<text  x="841.54" y="575.5" ></text>
</g>
<g >
<title>at::Tensor::~Tensor (35 samples, 1.57%)</title><rect x="460.6" y="629" width="18.5" height="15.0" fill="rgb(246,219,8)" rx="2" ry="2" />
<text  x="463.58" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.04%)</title><rect x="191.8" y="325" width="0.6" height="15.0" fill="rgb(217,209,37)" rx="2" ry="2" />
<text  x="194.82" y="335.5" ></text>
</g>
<g >
<title>torch::CppFunction::CppFunction&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor  (1 samples, 0.04%)</title><rect x="184.9" y="549" width="0.6" height="15.0" fill="rgb(252,8,23)" rx="2" ry="2" />
<text  x="187.93" y="559.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;c10::Argument&gt; (2 samples, 0.09%)</title><rect x="319.6" y="181" width="1.0" height="15.0" fill="rgb(227,84,0)" rx="2" ry="2" />
<text  x="322.58" y="191.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;c10::MemoryFormat&gt;::constexpr_optional_base (1 samples, 0.04%)</title><rect x="1099.9" y="325" width="0.5" height="15.0" fill="rgb(250,163,33)" rx="2" ry="2" />
<text  x="1102.88" y="335.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.04%)</title><rect x="214.1" y="309" width="0.5" height="15.0" fill="rgb(226,173,16)" rx="2" ry="2" />
<text  x="217.09" y="319.5" ></text>
</g>
<g >
<title>[microbenchmark] (1 samples, 0.04%)</title><rect x="471.7" y="501" width="0.5" height="15.0" fill="rgb(226,147,49)" rx="2" ry="2" />
<text  x="474.72" y="511.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="264.4" y="565" width="0.6" height="15.0" fill="rgb(236,96,18)" rx="2" ry="2" />
<text  x="267.45" y="575.5" ></text>
</g>
<g >
<title>c10::SmallVectorTemplateCommon&lt;long, void&gt;::size (1 samples, 0.04%)</title><rect x="790.8" y="261" width="0.6" height="15.0" fill="rgb(243,155,26)" rx="2" ry="2" />
<text  x="793.84" y="271.5" ></text>
</g>
<g >
<title>c10::TensorOptions::memory_format_opt (1 samples, 0.04%)</title><rect x="446.8" y="309" width="0.5" height="15.0" fill="rgb(206,202,15)" rx="2" ry="2" />
<text  x="449.80" y="319.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.04%)</title><rect x="210.9" y="309" width="0.5" height="15.0" fill="rgb(238,204,10)" rx="2" ry="2" />
<text  x="213.91" y="319.5" ></text>
</g>
<g >
<title>do_brk_flags (1 samples, 0.04%)</title><rect x="231.1" y="149" width="0.5" height="15.0" fill="rgb(217,176,52)" rx="2" ry="2" />
<text  x="234.05" y="159.5" ></text>
</g>
<g >
<title>std::unordered_set&lt;c10::Symbol, std::hash&lt;c10::Symbol&gt;, std::equal_to&lt;c10::Symbol&gt;, std::allocator&lt;c10::Symbol&gt; &gt;::insert (1 samples, 0.04%)</title><rect x="212.5" y="277" width="0.5" height="15.0" fill="rgb(253,24,40)" rx="2" ry="2" />
<text  x="215.50" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::RegistryPriority&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::RegistryPriority&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_unique_node (1 samples, 0.04%)</title><rect x="273.5" y="533" width="0.5" height="15.0" fill="rgb(211,195,1)" rx="2" ry="2" />
<text  x="276.46" y="543.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_TraceType_2.cpp (4 samples, 0.18%)</title><rect x="203.0" y="629" width="2.1" height="15.0" fill="rgb(250,200,44)" rx="2" ry="2" />
<text  x="205.96" y="639.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1 samples, 0.04%)</title><rect x="211.4" y="373" width="0.6" height="15.0" fill="rgb(222,102,46)" rx="2" ry="2" />
<text  x="214.44" y="383.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.04%)</title><rect x="175.4" y="533" width="0.5" height="15.0" fill="rgb(222,113,6)" rx="2" ry="2" />
<text  x="178.39" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_ostringstream (1 samples, 0.04%)</title><rect x="200.8" y="517" width="0.6" height="15.0" fill="rgb(232,48,49)" rx="2" ry="2" />
<text  x="203.84" y="527.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.04%)</title><rect x="195.0" y="501" width="0.5" height="15.0" fill="rgb(208,113,6)" rx="2" ry="2" />
<text  x="198.00" y="511.5" ></text>
</g>
<g >
<title>__atomic_add_dispatch (1 samples, 0.04%)</title><rect x="166.9" y="373" width="0.5" height="15.0" fill="rgb(238,62,30)" rx="2" ry="2" />
<text  x="169.91" y="383.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor&gt;  (1 samples, 0.04%)</title><rect x="204.5" y="565" width="0.6" height="15.0" fill="rgb(230,94,7)" rx="2" ry="2" />
<text  x="207.55" y="575.5" ></text>
</g>
<g >
<title>c10::TensorOptions::device (21 samples, 0.94%)</title><rect x="874.1" y="597" width="11.1" height="15.0" fill="rgb(248,16,54)" rx="2" ry="2" />
<text  x="877.06" y="607.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;  (1 samples, 0.04%)</title><rect x="108.6" y="645" width="0.5" height="15.0" fill="rgb(238,90,15)" rx="2" ry="2" />
<text  x="111.60" y="655.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;torch::autograd::Node,  (1 samples, 0.04%)</title><rect x="504.1" y="549" width="0.5" height="15.0" fill="rgb(209,71,12)" rx="2" ry="2" />
<text  x="507.05" y="559.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseAliasAnnotation (3 samples, 0.13%)</title><rect x="236.4" y="373" width="1.5" height="15.0" fill="rgb(229,182,36)" rx="2" ry="2" />
<text  x="239.35" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt; &gt; &gt;::deallocate (2 samples, 0.09%)</title><rect x="310.6" y="437" width="1.0" height="15.0" fill="rgb(233,177,24)" rx="2" ry="2" />
<text  x="313.57" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (1 samples, 0.04%)</title><rect x="324.9" y="325" width="0.5" height="15.0" fill="rgb(219,82,23)" rx="2" ry="2" />
<text  x="327.88" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::reserve (1 samples, 0.04%)</title><rect x="198.7" y="453" width="0.5" height="15.0" fill="rgb(225,221,20)" rx="2" ry="2" />
<text  x="201.72" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::IValue, std::allocator&lt;c10::IValue&gt; &gt;::vector (2 samples, 0.09%)</title><rect x="715.6" y="389" width="1.0" height="15.0" fill="rgb(214,56,17)" rx="2" ry="2" />
<text  x="718.56" y="399.5" ></text>
</g>
<g >
<title>torch::Library::_impl (2 samples, 0.09%)</title><rect x="193.9" y="549" width="1.1" height="15.0" fill="rgb(246,227,50)" rx="2" ry="2" />
<text  x="196.94" y="559.5" ></text>
</g>
<g >
<title>path_openat (1 samples, 0.04%)</title><rect x="1112.1" y="437" width="0.5" height="15.0" fill="rgb(238,13,36)" rx="2" ry="2" />
<text  x="1115.08" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;void, void  (1 samples, 0.04%)</title><rect x="448.4" y="229" width="0.5" height="15.0" fill="rgb(232,80,5)" rx="2" ry="2" />
<text  x="451.39" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; (1 samples, 0.04%)</title><rect x="217.3" y="341" width="0.5" height="15.0" fill="rgb(216,56,3)" rx="2" ry="2" />
<text  x="220.27" y="351.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.04%)</title><rect x="275.6" y="453" width="0.5" height="15.0" fill="rgb(214,168,29)" rx="2" ry="2" />
<text  x="278.58" y="463.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.04%)</title><rect x="215.1" y="549" width="0.6" height="15.0" fill="rgb(218,82,20)" rx="2" ry="2" />
<text  x="218.15" y="559.5" ></text>
</g>
<g >
<title>activate_page (3 samples, 0.13%)</title><rect x="1175.2" y="501" width="1.5" height="15.0" fill="rgb(235,139,37)" rx="2" ry="2" />
<text  x="1178.16" y="511.5" ></text>
</g>
<g >
<title>caffe2::InitRegisterer::InitRegisterer (1 samples, 0.04%)</title><rect x="263.4" y="597" width="0.5" height="15.0" fill="rgb(236,118,46)" rx="2" ry="2" />
<text  x="266.39" y="607.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="285.1" y="565" width="0.6" height="15.0" fill="rgb(250,12,37)" rx="2" ry="2" />
<text  x="288.12" y="575.5" ></text>
</g>
<g >
<title>at::hasCallbacks (2 samples, 0.09%)</title><rect x="956.2" y="373" width="1.1" height="15.0" fill="rgb(236,27,50)" rx="2" ry="2" />
<text  x="959.23" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (1 samples, 0.04%)</title><rect x="252.8" y="293" width="0.5" height="15.0" fill="rgb(254,118,40)" rx="2" ry="2" />
<text  x="255.79" y="303.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;c10::DebugInfoBase&gt;::~shared_ptr (1 samples, 0.04%)</title><rect x="632.3" y="341" width="0.6" height="15.0" fill="rgb(224,27,0)" rx="2" ry="2" />
<text  x="635.34" y="351.5" ></text>
</g>
<g >
<title>generic_file_read_iter (1 samples, 0.04%)</title><rect x="1111.5" y="373" width="0.6" height="15.0" fill="rgb(220,88,8)" rx="2" ry="2" />
<text  x="1114.55" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::RegistryPriority&gt;, true&gt; &gt;::allocate (1 samples, 0.04%)</title><rect x="274.5" y="501" width="0.5" height="15.0" fill="rgb(223,131,9)" rx="2" ry="2" />
<text  x="277.52" y="511.5" ></text>
</g>
<g >
<title>c10::Dispatcher::OperatorDef::OperatorDef (3 samples, 0.13%)</title><rect x="217.3" y="421" width="1.6" height="15.0" fill="rgb(253,86,37)" rx="2" ry="2" />
<text  x="220.27" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::Arena::CreateInternal&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.04%)</title><rect x="295.7" y="341" width="0.6" height="15.0" fill="rgb(207,138,51)" rx="2" ry="2" />
<text  x="298.72" y="351.5" ></text>
</g>
<g >
<title>c10::SmallVector&lt;unsigned long, 4u&gt;::SmallVector (1 samples, 0.04%)</title><rect x="532.1" y="405" width="0.6" height="15.0" fill="rgb(241,138,8)" rx="2" ry="2" />
<text  x="535.15" y="415.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.04%)</title><rect x="108.6" y="597" width="0.5" height="15.0" fill="rgb(228,109,27)" rx="2" ry="2" />
<text  x="111.60" y="607.5" ></text>
</g>
<g >
<title>c10::OperatorName::setNamespaceIfNotSet (1 samples, 0.04%)</title><rect x="215.1" y="533" width="0.6" height="15.0" fill="rgb(254,195,42)" rx="2" ry="2" />
<text  x="218.15" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;torch::jit::Token, std::allocator&lt;torch::jit::Token&gt; &gt;::_M_erase (1 samples, 0.04%)</title><rect x="214.1" y="437" width="0.5" height="15.0" fill="rgb(224,90,44)" rx="2" ry="2" />
<text  x="217.09" y="447.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseDeclaration (4 samples, 0.18%)</title><rect x="111.2" y="549" width="2.2" height="15.0" fill="rgb(241,18,40)" rx="2" ry="2" />
<text  x="114.25" y="559.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.04%)</title><rect x="275.6" y="469" width="0.5" height="15.0" fill="rgb(239,33,21)" rx="2" ry="2" />
<text  x="278.58" y="479.5" ></text>
</g>
<g >
<title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, c10::OperatorName, std::hash&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueHasher&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::hash&lt;c10::OperatorName&gt; &gt;, std::equal_to&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueEquality&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::equal_to&lt;c10::OperatorName&gt; &gt;, std::allocator&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt; &gt; &gt;::find (2 samples, 0.09%)</title><rect x="215.7" y="453" width="1.0" height="15.0" fill="rgb(232,101,48)" rx="2" ry="2" />
<text  x="218.68" y="463.5" ></text>
</g>
<g >
<title>__tls_init (2 samples, 0.09%)</title><rect x="711.9" y="341" width="1.0" height="15.0" fill="rgb(233,146,13)" rx="2" ry="2" />
<text  x="714.85" y="351.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;c10::Type&gt;::shared_ptr (1 samples, 0.04%)</title><rect x="250.7" y="453" width="0.5" height="15.0" fill="rgb(207,42,11)" rx="2" ry="2" />
<text  x="253.66" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt; (1 samples, 0.04%)</title><rect x="311.6" y="421" width="0.6" height="15.0" fill="rgb(215,125,52)" rx="2" ry="2" />
<text  x="314.63" y="431.5" ></text>
</g>
<g >
<title>c10::detail::_str_wrapper&lt;char const*, char const* const&amp;, char const*, unsigned int const&amp;&gt;::call[abi:cxx11] (1 samples, 0.04%)</title><rect x="254.9" y="485" width="0.5" height="15.0" fill="rgb(234,174,29)" rx="2" ry="2" />
<text  x="257.91" y="495.5" ></text>
</g>
<g >
<title>c10::impl::ExcludeDispatchKeyGuard::ExcludeDispatchKeyGuard (5 samples, 0.22%)</title><rect x="369.9" y="581" width="2.7" height="15.0" fill="rgb(243,219,28)" rx="2" ry="2" />
<text  x="372.94" y="591.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.04%)</title><rect x="201.4" y="549" width="0.5" height="15.0" fill="rgb(246,36,45)" rx="2" ry="2" />
<text  x="204.37" y="559.5" ></text>
</g>
<g >
<title>c10::str&lt;char [15], char const*, char [2], unsigned int&gt; (1 samples, 0.04%)</title><rect x="194.5" y="517" width="0.5" height="15.0" fill="rgb(253,192,13)" rx="2" ry="2" />
<text  x="197.47" y="527.5" ></text>
</g>
<g >
<title>__static_initialization_and_destruction_0 (4 samples, 0.18%)</title><rect x="253.3" y="613" width="2.1" height="15.0" fill="rgb(245,135,17)" rx="2" ry="2" />
<text  x="256.32" y="623.5" ></text>
</g>
<g >
<title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, c10::OperatorName, std::hash&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueHasher&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::hash&lt;c10::OperatorName&gt; &gt;, std::equal_to&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueEquality&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::equal_to&lt;c10::OperatorName&gt; &gt;, std::allocator&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt; &gt; &gt;::end (1 samples, 0.04%)</title><rect x="245.4" y="453" width="0.5" height="15.0" fill="rgb(226,118,3)" rx="2" ry="2" />
<text  x="248.36" y="463.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (1 samples, 0.04%)</title><rect x="1168.8" y="565" width="0.5" height="15.0" fill="rgb(213,70,22)" rx="2" ry="2" />
<text  x="1171.80" y="575.5" ></text>
</g>
<g >
<title>c10::guts::detail::to_string_&lt;unsigned long, void&gt;::call[abi:cxx11] (1 samples, 0.04%)</title><rect x="196.6" y="437" width="0.5" height="15.0" fill="rgb(218,97,45)" rx="2" ry="2" />
<text  x="199.59" y="447.5" ></text>
</g>
<g >
<title>c10::ThreadLocalDebugInfo::get (1 samples, 0.04%)</title><rect x="87.9" y="677" width="0.6" height="15.0" fill="rgb(214,189,37)" rx="2" ry="2" />
<text  x="90.92" y="687.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;c10::Argument&gt; &gt;::allocate (1 samples, 0.04%)</title><rect x="287.8" y="501" width="0.5" height="15.0" fill="rgb(224,182,17)" rx="2" ry="2" />
<text  x="290.77" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.04%)</title><rect x="114.4" y="485" width="0.6" height="15.0" fill="rgb(245,179,19)" rx="2" ry="2" />
<text  x="117.43" y="495.5" ></text>
</g>
<g >
<title>c10::memoryProfilingEnabled (9 samples, 0.40%)</title><rect x="628.1" y="357" width="4.8" height="15.0" fill="rgb(248,98,36)" rx="2" ry="2" />
<text  x="631.10" y="367.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (2 samples, 0.09%)</title><rect x="639.2" y="485" width="1.1" height="15.0" fill="rgb(236,197,11)" rx="2" ry="2" />
<text  x="642.23" y="495.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (1 samples, 0.04%)</title><rect x="155.8" y="645" width="0.5" height="15.0" fill="rgb(247,73,37)" rx="2" ry="2" />
<text  x="158.78" y="655.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_expand_op_gpu.cc (1 samples, 0.04%)</title><rect x="261.8" y="629" width="0.5" height="15.0" fill="rgb(236,14,52)" rx="2" ry="2" />
<text  x="264.80" y="639.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (3 samples, 0.13%)</title><rect x="1106.8" y="421" width="1.6" height="15.0" fill="rgb(226,26,22)" rx="2" ry="2" />
<text  x="1109.77" y="431.5" ></text>
</g>
<g >
<title>createArgumentVector (1 samples, 0.04%)</title><rect x="196.6" y="469" width="0.5" height="15.0" fill="rgb(244,24,28)" rx="2" ry="2" />
<text  x="199.59" y="479.5" ></text>
</g>
<g >
<title>c10::AutogradDispatchKeys (2 samples, 0.09%)</title><rect x="83.2" y="677" width="1.0" height="15.0" fill="rgb(232,103,30)" rx="2" ry="2" />
<text  x="86.15" y="687.5" ></text>
</g>
<g >
<title>c10::detail::UniqueVoidPtr::UniqueVoidPtr (1 samples, 0.04%)</title><rect x="448.4" y="277" width="0.5" height="15.0" fill="rgb(228,149,33)" rx="2" ry="2" />
<text  x="451.39" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.04%)</title><rect x="181.2" y="277" width="0.6" height="15.0" fill="rgb(218,196,40)" rx="2" ry="2" />
<text  x="184.22" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (1 samples, 0.04%)</title><rect x="322.8" y="325" width="0.5" height="15.0" fill="rgb(242,139,38)" rx="2" ry="2" />
<text  x="325.76" y="335.5" ></text>
</g>
<g >
<title>parseDeclaration (1 samples, 0.04%)</title><rect x="249.1" y="485" width="0.5" height="15.0" fill="rgb(220,164,54)" rx="2" ry="2" />
<text  x="252.07" y="495.5" ></text>
</g>
<g >
<title>__do_munmap (1 samples, 0.04%)</title><rect x="182.3" y="309" width="0.5" height="15.0" fill="rgb(218,56,47)" rx="2" ry="2" />
<text  x="185.28" y="319.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.04%)</title><rect x="281.9" y="501" width="0.6" height="15.0" fill="rgb(223,198,23)" rx="2" ry="2" />
<text  x="284.94" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;torch::jit::Token, std::allocator&lt;torch::jit::Token&gt; &gt;::erase (1 samples, 0.04%)</title><rect x="214.1" y="453" width="0.5" height="15.0" fill="rgb(207,123,22)" rx="2" ry="2" />
<text  x="217.09" y="463.5" ></text>
</g>
<g >
<title>impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;c10::intrusive_ptr&lt;LinearPackedParamsBase&gt; (1 samples, 0.04%)</title><rect x="267.6" y="565" width="0.6" height="15.0" fill="rgb(226,25,51)" rx="2" ry="2" />
<text  x="270.63" y="575.5" ></text>
</g>
<g >
<title>c10::SmallVector&lt;unsigned long, 4u&gt;::~SmallVector (3 samples, 0.13%)</title><rect x="959.4" y="389" width="1.6" height="15.0" fill="rgb(240,209,49)" rx="2" ry="2" />
<text  x="962.41" y="399.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;c10::ThreadLocalDebugInfo,  (1 samples, 0.04%)</title><rect x="752.7" y="229" width="0.5" height="15.0" fill="rgb(230,78,51)" rx="2" ry="2" />
<text  x="755.67" y="239.5" ></text>
</g>
<g >
<title>std::max&lt;long&gt; (1 samples, 0.04%)</title><rect x="793.5" y="277" width="0.5" height="15.0" fill="rgb(248,212,13)" rx="2" ry="2" />
<text  x="796.49" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;c10::Dispatcher::OperatorDef, std::allocator&lt;c10::Dispatcher::OperatorDef&gt; &gt;::emplace_back&lt;c10::OperatorName&gt; (3 samples, 0.13%)</title><rect x="190.2" y="501" width="1.6" height="15.0" fill="rgb(246,69,26)" rx="2" ry="2" />
<text  x="193.23" y="511.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="933.4" y="549" width="0.6" height="15.0" fill="rgb(234,8,49)" rx="2" ry="2" />
<text  x="936.43" y="559.5" ></text>
</g>
<g >
<title>__mmap64 (3 samples, 0.13%)</title><rect x="1106.8" y="501" width="1.6" height="15.0" fill="rgb(212,163,13)" rx="2" ry="2" />
<text  x="1109.77" y="511.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (1 samples, 0.04%)</title><rect x="265.5" y="325" width="0.5" height="15.0" fill="rgb(238,182,0)" rx="2" ry="2" />
<text  x="268.51" y="335.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.04%)</title><rect x="168.0" y="677" width="0.5" height="15.0" fill="rgb(206,95,15)" rx="2" ry="2" />
<text  x="170.97" y="687.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.04%)</title><rect x="198.2" y="469" width="0.5" height="15.0" fill="rgb(236,146,41)" rx="2" ry="2" />
<text  x="201.19" y="479.5" ></text>
</g>
<g >
<title>__tls_get_addr (2 samples, 0.09%)</title><rect x="852.9" y="293" width="1.0" height="15.0" fill="rgb(248,77,44)" rx="2" ry="2" />
<text  x="855.86" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;c10::Argument&gt;::allocate (1 samples, 0.04%)</title><rect x="280.9" y="517" width="0.5" height="15.0" fill="rgb(231,82,17)" rx="2" ry="2" />
<text  x="283.88" y="527.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.04%)</title><rect x="175.4" y="421" width="0.5" height="15.0" fill="rgb(238,99,52)" rx="2" ry="2" />
<text  x="178.39" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;c10::FunctionSchema, std::default_delete&lt;c10::FunctionSchema&gt; &gt;::unique_ptr (1 samples, 0.04%)</title><rect x="207.2" y="517" width="0.5" height="15.0" fill="rgb(241,165,49)" rx="2" ry="2" />
<text  x="210.20" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;torch::jit::Source&gt; &gt;::construct&lt;torch::jit::Source, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.04%)</title><rect x="227.3" y="373" width="0.6" height="15.0" fill="rgb(211,118,28)" rx="2" ry="2" />
<text  x="230.34" y="383.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;std::unique_ptr&lt;caffe2::OperatorBase, std::default_delete&lt;caffe2::OperatorBase&gt; &gt;  (1 samples, 0.04%)</title><rect x="275.0" y="565" width="0.6" height="15.0" fill="rgb(232,114,34)" rx="2" ry="2" />
<text  x="278.05" y="575.5" ></text>
</g>
<g >
<title>cpuinfo_x86_linux_parse_proc_cpuinfo (1 samples, 0.04%)</title><rect x="197.7" y="485" width="0.5" height="15.0" fill="rgb(223,142,46)" rx="2" ry="2" />
<text  x="200.65" y="495.5" ></text>
</g>
<g >
<title>operator (1 samples, 0.04%)</title><rect x="288.8" y="501" width="0.6" height="15.0" fill="rgb(232,196,0)" rx="2" ry="2" />
<text  x="291.83" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (24 samples, 1.08%)</title><rect x="1168.3" y="693" width="12.7" height="15.0" fill="rgb(232,135,9)" rx="2" ry="2" />
<text  x="1171.27" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::Symbol&gt;, true&gt; &gt;::allocate (1 samples, 0.04%)</title><rect x="189.7" y="469" width="0.5" height="15.0" fill="rgb(236,47,49)" rx="2" ry="2" />
<text  x="192.70" y="479.5" ></text>
</g>
<g >
<title>at::detail::make_tensor&lt;c10::TensorImpl, c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;, c10::DispatchKey, caffe2::TypeMeta&amp;&gt; (14 samples, 0.63%)</title><rect x="540.1" y="325" width="7.4" height="15.0" fill="rgb(246,146,32)" rx="2" ry="2" />
<text  x="543.10" y="335.5" ></text>
</g>
<g >
<title>unlink_chunk (1 samples, 0.04%)</title><rect x="313.2" y="277" width="0.5" height="15.0" fill="rgb(233,112,33)" rx="2" ry="2" />
<text  x="316.22" y="287.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseType (1 samples, 0.04%)</title><rect x="113.9" y="453" width="0.5" height="15.0" fill="rgb(245,167,44)" rx="2" ry="2" />
<text  x="116.90" y="463.5" ></text>
</g>
<g >
<title>SchemaParser (1 samples, 0.04%)</title><rect x="288.3" y="565" width="0.5" height="15.0" fill="rgb(254,225,3)" rx="2" ry="2" />
<text  x="291.30" y="575.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, torch::CppFunction&gt; (7 samples, 0.31%)</title><rect x="180.7" y="565" width="3.7" height="15.0" fill="rgb(238,1,13)" rx="2" ry="2" />
<text  x="183.69" y="575.5" ></text>
</g>
<g >
<title>_M_init_functor (1 samples, 0.04%)</title><rect x="193.9" y="501" width="0.6" height="15.0" fill="rgb(252,91,45)" rx="2" ry="2" />
<text  x="196.94" y="511.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.04%)</title><rect x="267.6" y="485" width="0.6" height="15.0" fill="rgb(239,4,46)" rx="2" ry="2" />
<text  x="270.63" y="495.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.04%)</title><rect x="267.1" y="421" width="0.5" height="15.0" fill="rgb(230,57,49)" rx="2" ry="2" />
<text  x="270.10" y="431.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::~OperatorEntry (5 samples, 0.22%)</title><rect x="313.7" y="293" width="2.7" height="15.0" fill="rgb(247,206,43)" rx="2" ry="2" />
<text  x="316.75" y="303.5" ></text>
</g>
<g >
<title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (113 samples, 5.08%)</title><rect x="534.3" y="389" width="59.9" height="15.0" fill="rgb(214,1,24)" rx="2" ry="2" />
<text  x="537.27" y="399.5" >c10::i..</text>
</g>
<g >
<title>std::shared_ptr&lt;torch::jit::Source&gt;::~shared_ptr (1 samples, 0.04%)</title><rect x="240.1" y="309" width="0.5" height="15.0" fill="rgb(239,83,31)" rx="2" ry="2" />
<text  x="243.06" y="319.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.04%)</title><rect x="108.6" y="549" width="0.5" height="15.0" fill="rgb(210,5,40)" rx="2" ry="2" />
<text  x="111.60" y="559.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;c10::IValue*&gt; (1 samples, 0.04%)</title><rect x="946.7" y="469" width="0.5" height="15.0" fill="rgb(242,64,14)" rx="2" ry="2" />
<text  x="949.68" y="479.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.04%)</title><rect x="186.0" y="357" width="0.5" height="15.0" fill="rgb(248,146,1)" rx="2" ry="2" />
<text  x="188.99" y="367.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.04%)</title><rect x="201.9" y="325" width="0.5" height="15.0" fill="rgb(247,125,7)" rx="2" ry="2" />
<text  x="204.90" y="335.5" ></text>
</g>
<g >
<title>__GI_exit (44 samples, 1.98%)</title><rect x="303.1" y="661" width="23.4" height="15.0" fill="rgb(245,208,16)" rx="2" ry="2" />
<text  x="306.14" y="671.5" >_..</text>
</g>
<g >
<title>dl_symbol_visibility_binds_local_p (1 samples, 0.04%)</title><rect x="1148.7" y="565" width="0.5" height="15.0" fill="rgb(216,16,45)" rx="2" ry="2" />
<text  x="1151.65" y="575.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;torch::jit::Source,  (1 samples, 0.04%)</title><rect x="259.1" y="389" width="0.6" height="15.0" fill="rgb(207,61,49)" rx="2" ry="2" />
<text  x="262.15" y="399.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.04%)</title><rect x="750.0" y="277" width="0.5" height="15.0" fill="rgb(220,93,47)" rx="2" ry="2" />
<text  x="753.02" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;c10::Argument&gt;::construct&lt;c10::Argument, c10::Argument&gt; (1 samples, 0.04%)</title><rect x="177.0" y="405" width="0.5" height="15.0" fill="rgb(241,18,43)" rx="2" ry="2" />
<text  x="179.98" y="415.5" ></text>
</g>
<g >
<title>tcache_get (1 samples, 0.04%)</title><rect x="991.2" y="229" width="0.5" height="15.0" fill="rgb(237,102,37)" rx="2" ry="2" />
<text  x="994.21" y="239.5" ></text>
</g>
<g >
<title>empty_memory_format (278 samples, 12.49%)</title><rect x="954.6" y="453" width="147.4" height="15.0" fill="rgb(236,121,40)" rx="2" ry="2" />
<text  x="957.64" y="463.5" >empty_memory_format</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (1 samples, 0.04%)</title><rect x="110.2" y="597" width="0.5" height="15.0" fill="rgb(251,79,37)" rx="2" ry="2" />
<text  x="113.19" y="607.5" ></text>
</g>
<g >
<title>c10::TensorImpl::release_resources (6 samples, 0.27%)</title><rect x="137.2" y="677" width="3.2" height="15.0" fill="rgb(213,225,16)" rx="2" ry="2" />
<text  x="140.22" y="687.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="178.6" y="517" width="0.5" height="15.0" fill="rgb(222,57,27)" rx="2" ry="2" />
<text  x="181.57" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::FieldDescriptorProto::_InternalParse (2 samples, 0.09%)</title><rect x="295.7" y="469" width="1.1" height="15.0" fill="rgb(210,196,52)" rx="2" ry="2" />
<text  x="298.72" y="479.5" ></text>
</g>
<g >
<title>c10::Symbol::fromQualString (2 samples, 0.09%)</title><rect x="189.2" y="581" width="1.0" height="15.0" fill="rgb(223,36,4)" rx="2" ry="2" />
<text  x="192.17" y="591.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (2 samples, 0.09%)</title><rect x="242.2" y="469" width="1.0" height="15.0" fill="rgb(246,70,20)" rx="2" ry="2" />
<text  x="245.18" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="197.7" y="405" width="0.5" height="15.0" fill="rgb(216,226,37)" rx="2" ry="2" />
<text  x="200.65" y="415.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;caffe2::TypeMeta&gt;::constexpr_optional_base (1 samples, 0.04%)</title><rect x="360.9" y="597" width="0.6" height="15.0" fill="rgb(245,114,36)" rx="2" ry="2" />
<text  x="363.93" y="607.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.04%)</title><rect x="461.1" y="581" width="0.5" height="15.0" fill="rgb(231,87,38)" rx="2" ry="2" />
<text  x="464.11" y="591.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1157.1" y="581" width="0.6" height="15.0" fill="rgb(229,0,5)" rx="2" ry="2" />
<text  x="1160.13" y="591.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.04%)</title><rect x="297.3" y="341" width="0.5" height="15.0" fill="rgb(213,82,26)" rx="2" ry="2" />
<text  x="300.31" y="351.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (1 samples, 0.04%)</title><rect x="254.4" y="485" width="0.5" height="15.0" fill="rgb(213,4,22)" rx="2" ry="2" />
<text  x="257.38" y="495.5" ></text>
</g>
<g >
<title>c10::Dispatcher::OperatorDef::OperatorDef (1 samples, 0.04%)</title><rect x="210.4" y="421" width="0.5" height="15.0" fill="rgb(230,160,33)" rx="2" ry="2" />
<text  x="213.38" y="431.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseType (2 samples, 0.09%)</title><rect x="265.5" y="389" width="1.1" height="15.0" fill="rgb(238,128,26)" rx="2" ry="2" />
<text  x="268.51" y="399.5" ></text>
</g>
<g >
<title>c10::VariableVersion::VersionCounter::~VersionCounter (1 samples, 0.04%)</title><rect x="647.2" y="485" width="0.5" height="15.0" fill="rgb(231,66,37)" rx="2" ry="2" />
<text  x="650.18" y="495.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_CatchAll (1 samples, 0.04%)</title><rect x="285.7" y="565" width="0.5" height="15.0" fill="rgb(244,53,5)" rx="2" ry="2" />
<text  x="288.65" y="575.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (15 samples, 0.67%)</title><rect x="232.1" y="405" width="8.0" height="15.0" fill="rgb(225,78,51)" rx="2" ry="2" />
<text  x="235.11" y="415.5" ></text>
</g>
<g >
<title>torch::Library::_impl (2 samples, 0.09%)</title><rect x="205.1" y="549" width="1.0" height="15.0" fill="rgb(232,25,15)" rx="2" ry="2" />
<text  x="208.08" y="559.5" ></text>
</g>
<g >
<title>at::RecordFunction::RecordFunction@plt (1 samples, 0.04%)</title><rect x="958.3" y="405" width="0.6" height="15.0" fill="rgb(225,57,29)" rx="2" ry="2" />
<text  x="961.35" y="415.5" ></text>
</g>
<g >
<title>ska::detailv3::functor_storage&lt;unsigned long, std::hash&lt;c10::OperatorName&gt; &gt;::operator (1 samples, 0.04%)</title><rect x="216.2" y="389" width="0.5" height="15.0" fill="rgb(229,139,11)" rx="2" ry="2" />
<text  x="219.21" y="399.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::registerKernel (1 samples, 0.04%)</title><rect x="248.0" y="517" width="0.5" height="15.0" fill="rgb(212,174,48)" rx="2" ry="2" />
<text  x="251.01" y="527.5" ></text>
</g>
<g >
<title>c10::either&lt;torch::jit::Operator::C10Operator, torch::jit::Operator::JitOnlyOperator&gt;::~either (1 samples, 0.04%)</title><rect x="325.9" y="341" width="0.6" height="15.0" fill="rgb(229,223,24)" rx="2" ry="2" />
<text  x="328.94" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.04%)</title><rect x="252.8" y="357" width="0.5" height="15.0" fill="rgb(227,15,53)" rx="2" ry="2" />
<text  x="255.79" y="367.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;torch::jit::Source&gt;::~shared_ptr (1 samples, 0.04%)</title><rect x="214.1" y="357" width="0.5" height="15.0" fill="rgb(217,144,30)" rx="2" ry="2" />
<text  x="217.09" y="367.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;torch::jit::Operator, std::allocator&lt;torch::jit::Operator&gt;,  (1 samples, 0.04%)</title><rect x="325.9" y="405" width="0.6" height="15.0" fill="rgb(233,91,27)" rx="2" ry="2" />
<text  x="328.94" y="415.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::MemoryFormat&gt;::optional (1 samples, 0.04%)</title><rect x="451.6" y="533" width="0.5" height="15.0" fill="rgb(228,201,34)" rx="2" ry="2" />
<text  x="454.57" y="543.5" ></text>
</g>
<g >
<title>sysmalloc (1 samples, 0.04%)</title><rect x="243.8" y="341" width="0.5" height="15.0" fill="rgb(223,107,45)" rx="2" ry="2" />
<text  x="246.77" y="351.5" ></text>
</g>
<g >
<title>c10::DefaultCPUAllocator::ReportAndDelete (9 samples, 0.40%)</title><rect x="849.7" y="389" width="4.7" height="15.0" fill="rgb(210,83,21)" rx="2" ry="2" />
<text  x="852.68" y="399.5" ></text>
</g>
<g >
<title>std::__array_traits&lt;c10::KernelFunction, 38ul&gt;::_S_ref (1 samples, 0.04%)</title><rect x="1102.0" y="485" width="0.5" height="15.0" fill="rgb(229,22,7)" rx="2" ry="2" />
<text  x="1105.00" y="495.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (98 samples, 4.40%)</title><rect x="1105.7" y="645" width="52.0" height="15.0" fill="rgb(221,71,34)" rx="2" ry="2" />
<text  x="1108.71" y="655.5" >_dl_s..</text>
</g>
<g >
<title>_Hashtable&lt;const std::pair&lt;char const*, char const*&gt;*&gt; (1 samples, 0.04%)</title><rect x="132.5" y="629" width="0.5" height="15.0" fill="rgb(211,10,40)" rx="2" ry="2" />
<text  x="135.45" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.04%)</title><rect x="162.1" y="677" width="0.6" height="15.0" fill="rgb(246,10,42)" rx="2" ry="2" />
<text  x="165.14" y="687.5" ></text>
</g>
<g >
<title>c10::demangle[abi:cxx11] (1 samples, 0.04%)</title><rect x="261.8" y="581" width="0.5" height="15.0" fill="rgb(239,109,19)" rx="2" ry="2" />
<text  x="264.80" y="591.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.04%)</title><rect x="333.4" y="581" width="0.5" height="15.0" fill="rgb(205,6,3)" rx="2" ry="2" />
<text  x="336.36" y="591.5" ></text>
</g>
<g >
<title>c10::TensorImpl::empty_tensor_restride (7 samples, 0.31%)</title><rect x="778.6" y="309" width="3.8" height="15.0" fill="rgb(218,60,19)" rx="2" ry="2" />
<text  x="781.64" y="319.5" ></text>
</g>
<g >
<title>c10::str&lt;char [15], char const*, char [2], unsigned int&gt; (2 samples, 0.09%)</title><rect x="223.6" y="517" width="1.1" height="15.0" fill="rgb(247,3,33)" rx="2" ry="2" />
<text  x="226.63" y="527.5" ></text>
</g>
<g >
<title>torch::detail::TorchLibraryInit::TorchLibraryInit (4 samples, 0.18%)</title><rect x="205.1" y="597" width="2.1" height="15.0" fill="rgb(230,84,41)" rx="2" ry="2" />
<text  x="208.08" y="607.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (1 samples, 0.04%)</title><rect x="284.6" y="389" width="0.5" height="15.0" fill="rgb(209,86,51)" rx="2" ry="2" />
<text  x="287.59" y="399.5" ></text>
</g>
<g >
<title>_GLOBAL_OFFSET_TABLE_ (1 samples, 0.04%)</title><rect x="171.2" y="693" width="0.5" height="15.0" fill="rgb(251,111,0)" rx="2" ry="2" />
<text  x="174.15" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int&gt; (1 samples, 0.04%)</title><rect x="248.5" y="437" width="0.6" height="15.0" fill="rgb(232,47,14)" rx="2" ry="2" />
<text  x="251.54" y="447.5" ></text>
</g>
<g >
<title>__posix_memalign (33 samples, 1.48%)</title><rect x="408.1" y="293" width="17.5" height="15.0" fill="rgb(221,206,42)" rx="2" ry="2" />
<text  x="411.10" y="303.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.04%)</title><rect x="109.7" y="597" width="0.5" height="15.0" fill="rgb(216,82,43)" rx="2" ry="2" />
<text  x="112.66" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (1 samples, 0.04%)</title><rect x="324.9" y="293" width="0.5" height="15.0" fill="rgb(238,189,40)" rx="2" ry="2" />
<text  x="327.88" y="303.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.04%)</title><rect x="153.1" y="581" width="0.6" height="15.0" fill="rgb(217,37,16)" rx="2" ry="2" />
<text  x="156.13" y="591.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="221.5" y="469" width="0.5" height="15.0" fill="rgb(217,41,39)" rx="2" ry="2" />
<text  x="224.51" y="479.5" ></text>
</g>
<g >
<title>torch::CppFunction::CppFunction&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor&gt;  (1 samples, 0.04%)</title><rect x="186.0" y="549" width="0.5" height="15.0" fill="rgb(207,6,32)" rx="2" ry="2" />
<text  x="188.99" y="559.5" ></text>
</g>
<g >
<title>__cudaRegisterFunction (5 samples, 0.22%)</title><rect x="292.5" y="597" width="2.7" height="15.0" fill="rgb(222,12,51)" rx="2" ry="2" />
<text  x="295.54" y="607.5" ></text>
</g>
<g >
<title>__vfs_read (1 samples, 0.04%)</title><rect x="197.7" y="341" width="0.5" height="15.0" fill="rgb(206,70,5)" rx="2" ry="2" />
<text  x="200.65" y="351.5" ></text>
</g>
<g >
<title>torch::jit::SourceRange::text[abi:cxx11] (4 samples, 0.18%)</title><rect x="237.9" y="357" width="2.2" height="15.0" fill="rgb(216,113,18)" rx="2" ry="2" />
<text  x="240.94" y="367.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::intrusive_ptr (1 samples, 0.04%)</title><rect x="914.9" y="517" width="0.5" height="15.0" fill="rgb(209,59,26)" rx="2" ry="2" />
<text  x="917.88" y="527.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.04%)</title><rect x="269.7" y="469" width="0.6" height="15.0" fill="rgb(241,94,44)" rx="2" ry="2" />
<text  x="272.75" y="479.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="175.4" y="485" width="0.5" height="15.0" fill="rgb(246,19,28)" rx="2" ry="2" />
<text  x="178.39" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;torch::jit::Operator&gt;, std::allocator&lt;std::shared_ptr&lt;torch::jit::Operator&gt; &gt; &gt;::_S_do_relocate (1 samples, 0.04%)</title><rect x="297.3" y="469" width="0.5" height="15.0" fill="rgb(225,21,24)" rx="2" ry="2" />
<text  x="300.31" y="479.5" ></text>
</g>
<g >
<title>TORCH_LIBRARY_IMPL_init_quantized_CPU (1 samples, 0.04%)</title><rect x="267.6" y="581" width="0.6" height="15.0" fill="rgb(235,45,32)" rx="2" ry="2" />
<text  x="270.63" y="591.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::RegistryPriority&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::RegistryPriority&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.04%)</title><rect x="274.0" y="517" width="0.5" height="15.0" fill="rgb(229,55,31)" rx="2" ry="2" />
<text  x="276.99" y="527.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, c10::NamedTensorMetaInterface*, std::default_delete&lt;c10::NamedTensorMetaInterface&gt; &gt;::_Tuple_impl (1 samples, 0.04%)</title><rect x="738.4" y="165" width="0.5" height="15.0" fill="rgb(244,45,5)" rx="2" ry="2" />
<text  x="741.36" y="175.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;c10::AutogradMetaInterface, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::~unique_ptr (1 samples, 0.04%)</title><rect x="506.7" y="597" width="0.5" height="15.0" fill="rgb(212,77,37)" rx="2" ry="2" />
<text  x="509.70" y="607.5" ></text>
</g>
<g >
<title>torch::detail::TorchLibraryInit::TorchLibraryInit (1 samples, 0.04%)</title><rect x="196.6" y="597" width="0.5" height="15.0" fill="rgb(209,37,3)" rx="2" ry="2" />
<text  x="199.59" y="607.5" ></text>
</g>
<g >
<title>malloc_consolidate (7 samples, 0.31%)</title><rect x="421.4" y="213" width="3.7" height="15.0" fill="rgb(227,22,27)" rx="2" ry="2" />
<text  x="424.36" y="223.5" ></text>
</g>
<g >
<title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (2 samples, 0.09%)</title><rect x="63.5" y="677" width="1.1" height="15.0" fill="rgb(237,85,17)" rx="2" ry="2" />
<text  x="66.54" y="687.5" ></text>
</g>
<g >
<title>checked_request2size (1 samples, 0.04%)</title><rect x="294.7" y="549" width="0.5" height="15.0" fill="rgb(219,170,29)" rx="2" ry="2" />
<text  x="297.66" y="559.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;caffe2::TypeMeta&gt;::constexpr_optional_base (1 samples, 0.04%)</title><rect x="494.5" y="597" width="0.5" height="15.0" fill="rgb(243,42,39)" rx="2" ry="2" />
<text  x="497.51" y="607.5" ></text>
</g>
<g >
<title>TORCH_LIBRARY_IMPL_init_aten_SparseCPU (1 samples, 0.04%)</title><rect x="196.6" y="581" width="0.5" height="15.0" fill="rgb(241,217,50)" rx="2" ry="2" />
<text  x="199.59" y="591.5" ></text>
</g>
<g >
<title>error_entry (1 samples, 0.04%)</title><rect x="174.3" y="597" width="0.6" height="15.0" fill="rgb(252,217,26)" rx="2" ry="2" />
<text  x="177.33" y="607.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;c10::Dispatcher::OperatorDef&gt; &gt; &gt;::construct&lt;c10::Dispatcher::OperatorDef, c10::OperatorName&gt; (3 samples, 0.13%)</title><rect x="217.3" y="453" width="1.6" height="15.0" fill="rgb(214,129,28)" rx="2" ry="2" />
<text  x="220.27" y="463.5" ></text>
</g>
<g >
<title>c10::make_intrusive&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt;, c10::StorageImpl::use_byte_size_t, long&amp;, c10::DataPtr, c10::Allocator*&amp;, bool&gt; (10 samples, 0.45%)</title><rect x="1093.5" y="309" width="5.3" height="15.0" fill="rgb(216,90,8)" rx="2" ry="2" />
<text  x="1096.52" y="319.5" ></text>
</g>
<g >
<title>tryTypeMetaToScalarType (4 samples, 0.18%)</title><rect x="527.4" y="421" width="2.1" height="15.0" fill="rgb(223,195,18)" rx="2" ry="2" />
<text  x="530.38" y="431.5" ></text>
</g>
<g >
<title>at::native::get_cpu_capability (1 samples, 0.04%)</title><rect x="197.7" y="565" width="0.5" height="15.0" fill="rgb(238,138,49)" rx="2" ry="2" />
<text  x="200.65" y="575.5" ></text>
</g>
<g >
<title>insert (1 samples, 0.04%)</title><rect x="132.5" y="613" width="0.5" height="15.0" fill="rgb(218,67,9)" rx="2" ry="2" />
<text  x="135.45" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.09%)</title><rect x="67.3" y="677" width="1.0" height="15.0" fill="rgb(241,11,54)" rx="2" ry="2" />
<text  x="70.25" y="687.5" ></text>
</g>
<g >
<title>get_vma_policy.part.0 (1 samples, 0.04%)</title><rect x="181.2" y="53" width="0.6" height="15.0" fill="rgb(229,224,14)" rx="2" ry="2" />
<text  x="184.22" y="63.5" ></text>
</g>
<g >
<title>checked_request2size (1 samples, 0.04%)</title><rect x="736.8" y="133" width="0.5" height="15.0" fill="rgb(238,129,37)" rx="2" ry="2" />
<text  x="739.77" y="143.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (1 samples, 0.04%)</title><rect x="184.9" y="533" width="0.6" height="15.0" fill="rgb(207,130,11)" rx="2" ry="2" />
<text  x="187.93" y="543.5" ></text>
</g>
<g >
<title>__vfprintf_internal (1 samples, 0.04%)</title><rect x="208.8" y="373" width="0.5" height="15.0" fill="rgb(232,23,26)" rx="2" ry="2" />
<text  x="211.79" y="383.5" ></text>
</g>
<g >
<title>c10::TensorImpl::compute_contiguous (1 samples, 0.04%)</title><rect x="434.6" y="261" width="0.5" height="15.0" fill="rgb(217,24,24)" rx="2" ry="2" />
<text  x="437.61" y="271.5" ></text>
</g>
<g >
<title>c10::impl::AnnotatedKernel::~AnnotatedKernel (5 samples, 0.22%)</title><rect x="319.0" y="309" width="2.7" height="15.0" fill="rgb(225,44,20)" rx="2" ry="2" />
<text  x="322.05" y="319.5" ></text>
</g>
<g >
<title>try_charge (1 samples, 0.04%)</title><rect x="293.6" y="389" width="0.5" height="15.0" fill="rgb(249,204,44)" rx="2" ry="2" />
<text  x="296.60" y="399.5" ></text>
</g>
<g >
<title>debugString (1 samples, 0.04%)</title><rect x="252.3" y="533" width="0.5" height="15.0" fill="rgb(250,122,22)" rx="2" ry="2" />
<text  x="255.26" y="543.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseType (4 samples, 0.18%)</title><rect x="111.2" y="517" width="2.2" height="15.0" fill="rgb(248,26,23)" rx="2" ry="2" />
<text  x="114.25" y="527.5" ></text>
</g>
<g >
<title>_int_malloc (15 samples, 0.67%)</title><rect x="417.1" y="229" width="8.0" height="15.0" fill="rgb(222,74,29)" rx="2" ry="2" />
<text  x="420.12" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (1 samples, 0.04%)</title><rect x="296.8" y="549" width="0.5" height="15.0" fill="rgb(245,45,5)" rx="2" ry="2" />
<text  x="299.78" y="559.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (1 samples, 0.04%)</title><rect x="190.2" y="213" width="0.6" height="15.0" fill="rgb(233,1,45)" rx="2" ry="2" />
<text  x="193.23" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (1 samples, 0.04%)</title><rect x="319.0" y="229" width="0.6" height="15.0" fill="rgb(242,136,50)" rx="2" ry="2" />
<text  x="322.05" y="239.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.04%)</title><rect x="189.2" y="261" width="0.5" height="15.0" fill="rgb(240,35,1)" rx="2" ry="2" />
<text  x="192.17" y="271.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.04%)</title><rect x="110.2" y="565" width="0.5" height="15.0" fill="rgb(213,156,26)" rx="2" ry="2" />
<text  x="113.19" y="575.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::createFunctionSchemaFromTraitsFlattenedReturns&lt;c10::guts::function_traits&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;  (1 samples, 0.04%)</title><rect x="285.7" y="517" width="0.5" height="15.0" fill="rgb(209,29,52)" rx="2" ry="2" />
<text  x="288.65" y="527.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.04%)</title><rect x="174.9" y="485" width="0.5" height="15.0" fill="rgb(238,185,47)" rx="2" ry="2" />
<text  x="177.86" y="495.5" ></text>
</g>
<g >
<title>c10::SmallVectorImpl&lt;long&gt;::resize (1 samples, 0.04%)</title><rect x="1062.2" y="277" width="0.6" height="15.0" fill="rgb(219,176,13)" rx="2" ry="2" />
<text  x="1065.25" y="287.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;::~intrusive_ptr (21 samples, 0.94%)</title><rect x="621.7" y="501" width="11.2" height="15.0" fill="rgb(213,88,16)" rx="2" ry="2" />
<text  x="624.73" y="511.5" ></text>
</g>
<g >
<title>torch::jit::Token::text[abi:cxx11] (4 samples, 0.18%)</title><rect x="237.9" y="373" width="2.2" height="15.0" fill="rgb(216,145,29)" rx="2" ry="2" />
<text  x="240.94" y="383.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (2 samples, 0.09%)</title><rect x="105.9" y="645" width="1.1" height="15.0" fill="rgb(252,205,6)" rx="2" ry="2" />
<text  x="108.95" y="655.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor  (2 samples, 0.09%)</title><rect x="213.6" y="565" width="1.0" height="15.0" fill="rgb(253,113,42)" rx="2" ry="2" />
<text  x="216.56" y="575.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.04%)</title><rect x="260.2" y="197" width="0.5" height="15.0" fill="rgb(225,86,22)" rx="2" ry="2" />
<text  x="263.21" y="207.5" ></text>
</g>
<g >
<title>_write&lt;c10::Dispatcher::findOrRegisterName_ (1 samples, 0.04%)</title><rect x="182.3" y="485" width="0.5" height="15.0" fill="rgb(233,51,47)" rx="2" ry="2" />
<text  x="185.28" y="495.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.04%)</title><rect x="524.2" y="469" width="0.5" height="15.0" fill="rgb(252,8,51)" rx="2" ry="2" />
<text  x="527.20" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (1 samples, 0.04%)</title><rect x="190.2" y="197" width="0.6" height="15.0" fill="rgb(239,54,16)" rx="2" ry="2" />
<text  x="193.23" y="207.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;::make&lt;c10::StorageImpl::use_byte_size_t, long&amp;, c10::DataPtr, c10::Allocator*&amp;, bool&gt; (4 samples, 0.18%)</title><rect x="448.4" y="309" width="2.1" height="15.0" fill="rgb(234,177,39)" rx="2" ry="2" />
<text  x="451.39" y="319.5" ></text>
</g>
<g >
<title>c10::TensorOptions::device (1 samples, 0.04%)</title><rect x="436.2" y="325" width="0.5" height="15.0" fill="rgb(222,60,3)" rx="2" ry="2" />
<text  x="439.20" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_List_node&lt;c10::Dispatcher::OperatorDef&gt; &gt;::construct&lt;c10::Dispatcher::OperatorDef, c10::OperatorName&gt; (2 samples, 0.09%)</title><rect x="181.2" y="437" width="1.1" height="15.0" fill="rgb(216,80,28)" rx="2" ry="2" />
<text  x="184.22" y="447.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.04%)</title><rect x="162.1" y="613" width="0.6" height="15.0" fill="rgb(241,180,23)" rx="2" ry="2" />
<text  x="165.14" y="623.5" ></text>
</g>
<g >
<title>c10::TensorOptions::merge_in (20 samples, 0.90%)</title><rect x="437.8" y="325" width="10.6" height="15.0" fill="rgb(243,35,53)" rx="2" ry="2" />
<text  x="440.79" y="335.5" ></text>
</g>
<g >
<title>c10::TensorImpl::set_autograd_meta (1 samples, 0.04%)</title><rect x="362.5" y="597" width="0.5" height="15.0" fill="rgb(220,38,7)" rx="2" ry="2" />
<text  x="365.52" y="607.5" ></text>
</g>
<g >
<title>do_lookup_x (1 samples, 0.04%)</title><rect x="195.0" y="341" width="0.5" height="15.0" fill="rgb(233,182,19)" rx="2" ry="2" />
<text  x="198.00" y="351.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;c10::OperatorKernel&gt;::operator= (2 samples, 0.09%)</title><rect x="317.5" y="341" width="1.0" height="15.0" fill="rgb(244,189,0)" rx="2" ry="2" />
<text  x="320.46" y="351.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="187.1" y="485" width="0.5" height="15.0" fill="rgb(238,182,19)" rx="2" ry="2" />
<text  x="190.05" y="495.5" ></text>
</g>
<g >
<title>torch::detail::TorchLibraryInit::TorchLibraryInit (1 samples, 0.04%)</title><rect x="267.1" y="597" width="0.5" height="15.0" fill="rgb(247,132,38)" rx="2" ry="2" />
<text  x="270.10" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.04%)</title><rect x="262.9" y="597" width="0.5" height="15.0" fill="rgb(228,13,0)" rx="2" ry="2" />
<text  x="265.86" y="607.5" ></text>
</g>
<g >
<title>at::Tensor::~Tensor (1 samples, 0.04%)</title><rect x="904.3" y="597" width="0.5" height="15.0" fill="rgb(230,174,18)" rx="2" ry="2" />
<text  x="907.28" y="607.5" ></text>
</g>
<g >
<title>[libcublasLt.so.11.1.0.229] (1 samples, 0.04%)</title><rect x="173.3" y="597" width="0.5" height="15.0" fill="rgb(207,12,29)" rx="2" ry="2" />
<text  x="176.27" y="607.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.04%)</title><rect x="185.5" y="485" width="0.5" height="15.0" fill="rgb(235,226,53)" rx="2" ry="2" />
<text  x="188.46" y="495.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (1 samples, 0.04%)</title><rect x="259.1" y="341" width="0.6" height="15.0" fill="rgb(207,69,48)" rx="2" ry="2" />
<text  x="262.15" y="351.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::MemoryFormat&gt;::optional (1 samples, 0.04%)</title><rect x="450.5" y="421" width="0.5" height="15.0" fill="rgb(224,75,50)" rx="2" ry="2" />
<text  x="453.51" y="431.5" ></text>
</g>
<g >
<title>operator (1 samples, 0.04%)</title><rect x="132.5" y="565" width="0.5" height="15.0" fill="rgb(219,152,32)" rx="2" ry="2" />
<text  x="135.45" y="575.5" ></text>
</g>
<g >
<title>at::native::check_size_nonnegative (2 samples, 0.09%)</title><rect x="403.3" y="325" width="1.1" height="15.0" fill="rgb(231,55,30)" rx="2" ry="2" />
<text  x="406.33" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;std::unique_ptr&lt;caffe2::OperatorBase, std::default_delete&lt;caffe2::OperatorBase&gt; &gt;  (1 samples, 0.04%)</title><rect x="275.0" y="549" width="0.6" height="15.0" fill="rgb(220,51,7)" rx="2" ry="2" />
<text  x="278.05" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ParseContext::ParseMessage&lt;google::protobuf::DescriptorProto&gt; (2 samples, 0.09%)</title><rect x="295.7" y="517" width="1.1" height="15.0" fill="rgb(243,133,9)" rx="2" ry="2" />
<text  x="298.72" y="527.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;::make&lt;c10::StorageImpl::use_byte_size_t, long&amp;, c10::DataPtr, c10::Allocator*&amp;, bool&gt; (10 samples, 0.45%)</title><rect x="1093.5" y="293" width="5.3" height="15.0" fill="rgb(225,186,7)" rx="2" ry="2" />
<text  x="1096.52" y="303.5" ></text>
</g>
<g >
<title>do_mmap (3 samples, 0.13%)</title><rect x="1106.8" y="405" width="1.6" height="15.0" fill="rgb(240,52,13)" rx="2" ry="2" />
<text  x="1109.77" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;torch::jit::Token&gt;::destroy&lt;torch::jit::Token&gt; (1 samples, 0.04%)</title><rect x="240.1" y="357" width="0.5" height="15.0" fill="rgb(241,156,25)" rx="2" ry="2" />
<text  x="243.06" y="367.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.04%)</title><rect x="98.5" y="693" width="0.6" height="15.0" fill="rgb(222,51,9)" rx="2" ry="2" />
<text  x="101.53" y="703.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.04%)</title><rect x="1109.4" y="421" width="0.6" height="15.0" fill="rgb(214,129,43)" rx="2" ry="2" />
<text  x="1112.42" y="431.5" ></text>
</g>
<g >
<title>torch::empty (174 samples, 7.82%)</title><rect x="361.5" y="629" width="92.2" height="15.0" fill="rgb(210,8,38)" rx="2" ry="2" />
<text  x="364.46" y="639.5" >torch::empty</text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::VariableVersion::VersionCounter, c10::detail::intrusive_target_default_null_type&lt;c10::VariableVersion::VersionCounter&gt; &gt;::~intrusive_ptr (17 samples, 0.76%)</title><rect x="339.2" y="533" width="9.0" height="15.0" fill="rgb(243,190,3)" rx="2" ry="2" />
<text  x="342.19" y="543.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (3 samples, 0.13%)</title><rect x="240.1" y="421" width="1.6" height="15.0" fill="rgb(248,8,28)" rx="2" ry="2" />
<text  x="243.06" y="431.5" ></text>
</g>
<g >
<title>checked_request2size (1 samples, 0.04%)</title><rect x="425.1" y="229" width="0.5" height="15.0" fill="rgb(217,71,51)" rx="2" ry="2" />
<text  x="428.07" y="239.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="276.6" y="501" width="0.6" height="15.0" fill="rgb(232,214,30)" rx="2" ry="2" />
<text  x="279.64" y="511.5" ></text>
</g>
<g >
<title>_int_memalign (61 samples, 2.74%)</title><rect x="1012.4" y="229" width="32.4" height="15.0" fill="rgb(208,173,16)" rx="2" ry="2" />
<text  x="1015.42" y="239.5" >_i..</text>
</g>
<g >
<title>_int_malloc (1 samples, 0.04%)</title><rect x="173.8" y="549" width="0.5" height="15.0" fill="rgb(229,105,27)" rx="2" ry="2" />
<text  x="176.80" y="559.5" ></text>
</g>
<g >
<title>do_page_fault (2 samples, 0.09%)</title><rect x="229.5" y="261" width="1.0" height="15.0" fill="rgb(243,55,26)" rx="2" ry="2" />
<text  x="232.46" y="271.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;c10::Type&gt;::shared_ptr (1 samples, 0.04%)</title><rect x="195.5" y="373" width="0.6" height="15.0" fill="rgb(222,20,12)" rx="2" ry="2" />
<text  x="198.53" y="383.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseBaseType (2 samples, 0.09%)</title><rect x="166.4" y="517" width="1.0" height="15.0" fill="rgb(241,78,53)" rx="2" ry="2" />
<text  x="169.38" y="527.5" ></text>
</g>
<g >
<title>torch::autograd::make_variable (30 samples, 1.35%)</title><rect x="904.8" y="597" width="15.9" height="15.0" fill="rgb(239,209,50)" rx="2" ry="2" />
<text  x="907.81" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;c10::Symbol, true&gt; &gt; &gt;::operator (1 samples, 0.04%)</title><rect x="212.5" y="229" width="0.5" height="15.0" fill="rgb(239,142,21)" rx="2" ry="2" />
<text  x="215.50" y="239.5" ></text>
</g>
<g >
<title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (289 samples, 12.98%)</title><rect x="948.8" y="485" width="153.2" height="15.0" fill="rgb(225,8,7)" rx="2" ry="2" />
<text  x="951.81" y="495.5" >c10::impl::wrap_ker..</text>
</g>
<g >
<title>c10::detail::infer_schema::createFunctionSchemaFromTraitsFlattenedReturns&lt;c10::guts::function_traits&lt;at::Tensor  (2 samples, 0.09%)</title><rect x="176.5" y="501" width="1.0" height="15.0" fill="rgb(211,173,43)" rx="2" ry="2" />
<text  x="179.45" y="511.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.04%)</title><rect x="226.3" y="357" width="0.5" height="15.0" fill="rgb(250,104,21)" rx="2" ry="2" />
<text  x="229.28" y="367.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_tmpxft_0001b5ef_00000000_6_asin_op.compute_70.cudafe1.cpp (1 samples, 0.04%)</title><rect x="270.3" y="613" width="0.5" height="15.0" fill="rgb(240,13,16)" rx="2" ry="2" />
<text  x="273.28" y="623.5" ></text>
</g>
<g >
<title>read&lt;c10::Dispatcher::findOp (1 samples, 0.04%)</title><rect x="250.1" y="485" width="0.6" height="15.0" fill="rgb(226,209,49)" rx="2" ry="2" />
<text  x="253.13" y="495.5" ></text>
</g>
<g >
<title>std::make_unique&lt;torch::jit::BuiltinOpFunction, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, c10::FunctionSchema, torch::class_&lt;ConvPackedParamsBase&lt;3&gt; &gt;::defineMethod&lt;torch::detail::WrapMethod&lt;c10::List&lt;long&gt;  (1 samples, 0.04%)</title><rect x="262.3" y="549" width="0.6" height="15.0" fill="rgb(249,129,36)" rx="2" ry="2" />
<text  x="265.33" y="559.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.04%)</title><rect x="288.3" y="533" width="0.5" height="15.0" fill="rgb(241,135,4)" rx="2" ry="2" />
<text  x="291.30" y="543.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.09%)</title><rect x="1152.9" y="437" width="1.1" height="15.0" fill="rgb(222,164,43)" rx="2" ry="2" />
<text  x="1155.89" y="447.5" ></text>
</g>
<g >
<title>TORCH_LIBRARY_FRAGMENT_init_aten_k (1 samples, 0.04%)</title><rect x="195.0" y="581" width="0.5" height="15.0" fill="rgb(227,221,32)" rx="2" ry="2" />
<text  x="198.00" y="591.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, torch::CppFunction&gt; (1 samples, 0.04%)</title><rect x="254.9" y="549" width="0.5" height="15.0" fill="rgb(226,25,53)" rx="2" ry="2" />
<text  x="257.91" y="559.5" ></text>
</g>
<g >
<title>c10::Type::isSubtypeOfExt (1 samples, 0.04%)</title><rect x="13.7" y="677" width="0.5" height="15.0" fill="rgb(220,194,43)" rx="2" ry="2" />
<text  x="16.71" y="687.5" ></text>
</g>
<g >
<title>tcache_get (2 samples, 0.09%)</title><rect x="591.5" y="261" width="1.1" height="15.0" fill="rgb(219,71,35)" rx="2" ry="2" />
<text  x="594.52" y="271.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.04%)</title><rect x="197.1" y="517" width="0.6" height="15.0" fill="rgb(220,112,27)" rx="2" ry="2" />
<text  x="200.12" y="527.5" ></text>
</g>
<g >
<title>c10::SmallVector&lt;unsigned long, 4u&gt;::SmallVector (3 samples, 0.13%)</title><rect x="714.0" y="389" width="1.6" height="15.0" fill="rgb(235,158,12)" rx="2" ry="2" />
<text  x="716.97" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;at::RecordFunctionCallback, unsigned long&gt;, std::allocator&lt;std::pair&lt;at::RecordFunctionCallback, unsigned long&gt; &gt; &gt;::empty (2 samples, 0.09%)</title><rect x="712.9" y="341" width="1.1" height="15.0" fill="rgb(223,4,39)" rx="2" ry="2" />
<text  x="715.91" y="351.5" ></text>
</g>
<g >
<title>SchemaParser (1 samples, 0.04%)</title><rect x="248.5" y="501" width="0.6" height="15.0" fill="rgb(222,158,3)" rx="2" ry="2" />
<text  x="251.54" y="511.5" ></text>
</g>
<g >
<title>parseDeclarations (4 samples, 0.18%)</title><rect x="211.4" y="485" width="2.2" height="15.0" fill="rgb(222,215,54)" rx="2" ry="2" />
<text  x="214.44" y="495.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="98.0" y="661" width="0.5" height="15.0" fill="rgb(232,215,13)" rx="2" ry="2" />
<text  x="101.00" y="671.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.04%)</title><rect x="213.0" y="373" width="0.6" height="15.0" fill="rgb(206,2,36)" rx="2" ry="2" />
<text  x="216.03" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (1 samples, 0.04%)</title><rect x="276.6" y="549" width="0.6" height="15.0" fill="rgb(206,108,18)" rx="2" ry="2" />
<text  x="279.64" y="559.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;::~intrusive_ptr (2 samples, 0.09%)</title><rect x="975.3" y="245" width="1.1" height="15.0" fill="rgb(249,119,11)" rx="2" ry="2" />
<text  x="978.31" y="255.5" ></text>
</g>
<g >
<title>std::__array_traits&lt;c10::KernelFunction, 38ul&gt;::_S_ref (1 samples, 0.04%)</title><rect x="594.2" y="389" width="0.5" height="15.0" fill="rgb(251,134,27)" rx="2" ry="2" />
<text  x="597.17" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign&lt;char*, void&gt; (1 samples, 0.04%)</title><rect x="183.3" y="485" width="0.6" height="15.0" fill="rgb(205,63,17)" rx="2" ry="2" />
<text  x="186.34" y="495.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1 samples, 0.04%)</title><rect x="257.0" y="453" width="0.6" height="15.0" fill="rgb(206,94,9)" rx="2" ry="2" />
<text  x="260.03" y="463.5" ></text>
</g>
<g >
<title>_write&lt;c10::Dispatcher::findOrRegisterName_ (2 samples, 0.09%)</title><rect x="191.8" y="485" width="1.1" height="15.0" fill="rgb(246,186,27)" rx="2" ry="2" />
<text  x="194.82" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;c10::RegistrationHandleRAII&gt;::construct&lt;c10::RegistrationHandleRAII, c10::RegistrationHandleRAII&gt; (1 samples, 0.04%)</title><rect x="187.6" y="501" width="0.5" height="15.0" fill="rgb(233,198,20)" rx="2" ry="2" />
<text  x="190.58" y="511.5" ></text>
</g>
<g >
<title>c10::SmallVectorTemplateCommon&lt;long, void&gt;::SmallVectorTemplateCommon (3 samples, 0.13%)</title><rect x="734.6" y="165" width="1.6" height="15.0" fill="rgb(217,2,28)" rx="2" ry="2" />
<text  x="737.65" y="175.5" ></text>
</g>
<g >
<title>__atomic_add_dispatch (1 samples, 0.04%)</title><rect x="166.4" y="437" width="0.5" height="15.0" fill="rgb(232,165,37)" rx="2" ry="2" />
<text  x="169.38" y="447.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="283.0" y="485" width="0.5" height="15.0" fill="rgb(247,36,22)" rx="2" ry="2" />
<text  x="286.00" y="495.5" ></text>
</g>
<g >
<title>c10::SmallVectorImpl&lt;long&gt;::SmallVectorImpl (1 samples, 0.04%)</title><rect x="543.3" y="213" width="0.5" height="15.0" fill="rgb(221,171,27)" rx="2" ry="2" />
<text  x="546.28" y="223.5" ></text>
</g>
<g >
<title>debugString (1 samples, 0.04%)</title><rect x="205.1" y="533" width="0.5" height="15.0" fill="rgb(244,46,20)" rx="2" ry="2" />
<text  x="208.08" y="543.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="277.2" y="517" width="0.5" height="15.0" fill="rgb(207,35,1)" rx="2" ry="2" />
<text  x="280.17" y="527.5" ></text>
</g>
<g >
<title>c10::TensorOptions::TensorOptions (6 samples, 0.27%)</title><rect x="1067.0" y="309" width="3.2" height="15.0" fill="rgb(237,152,10)" rx="2" ry="2" />
<text  x="1070.02" y="319.5" ></text>
</g>
<g >
<title>c10::impl::ExcludeDispatchKeyGuard::ExcludeDispatchKeyGuard (1 samples, 0.04%)</title><rect x="88.5" y="677" width="0.5" height="15.0" fill="rgb(247,116,50)" rx="2" ry="2" />
<text  x="91.45" y="687.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (3 samples, 0.13%)</title><rect x="671.0" y="581" width="1.6" height="15.0" fill="rgb(220,21,6)" rx="2" ry="2" />
<text  x="674.03" y="591.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.04%)</title><rect x="291.0" y="501" width="0.5" height="15.0" fill="rgb(243,191,31)" rx="2" ry="2" />
<text  x="293.95" y="511.5" ></text>
</g>
<g >
<title>c10::OperatorName::setNamespaceIfNotSet (1 samples, 0.04%)</title><rect x="209.3" y="533" width="0.5" height="15.0" fill="rgb(209,39,39)" rx="2" ry="2" />
<text  x="212.32" y="543.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt; &gt; &gt; &gt;::deallocate (1 samples, 0.04%)</title><rect x="321.7" y="261" width="0.5" height="15.0" fill="rgb(216,128,36)" rx="2" ry="2" />
<text  x="324.70" y="271.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.04%)</title><rect x="264.4" y="613" width="0.6" height="15.0" fill="rgb(235,194,41)" rx="2" ry="2" />
<text  x="267.45" y="623.5" ></text>
</g>
<g >
<title>torch::CppFunction::CppFunction&lt;at::Tensor  (2 samples, 0.09%)</title><rect x="176.5" y="549" width="1.0" height="15.0" fill="rgb(216,194,43)" rx="2" ry="2" />
<text  x="179.45" y="559.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;c10::Argument*, c10::Argument&gt; (1 samples, 0.04%)</title><rect x="322.2" y="325" width="0.6" height="15.0" fill="rgb(242,48,22)" rx="2" ry="2" />
<text  x="325.23" y="335.5" ></text>
</g>
<g >
<title>malloc_consolidate (11 samples, 0.49%)</title><rect x="771.8" y="197" width="5.8" height="15.0" fill="rgb(220,114,4)" rx="2" ry="2" />
<text  x="774.75" y="207.5" ></text>
</g>
<g >
<title>c10::profiledCPUMemoryReporter (4 samples, 0.18%)</title><rect x="1166.1" y="693" width="2.2" height="15.0" fill="rgb(207,184,48)" rx="2" ry="2" />
<text  x="1169.15" y="703.5" ></text>
</g>
<g >
<title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, c10::OperatorName, std::hash&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueHasher&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::hash&lt;c10::OperatorName&gt; &gt;, std::equal_to&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueEquality&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::equal_to&lt;c10::OperatorName&gt; &gt;, std::allocator&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt; &gt; &gt;::find (2 samples, 0.09%)</title><rect x="215.7" y="437" width="1.0" height="15.0" fill="rgb(236,49,21)" rx="2" ry="2" />
<text  x="218.68" y="447.5" ></text>
</g>
<g >
<title>c10::DefaultCPUAllocator::allocate (43 samples, 1.93%)</title><rect x="551.2" y="325" width="22.8" height="15.0" fill="rgb(220,65,49)" rx="2" ry="2" />
<text  x="554.23" y="335.5" >c..</text>
</g>
<g >
<title>std::_Vector_base&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::_Vector_base (1 samples, 0.04%)</title><rect x="287.8" y="549" width="0.5" height="15.0" fill="rgb(212,161,48)" rx="2" ry="2" />
<text  x="290.77" y="559.5" ></text>
</g>
<g >
<title>c10::TensorOptions::requires_grad (5 samples, 0.22%)</title><rect x="596.8" y="597" width="2.7" height="15.0" fill="rgb(214,203,33)" rx="2" ry="2" />
<text  x="599.82" y="607.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (2 samples, 0.09%)</title><rect x="227.9" y="453" width="1.0" height="15.0" fill="rgb(245,11,51)" rx="2" ry="2" />
<text  x="230.87" y="463.5" ></text>
</g>
<g >
<title>torch::jit::parseName (1 samples, 0.04%)</title><rect x="214.6" y="533" width="0.5" height="15.0" fill="rgb(243,120,19)" rx="2" ry="2" />
<text  x="217.62" y="543.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (1 samples, 0.04%)</title><rect x="201.4" y="389" width="0.5" height="15.0" fill="rgb(229,16,25)" rx="2" ry="2" />
<text  x="204.37" y="399.5" ></text>
</g>
<g >
<title>c10::Device::validate (1 samples, 0.04%)</title><rect x="593.6" y="341" width="0.6" height="15.0" fill="rgb(230,82,0)" rx="2" ry="2" />
<text  x="596.64" y="351.5" ></text>
</g>
<g >
<title>c10::TensorImpl::compute_contiguous (1 samples, 0.04%)</title><rect x="580.9" y="277" width="0.5" height="15.0" fill="rgb(237,114,39)" rx="2" ry="2" />
<text  x="583.92" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;torch::jit::Token&gt;::allocate (1 samples, 0.04%)</title><rect x="214.6" y="373" width="0.5" height="15.0" fill="rgb(214,183,41)" rx="2" ry="2" />
<text  x="217.62" y="383.5" ></text>
</g>
<g >
<title>__mod_memcg_state (1 samples, 0.04%)</title><rect x="284.6" y="309" width="0.5" height="15.0" fill="rgb(238,184,7)" rx="2" ry="2" />
<text  x="287.59" y="319.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (1 samples, 0.04%)</title><rect x="666.8" y="581" width="0.5" height="15.0" fill="rgb(206,154,42)" rx="2" ry="2" />
<text  x="669.79" y="591.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (35 samples, 1.57%)</title><rect x="460.6" y="597" width="18.5" height="15.0" fill="rgb(253,215,24)" rx="2" ry="2" />
<text  x="463.58" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.04%)</title><rect x="319.0" y="277" width="0.6" height="15.0" fill="rgb(221,168,54)" rx="2" ry="2" />
<text  x="322.05" y="287.5" ></text>
</g>
<g >
<title>[libcufft.so.10.2.0.218] (2 samples, 0.09%)</title><rect x="173.8" y="613" width="1.1" height="15.0" fill="rgb(233,37,15)" rx="2" ry="2" />
<text  x="176.80" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_List_node&lt;c10::Dispatcher::OperatorDef&gt; &gt;::allocate (1 samples, 0.04%)</title><rect x="180.7" y="421" width="0.5" height="15.0" fill="rgb(235,17,50)" rx="2" ry="2" />
<text  x="183.69" y="431.5" ></text>
</g>
<g >
<title>parseList (1 samples, 0.04%)</title><rect x="195.0" y="453" width="0.5" height="15.0" fill="rgb(242,172,21)" rx="2" ry="2" />
<text  x="198.00" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt; &gt; &gt;::deallocate (1 samples, 0.04%)</title><rect x="321.7" y="245" width="0.5" height="15.0" fill="rgb(216,33,45)" rx="2" ry="2" />
<text  x="324.70" y="255.5" ></text>
</g>
<g >
<title>c10::KernelFunction::call&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::TensorOptions const&amp;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (113 samples, 5.08%)</title><rect x="534.3" y="421" width="59.9" height="15.0" fill="rgb(229,73,6)" rx="2" ry="2" />
<text  x="537.27" y="431.5" >c10::K..</text>
</g>
<g >
<title>torch::autograd::AutogradMeta::~AutogradMeta (1 samples, 0.04%)</title><rect x="1164.0" y="661" width="0.6" height="15.0" fill="rgb(244,37,34)" rx="2" ry="2" />
<text  x="1167.03" y="671.5" ></text>
</g>
<g >
<title>std::atomic&lt;unsigned long&gt;::atomic (1 samples, 0.04%)</title><rect x="737.8" y="197" width="0.6" height="15.0" fill="rgb(247,181,30)" rx="2" ry="2" />
<text  x="740.83" y="207.5" ></text>
</g>
<g >
<title>c10::inferFunctionSchemaFlattenedReturns&lt;at::Tensor  (1 samples, 0.04%)</title><rect x="184.9" y="517" width="0.6" height="15.0" fill="rgb(246,152,7)" rx="2" ry="2" />
<text  x="187.93" y="527.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.04%)</title><rect x="231.6" y="341" width="0.5" height="15.0" fill="rgb(226,142,17)" rx="2" ry="2" />
<text  x="234.58" y="351.5" ></text>
</g>
<g >
<title>finish_fault (2 samples, 0.09%)</title><rect x="1154.0" y="453" width="1.0" height="15.0" fill="rgb(222,106,5)" rx="2" ry="2" />
<text  x="1156.95" y="463.5" ></text>
</g>
<g >
<title>torch::autograd::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Autograd (3 samples, 0.13%)</title><rect x="250.1" y="565" width="1.6" height="15.0" fill="rgb(237,219,41)" rx="2" ry="2" />
<text  x="253.13" y="575.5" ></text>
</g>
<g >
<title>c10::guts::to_string&lt;unsigned long&gt; (1 samples, 0.04%)</title><rect x="213.6" y="453" width="0.5" height="15.0" fill="rgb(254,210,52)" rx="2" ry="2" />
<text  x="216.56" y="463.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, c10::IValue&gt;::pair&lt;char const*, c10::IValue, true&gt; (1 samples, 0.04%)</title><rect x="285.1" y="613" width="0.6" height="15.0" fill="rgb(215,66,7)" rx="2" ry="2" />
<text  x="288.12" y="623.5" ></text>
</g>
<g >
<title>caffe2::detail::make_function_schema_for_c10 (1 samples, 0.04%)</title><rect x="280.9" y="597" width="0.5" height="15.0" fill="rgb(232,139,51)" rx="2" ry="2" />
<text  x="283.88" y="607.5" ></text>
</g>
<g >
<title>c10::TensorImpl::empty_tensor_restride (9 samples, 0.40%)</title><rect x="1061.2" y="293" width="4.8" height="15.0" fill="rgb(232,182,13)" rx="2" ry="2" />
<text  x="1064.19" y="303.5" ></text>
</g>
<g >
<title>c10::DispatchKeySet::operator- (1 samples, 0.04%)</title><rect x="371.0" y="565" width="0.5" height="15.0" fill="rgb(216,57,27)" rx="2" ry="2" />
<text  x="374.00" y="575.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::_M_allocate (1 samples, 0.04%)</title><rect x="186.0" y="437" width="0.5" height="15.0" fill="rgb(233,92,41)" rx="2" ry="2" />
<text  x="188.99" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::Symbol&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::Symbol&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (1 samples, 0.04%)</title><rect x="189.7" y="517" width="0.5" height="15.0" fill="rgb(250,183,42)" rx="2" ry="2" />
<text  x="192.70" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt;, true&gt; &gt; &gt;::allocate (1 samples, 0.04%)</title><rect x="110.7" y="549" width="0.5" height="15.0" fill="rgb(223,201,34)" rx="2" ry="2" />
<text  x="113.72" y="559.5" ></text>
</g>
<g >
<title>at::RecordFunction::RecordFunction (5 samples, 0.22%)</title><rect x="38.6" y="677" width="2.7" height="15.0" fill="rgb(206,73,49)" rx="2" ry="2" />
<text  x="41.63" y="687.5" ></text>
</g>
<g >
<title>std::default_delete&lt;c10::AutogradMetaInterface&gt;::operator (18 samples, 0.81%)</title><rect x="855.0" y="533" width="9.5" height="15.0" fill="rgb(233,179,27)" rx="2" ry="2" />
<text  x="857.98" y="543.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.04%)</title><rect x="229.5" y="117" width="0.5" height="15.0" fill="rgb(209,168,45)" rx="2" ry="2" />
<text  x="232.46" y="127.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;c10::Type&gt;::shared_ptr (1 samples, 0.04%)</title><rect x="153.1" y="501" width="0.6" height="15.0" fill="rgb(213,0,29)" rx="2" ry="2" />
<text  x="156.13" y="511.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, c10::RegistryPriority, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::RegistryPriority&gt; &gt; &gt;::operator[] (1 samples, 0.04%)</title><rect x="270.3" y="549" width="0.5" height="15.0" fill="rgb(211,108,23)" rx="2" ry="2" />
<text  x="273.28" y="559.5" ></text>
</g>
<g >
<title>c10::StorageImpl::release_resources (4 samples, 0.18%)</title><rect x="467.5" y="485" width="2.1" height="15.0" fill="rgb(236,193,46)" rx="2" ry="2" />
<text  x="470.48" y="495.5" ></text>
</g>
<g >
<title>std::make_shared&lt;torch::jit::Source, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.04%)</title><rect x="227.3" y="469" width="0.6" height="15.0" fill="rgb(224,53,6)" rx="2" ry="2" />
<text  x="230.34" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (1 samples, 0.04%)</title><rect x="211.4" y="357" width="0.6" height="15.0" fill="rgb(213,39,12)" rx="2" ry="2" />
<text  x="214.44" y="367.5" ></text>
</g>
<g >
<title>torch::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Tracer (1 samples, 0.04%)</title><rect x="207.2" y="565" width="0.5" height="15.0" fill="rgb(226,115,44)" rx="2" ry="2" />
<text  x="210.20" y="575.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.04%)</title><rect x="269.7" y="565" width="0.6" height="15.0" fill="rgb(220,46,53)" rx="2" ry="2" />
<text  x="272.75" y="575.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;c10::IValue, std::allocator&lt;c10::IValue&gt; &gt;::_Vector_impl_data::_Vector_impl_data (1 samples, 0.04%)</title><rect x="957.8" y="341" width="0.5" height="15.0" fill="rgb(250,224,34)" rx="2" ry="2" />
<text  x="960.82" y="351.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.04%)</title><rect x="514.7" y="565" width="0.5" height="15.0" fill="rgb(213,112,41)" rx="2" ry="2" />
<text  x="517.65" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;torch::jit::Operator&gt;, std::allocator&lt;std::shared_ptr&lt;torch::jit::Operator&gt; &gt; &gt;::push_back (1 samples, 0.04%)</title><rect x="297.3" y="533" width="0.5" height="15.0" fill="rgb(222,29,38)" rx="2" ry="2" />
<text  x="300.31" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (1 samples, 0.04%)</title><rect x="296.3" y="405" width="0.5" height="15.0" fill="rgb(210,146,13)" rx="2" ry="2" />
<text  x="299.25" y="415.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="285.1" y="549" width="0.6" height="15.0" fill="rgb(206,138,35)" rx="2" ry="2" />
<text  x="288.12" y="559.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;c10::RegistrationHandleRAII*, c10::RegistrationHandleRAII&gt; (25 samples, 1.12%)</title><rect x="312.2" y="533" width="13.2" height="15.0" fill="rgb(213,197,53)" rx="2" ry="2" />
<text  x="315.16" y="543.5" ></text>
</g>
<g >
<title>micro_requires_grad_false (428 samples, 19.23%)</title><rect x="599.5" y="629" width="226.9" height="15.0" fill="rgb(239,52,37)" rx="2" ry="2" />
<text  x="602.47" y="639.5" >micro_requires_grad_false</text>
</g>
<g >
<title>torch::detail::TorchLibraryInit::TorchLibraryInit (74 samples, 3.32%)</title><rect x="210.4" y="597" width="39.2" height="15.0" fill="rgb(242,1,25)" rx="2" ry="2" />
<text  x="213.38" y="607.5" >tor..</text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.04%)</title><rect x="166.9" y="485" width="0.5" height="15.0" fill="rgb(241,62,22)" rx="2" ry="2" />
<text  x="169.91" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::_M_create_storage (1 samples, 0.04%)</title><rect x="287.8" y="533" width="0.5" height="15.0" fill="rgb(216,209,34)" rx="2" ry="2" />
<text  x="290.77" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;c10::Dispatcher::OperatorDef, std::allocator&lt;c10::Dispatcher::OperatorDef&gt; &gt;::emplace_back&lt;c10::OperatorName&gt; (3 samples, 0.13%)</title><rect x="180.7" y="501" width="1.6" height="15.0" fill="rgb(217,97,50)" rx="2" ry="2" />
<text  x="183.69" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::DescriptorPool::InternalAddGeneratedFile (2 samples, 0.09%)</title><rect x="295.7" y="613" width="1.1" height="15.0" fill="rgb(231,3,47)" rx="2" ry="2" />
<text  x="298.72" y="623.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.04%)</title><rect x="153.1" y="645" width="0.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="156.13" y="655.5" ></text>
</g>
<g >
<title>c10::impl::tls_local_dispatch_key_set (3 samples, 0.13%)</title><rect x="695.4" y="485" width="1.6" height="15.0" fill="rgb(217,194,43)" rx="2" ry="2" />
<text  x="698.42" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (1 samples, 0.04%)</title><rect x="182.3" y="341" width="0.5" height="15.0" fill="rgb(250,156,35)" rx="2" ry="2" />
<text  x="185.28" y="351.5" ></text>
</g>
<g >
<title>_M_invoke (1 samples, 0.04%)</title><rect x="212.5" y="325" width="0.5" height="15.0" fill="rgb(213,61,42)" rx="2" ry="2" />
<text  x="215.50" y="335.5" ></text>
</g>
<g >
<title>Xbyak::Reg::Reg (1 samples, 0.04%)</title><rect x="263.9" y="581" width="0.5" height="15.0" fill="rgb(233,219,18)" rx="2" ry="2" />
<text  x="266.92" y="591.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="274.5" y="373" width="0.5" height="15.0" fill="rgb(232,138,17)" rx="2" ry="2" />
<text  x="277.52" y="383.5" ></text>
</g>
<g >
<title>_callWriteFuncOnBackgroundInstance&lt;c10::Dispatcher::findOrRegisterName_ (2 samples, 0.09%)</title><rect x="191.8" y="469" width="1.1" height="15.0" fill="rgb(209,126,11)" rx="2" ry="2" />
<text  x="194.82" y="479.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.04%)</title><rect x="781.8" y="277" width="0.6" height="15.0" fill="rgb(209,90,16)" rx="2" ry="2" />
<text  x="784.82" y="287.5" ></text>
</g>
<g >
<title>c10::optional_base&lt;c10::AliasInfo&gt;::optional_base (1 samples, 0.04%)</title><rect x="236.9" y="341" width="0.5" height="15.0" fill="rgb(238,37,33)" rx="2" ry="2" />
<text  x="239.88" y="351.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.04%)</title><rect x="267.1" y="453" width="0.5" height="15.0" fill="rgb(240,164,3)" rx="2" ry="2" />
<text  x="270.10" y="463.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseList (1 samples, 0.04%)</title><rect x="169.6" y="533" width="0.5" height="15.0" fill="rgb(245,206,52)" rx="2" ry="2" />
<text  x="172.56" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;torch::jit::Operator&gt;*, std::vector&lt;std::shared_ptr&lt;torch::jit::Operator&gt;, std::allocator&lt;std::shared_ptr&lt;torch::jit::Operator&gt; &gt; &gt; &gt;::operator++ (1 samples, 0.04%)</title><rect x="309.5" y="357" width="0.5" height="15.0" fill="rgb(244,80,40)" rx="2" ry="2" />
<text  x="312.51" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::_S_do_relocate (1 samples, 0.04%)</title><rect x="288.8" y="437" width="0.6" height="15.0" fill="rgb(211,142,35)" rx="2" ry="2" />
<text  x="291.83" y="447.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.04%)</title><rect x="272.4" y="405" width="0.5" height="15.0" fill="rgb(230,128,2)" rx="2" ry="2" />
<text  x="275.40" y="415.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (1 samples, 0.04%)</title><rect x="113.9" y="469" width="0.5" height="15.0" fill="rgb(241,179,36)" rx="2" ry="2" />
<text  x="116.90" y="479.5" ></text>
</g>
<g >
<title>c10::DispatchKeyExtractor::dispatchKeySetToDispatchKey_ (2 samples, 0.09%)</title><rect x="520.0" y="533" width="1.0" height="15.0" fill="rgb(221,34,10)" rx="2" ry="2" />
<text  x="522.96" y="543.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::OperatorEntry (1 samples, 0.04%)</title><rect x="210.4" y="405" width="0.5" height="15.0" fill="rgb(212,106,40)" rx="2" ry="2" />
<text  x="213.38" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;void, void  (16 samples, 0.72%)</title><rect x="846.0" y="421" width="8.4" height="15.0" fill="rgb(234,42,32)" rx="2" ry="2" />
<text  x="848.97" y="431.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.04%)</title><rect x="196.1" y="549" width="0.5" height="15.0" fill="rgb(231,36,1)" rx="2" ry="2" />
<text  x="199.06" y="559.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (2 samples, 0.09%)</title><rect x="250.1" y="533" width="1.1" height="15.0" fill="rgb(221,64,52)" rx="2" ry="2" />
<text  x="253.13" y="543.5" ></text>
</g>
<g >
<title>c10::SmallVectorTemplateCommon&lt;long, void&gt;::size (1 samples, 0.04%)</title><rect x="1059.6" y="277" width="0.5" height="15.0" fill="rgb(219,165,40)" rx="2" ry="2" />
<text  x="1062.60" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str (1 samples, 0.04%)</title><rect x="205.1" y="469" width="0.5" height="15.0" fill="rgb(234,117,31)" rx="2" ry="2" />
<text  x="208.08" y="479.5" ></text>
</g>
<g >
<title>__cxa_demangle (1 samples, 0.04%)</title><rect x="261.8" y="565" width="0.5" height="15.0" fill="rgb(234,129,17)" rx="2" ry="2" />
<text  x="264.80" y="575.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (1 samples, 0.04%)</title><rect x="904.3" y="565" width="0.5" height="15.0" fill="rgb(235,122,47)" rx="2" ry="2" />
<text  x="907.28" y="575.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1147.6" y="501" width="0.5" height="15.0" fill="rgb(230,188,54)" rx="2" ry="2" />
<text  x="1150.59" y="511.5" ></text>
</g>
<g >
<title>c10::TensorImpl::refresh_contiguous (5 samples, 0.22%)</title><rect x="1051.1" y="293" width="2.7" height="15.0" fill="rgb(214,59,44)" rx="2" ry="2" />
<text  x="1054.11" y="303.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;::operator= (16 samples, 0.72%)</title><rect x="846.0" y="533" width="8.4" height="15.0" fill="rgb(215,52,27)" rx="2" ry="2" />
<text  x="848.97" y="543.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="174.9" y="565" width="0.5" height="15.0" fill="rgb(251,147,50)" rx="2" ry="2" />
<text  x="177.86" y="575.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (1 samples, 0.04%)</title><rect x="257.0" y="533" width="0.6" height="15.0" fill="rgb(243,95,32)" rx="2" ry="2" />
<text  x="260.03" y="543.5" ></text>
</g>
<g >
<title>do_sys_open (1 samples, 0.04%)</title><rect x="1110.5" y="453" width="0.5" height="15.0" fill="rgb(238,100,39)" rx="2" ry="2" />
<text  x="1113.49" y="463.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (3 samples, 0.13%)</title><rect x="105.4" y="661" width="1.6" height="15.0" fill="rgb(205,229,36)" rx="2" ry="2" />
<text  x="108.42" y="671.5" ></text>
</g>
<g >
<title>_mid_memalign (64 samples, 2.88%)</title><rect x="1010.8" y="245" width="34.0" height="15.0" fill="rgb(251,45,16)" rx="2" ry="2" />
<text  x="1013.83" y="255.5" >_m..</text>
</g>
<g >
<title>c10::detail::UniqueVoidPtr::clear (7 samples, 0.31%)</title><rect x="334.4" y="453" width="3.7" height="15.0" fill="rgb(222,169,4)" rx="2" ry="2" />
<text  x="337.42" y="463.5" ></text>
</g>
<g >
<title>c10::raw::intrusive_ptr::decref (1 samples, 0.04%)</title><rect x="320.1" y="101" width="0.5" height="15.0" fill="rgb(250,42,10)" rx="2" ry="2" />
<text  x="323.11" y="111.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::allocate (1 samples, 0.04%)</title><rect x="188.1" y="245" width="0.5" height="15.0" fill="rgb(240,200,52)" rx="2" ry="2" />
<text  x="191.11" y="255.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.04%)</title><rect x="269.2" y="357" width="0.5" height="15.0" fill="rgb(236,120,10)" rx="2" ry="2" />
<text  x="272.22" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="182.3" y="357" width="0.5" height="15.0" fill="rgb(222,54,29)" rx="2" ry="2" />
<text  x="185.28" y="367.5" ></text>
</g>
<g >
<title>at::prod_intlist (1 samples, 0.04%)</title><rect x="747.4" y="309" width="0.5" height="15.0" fill="rgb(239,138,35)" rx="2" ry="2" />
<text  x="750.37" y="319.5" ></text>
</g>
<g >
<title>c10::guts::detail::to_string_&lt;unsigned long, void&gt;::call[abi:cxx11] (1 samples, 0.04%)</title><rect x="203.5" y="437" width="0.5" height="15.0" fill="rgb(222,192,3)" rx="2" ry="2" />
<text  x="206.49" y="447.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;torch::jit::Source,  (1 samples, 0.04%)</title><rect x="214.1" y="341" width="0.5" height="15.0" fill="rgb(214,2,5)" rx="2" ry="2" />
<text  x="217.09" y="351.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::MemoryFormat&gt;::optional (2 samples, 0.09%)</title><rect x="821.6" y="565" width="1.0" height="15.0" fill="rgb(214,81,15)" rx="2" ry="2" />
<text  x="824.58" y="575.5" ></text>
</g>
<g >
<title>c10::Dispatcher::callWithDispatchKey&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::TensorOptions const&amp;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (232 samples, 10.42%)</title><rect x="698.1" y="533" width="123.0" height="15.0" fill="rgb(211,200,40)" rx="2" ry="2" />
<text  x="701.07" y="543.5" >c10::Dispatcher..</text>
</g>
<g >
<title>c10::make_intrusive&lt;c10::TensorImpl, c10::detail::intrusive_target_default_null_type&lt;c10::TensorImpl&gt;, c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;, c10::DispatchKey, caffe2::TypeMeta&amp;&gt; (26 samples, 1.17%)</title><rect x="729.9" y="293" width="13.8" height="15.0" fill="rgb(212,30,49)" rx="2" ry="2" />
<text  x="732.87" y="303.5" ></text>
</g>
<g >
<title>[libcudart.so.11.0.194] (3 samples, 0.13%)</title><rect x="306.9" y="581" width="1.5" height="15.0" fill="rgb(215,214,28)" rx="2" ry="2" />
<text  x="309.86" y="591.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_fbgemm_utils.cpp (1 samples, 0.04%)</title><rect x="262.3" y="629" width="0.6" height="15.0" fill="rgb(234,225,44)" rx="2" ry="2" />
<text  x="265.33" y="639.5" ></text>
</g>
<g >
<title>TORCH_LIBRARY_IMPL_init_aten_Tracer (2 samples, 0.09%)</title><rect x="205.1" y="581" width="1.0" height="15.0" fill="rgb(242,94,35)" rx="2" ry="2" />
<text  x="208.08" y="591.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.04%)</title><rect x="280.9" y="453" width="0.5" height="15.0" fill="rgb(213,181,41)" rx="2" ry="2" />
<text  x="283.88" y="463.5" ></text>
</g>
<g >
<title>createArgumentVector (1 samples, 0.04%)</title><rect x="179.1" y="469" width="0.5" height="15.0" fill="rgb(240,112,4)" rx="2" ry="2" />
<text  x="182.10" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.04%)</title><rect x="67.8" y="629" width="0.5" height="15.0" fill="rgb(206,133,45)" rx="2" ry="2" />
<text  x="70.78" y="639.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.04%)</title><rect x="226.3" y="197" width="0.5" height="15.0" fill="rgb(241,118,40)" rx="2" ry="2" />
<text  x="229.28" y="207.5" ></text>
</g>
<g >
<title>path_openat (1 samples, 0.04%)</title><rect x="1110.5" y="421" width="0.5" height="15.0" fill="rgb(225,76,21)" rx="2" ry="2" />
<text  x="1113.49" y="431.5" ></text>
</g>
<g >
<title>__vfprintf_internal (1 samples, 0.04%)</title><rect x="285.7" y="389" width="0.5" height="15.0" fill="rgb(216,224,30)" rx="2" ry="2" />
<text  x="288.65" y="399.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.04%)</title><rect x="275.6" y="485" width="0.5" height="15.0" fill="rgb(245,128,28)" rx="2" ry="2" />
<text  x="278.58" y="495.5" ></text>
</g>
<g >
<title>c10::DispatchKeySet::add (1 samples, 0.04%)</title><rect x="210.4" y="357" width="0.5" height="15.0" fill="rgb(234,209,32)" rx="2" ry="2" />
<text  x="213.38" y="367.5" ></text>
</g>
<g >
<title>__posix_memalign (32 samples, 1.44%)</title><rect x="556.5" y="277" width="17.0" height="15.0" fill="rgb(216,30,34)" rx="2" ry="2" />
<text  x="559.53" y="287.5" ></text>
</g>
<g >
<title>c10::inferFunctionSchemaFlattenedReturns&lt;at::Tensor  (1 samples, 0.04%)</title><rect x="199.8" y="517" width="0.5" height="15.0" fill="rgb(205,192,38)" rx="2" ry="2" />
<text  x="202.78" y="527.5" ></text>
</g>
<g >
<title>c10::callUnboxedKernelFunction&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::TensorOptions const&amp;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (217 samples, 9.75%)</title><rect x="705.0" y="501" width="115.0" height="15.0" fill="rgb(214,201,44)" rx="2" ry="2" />
<text  x="707.96" y="511.5" >c10::callUnbox..</text>
</g>
<g >
<title>c10::IntType::isSubtypeOfExt (1 samples, 0.04%)</title><rect x="272.4" y="469" width="0.5" height="15.0" fill="rgb(222,136,4)" rx="2" ry="2" />
<text  x="275.40" y="479.5" ></text>
</g>
<g >
<title>perf_event_mmap (1 samples, 0.04%)</title><rect x="1168.8" y="517" width="0.5" height="15.0" fill="rgb(231,67,46)" rx="2" ry="2" />
<text  x="1171.80" y="527.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseType (3 samples, 0.13%)</title><rect x="211.4" y="389" width="1.6" height="15.0" fill="rgb(205,120,48)" rx="2" ry="2" />
<text  x="214.44" y="399.5" ></text>
</g>
<g >
<title>tcache_get (1 samples, 0.04%)</title><rect x="398.6" y="149" width="0.5" height="15.0" fill="rgb(245,135,12)" rx="2" ry="2" />
<text  x="401.56" y="159.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (1 samples, 0.04%)</title><rect x="228.4" y="421" width="0.5" height="15.0" fill="rgb(236,0,10)" rx="2" ry="2" />
<text  x="231.40" y="431.5" ></text>
</g>
<g >
<title>torch::jit::parseSchema (2 samples, 0.09%)</title><rect x="166.4" y="661" width="1.0" height="15.0" fill="rgb(237,40,16)" rx="2" ry="2" />
<text  x="169.38" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt; &gt;::_M_erase (1 samples, 0.04%)</title><rect x="311.6" y="469" width="0.6" height="15.0" fill="rgb(254,175,23)" rx="2" ry="2" />
<text  x="314.63" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::_M_realloc_insert&lt;c10::Argument&gt; (4 samples, 0.18%)</title><rect x="229.5" y="389" width="2.1" height="15.0" fill="rgb(246,201,25)" rx="2" ry="2" />
<text  x="232.46" y="399.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="1156.6" y="533" width="0.5" height="15.0" fill="rgb(245,94,36)" rx="2" ry="2" />
<text  x="1159.60" y="543.5" ></text>
</g>
<g >
<title>_M_insert&lt;const std::pair&lt;char const*, char const*&gt;&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char const*, char const*&gt;, true&gt; &gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="132.5" y="597" width="0.5" height="15.0" fill="rgb(217,123,10)" rx="2" ry="2" />
<text  x="135.45" y="607.5" ></text>
</g>
<g >
<title>c10::Dispatcher::callWithDispatchKey&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::TensorOptions const&amp;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (302 samples, 13.57%)</title><rect x="942.4" y="533" width="160.1" height="15.0" fill="rgb(220,127,48)" rx="2" ry="2" />
<text  x="945.44" y="543.5" >c10::Dispatcher::cal..</text>
</g>
<g >
<title>std::make_shared&lt;torch::jit::Source, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.04%)</title><rect x="252.8" y="485" width="0.5" height="15.0" fill="rgb(228,209,16)" rx="2" ry="2" />
<text  x="255.79" y="495.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.04%)</title><rect x="1169.9" y="533" width="0.5" height="15.0" fill="rgb(244,202,8)" rx="2" ry="2" />
<text  x="1172.86" y="543.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (1 samples, 0.04%)</title><rect x="286.2" y="405" width="0.5" height="15.0" fill="rgb(253,227,44)" rx="2" ry="2" />
<text  x="289.18" y="415.5" ></text>
</g>
<g >
<title>__GI___sbrk (1 samples, 0.04%)</title><rect x="186.0" y="309" width="0.5" height="15.0" fill="rgb(220,69,53)" rx="2" ry="2" />
<text  x="188.99" y="319.5" ></text>
</g>
<g >
<title>c10::TensorImpl::set_sizes_contiguous (24 samples, 1.08%)</title><rect x="782.4" y="309" width="12.7" height="15.0" fill="rgb(225,37,26)" rx="2" ry="2" />
<text  x="785.35" y="319.5" ></text>
</g>
<g >
<title>c10::TensorImpl::TensorImpl (21 samples, 0.94%)</title><rect x="976.4" y="245" width="11.1" height="15.0" fill="rgb(221,171,32)" rx="2" ry="2" />
<text  x="979.37" y="255.5" ></text>
</g>
<g >
<title>c10::Dispatcher::singleton (1 samples, 0.04%)</title><rect x="596.3" y="565" width="0.5" height="15.0" fill="rgb(249,110,10)" rx="2" ry="2" />
<text  x="599.29" y="575.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::computeDispatchTableEntry (1 samples, 0.04%)</title><rect x="256.0" y="485" width="0.5" height="15.0" fill="rgb(210,225,44)" rx="2" ry="2" />
<text  x="258.97" y="495.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseType (1 samples, 0.04%)</title><rect x="74.7" y="677" width="0.5" height="15.0" fill="rgb(228,117,10)" rx="2" ry="2" />
<text  x="77.67" y="687.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;torch::jit::Operator&gt; &gt;::destroy&lt;torch::jit::Operator&gt; (1 samples, 0.04%)</title><rect x="325.9" y="389" width="0.6" height="15.0" fill="rgb(238,83,27)" rx="2" ry="2" />
<text  x="328.94" y="399.5" ></text>
</g>
<g >
<title>std::__array_traits&lt;c10::KernelFunction, 38ul&gt;::_S_ref (1 samples, 0.04%)</title><rect x="595.2" y="501" width="0.6" height="15.0" fill="rgb(249,215,29)" rx="2" ry="2" />
<text  x="598.23" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1 samples, 0.04%)</title><rect x="190.2" y="261" width="0.6" height="15.0" fill="rgb(215,92,2)" rx="2" ry="2" />
<text  x="193.23" y="271.5" ></text>
</g>
<g >
<title>xas_find (1 samples, 0.04%)</title><rect x="304.2" y="437" width="0.5" height="15.0" fill="rgb(213,193,50)" rx="2" ry="2" />
<text  x="307.20" y="447.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTableFull_ (1 samples, 0.04%)</title><rect x="245.9" y="501" width="0.5" height="15.0" fill="rgb(243,54,48)" rx="2" ry="2" />
<text  x="248.89" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;torch::jit::Operator&gt;, std::allocator&lt;std::shared_ptr&lt;torch::jit::Operator&gt; &gt; &gt;::_S_relocate (1 samples, 0.04%)</title><rect x="297.3" y="485" width="0.5" height="15.0" fill="rgb(243,109,5)" rx="2" ry="2" />
<text  x="300.31" y="495.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="278.8" y="533" width="0.5" height="15.0" fill="rgb(239,178,29)" rx="2" ry="2" />
<text  x="281.76" y="543.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="174.9" y="549" width="0.5" height="15.0" fill="rgb(229,8,49)" rx="2" ry="2" />
<text  x="177.86" y="559.5" ></text>
</g>
<g >
<title>createArgumentVector (1 samples, 0.04%)</title><rect x="184.9" y="469" width="0.6" height="15.0" fill="rgb(238,49,48)" rx="2" ry="2" />
<text  x="187.93" y="479.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.04%)</title><rect x="195.5" y="341" width="0.6" height="15.0" fill="rgb(225,47,26)" rx="2" ry="2" />
<text  x="198.53" y="351.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::computeDispatchTableEntryWithDebug (1 samples, 0.04%)</title><rect x="268.2" y="453" width="0.5" height="15.0" fill="rgb(210,160,52)" rx="2" ry="2" />
<text  x="271.16" y="463.5" ></text>
</g>
<g >
<title>c10::OperatorName::setNamespaceIfNotSet (1 samples, 0.04%)</title><rect x="251.2" y="533" width="0.5" height="15.0" fill="rgb(227,227,25)" rx="2" ry="2" />
<text  x="254.19" y="543.5" ></text>
</g>
<g >
<title>c10::KernelFunction::call&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::TensorOptions const&amp;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (217 samples, 9.75%)</title><rect x="705.0" y="517" width="115.0" height="15.0" fill="rgb(234,40,13)" rx="2" ry="2" />
<text  x="707.96" y="527.5" >c10::KernelFun..</text>
</g>
<g >
<title>impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor&amp; (1 samples, 0.04%)</title><rect x="198.7" y="565" width="0.5" height="15.0" fill="rgb(252,139,42)" rx="2" ry="2" />
<text  x="201.72" y="575.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.04%)</title><rect x="305.8" y="613" width="0.5" height="15.0" fill="rgb(211,83,23)" rx="2" ry="2" />
<text  x="308.80" y="623.5" ></text>
</g>
<g >
<title>torch::jit::Token::~Token (1 samples, 0.04%)</title><rect x="193.4" y="389" width="0.5" height="15.0" fill="rgb(212,77,32)" rx="2" ry="2" />
<text  x="196.41" y="399.5" ></text>
</g>
<g >
<title>c10::DispatchKeyExtractor::registerSchema (1 samples, 0.04%)</title><rect x="272.4" y="517" width="0.5" height="15.0" fill="rgb(213,131,11)" rx="2" ry="2" />
<text  x="275.40" y="527.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;c10::Scalar  (1 samples, 0.04%)</title><rect x="249.6" y="533" width="0.5" height="15.0" fill="rgb(241,76,34)" rx="2" ry="2" />
<text  x="252.60" y="543.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="278.8" y="485" width="0.5" height="15.0" fill="rgb(229,169,37)" rx="2" ry="2" />
<text  x="281.76" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str (1 samples, 0.04%)</title><rect x="183.3" y="501" width="0.6" height="15.0" fill="rgb(233,142,22)" rx="2" ry="2" />
<text  x="186.34" y="511.5" ></text>
</g>
<g >
<title>torch::autograd::AutogradMeta::AutogradMeta (9 samples, 0.40%)</title><rect x="501.9" y="581" width="4.8" height="15.0" fill="rgb(235,148,49)" rx="2" ry="2" />
<text  x="504.93" y="591.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::(anonymous namespace)::createArgumentVector (1 samples, 0.04%)</title><rect x="179.6" y="469" width="0.6" height="15.0" fill="rgb(225,139,34)" rx="2" ry="2" />
<text  x="182.63" y="479.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.04%)</title><rect x="277.7" y="501" width="0.5" height="15.0" fill="rgb(218,121,11)" rx="2" ry="2" />
<text  x="280.70" y="511.5" ></text>
</g>
<g >
<title>alloc_set_pte (1 samples, 0.04%)</title><rect x="1137.5" y="405" width="0.6" height="15.0" fill="rgb(209,123,49)" rx="2" ry="2" />
<text  x="1140.52" y="415.5" ></text>
</g>
<g >
<title>read&lt;c10::Dispatcher::findOp (1 samples, 0.04%)</title><rect x="286.2" y="549" width="0.5" height="15.0" fill="rgb(214,11,4)" rx="2" ry="2" />
<text  x="289.18" y="559.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::registerKernel (1 samples, 0.04%)</title><rect x="245.9" y="517" width="0.5" height="15.0" fill="rgb(217,2,10)" rx="2" ry="2" />
<text  x="248.89" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (1 samples, 0.04%)</title><rect x="181.8" y="325" width="0.5" height="15.0" fill="rgb(253,0,16)" rx="2" ry="2" />
<text  x="184.75" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (1 samples, 0.04%)</title><rect x="252.3" y="373" width="0.5" height="15.0" fill="rgb(249,50,24)" rx="2" ry="2" />
<text  x="255.26" y="383.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, torch::CppFunction&gt; (1 samples, 0.04%)</title><rect x="201.9" y="549" width="0.5" height="15.0" fill="rgb(227,190,15)" rx="2" ry="2" />
<text  x="204.90" y="559.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;c10::IValue, std::allocator&lt;c10::IValue&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.04%)</title><rect x="957.8" y="357" width="0.5" height="15.0" fill="rgb(252,3,30)" rx="2" ry="2" />
<text  x="960.82" y="367.5" ></text>
</g>
<g >
<title>isalpha (1 samples, 0.04%)</title><rect x="154.7" y="677" width="0.5" height="15.0" fill="rgb(209,182,42)" rx="2" ry="2" />
<text  x="157.72" y="687.5" ></text>
</g>
<g >
<title>c10::VariableVersion::unique (1 samples, 0.04%)</title><rect x="363.0" y="581" width="0.6" height="15.0" fill="rgb(244,129,13)" rx="2" ry="2" />
<text  x="366.05" y="591.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;std::shared_ptr&lt;torch::jit::Operator&gt;, std::shared_ptr&lt;torch::jit::Operator&gt;, std::allocator&lt;std::shared_ptr&lt;torch::jit::Operator&gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="297.3" y="421" width="0.5" height="15.0" fill="rgb(207,3,0)" rx="2" ry="2" />
<text  x="300.31" y="431.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.04%)</title><rect x="997.0" y="277" width="0.6" height="15.0" fill="rgb(207,3,23)" rx="2" ry="2" />
<text  x="1000.04" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;c10::IValue, std::allocator&lt;c10::IValue&gt; &gt;::_M_deallocate (1 samples, 0.04%)</title><rect x="961.0" y="357" width="0.5" height="15.0" fill="rgb(219,125,44)" rx="2" ry="2" />
<text  x="964.00" y="367.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.04%)</title><rect x="369.9" y="565" width="0.6" height="15.0" fill="rgb(223,207,42)" rx="2" ry="2" />
<text  x="372.94" y="575.5" ></text>
</g>
<g >
<title>c10::TypedOperatorHandle&lt;at::Tensor  (1 samples, 0.04%)</title><rect x="154.2" y="661" width="0.5" height="15.0" fill="rgb(207,101,15)" rx="2" ry="2" />
<text  x="157.19" y="671.5" ></text>
</g>
<g >
<title>c10::Dispatcher::findOp (1 samples, 0.04%)</title><rect x="98.5" y="677" width="0.6" height="15.0" fill="rgb(244,199,1)" rx="2" ry="2" />
<text  x="101.53" y="687.5" ></text>
</g>
<g >
<title>at::RecordFunction::~RecordFunction (5 samples, 0.22%)</title><rect x="958.9" y="405" width="2.6" height="15.0" fill="rgb(227,204,23)" rx="2" ry="2" />
<text  x="961.88" y="415.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;c10::Type&gt;::~shared_ptr (1 samples, 0.04%)</title><rect x="234.2" y="357" width="0.6" height="15.0" fill="rgb(217,42,54)" rx="2" ry="2" />
<text  x="237.23" y="367.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTable_ (2 samples, 0.09%)</title><rect x="316.4" y="357" width="1.1" height="15.0" fill="rgb(240,197,8)" rx="2" ry="2" />
<text  x="319.40" y="367.5" ></text>
</g>
<g >
<title>hasThreadLocalCallbacks (1 samples, 0.04%)</title><rect x="956.8" y="357" width="0.5" height="15.0" fill="rgb(248,11,10)" rx="2" ry="2" />
<text  x="959.76" y="367.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (1 samples, 0.04%)</title><rect x="222.0" y="469" width="0.6" height="15.0" fill="rgb(237,67,20)" rx="2" ry="2" />
<text  x="225.04" y="479.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::createFunctionSchemaFromTraitsFlattenedReturns&lt;c10::guts::function_traits&lt;at::Tensor  (1 samples, 0.04%)</title><rect x="257.0" y="501" width="0.6" height="15.0" fill="rgb(205,163,2)" rx="2" ry="2" />
<text  x="260.03" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_List_node&lt;c10::Dispatcher::OperatorDef&gt; &gt;::destroy&lt;c10::Dispatcher::OperatorDef&gt; (5 samples, 0.22%)</title><rect x="313.7" y="325" width="2.7" height="15.0" fill="rgb(223,60,31)" rx="2" ry="2" />
<text  x="316.75" y="335.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.04%)</title><rect x="179.1" y="485" width="0.5" height="15.0" fill="rgb(217,145,38)" rx="2" ry="2" />
<text  x="182.10" y="495.5" ></text>
</g>
<g >
<title>__sti____cudaRegisterAll (1 samples, 0.04%)</title><rect x="24.8" y="661" width="0.6" height="15.0" fill="rgb(218,17,14)" rx="2" ry="2" />
<text  x="27.84" y="671.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (31 samples, 1.39%)</title><rect x="332.8" y="613" width="16.5" height="15.0" fill="rgb(244,100,5)" rx="2" ry="2" />
<text  x="335.83" y="623.5" ></text>
</g>
<g >
<title>torch::empty (380 samples, 17.07%)</title><rect x="904.3" y="613" width="201.4" height="15.0" fill="rgb(210,8,52)" rx="2" ry="2" />
<text  x="907.28" y="623.5" >torch::empty</text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::shared_ptr&lt;torch::jit::Operator&gt;*, std::shared_ptr&lt;torch::jit::Operator&gt;*, std::allocator&lt;std::shared_ptr&lt;torch::jit::Operator&gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="297.3" y="437" width="0.5" height="15.0" fill="rgb(238,106,51)" rx="2" ry="2" />
<text  x="300.31" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt; &gt;::deallocate (2 samples, 0.09%)</title><rect x="310.6" y="421" width="1.0" height="15.0" fill="rgb(250,38,21)" rx="2" ry="2" />
<text  x="313.57" y="431.5" ></text>
</g>
<g >
<title>c10::impl::(anonymous namespace)::checkSchema (1 samples, 0.04%)</title><rect x="255.4" y="501" width="0.6" height="15.0" fill="rgb(221,162,50)" rx="2" ry="2" />
<text  x="258.44" y="511.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.04%)</title><rect x="254.9" y="405" width="0.5" height="15.0" fill="rgb(211,127,40)" rx="2" ry="2" />
<text  x="257.91" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::emplace_back&lt;unsigned long&gt; (1 samples, 0.04%)</title><rect x="188.1" y="309" width="0.5" height="15.0" fill="rgb(242,225,23)" rx="2" ry="2" />
<text  x="191.11" y="319.5" ></text>
</g>
<g >
<title>mprotect_fixup (1 samples, 0.04%)</title><rect x="1108.4" y="437" width="0.5" height="15.0" fill="rgb(228,49,41)" rx="2" ry="2" />
<text  x="1111.36" y="447.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_NamedRegistrations.cpp (7 samples, 0.31%)</title><rect x="190.2" y="629" width="3.7" height="15.0" fill="rgb(245,95,2)" rx="2" ry="2" />
<text  x="193.23" y="639.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (1 samples, 0.04%)</title><rect x="242.2" y="453" width="0.5" height="15.0" fill="rgb(209,204,31)" rx="2" ry="2" />
<text  x="245.18" y="463.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (1 samples, 0.04%)</title><rect x="176.5" y="357" width="0.5" height="15.0" fill="rgb(248,142,44)" rx="2" ry="2" />
<text  x="179.45" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1 samples, 0.04%)</title><rect x="162.1" y="661" width="0.6" height="15.0" fill="rgb(244,208,13)" rx="2" ry="2" />
<text  x="165.14" y="671.5" ></text>
</g>
<g >
<title>at::Tensor::~Tensor (74 samples, 3.32%)</title><rect x="610.6" y="613" width="39.2" height="15.0" fill="rgb(247,79,26)" rx="2" ry="2" />
<text  x="613.60" y="623.5" >at:..</text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="189.2" y="469" width="0.5" height="15.0" fill="rgb(216,64,45)" rx="2" ry="2" />
<text  x="192.17" y="479.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_Dimname.cpp (2 samples, 0.09%)</title><rect x="189.2" y="613" width="1.0" height="15.0" fill="rgb(243,3,44)" rx="2" ry="2" />
<text  x="192.17" y="623.5" ></text>
</g>
<g >
<title>torch::jit::Operator::~Operator (1 samples, 0.04%)</title><rect x="325.9" y="357" width="0.6" height="15.0" fill="rgb(248,16,42)" rx="2" ry="2" />
<text  x="328.94" y="367.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="199.2" y="453" width="0.6" height="15.0" fill="rgb(221,116,2)" rx="2" ry="2" />
<text  x="202.25" y="463.5" ></text>
</g>
<g >
<title>find_get_entry (1 samples, 0.04%)</title><rect x="1152.4" y="389" width="0.5" height="15.0" fill="rgb(238,27,19)" rx="2" ry="2" />
<text  x="1155.36" y="399.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.04%)</title><rect x="193.4" y="325" width="0.5" height="15.0" fill="rgb(245,89,45)" rx="2" ry="2" />
<text  x="196.41" y="335.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.04%)</title><rect x="265.5" y="357" width="0.5" height="15.0" fill="rgb(221,173,4)" rx="2" ry="2" />
<text  x="268.51" y="367.5" ></text>
</g>
<g >
<title>__GI_munmap (1 samples, 0.04%)</title><rect x="182.3" y="389" width="0.5" height="15.0" fill="rgb(242,175,49)" rx="2" ry="2" />
<text  x="185.28" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;c10::AutogradMetaInterface, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::operator= (1 samples, 0.04%)</title><rect x="362.5" y="581" width="0.5" height="15.0" fill="rgb(225,192,14)" rx="2" ry="2" />
<text  x="365.52" y="591.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="210.9" y="229" width="0.5" height="15.0" fill="rgb(253,59,5)" rx="2" ry="2" />
<text  x="213.91" y="239.5" ></text>
</g>
<g >
<title>c10::KernelFunction::operator= (1 samples, 0.04%)</title><rect x="257.6" y="485" width="0.5" height="15.0" fill="rgb(232,193,7)" rx="2" ry="2" />
<text  x="260.56" y="495.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;::intrusive_ptr (2 samples, 0.09%)</title><rect x="399.1" y="277" width="1.1" height="15.0" fill="rgb(217,123,5)" rx="2" ry="2" />
<text  x="402.09" y="287.5" ></text>
</g>
<g >
<title>parseDeclarations (27 samples, 1.21%)</title><rect x="228.9" y="485" width="14.3" height="15.0" fill="rgb(226,2,10)" rx="2" ry="2" />
<text  x="231.93" y="495.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="277.7" y="533" width="0.5" height="15.0" fill="rgb(251,170,37)" rx="2" ry="2" />
<text  x="280.70" y="543.5" ></text>
</g>
<g >
<title>at::empty (4 samples, 0.18%)</title><rect x="695.4" y="501" width="2.1" height="15.0" fill="rgb(236,129,7)" rx="2" ry="2" />
<text  x="698.42" y="511.5" ></text>
</g>
<g >
<title>_dl_runtime_resolve_xsave (1 samples, 0.04%)</title><rect x="309.0" y="581" width="0.5" height="15.0" fill="rgb(226,162,16)" rx="2" ry="2" />
<text  x="311.98" y="591.5" ></text>
</g>
<g >
<title>std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~unordered_set (1 samples, 0.04%)</title><rect x="190.2" y="373" width="0.6" height="15.0" fill="rgb(228,192,22)" rx="2" ry="2" />
<text  x="193.23" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt; &gt;::destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt; (1 samples, 0.04%)</title><rect x="311.6" y="405" width="0.6" height="15.0" fill="rgb(219,93,3)" rx="2" ry="2" />
<text  x="314.63" y="415.5" ></text>
</g>
<g >
<title>createArgumentVector (1 samples, 0.04%)</title><rect x="177.0" y="469" width="0.5" height="15.0" fill="rgb(254,218,11)" rx="2" ry="2" />
<text  x="179.98" y="479.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="99.6" y="677" width="0.5" height="15.0" fill="rgb(207,87,12)" rx="2" ry="2" />
<text  x="102.59" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (1 samples, 0.04%)</title><rect x="189.2" y="501" width="0.5" height="15.0" fill="rgb(212,53,40)" rx="2" ry="2" />
<text  x="192.17" y="511.5" ></text>
</g>
<g >
<title>[libcusparse.so.11.1.0.218] (1 samples, 0.04%)</title><rect x="175.4" y="613" width="0.5" height="15.0" fill="rgb(234,217,12)" rx="2" ry="2" />
<text  x="178.39" y="623.5" ></text>
</g>
<g >
<title>c10::memoryProfilingEnabled (3 samples, 0.13%)</title><rect x="406.0" y="293" width="1.6" height="15.0" fill="rgb(241,137,22)" rx="2" ry="2" />
<text  x="408.98" y="303.5" ></text>
</g>
<g >
<title>__GI___cxa_atexit (1 samples, 0.04%)</title><rect x="268.7" y="597" width="0.5" height="15.0" fill="rgb(239,44,10)" rx="2" ry="2" />
<text  x="271.69" y="607.5" ></text>
</g>
<g >
<title>c10::TensorImpl::TensorImpl (2 samples, 0.09%)</title><rect x="1162.4" y="693" width="1.1" height="15.0" fill="rgb(228,116,26)" rx="2" ry="2" />
<text  x="1165.43" y="703.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.04%)</title><rect x="109.1" y="597" width="0.6" height="15.0" fill="rgb(210,16,17)" rx="2" ry="2" />
<text  x="112.13" y="607.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.04%)</title><rect x="1106.2" y="517" width="0.6" height="15.0" fill="rgb(226,41,35)" rx="2" ry="2" />
<text  x="1109.24" y="527.5" ></text>
</g>
<g >
<title>empty_memory_format (210 samples, 9.43%)</title><rect x="708.7" y="453" width="111.3" height="15.0" fill="rgb(248,73,46)" rx="2" ry="2" />
<text  x="711.67" y="463.5" >empty_memory_..</text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.04%)</title><rect x="108.6" y="437" width="0.5" height="15.0" fill="rgb(248,60,35)" rx="2" ry="2" />
<text  x="111.60" y="447.5" ></text>
</g>
<g >
<title>c10::findSchemaDifferences[abi:cxx11] (1 samples, 0.04%)</title><rect x="255.4" y="373" width="0.6" height="15.0" fill="rgb(222,217,30)" rx="2" ry="2" />
<text  x="258.44" y="383.5" ></text>
</g>
<g >
<title>_int_memalign (30 samples, 1.35%)</title><rect x="557.6" y="245" width="15.9" height="15.0" fill="rgb(249,213,38)" rx="2" ry="2" />
<text  x="560.59" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;c10::Argument&gt; &gt;::allocate (1 samples, 0.04%)</title><rect x="185.5" y="421" width="0.5" height="15.0" fill="rgb(232,46,8)" rx="2" ry="2" />
<text  x="188.46" y="431.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="1109.4" y="469" width="0.6" height="15.0" fill="rgb(220,187,42)" rx="2" ry="2" />
<text  x="1112.42" y="479.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;signed char&gt;@plt (2 samples, 0.09%)</title><rect x="952.5" y="373" width="1.1" height="15.0" fill="rgb(231,75,18)" rx="2" ry="2" />
<text  x="955.52" y="383.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (1 samples, 0.04%)</title><rect x="208.8" y="341" width="0.5" height="15.0" fill="rgb(252,132,39)" rx="2" ry="2" />
<text  x="211.79" y="351.5" ></text>
</g>
<g >
<title>c10::SmallVector&lt;long, 5u&gt;::SmallVector (1 samples, 0.04%)</title><rect x="543.3" y="229" width="0.5" height="15.0" fill="rgb(221,151,7)" rx="2" ry="2" />
<text  x="546.28" y="239.5" ></text>
</g>
<g >
<title>micro_requires_grad_false (4 samples, 0.18%)</title><rect x="155.8" y="677" width="2.1" height="15.0" fill="rgb(222,37,23)" rx="2" ry="2" />
<text  x="158.78" y="687.5" ></text>
</g>
<g >
<title>at::AutoNonVariableTypeMode::~AutoNonVariableTypeMode (2 samples, 0.09%)</title><rect x="690.1" y="581" width="1.1" height="15.0" fill="rgb(210,156,8)" rx="2" ry="2" />
<text  x="693.12" y="591.5" ></text>
</g>
<g >
<title>parseName (1 samples, 0.04%)</title><rect x="259.1" y="453" width="0.6" height="15.0" fill="rgb(217,158,19)" rx="2" ry="2" />
<text  x="262.15" y="463.5" ></text>
</g>
<g >
<title>c10::DispatchKeySet::operator- (1 samples, 0.04%)</title><rect x="690.6" y="549" width="0.6" height="15.0" fill="rgb(216,76,28)" rx="2" ry="2" />
<text  x="693.65" y="559.5" ></text>
</g>
<g >
<title>page_add_file_rmap (1 samples, 0.04%)</title><rect x="269.7" y="437" width="0.6" height="15.0" fill="rgb(251,104,1)" rx="2" ry="2" />
<text  x="272.75" y="447.5" ></text>
</g>
<g >
<title>vm_mmap (1 samples, 0.04%)</title><rect x="1168.8" y="581" width="0.5" height="15.0" fill="rgb(252,157,8)" rx="2" ry="2" />
<text  x="1171.80" y="591.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="269.2" y="437" width="0.5" height="15.0" fill="rgb(218,19,28)" rx="2" ry="2" />
<text  x="272.22" y="447.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.04%)</title><rect x="304.2" y="565" width="0.5" height="15.0" fill="rgb(228,229,28)" rx="2" ry="2" />
<text  x="307.20" y="575.5" ></text>
</g>
<g >
<title>operator (1 samples, 0.04%)</title><rect x="245.4" y="469" width="0.5" height="15.0" fill="rgb(225,116,24)" rx="2" ry="2" />
<text  x="248.36" y="479.5" ></text>
</g>
<g >
<title>c10::TypedOperatorHandle&lt;at::Tensor  (241 samples, 10.83%)</title><rect x="693.8" y="565" width="127.8" height="15.0" fill="rgb(233,228,14)" rx="2" ry="2" />
<text  x="696.83" y="575.5" >c10::TypedOperat..</text>
</g>
<g >
<title>page_fault (1 samples, 0.04%)</title><rect x="226.3" y="341" width="0.5" height="15.0" fill="rgb(214,102,10)" rx="2" ry="2" />
<text  x="229.28" y="351.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.04%)</title><rect x="274.5" y="437" width="0.5" height="15.0" fill="rgb(237,152,41)" rx="2" ry="2" />
<text  x="277.52" y="447.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTable_@plt (1 samples, 0.04%)</title><rect x="245.9" y="485" width="0.5" height="15.0" fill="rgb(250,99,27)" rx="2" ry="2" />
<text  x="248.89" y="495.5" ></text>
</g>
<g >
<title>ska::flat_hash_map&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt;, std::hash&lt;c10::DispatchKey&gt;, std::equal_to&lt;c10::DispatchKey&gt;, std::allocator&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt; &gt; &gt;::operator[] (1 samples, 0.04%)</title><rect x="258.1" y="501" width="0.5" height="15.0" fill="rgb(249,80,18)" rx="2" ry="2" />
<text  x="261.09" y="511.5" ></text>
</g>
<g >
<title>c10::callUnboxedKernelFunction&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::TensorOptions const&amp;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (193 samples, 8.67%)</title><rect x="717.2" y="389" width="102.3" height="15.0" fill="rgb(251,153,43)" rx="2" ry="2" />
<text  x="720.15" y="399.5" >c10::callUnb..</text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;c10::IValue*&gt; (1 samples, 0.04%)</title><rect x="946.7" y="453" width="0.5" height="15.0" fill="rgb(240,12,8)" rx="2" ry="2" />
<text  x="949.68" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::replace (1 samples, 0.04%)</title><rect x="183.3" y="453" width="0.6" height="15.0" fill="rgb(224,216,16)" rx="2" ry="2" />
<text  x="186.34" y="463.5" ></text>
</g>
<g >
<title>PyTorchSchemasRegisterer (1 samples, 0.04%)</title><rect x="269.2" y="597" width="0.5" height="15.0" fill="rgb(229,126,43)" rx="2" ry="2" />
<text  x="272.22" y="607.5" ></text>
</g>
<g >
<title>c10::TensorOptions::memory_format (2 samples, 0.09%)</title><rect x="582.5" y="325" width="1.1" height="15.0" fill="rgb(225,172,28)" rx="2" ry="2" />
<text  x="585.51" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.04%)</title><rect x="110.2" y="629" width="0.5" height="15.0" fill="rgb(242,218,27)" rx="2" ry="2" />
<text  x="113.19" y="639.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (1 samples, 0.04%)</title><rect x="524.2" y="485" width="0.5" height="15.0" fill="rgb(253,170,29)" rx="2" ry="2" />
<text  x="527.20" y="495.5" ></text>
</g>
<g >
<title>c10::TensorImpl::set_autograd_meta (1 samples, 0.04%)</title><rect x="670.5" y="581" width="0.5" height="15.0" fill="rgb(247,52,26)" rx="2" ry="2" />
<text  x="673.50" y="591.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="276.6" y="437" width="0.6" height="15.0" fill="rgb(225,156,28)" rx="2" ry="2" />
<text  x="279.64" y="447.5" ></text>
</g>
<g >
<title>c10::Dispatcher::deregisterDef_ (2 samples, 0.09%)</title><rect x="309.5" y="453" width="1.1" height="15.0" fill="rgb(228,203,15)" rx="2" ry="2" />
<text  x="312.51" y="463.5" ></text>
</g>
<g >
<title>at::AutoNonVariableTypeMode::~AutoNonVariableTypeMode (1 samples, 0.04%)</title><rect x="935.6" y="581" width="0.5" height="15.0" fill="rgb(241,213,33)" rx="2" ry="2" />
<text  x="938.55" y="591.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.18%)</title><rect x="1094.6" y="277" width="2.1" height="15.0" fill="rgb(209,183,22)" rx="2" ry="2" />
<text  x="1097.58" y="287.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;c10::RegistrationHandleRAII*, c10::RegistrationHandleRAII&gt; (2 samples, 0.09%)</title><rect x="309.5" y="549" width="1.1" height="15.0" fill="rgb(223,71,17)" rx="2" ry="2" />
<text  x="312.51" y="559.5" ></text>
</g>
<g >
<title>torch::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Tracer (2 samples, 0.09%)</title><rect x="198.7" y="581" width="1.1" height="15.0" fill="rgb(223,174,20)" rx="2" ry="2" />
<text  x="201.72" y="591.5" ></text>
</g>
<g >
<title>torch::Library::def&lt;char const  (1 samples, 0.04%)</title><rect x="195.0" y="565" width="0.5" height="15.0" fill="rgb(221,69,1)" rx="2" ry="2" />
<text  x="198.00" y="575.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;, std::allocator&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (1 samples, 0.04%)</title><rect x="915.4" y="501" width="0.5" height="15.0" fill="rgb(254,2,25)" rx="2" ry="2" />
<text  x="918.41" y="511.5" ></text>
</g>
<g >
<title>__run_exit_handlers (44 samples, 1.98%)</title><rect x="303.1" y="645" width="23.4" height="15.0" fill="rgb(237,92,13)" rx="2" ry="2" />
<text  x="306.14" y="655.5" >_..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::~new_allocator (2 samples, 0.09%)</title><rect x="543.8" y="213" width="1.1" height="15.0" fill="rgb(231,31,47)" rx="2" ry="2" />
<text  x="546.81" y="223.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="278.8" y="549" width="0.5" height="15.0" fill="rgb(209,152,1)" rx="2" ry="2" />
<text  x="281.76" y="559.5" ></text>
</g>
<g >
<title>c10::make_intrusive&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt;, c10::StorageImpl::use_byte_size_t, long&amp;, c10::DataPtr, c10::Allocator*&amp;, bool&gt; (7 samples, 0.31%)</title><rect x="589.9" y="325" width="3.7" height="15.0" fill="rgb(232,104,45)" rx="2" ry="2" />
<text  x="592.93" y="335.5" ></text>
</g>
<g >
<title>c10::SmallVector&lt;unsigned long, 4u&gt;::~SmallVector (1 samples, 0.04%)</title><rect x="524.7" y="517" width="0.6" height="15.0" fill="rgb(238,120,9)" rx="2" ry="2" />
<text  x="527.73" y="527.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, c10::RegistryPriority, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::RegistryPriority&gt; &gt; &gt;::operator[] (1 samples, 0.04%)</title><rect x="273.5" y="565" width="0.5" height="15.0" fill="rgb(251,49,16)" rx="2" ry="2" />
<text  x="276.46" y="575.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseAliasAnnotation (1 samples, 0.04%)</title><rect x="266.0" y="373" width="0.6" height="15.0" fill="rgb(208,8,36)" rx="2" ry="2" />
<text  x="269.04" y="383.5" ></text>
</g>
<g >
<title>c10::DispatchKeySet::DispatchKeySet (1 samples, 0.04%)</title><rect x="730.4" y="245" width="0.5" height="15.0" fill="rgb(232,203,40)" rx="2" ry="2" />
<text  x="733.40" y="255.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_VmapModeRegistrations.cpp (1 samples, 0.04%)</title><rect x="259.1" y="629" width="0.6" height="15.0" fill="rgb(219,24,46)" rx="2" ry="2" />
<text  x="262.15" y="639.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;short&gt; (3 samples, 0.13%)</title><rect x="917.5" y="501" width="1.6" height="15.0" fill="rgb(215,22,31)" rx="2" ry="2" />
<text  x="920.53" y="511.5" ></text>
</g>
<g >
<title>__atomic_add_dispatch (1 samples, 0.04%)</title><rect x="195.5" y="309" width="0.6" height="15.0" fill="rgb(217,82,54)" rx="2" ry="2" />
<text  x="198.53" y="319.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.04%)</title><rect x="113.9" y="437" width="0.5" height="15.0" fill="rgb(254,65,1)" rx="2" ry="2" />
<text  x="116.90" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="186.0" y="245" width="0.5" height="15.0" fill="rgb(248,222,25)" rx="2" ry="2" />
<text  x="188.99" y="255.5" ></text>
</g>
<g >
<title>__do_page_fault (9 samples, 0.40%)</title><rect x="1150.8" y="533" width="4.7" height="15.0" fill="rgb(254,161,38)" rx="2" ry="2" />
<text  x="1153.77" y="543.5" ></text>
</g>
<g >
<title>c10::Dispatcher::findOrRegisterName_ (1 samples, 0.04%)</title><rect x="245.4" y="517" width="0.5" height="15.0" fill="rgb(212,101,49)" rx="2" ry="2" />
<text  x="248.36" y="527.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (2 samples, 0.09%)</title><rect x="289.4" y="453" width="1.0" height="15.0" fill="rgb(221,27,46)" rx="2" ry="2" />
<text  x="292.36" y="463.5" ></text>
</g>
<g >
<title>_int_malloc (26 samples, 1.17%)</title><rect x="1031.0" y="213" width="13.8" height="15.0" fill="rgb(221,162,21)" rx="2" ry="2" />
<text  x="1033.97" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (1 samples, 0.04%)</title><rect x="201.9" y="389" width="0.5" height="15.0" fill="rgb(221,49,36)" rx="2" ry="2" />
<text  x="204.90" y="399.5" ></text>
</g>
<g >
<title>__static_initialization_and_destruction_0 (3 samples, 0.13%)</title><rect x="198.2" y="613" width="1.6" height="15.0" fill="rgb(207,81,54)" rx="2" ry="2" />
<text  x="201.19" y="623.5" ></text>
</g>
<g >
<title>pagecache_get_page (1 samples, 0.04%)</title><rect x="1152.4" y="405" width="0.5" height="15.0" fill="rgb(218,29,25)" rx="2" ry="2" />
<text  x="1155.36" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;c10::IValue, std::allocator&lt;c10::IValue&gt; &gt;::_Vector_base (2 samples, 0.09%)</title><rect x="715.6" y="373" width="1.0" height="15.0" fill="rgb(229,14,5)" rx="2" ry="2" />
<text  x="718.56" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="1108.4" y="485" width="0.5" height="15.0" fill="rgb(239,24,43)" rx="2" ry="2" />
<text  x="1111.36" y="495.5" ></text>
</g>
<g >
<title>torch::autograd::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Autograd (1 samples, 0.04%)</title><rect x="252.8" y="581" width="0.5" height="15.0" fill="rgb(235,189,9)" rx="2" ry="2" />
<text  x="255.79" y="591.5" ></text>
</g>
<g >
<title>impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor (1 samples, 0.04%)</title><rect x="199.8" y="565" width="0.5" height="15.0" fill="rgb(213,138,10)" rx="2" ry="2" />
<text  x="202.78" y="575.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.04%)</title><rect x="175.9" y="533" width="0.6" height="15.0" fill="rgb(229,191,9)" rx="2" ry="2" />
<text  x="178.92" y="543.5" ></text>
</g>
<g >
<title>torch::detail::TorchLibraryInit::TorchLibraryInit (6 samples, 0.27%)</title><rect x="199.8" y="597" width="3.2" height="15.0" fill="rgb(243,26,43)" rx="2" ry="2" />
<text  x="202.78" y="607.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;c10::Type&gt;::~shared_ptr (1 samples, 0.04%)</title><rect x="231.6" y="389" width="0.5" height="15.0" fill="rgb(215,143,49)" rx="2" ry="2" />
<text  x="234.58" y="399.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTableFull_ (2 samples, 0.09%)</title><rect x="316.4" y="373" width="1.1" height="15.0" fill="rgb(245,8,33)" rx="2" ry="2" />
<text  x="319.40" y="383.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.04%)</title><rect x="109.1" y="613" width="0.6" height="15.0" fill="rgb(205,119,16)" rx="2" ry="2" />
<text  x="112.13" y="623.5" ></text>
</g>
<g >
<title>c10::FunctionSchema::~FunctionSchema (1 samples, 0.04%)</title><rect x="322.2" y="357" width="0.6" height="15.0" fill="rgb(205,19,51)" rx="2" ry="2" />
<text  x="325.23" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;c10::Symbol, c10::Symbol, std::allocator&lt;c10::Symbol&gt;, std::__detail::_Identity, std::equal_to&lt;c10::Symbol&gt;, std::hash&lt;c10::Symbol&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::~_Hashtable (1 samples, 0.04%)</title><rect x="65.7" y="677" width="0.5" height="15.0" fill="rgb(229,160,21)" rx="2" ry="2" />
<text  x="68.66" y="687.5" ></text>
</g>
<g >
<title>elf_machine_rela (69 samples, 3.10%)</title><rect x="1113.1" y="581" width="36.6" height="15.0" fill="rgb(205,179,36)" rx="2" ry="2" />
<text  x="1116.14" y="591.5" >elf..</text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::operator-- (1 samples, 0.04%)</title><rect x="649.3" y="565" width="0.5" height="15.0" fill="rgb(213,80,14)" rx="2" ry="2" />
<text  x="652.30" y="575.5" ></text>
</g>
<g >
<title>c10::callUnboxedKernelFunction&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::TensorOptions const&amp;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (132 samples, 5.93%)</title><rect x="525.3" y="517" width="69.9" height="15.0" fill="rgb(212,68,31)" rx="2" ry="2" />
<text  x="528.26" y="527.5" >c10::ca..</text>
</g>
<g >
<title>torch::detail::TorchLibraryInit::TorchLibraryInit (1 samples, 0.04%)</title><rect x="197.1" y="597" width="0.6" height="15.0" fill="rgb(253,149,21)" rx="2" ry="2" />
<text  x="200.12" y="607.5" ></text>
</g>
<g >
<title>c10::Dispatcher::setManuallyBoxedKernelFor_ (1 samples, 0.04%)</title><rect x="286.7" y="597" width="0.5" height="15.0" fill="rgb(253,73,39)" rx="2" ry="2" />
<text  x="289.71" y="607.5" ></text>
</g>
<g >
<title>[libcudart.so.11.0.194] (1 samples, 0.04%)</title><rect x="295.2" y="581" width="0.5" height="15.0" fill="rgb(241,44,37)" rx="2" ry="2" />
<text  x="298.19" y="591.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.04%)</title><rect x="106.5" y="549" width="0.5" height="15.0" fill="rgb(221,44,27)" rx="2" ry="2" />
<text  x="109.48" y="559.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.04%)</title><rect x="205.6" y="453" width="0.5" height="15.0" fill="rgb(216,123,53)" rx="2" ry="2" />
<text  x="208.61" y="463.5" ></text>
</g>
<g >
<title>torch::autograd::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Autograd (1 samples, 0.04%)</title><rect x="254.9" y="581" width="0.5" height="15.0" fill="rgb(241,218,16)" rx="2" ry="2" />
<text  x="257.91" y="591.5" ></text>
</g>
<g >
<title>vfs_read (1 samples, 0.04%)</title><rect x="1111.5" y="437" width="0.6" height="15.0" fill="rgb(241,116,17)" rx="2" ry="2" />
<text  x="1114.55" y="447.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_CUDAHooks.cpp (1 samples, 0.04%)</title><rect x="184.4" y="613" width="0.5" height="15.0" fill="rgb(240,31,31)" rx="2" ry="2" />
<text  x="187.40" y="623.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.18%)</title><rect x="739.4" y="261" width="2.1" height="15.0" fill="rgb(219,82,22)" rx="2" ry="2" />
<text  x="742.42" y="271.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.04%)</title><rect x="180.7" y="341" width="0.5" height="15.0" fill="rgb(218,194,50)" rx="2" ry="2" />
<text  x="183.69" y="351.5" ></text>
</g>
<g >
<title>torch::detail::TorchLibraryInit::TorchLibraryInit (3 samples, 0.13%)</title><rect x="259.7" y="597" width="1.6" height="15.0" fill="rgb(232,189,23)" rx="2" ry="2" />
<text  x="262.68" y="607.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (6 samples, 0.27%)</title><rect x="988.6" y="245" width="3.1" height="15.0" fill="rgb(209,205,14)" rx="2" ry="2" />
<text  x="991.56" y="255.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="308.4" y="501" width="0.6" height="15.0" fill="rgb(238,109,7)" rx="2" ry="2" />
<text  x="311.45" y="511.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.04%)</title><rect x="167.4" y="677" width="0.6" height="15.0" fill="rgb(206,1,53)" rx="2" ry="2" />
<text  x="170.44" y="687.5" ></text>
</g>
<g >
<title>c10::FunctionSchema::checkSchema (1 samples, 0.04%)</title><rect x="267.6" y="453" width="0.6" height="15.0" fill="rgb(221,133,28)" rx="2" ry="2" />
<text  x="270.63" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt; &gt;::_M_erase (3 samples, 0.13%)</title><rect x="310.6" y="485" width="1.6" height="15.0" fill="rgb(219,44,36)" rx="2" ry="2" />
<text  x="313.57" y="495.5" ></text>
</g>
<g >
<title>c10::SmallVectorImpl&lt;long&gt;::resize (3 samples, 0.13%)</title><rect x="782.9" y="277" width="1.6" height="15.0" fill="rgb(228,105,18)" rx="2" ry="2" />
<text  x="785.88" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;c10::Symbol, c10::Symbol, std::allocator&lt;c10::Symbol&gt;, std::__detail::_Identity, std::equal_to&lt;c10::Symbol&gt;, std::hash&lt;c10::Symbol&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_Hashtable (1 samples, 0.04%)</title><rect x="236.4" y="325" width="0.5" height="15.0" fill="rgb(211,131,13)" rx="2" ry="2" />
<text  x="239.35" y="335.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.04%)</title><rect x="181.2" y="181" width="0.6" height="15.0" fill="rgb(211,122,29)" rx="2" ry="2" />
<text  x="184.22" y="191.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="216.7" y="389" width="0.6" height="15.0" fill="rgb(243,212,15)" rx="2" ry="2" />
<text  x="219.74" y="399.5" ></text>
</g>
<g >
<title>c10::SmallVector&lt;unsigned long, 4u&gt;::~SmallVector (1 samples, 0.04%)</title><rect x="946.2" y="501" width="0.5" height="15.0" fill="rgb(228,17,41)" rx="2" ry="2" />
<text  x="949.15" y="511.5" ></text>
</g>
<g >
<title>_dl_map_object_from_fd (6 samples, 0.27%)</title><rect x="1106.8" y="549" width="3.2" height="15.0" fill="rgb(253,204,29)" rx="2" ry="2" />
<text  x="1109.77" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (1 samples, 0.04%)</title><rect x="131.9" y="597" width="0.6" height="15.0" fill="rgb(221,114,54)" rx="2" ry="2" />
<text  x="134.92" y="607.5" ></text>
</g>
<g >
<title>std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~unordered_set (1 samples, 0.04%)</title><rect x="217.8" y="373" width="0.5" height="15.0" fill="rgb(234,118,18)" rx="2" ry="2" />
<text  x="220.80" y="383.5" ></text>
</g>
<g >
<title>tcache_put (3 samples, 0.13%)</title><rect x="619.1" y="549" width="1.6" height="15.0" fill="rgb(208,10,28)" rx="2" ry="2" />
<text  x="622.08" y="559.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.04%)</title><rect x="275.6" y="549" width="0.5" height="15.0" fill="rgb(237,132,8)" rx="2" ry="2" />
<text  x="278.58" y="559.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::createFunctionSchemaFromTraitsFlattenedReturns&lt;c10::guts::function_traits&lt;at::Tensor  (1 samples, 0.04%)</title><rect x="213.6" y="501" width="0.5" height="15.0" fill="rgb(220,76,9)" rx="2" ry="2" />
<text  x="216.56" y="511.5" ></text>
</g>
<g >
<title>open_verify (4 samples, 0.18%)</title><rect x="1110.0" y="533" width="2.1" height="15.0" fill="rgb(235,216,8)" rx="2" ry="2" />
<text  x="1112.96" y="543.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.04%)</title><rect x="732.0" y="229" width="0.5" height="15.0" fill="rgb(243,156,33)" rx="2" ry="2" />
<text  x="734.99" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::~vector (1 samples, 0.04%)</title><rect x="223.1" y="517" width="0.5" height="15.0" fill="rgb(246,163,28)" rx="2" ry="2" />
<text  x="226.10" y="527.5" ></text>
</g>
<g >
<title>at::StringView::~StringView (1 samples, 0.04%)</title><rect x="524.2" y="517" width="0.5" height="15.0" fill="rgb(248,216,19)" rx="2" ry="2" />
<text  x="527.20" y="527.5" ></text>
</g>
<g >
<title>c10::TensorImpl::TensorImpl (4 samples, 0.18%)</title><rect x="397.0" y="277" width="2.1" height="15.0" fill="rgb(223,26,18)" rx="2" ry="2" />
<text  x="399.97" y="287.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1 samples, 0.04%)</title><rect x="187.1" y="501" width="0.5" height="15.0" fill="rgb(216,198,1)" rx="2" ry="2" />
<text  x="190.05" y="511.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;::intrusive_ptr (2 samples, 0.09%)</title><rect x="987.5" y="261" width="1.1" height="15.0" fill="rgb(210,19,39)" rx="2" ry="2" />
<text  x="990.50" y="271.5" ></text>
</g>
<g >
<title>torch::dispatch&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor&amp;  (1 samples, 0.04%)</title><rect x="185.5" y="565" width="0.5" height="15.0" fill="rgb(223,152,19)" rx="2" ry="2" />
<text  x="188.46" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.04%)</title><rect x="190.2" y="245" width="0.6" height="15.0" fill="rgb(224,203,50)" rx="2" ry="2" />
<text  x="193.23" y="255.5" ></text>
</g>
<g >
<title>torch::detail::TorchLibraryInit::TorchLibraryInit (1 samples, 0.04%)</title><rect x="285.7" y="613" width="0.5" height="15.0" fill="rgb(247,66,27)" rx="2" ry="2" />
<text  x="288.65" y="623.5" ></text>
</g>
<g >
<title>[libcusparse.so.11.1.0.218] (1 samples, 0.04%)</title><rect x="305.3" y="613" width="0.5" height="15.0" fill="rgb(242,132,27)" rx="2" ry="2" />
<text  x="308.27" y="623.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (1 samples, 0.04%)</title><rect x="666.8" y="565" width="0.5" height="15.0" fill="rgb(225,132,28)" rx="2" ry="2" />
<text  x="669.79" y="575.5" ></text>
</g>
<g >
<title>at::AutoNonVariableTypeMode::AutoNonVariableTypeMode (1 samples, 0.04%)</title><rect x="157.4" y="629" width="0.5" height="15.0" fill="rgb(239,158,52)" rx="2" ry="2" />
<text  x="160.37" y="639.5" ></text>
</g>
<g >
<title>c10::AliasInfo::~AliasInfo (1 samples, 0.04%)</title><rect x="266.0" y="357" width="0.6" height="15.0" fill="rgb(229,52,9)" rx="2" ry="2" />
<text  x="269.04" y="367.5" ></text>
</g>
<g >
<title>Xbyak::Reg::Reg (1 samples, 0.04%)</title><rect x="265.0" y="581" width="0.5" height="15.0" fill="rgb(219,0,25)" rx="2" ry="2" />
<text  x="267.98" y="591.5" ></text>
</g>
<g >
<title>torch::jit::SourceRange::SourceRange (1 samples, 0.04%)</title><rect x="249.1" y="389" width="0.5" height="15.0" fill="rgb(225,188,38)" rx="2" ry="2" />
<text  x="252.07" y="399.5" ></text>
</g>
<g >
<title>at::RecordFunction::~RecordFunction (3 samples, 0.13%)</title><rect x="523.7" y="533" width="1.6" height="15.0" fill="rgb(222,77,16)" rx="2" ry="2" />
<text  x="526.67" y="543.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="189.2" y="389" width="0.5" height="15.0" fill="rgb(247,53,49)" rx="2" ry="2" />
<text  x="192.17" y="399.5" ></text>
</g>
<g >
<title>c10::TypedOperatorHandle&lt;at::Tensor  (144 samples, 6.47%)</title><rect x="375.8" y="581" width="76.3" height="15.0" fill="rgb(251,83,4)" rx="2" ry="2" />
<text  x="378.77" y="591.5" >c10::Typ..</text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.04%)</title><rect x="1155.0" y="405" width="0.5" height="15.0" fill="rgb(218,109,40)" rx="2" ry="2" />
<text  x="1158.01" y="415.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="287.8" y="469" width="0.5" height="15.0" fill="rgb(250,87,43)" rx="2" ry="2" />
<text  x="290.77" y="479.5" ></text>
</g>
<g >
<title>impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor (1 samples, 0.04%)</title><rect x="257.0" y="565" width="0.6" height="15.0" fill="rgb(214,212,14)" rx="2" ry="2" />
<text  x="260.03" y="575.5" ></text>
</g>
<g >
<title>microbenchmark (2,217 samples, 99.60%)</title><rect x="10.0" y="709" width="1175.2" height="15.0" fill="rgb(254,105,34)" rx="2" ry="2" />
<text  x="13.00" y="719.5" >microbenchmark</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (1 samples, 0.04%)</title><rect x="324.9" y="309" width="0.5" height="15.0" fill="rgb(246,74,0)" rx="2" ry="2" />
<text  x="327.88" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::RegistryPriority&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::RegistryPriority&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash_aux (1 samples, 0.04%)</title><rect x="273.5" y="501" width="0.5" height="15.0" fill="rgb(208,147,35)" rx="2" ry="2" />
<text  x="276.46" y="511.5" ></text>
</g>
<g >
<title>TORCH_LIBRARY_init_aten (10 samples, 0.45%)</title><rect x="210.4" y="581" width="5.3" height="15.0" fill="rgb(226,83,1)" rx="2" ry="2" />
<text  x="213.38" y="591.5" ></text>
</g>
<g >
<title>c10::Registry&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unique_ptr&lt;at::CUDAHooksInterface, std::default_delete&lt;at::CUDAHooksInterface&gt; &gt;, at::CUDAHooksArgs&gt;::Register (1 samples, 0.04%)</title><rect x="184.4" y="581" width="0.5" height="15.0" fill="rgb(242,113,52)" rx="2" ry="2" />
<text  x="187.40" y="591.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseAliasAnnotation (1 samples, 0.04%)</title><rect x="169.6" y="549" width="0.5" height="15.0" fill="rgb(247,95,8)" rx="2" ry="2" />
<text  x="172.56" y="559.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;::operator=&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt; (7 samples, 0.31%)</title><rect x="334.4" y="533" width="3.7" height="15.0" fill="rgb(206,85,34)" rx="2" ry="2" />
<text  x="337.42" y="543.5" ></text>
</g>
<g >
<title>c10::make_intrusive&lt;c10::VariableVersion::VersionCounter, c10::detail::intrusive_target_default_null_type&lt;c10::VariableVersion::VersionCounter&gt;, unsigned int&amp;&gt; (5 samples, 0.22%)</title><rect x="983.3" y="197" width="2.6" height="15.0" fill="rgb(253,20,33)" rx="2" ry="2" />
<text  x="986.26" y="207.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::shared_ptr&lt;torch::jit::Operator&gt; &gt; (2 samples, 0.09%)</title><rect x="325.4" y="501" width="1.1" height="15.0" fill="rgb(234,100,48)" rx="2" ry="2" />
<text  x="328.41" y="511.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt;  (1 samples, 0.04%)</title><rect x="251.7" y="549" width="0.6" height="15.0" fill="rgb(228,132,23)" rx="2" ry="2" />
<text  x="254.73" y="559.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.04%)</title><rect x="1169.9" y="549" width="0.5" height="15.0" fill="rgb(251,162,49)" rx="2" ry="2" />
<text  x="1172.86" y="559.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.04%)</title><rect x="276.1" y="501" width="0.5" height="15.0" fill="rgb(229,144,2)" rx="2" ry="2" />
<text  x="279.11" y="511.5" ></text>
</g>
<g >
<title>c10::TensorImpl::release_resources (5 samples, 0.22%)</title><rect x="84.2" y="677" width="2.7" height="15.0" fill="rgb(251,173,32)" rx="2" ry="2" />
<text  x="87.21" y="687.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="199.2" y="501" width="0.6" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="202.25" y="511.5" ></text>
</g>
<g >
<title>c10::SmallVectorImpl&lt;unsigned long&gt;::~SmallVectorImpl (3 samples, 0.13%)</title><rect x="703.4" y="485" width="1.6" height="15.0" fill="rgb(229,22,28)" rx="2" ry="2" />
<text  x="706.37" y="495.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.04%)</title><rect x="113.9" y="501" width="0.5" height="15.0" fill="rgb(217,39,48)" rx="2" ry="2" />
<text  x="116.90" y="511.5" ></text>
</g>
<g >
<title>__lru_cache_add (1 samples, 0.04%)</title><rect x="260.2" y="213" width="0.5" height="15.0" fill="rgb(251,68,43)" rx="2" ry="2" />
<text  x="263.21" y="223.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.04%)</title><rect x="224.7" y="453" width="0.5" height="15.0" fill="rgb(220,180,2)" rx="2" ry="2" />
<text  x="227.69" y="463.5" ></text>
</g>
<g >
<title>c10::memoryProfilingEnabled (4 samples, 0.18%)</title><rect x="1166.1" y="677" width="2.2" height="15.0" fill="rgb(222,26,20)" rx="2" ry="2" />
<text  x="1169.15" y="687.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;c10::Type,  (1 samples, 0.04%)</title><rect x="212.0" y="357" width="0.5" height="15.0" fill="rgb(238,68,20)" rx="2" ry="2" />
<text  x="214.97" y="367.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (3 samples, 0.13%)</title><rect x="169.6" y="677" width="1.6" height="15.0" fill="rgb(212,116,46)" rx="2" ry="2" />
<text  x="172.56" y="687.5" ></text>
</g>
<g >
<title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, c10::OperatorName, std::hash&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueHasher&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::hash&lt;c10::OperatorName&gt; &gt;, std::equal_to&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueEquality&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::equal_to&lt;c10::OperatorName&gt; &gt;, std::allocator&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt; &gt; &gt;::emplace&lt;c10::OperatorName const&amp;, c10::OperatorHandle&amp;&gt; (1 samples, 0.04%)</title><rect x="182.3" y="437" width="0.5" height="15.0" fill="rgb(247,195,45)" rx="2" ry="2" />
<text  x="185.28" y="447.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="199.2" y="437" width="0.6" height="15.0" fill="rgb(208,0,20)" rx="2" ry="2" />
<text  x="202.25" y="447.5" ></text>
</g>
<g >
<title>[libtorch_cpu.so] (3 samples, 0.13%)</title><rect x="107.0" y="677" width="1.6" height="15.0" fill="rgb(250,204,46)" rx="2" ry="2" />
<text  x="110.01" y="687.5" ></text>
</g>
<g >
<title>c10::memoryProfilingEnabled (7 samples, 0.31%)</title><rect x="850.7" y="357" width="3.7" height="15.0" fill="rgb(248,83,4)" rx="2" ry="2" />
<text  x="853.74" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (1 samples, 0.04%)</title><rect x="258.6" y="405" width="0.5" height="15.0" fill="rgb(248,181,52)" rx="2" ry="2" />
<text  x="261.62" y="415.5" ></text>
</g>
<g >
<title>c10::TensorImpl::refresh_numel (1 samples, 0.04%)</title><rect x="435.7" y="309" width="0.5" height="15.0" fill="rgb(221,67,33)" rx="2" ry="2" />
<text  x="438.67" y="319.5" ></text>
</g>
<g >
<title>__tls_init (2 samples, 0.09%)</title><rect x="944.6" y="453" width="1.0" height="15.0" fill="rgb(206,86,49)" rx="2" ry="2" />
<text  x="947.56" y="463.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (1 samples, 0.04%)</title><rect x="194.5" y="469" width="0.5" height="15.0" fill="rgb(213,123,52)" rx="2" ry="2" />
<text  x="197.47" y="479.5" ></text>
</g>
<g >
<title>__vsnprintf_internal (2 samples, 0.09%)</title><rect x="208.3" y="389" width="1.0" height="15.0" fill="rgb(244,163,31)" rx="2" ry="2" />
<text  x="211.26" y="399.5" ></text>
</g>
<g >
<title>page_fault (2 samples, 0.09%)</title><rect x="229.5" y="277" width="1.0" height="15.0" fill="rgb(220,212,48)" rx="2" ry="2" />
<text  x="232.46" y="287.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="276.6" y="389" width="0.6" height="15.0" fill="rgb(232,210,43)" rx="2" ry="2" />
<text  x="279.64" y="399.5" ></text>
</g>
<g >
<title>at::(anonymous namespace)::empty_memory_format (11 samples, 0.49%)</title><rect x="948.8" y="453" width="5.8" height="15.0" fill="rgb(206,216,12)" rx="2" ry="2" />
<text  x="951.81" y="463.5" ></text>
</g>
<g >
<title>createArgumentVector (1 samples, 0.04%)</title><rect x="285.7" y="485" width="0.5" height="15.0" fill="rgb(244,162,1)" rx="2" ry="2" />
<text  x="288.65" y="495.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (1 samples, 0.04%)</title><rect x="199.8" y="533" width="0.5" height="15.0" fill="rgb(239,162,22)" rx="2" ry="2" />
<text  x="202.78" y="543.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.09%)</title><rect x="1111.0" y="501" width="1.1" height="15.0" fill="rgb(249,179,42)" rx="2" ry="2" />
<text  x="1114.02" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::_M_realloc_insert&lt;char const* const&amp;, std::shared_ptr&lt;c10::OptionalType&gt;, c10::nullopt_t const&amp;, c10::IValue&gt; (1 samples, 0.04%)</title><rect x="280.9" y="565" width="0.5" height="15.0" fill="rgb(212,144,52)" rx="2" ry="2" />
<text  x="283.88" y="575.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="308.4" y="485" width="0.6" height="15.0" fill="rgb(229,14,16)" rx="2" ry="2" />
<text  x="311.45" y="495.5" ></text>
</g>
<g >
<title>__count_memcg_events (1 samples, 0.04%)</title><rect x="292.5" y="453" width="0.6" height="15.0" fill="rgb(246,144,42)" rx="2" ry="2" />
<text  x="295.54" y="463.5" ></text>
</g>
<g >
<title>at::hasCallbacks (5 samples, 0.22%)</title><rect x="45.5" y="661" width="2.7" height="15.0" fill="rgb(238,224,45)" rx="2" ry="2" />
<text  x="48.52" y="671.5" ></text>
</g>
<g >
<title>debugString (1 samples, 0.04%)</title><rect x="192.9" y="533" width="0.5" height="15.0" fill="rgb(231,95,39)" rx="2" ry="2" />
<text  x="195.88" y="543.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.04%)</title><rect x="182.3" y="229" width="0.5" height="15.0" fill="rgb(251,16,13)" rx="2" ry="2" />
<text  x="185.28" y="239.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;::operator= (6 samples, 0.27%)</title><rect x="466.4" y="549" width="3.2" height="15.0" fill="rgb(219,28,36)" rx="2" ry="2" />
<text  x="469.42" y="559.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::shared_ptr&lt;torch::jit::Operator&gt;*&gt; (2 samples, 0.09%)</title><rect x="325.4" y="517" width="1.1" height="15.0" fill="rgb(236,67,9)" rx="2" ry="2" />
<text  x="328.41" y="527.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;c10::Symbol, c10::Symbol, std::allocator&lt;c10::Symbol&gt;, std::__detail::_Identity, std::equal_to&lt;c10::Symbol&gt;, std::hash&lt;c10::Symbol&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_insert&lt;c10::Symbol const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;c10::Symbol, true&gt; &gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="212.5" y="245" width="0.5" height="15.0" fill="rgb(244,120,12)" rx="2" ry="2" />
<text  x="215.50" y="255.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;c10::IValue*, c10::IValue&gt; (1 samples, 0.04%)</title><rect x="946.7" y="485" width="0.5" height="15.0" fill="rgb(210,224,39)" rx="2" ry="2" />
<text  x="949.68" y="495.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="193.9" y="469" width="0.6" height="15.0" fill="rgb(243,48,43)" rx="2" ry="2" />
<text  x="196.94" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;c10::Dispatcher::OperatorDef&gt; &gt; &gt;::allocate (1 samples, 0.04%)</title><rect x="216.7" y="437" width="0.6" height="15.0" fill="rgb(232,156,43)" rx="2" ry="2" />
<text  x="219.74" y="447.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (1 samples, 0.04%)</title><rect x="1179.4" y="437" width="0.5" height="15.0" fill="rgb(208,192,1)" rx="2" ry="2" />
<text  x="1182.40" y="447.5" ></text>
</g>
<g >
<title>c10::OperatorName::setNamespaceIfNotSet (2 samples, 0.09%)</title><rect x="222.0" y="517" width="1.1" height="15.0" fill="rgb(232,41,25)" rx="2" ry="2" />
<text  x="225.04" y="527.5" ></text>
</g>
<g >
<title>torch::dispatch&lt;c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor&gt;  (1 samples, 0.04%)</title><rect x="179.6" y="565" width="0.6" height="15.0" fill="rgb(233,102,41)" rx="2" ry="2" />
<text  x="182.63" y="575.5" ></text>
</g>
<g >
<title>torch::schema (1 samples, 0.04%)</title><rect x="195.5" y="549" width="0.6" height="15.0" fill="rgb(244,48,16)" rx="2" ry="2" />
<text  x="198.53" y="559.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;::reset_ (1 samples, 0.04%)</title><rect x="541.2" y="245" width="0.5" height="15.0" fill="rgb(212,144,15)" rx="2" ry="2" />
<text  x="544.16" y="255.5" ></text>
</g>
<g >
<title>c10::VariableVersion::VariableVersion (2 samples, 0.09%)</title><rect x="736.8" y="213" width="1.0" height="15.0" fill="rgb(237,36,49)" rx="2" ry="2" />
<text  x="739.77" y="223.5" ></text>
</g>
<g >
<title>_int_free (10 samples, 0.45%)</title><rect x="559.2" y="229" width="5.3" height="15.0" fill="rgb(229,177,45)" rx="2" ry="2" />
<text  x="562.18" y="239.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (2 samples, 0.09%)</title><rect x="400.2" y="261" width="1.0" height="15.0" fill="rgb(222,68,50)" rx="2" ry="2" />
<text  x="403.15" y="271.5" ></text>
</g>
<g >
<title>at::RecordFunction::~RecordFunction (1 samples, 0.04%)</title><rect x="388.5" y="421" width="0.5" height="15.0" fill="rgb(225,78,5)" rx="2" ry="2" />
<text  x="391.49" y="431.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="269.2" y="389" width="0.5" height="15.0" fill="rgb(232,99,41)" rx="2" ry="2" />
<text  x="272.22" y="399.5" ></text>
</g>
<g >
<title>torch::empty (301 samples, 13.52%)</title><rect x="666.8" y="613" width="159.6" height="15.0" fill="rgb(237,206,36)" rx="2" ry="2" />
<text  x="669.79" y="623.5" >torch::empty</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_List_node&lt;c10::impl::AnnotatedKernel&gt; &gt;::destroy&lt;c10::impl::AnnotatedKernel&gt; (5 samples, 0.22%)</title><rect x="319.0" y="325" width="2.7" height="15.0" fill="rgb(207,217,18)" rx="2" ry="2" />
<text  x="322.05" y="335.5" ></text>
</g>
<g >
<title>at::Tensor::~Tensor (2 samples, 0.09%)</title><rect x="495.0" y="613" width="1.1" height="15.0" fill="rgb(215,206,47)" rx="2" ry="2" />
<text  x="498.04" y="623.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (2 samples, 0.09%)</title><rect x="495.0" y="597" width="1.1" height="15.0" fill="rgb(250,136,8)" rx="2" ry="2" />
<text  x="498.04" y="607.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.04%)</title><rect x="169.6" y="421" width="0.5" height="15.0" fill="rgb(223,52,22)" rx="2" ry="2" />
<text  x="172.56" y="431.5" ></text>
</g>
<g >
<title>__GI___open64_nocancel (2 samples, 0.09%)</title><rect x="1110.0" y="517" width="1.0" height="15.0" fill="rgb(212,85,24)" rx="2" ry="2" />
<text  x="1112.96" y="527.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseDeclaration (2 samples, 0.09%)</title><rect x="289.4" y="501" width="1.0" height="15.0" fill="rgb(224,77,11)" rx="2" ry="2" />
<text  x="292.36" y="511.5" ></text>
</g>
<g >
<title>createArgumentVector (1 samples, 0.04%)</title><rect x="213.6" y="469" width="0.5" height="15.0" fill="rgb(210,178,11)" rx="2" ry="2" />
<text  x="216.56" y="479.5" ></text>
</g>
<g >
<title>c10::TensorOptions::requires_grad (15 samples, 0.67%)</title><rect x="885.2" y="613" width="7.9" height="15.0" fill="rgb(235,3,53)" rx="2" ry="2" />
<text  x="888.19" y="623.5" ></text>
</g>
<g >
<title>write&lt;c10::Dispatcher::findOrRegisterName_ (2 samples, 0.09%)</title><rect x="191.8" y="501" width="1.1" height="15.0" fill="rgb(250,167,34)" rx="2" ry="2" />
<text  x="194.82" y="511.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.04%)</title><rect x="178.0" y="517" width="0.6" height="15.0" fill="rgb(228,177,29)" rx="2" ry="2" />
<text  x="181.04" y="527.5" ></text>
</g>
<g >
<title>__posix_memalign (1 samples, 0.04%)</title><rect x="99.1" y="677" width="0.5" height="15.0" fill="rgb(223,177,21)" rx="2" ry="2" />
<text  x="102.06" y="687.5" ></text>
</g>
<g >
<title>parseList (1 samples, 0.04%)</title><rect x="113.9" y="517" width="0.5" height="15.0" fill="rgb(225,213,1)" rx="2" ry="2" />
<text  x="116.90" y="527.5" ></text>
</g>
<g >
<title>torch::jit::Token::text[abi:cxx11] (1 samples, 0.04%)</title><rect x="170.6" y="533" width="0.6" height="15.0" fill="rgb(251,160,42)" rx="2" ry="2" />
<text  x="173.62" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.04%)</title><rect x="66.7" y="677" width="0.6" height="15.0" fill="rgb(241,199,28)" rx="2" ry="2" />
<text  x="69.72" y="687.5" ></text>
</g>
<g >
<title>c10::impl::tls_local_dispatch_key_set (5 samples, 0.22%)</title><rect x="89.0" y="677" width="2.6" height="15.0" fill="rgb(241,45,41)" rx="2" ry="2" />
<text  x="91.98" y="687.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.04%)</title><rect x="304.2" y="469" width="0.5" height="15.0" fill="rgb(244,74,5)" rx="2" ry="2" />
<text  x="307.20" y="479.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, torch::CppFunction&gt; (1 samples, 0.04%)</title><rect x="206.7" y="549" width="0.5" height="15.0" fill="rgb(234,184,20)" rx="2" ry="2" />
<text  x="209.67" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt;, true&gt; &gt; &gt;::operator (1 samples, 0.04%)</title><rect x="110.7" y="581" width="0.5" height="15.0" fill="rgb(254,199,47)" rx="2" ry="2" />
<text  x="113.72" y="591.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (3 samples, 0.13%)</title><rect x="207.7" y="533" width="1.6" height="15.0" fill="rgb(212,136,45)" rx="2" ry="2" />
<text  x="210.73" y="543.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (3 samples, 0.13%)</title><rect x="265.5" y="501" width="1.6" height="15.0" fill="rgb(253,60,3)" rx="2" ry="2" />
<text  x="268.51" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;c10::Argument&gt; &gt;::construct&lt;c10::Argument, c10::Argument&gt; (1 samples, 0.04%)</title><rect x="177.0" y="421" width="0.5" height="15.0" fill="rgb(243,9,20)" rx="2" ry="2" />
<text  x="179.98" y="431.5" ></text>
</g>
<g >
<title>TORCH_LIBRARY_IMPL_init_aten_Autograd (2 samples, 0.09%)</title><rect x="255.4" y="581" width="1.1" height="15.0" fill="rgb(249,208,11)" rx="2" ry="2" />
<text  x="258.44" y="591.5" ></text>
</g>
<g >
<title>torch::autograd::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Autograd (1 samples, 0.04%)</title><rect x="256.5" y="581" width="0.5" height="15.0" fill="rgb(228,160,35)" rx="2" ry="2" />
<text  x="259.50" y="591.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;c10::Type,  (1 samples, 0.04%)</title><rect x="179.6" y="421" width="0.6" height="15.0" fill="rgb(206,97,42)" rx="2" ry="2" />
<text  x="182.63" y="431.5" ></text>
</g>
<g >
<title>c10::SmallVectorImpl&lt;long&gt;::resize (1 samples, 0.04%)</title><rect x="1062.2" y="261" width="0.6" height="15.0" fill="rgb(245,88,24)" rx="2" ry="2" />
<text  x="1065.25" y="271.5" ></text>
</g>
<g >
<title>prepend_name (1 samples, 0.04%)</title><rect x="1168.8" y="453" width="0.5" height="15.0" fill="rgb(248,53,17)" rx="2" ry="2" />
<text  x="1171.80" y="463.5" ></text>
</g>
<g >
<title>find_vma (1 samples, 0.04%)</title><rect x="1151.3" y="501" width="0.5" height="15.0" fill="rgb(224,156,49)" rx="2" ry="2" />
<text  x="1154.30" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (1 samples, 0.04%)</title><rect x="319.0" y="245" width="0.6" height="15.0" fill="rgb(219,178,51)" rx="2" ry="2" />
<text  x="322.05" y="255.5" ></text>
</g>
<g >
<title>_mid_memalign (32 samples, 1.44%)</title><rect x="556.5" y="261" width="17.0" height="15.0" fill="rgb(230,85,21)" rx="2" ry="2" />
<text  x="559.53" y="271.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="276.6" y="421" width="0.6" height="15.0" fill="rgb(225,126,20)" rx="2" ry="2" />
<text  x="279.64" y="431.5" ></text>
</g>
<g >
<title>typeMetaToScalarType (5 samples, 0.22%)</title><rect x="526.8" y="437" width="2.7" height="15.0" fill="rgb(254,123,47)" rx="2" ry="2" />
<text  x="529.85" y="447.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;::operator= (7 samples, 0.31%)</title><rect x="334.4" y="549" width="3.7" height="15.0" fill="rgb(247,213,43)" rx="2" ry="2" />
<text  x="337.42" y="559.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt;  (1 samples, 0.04%)</title><rect x="247.0" y="565" width="0.5" height="15.0" fill="rgb(252,181,29)" rx="2" ry="2" />
<text  x="249.95" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;, std::allocator&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt; &gt;::~vector (4 samples, 0.18%)</title><rect x="472.2" y="501" width="2.2" height="15.0" fill="rgb(230,80,6)" rx="2" ry="2" />
<text  x="475.25" y="511.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="260.2" y="277" width="0.5" height="15.0" fill="rgb(251,27,43)" rx="2" ry="2" />
<text  x="263.21" y="287.5" ></text>
</g>
<g >
<title>c10::FunctionSchema::setNamespaceIfNotSet (2 samples, 0.09%)</title><rect x="222.0" y="533" width="1.1" height="15.0" fill="rgb(223,156,45)" rx="2" ry="2" />
<text  x="225.04" y="543.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;c10::OperatorKernel,  (2 samples, 0.09%)</title><rect x="317.5" y="325" width="1.0" height="15.0" fill="rgb(205,57,3)" rx="2" ry="2" />
<text  x="320.46" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;torch::jit::Operator&gt;, std::allocator&lt;std::shared_ptr&lt;torch::jit::Operator&gt; &gt; &gt;::emplace_back&lt;std::shared_ptr&lt;torch::jit::Operator&gt; &gt; (1 samples, 0.04%)</title><rect x="297.3" y="517" width="0.5" height="15.0" fill="rgb(254,226,48)" rx="2" ry="2" />
<text  x="300.31" y="527.5" ></text>
</g>
<g >
<title>parseList (1 samples, 0.04%)</title><rect x="281.9" y="517" width="0.6" height="15.0" fill="rgb(251,114,49)" rx="2" ry="2" />
<text  x="284.94" y="527.5" ></text>
</g>
<g >
<title>c10::Registry&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unique_ptr&lt;c10::C10FlagParser, std::default_delete&lt;c10::C10FlagParser&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;::Register (1 samples, 0.04%)</title><rect x="272.9" y="597" width="0.6" height="15.0" fill="rgb(213,127,30)" rx="2" ry="2" />
<text  x="275.93" y="607.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="201.9" y="341" width="0.5" height="15.0" fill="rgb(222,208,19)" rx="2" ry="2" />
<text  x="204.90" y="351.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, at::Tensor  (1 samples, 0.04%)</title><rect x="260.7" y="565" width="0.6" height="15.0" fill="rgb(244,21,43)" rx="2" ry="2" />
<text  x="263.74" y="575.5" ></text>
</g>
<g >
<title>c10::TensorOptions::computeDispatchKey (1 samples, 0.04%)</title><rect x="526.8" y="421" width="0.6" height="15.0" fill="rgb(214,132,37)" rx="2" ry="2" />
<text  x="529.85" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.04%)</title><rect x="67.8" y="645" width="0.5" height="15.0" fill="rgb(252,56,9)" rx="2" ry="2" />
<text  x="70.78" y="655.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1 samples, 0.04%)</title><rect x="225.2" y="485" width="0.6" height="15.0" fill="rgb(247,65,16)" rx="2" ry="2" />
<text  x="228.22" y="495.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="226.3" y="309" width="0.5" height="15.0" fill="rgb(254,16,6)" rx="2" ry="2" />
<text  x="229.28" y="319.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::computeDispatchTableEntry (1 samples, 0.04%)</title><rect x="270.8" y="501" width="0.5" height="15.0" fill="rgb(229,162,38)" rx="2" ry="2" />
<text  x="273.81" y="511.5" ></text>
</g>
<g >
<title>__libc_start_main (1,514 samples, 68.01%)</title><rect x="303.1" y="677" width="802.6" height="15.0" fill="rgb(215,165,30)" rx="2" ry="2" />
<text  x="306.14" y="687.5" >__libc_start_main</text>
</g>
<g >
<title>parseName (1 samples, 0.04%)</title><rect x="249.1" y="469" width="0.5" height="15.0" fill="rgb(233,90,42)" rx="2" ry="2" />
<text  x="252.07" y="479.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="189.7" y="453" width="0.5" height="15.0" fill="rgb(227,170,29)" rx="2" ry="2" />
<text  x="192.70" y="463.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.04%)</title><rect x="113.9" y="421" width="0.5" height="15.0" fill="rgb(244,112,23)" rx="2" ry="2" />
<text  x="116.90" y="431.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::nextIf (1 samples, 0.04%)</title><rect x="213.0" y="437" width="0.6" height="15.0" fill="rgb(227,83,46)" rx="2" ry="2" />
<text  x="216.03" y="447.5" ></text>
</g>
<g >
<title>c10::SmallVector&lt;unsigned long, 4u&gt;::SmallVector (1 samples, 0.04%)</title><rect x="957.3" y="389" width="0.5" height="15.0" fill="rgb(235,114,52)" rx="2" ry="2" />
<text  x="960.29" y="399.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.04%)</title><rect x="289.9" y="437" width="0.5" height="15.0" fill="rgb(239,16,25)" rx="2" ry="2" />
<text  x="292.89" y="447.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::detail::intrusive_target_default_null_type&lt;c10::TensorImpl&gt; &gt;::make&lt;c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;, c10::DispatchKey, caffe2::TypeMeta&amp;&gt; (13 samples, 0.58%)</title><rect x="540.6" y="293" width="6.9" height="15.0" fill="rgb(227,203,2)" rx="2" ry="2" />
<text  x="543.63" y="303.5" ></text>
</g>
<g >
<title>c10::TensorImpl::~TensorImpl (30 samples, 1.35%)</title><rect x="632.9" y="549" width="15.9" height="15.0" fill="rgb(249,5,17)" rx="2" ry="2" />
<text  x="635.87" y="559.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.04%)</title><rect x="177.5" y="549" width="0.5" height="15.0" fill="rgb(235,147,25)" rx="2" ry="2" />
<text  x="180.51" y="559.5" ></text>
</g>
<g >
<title>at::impl::variable_excluded_from_dispatch (6 samples, 0.27%)</title><rect x="743.7" y="309" width="3.1" height="15.0" fill="rgb(235,209,2)" rx="2" ry="2" />
<text  x="746.66" y="319.5" ></text>
</g>
<g >
<title>ctx_resched (9 samples, 0.40%)</title><rect x="1185.2" y="565" width="4.8" height="15.0" fill="rgb(214,104,2)" rx="2" ry="2" />
<text  x="1188.23" y="575.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.04%)</title><rect x="207.2" y="549" width="0.5" height="15.0" fill="rgb(252,216,12)" rx="2" ry="2" />
<text  x="210.20" y="559.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.04%)</title><rect x="407.6" y="293" width="0.5" height="15.0" fill="rgb(220,108,52)" rx="2" ry="2" />
<text  x="410.57" y="303.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.04%)</title><rect x="198.2" y="405" width="0.5" height="15.0" fill="rgb(232,121,31)" rx="2" ry="2" />
<text  x="201.19" y="415.5" ></text>
</g>
<g >
<title>torch::jit::parseSchema (3 samples, 0.13%)</title><rect x="265.5" y="517" width="1.6" height="15.0" fill="rgb(235,40,17)" rx="2" ry="2" />
<text  x="268.51" y="527.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.18%)</title><rect x="159.5" y="677" width="2.1" height="15.0" fill="rgb(237,32,54)" rx="2" ry="2" />
<text  x="162.49" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt; &gt; &gt;::deallocate (1 samples, 0.04%)</title><rect x="314.8" y="213" width="0.5" height="15.0" fill="rgb(207,112,11)" rx="2" ry="2" />
<text  x="317.81" y="223.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.04%)</title><rect x="276.6" y="469" width="0.6" height="15.0" fill="rgb(229,205,20)" rx="2" ry="2" />
<text  x="279.64" y="479.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::computeDispatchTableEntryWithDebug (1 samples, 0.04%)</title><rect x="248.0" y="453" width="0.5" height="15.0" fill="rgb(219,13,17)" rx="2" ry="2" />
<text  x="251.01" y="463.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (1 samples, 0.04%)</title><rect x="280.4" y="501" width="0.5" height="15.0" fill="rgb(244,24,47)" rx="2" ry="2" />
<text  x="283.35" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_check_len (1 samples, 0.04%)</title><rect x="248.5" y="421" width="0.6" height="15.0" fill="rgb(226,46,16)" rx="2" ry="2" />
<text  x="251.54" y="431.5" ></text>
</g>
<g >
<title>c10::SmallVectorTemplateCommon&lt;long, void&gt;::size (1 samples, 0.04%)</title><rect x="579.3" y="293" width="0.6" height="15.0" fill="rgb(227,174,6)" rx="2" ry="2" />
<text  x="582.33" y="303.5" ></text>
</g>
<g >
<title>torch::empty (2 samples, 0.09%)</title><rect x="158.4" y="645" width="1.1" height="15.0" fill="rgb(218,122,2)" rx="2" ry="2" />
<text  x="161.43" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.04%)</title><rect x="239.5" y="277" width="0.6" height="15.0" fill="rgb(211,224,2)" rx="2" ry="2" />
<text  x="242.53" y="287.5" ></text>
</g>
<g >
<title>torch::detail::TorchLibraryInit::TorchLibraryInit (3 samples, 0.13%)</title><rect x="255.4" y="597" width="1.6" height="15.0" fill="rgb(212,152,53)" rx="2" ry="2" />
<text  x="258.44" y="607.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (3 samples, 0.13%)</title><rect x="207.7" y="485" width="1.6" height="15.0" fill="rgb(217,55,14)" rx="2" ry="2" />
<text  x="210.73" y="495.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_NamedRegistrations.cpp (7 samples, 0.31%)</title><rect x="190.2" y="613" width="3.7" height="15.0" fill="rgb(248,64,3)" rx="2" ry="2" />
<text  x="193.23" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;c10::Dispatcher::OperatorDef, std::allocator&lt;c10::Dispatcher::OperatorDef&gt; &gt;::_M_erase (7 samples, 0.31%)</title><rect x="312.7" y="357" width="3.7" height="15.0" fill="rgb(247,159,44)" rx="2" ry="2" />
<text  x="315.69" y="367.5" ></text>
</g>
<g >
<title>operator (1 samples, 0.04%)</title><rect x="182.3" y="453" width="0.5" height="15.0" fill="rgb(207,94,45)" rx="2" ry="2" />
<text  x="185.28" y="463.5" ></text>
</g>
<g >
<title>c10::TensorOptions::merge_in (12 samples, 0.54%)</title><rect x="583.6" y="325" width="6.3" height="15.0" fill="rgb(253,158,0)" rx="2" ry="2" />
<text  x="586.57" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.04%)</title><rect x="124.5" y="661" width="0.5" height="15.0" fill="rgb(212,36,26)" rx="2" ry="2" />
<text  x="127.50" y="671.5" ></text>
</g>
<g >
<title>change_protection (1 samples, 0.04%)</title><rect x="1108.4" y="421" width="0.5" height="15.0" fill="rgb(206,42,3)" rx="2" ry="2" />
<text  x="1111.36" y="431.5" ></text>
</g>
<g >
<title>do_user_addr_fault (3 samples, 0.13%)</title><rect x="292.5" y="485" width="1.6" height="15.0" fill="rgb(223,103,12)" rx="2" ry="2" />
<text  x="295.54" y="495.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (63 samples, 2.83%)</title><rect x="1115.3" y="565" width="33.4" height="15.0" fill="rgb(250,189,0)" rx="2" ry="2" />
<text  x="1118.26" y="575.5" >_d..</text>
</g>
<g >
<title>torch::jit::SharedParserData::match (1 samples, 0.04%)</title><rect x="111.8" y="405" width="0.5" height="15.0" fill="rgb(238,42,51)" rx="2" ry="2" />
<text  x="114.78" y="415.5" ></text>
</g>
<g >
<title>perf_event_mmap (1 samples, 0.04%)</title><rect x="231.1" y="133" width="0.5" height="15.0" fill="rgb(208,185,34)" rx="2" ry="2" />
<text  x="234.05" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::IValue, std::allocator&lt;c10::IValue&gt; &gt;::~vector (1 samples, 0.04%)</title><rect x="533.7" y="405" width="0.6" height="15.0" fill="rgb(244,25,9)" rx="2" ry="2" />
<text  x="536.74" y="415.5" ></text>
</g>
<g >
<title>c10::RegisterOperators::checkSchemaAndRegisterOp_ (1 samples, 0.04%)</title><rect x="272.4" y="581" width="0.5" height="15.0" fill="rgb(228,161,19)" rx="2" ry="2" />
<text  x="275.40" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt;::_M_erase (6 samples, 0.27%)</title><rect x="318.5" y="357" width="3.2" height="15.0" fill="rgb(216,8,35)" rx="2" ry="2" />
<text  x="321.52" y="367.5" ></text>
</g>
<g >
<title>x86_pmu_enable (9 samples, 0.40%)</title><rect x="1185.2" y="533" width="4.8" height="15.0" fill="rgb(237,173,15)" rx="2" ry="2" />
<text  x="1188.23" y="543.5" ></text>
</g>
<g >
<title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, c10::OperatorName, std::hash&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueHasher&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::hash&lt;c10::OperatorName&gt; &gt;, std::equal_to&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueEquality&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::equal_to&lt;c10::OperatorName&gt; &gt;, std::allocator&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt; &gt; &gt;::find (1 samples, 0.04%)</title><rect x="250.1" y="437" width="0.6" height="15.0" fill="rgb(227,29,16)" rx="2" ry="2" />
<text  x="253.13" y="447.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.04%)</title><rect x="531.6" y="357" width="0.5" height="15.0" fill="rgb(223,149,35)" rx="2" ry="2" />
<text  x="534.62" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, true&gt; &gt; &gt;::allocate (1 samples, 0.04%)</title><rect x="181.2" y="261" width="0.6" height="15.0" fill="rgb(236,205,40)" rx="2" ry="2" />
<text  x="184.22" y="271.5" ></text>
</g>
<g >
<title>at::Tensor::~Tensor (1 samples, 0.04%)</title><rect x="666.8" y="597" width="0.5" height="15.0" fill="rgb(209,45,20)" rx="2" ry="2" />
<text  x="669.79" y="607.5" ></text>
</g>
<g >
<title>_start (1,612 samples, 72.42%)</title><rect x="303.1" y="693" width="854.6" height="15.0" fill="rgb(248,1,51)" rx="2" ry="2" />
<text  x="306.14" y="703.5" >_start</text>
</g>
<g >
<title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::reserve (1 samples, 0.04%)</title><rect x="179.1" y="453" width="0.5" height="15.0" fill="rgb(244,67,8)" rx="2" ry="2" />
<text  x="182.10" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.04%)</title><rect x="324.9" y="341" width="0.5" height="15.0" fill="rgb(220,71,7)" rx="2" ry="2" />
<text  x="327.88" y="351.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.04%)</title><rect x="337.6" y="309" width="0.5" height="15.0" fill="rgb(221,156,54)" rx="2" ry="2" />
<text  x="340.60" y="319.5" ></text>
</g>
<g >
<title>c10::SmallVectorImpl&lt;long&gt;::resize (1 samples, 0.04%)</title><rect x="578.8" y="293" width="0.5" height="15.0" fill="rgb(217,80,38)" rx="2" ry="2" />
<text  x="581.80" y="303.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (1 samples, 0.04%)</title><rect x="204.0" y="485" width="0.5" height="15.0" fill="rgb(206,169,15)" rx="2" ry="2" />
<text  x="207.02" y="495.5" ></text>
</g>
<g >
<title>c10::ThreadLocalDebugInfo::get (3 samples, 0.13%)</title><rect x="336.5" y="357" width="1.6" height="15.0" fill="rgb(215,199,24)" rx="2" ry="2" />
<text  x="339.54" y="367.5" ></text>
</g>
<g >
<title>tryTypeMetaToScalarType (4 samples, 0.18%)</title><rect x="706.5" y="405" width="2.2" height="15.0" fill="rgb(245,128,32)" rx="2" ry="2" />
<text  x="709.55" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt; const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt;, true&gt; &gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="110.7" y="597" width="0.5" height="15.0" fill="rgb(237,56,32)" rx="2" ry="2" />
<text  x="113.72" y="607.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="178.6" y="501" width="0.5" height="15.0" fill="rgb(218,198,6)" rx="2" ry="2" />
<text  x="181.57" y="511.5" ></text>
</g>
<g >
<title>c10::impl::(anonymous namespace)::checkSchema (1 samples, 0.04%)</title><rect x="250.7" y="501" width="0.5" height="15.0" fill="rgb(246,80,47)" rx="2" ry="2" />
<text  x="253.66" y="511.5" ></text>
</g>
<g >
<title>c10::inferFunctionSchemaFlattenedReturns&lt;at::Tensor  (2 samples, 0.09%)</title><rect x="176.5" y="517" width="1.0" height="15.0" fill="rgb(216,145,35)" rx="2" ry="2" />
<text  x="179.45" y="527.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (1 samples, 0.04%)</title><rect x="317.5" y="261" width="0.5" height="15.0" fill="rgb(205,67,37)" rx="2" ry="2" />
<text  x="320.46" y="271.5" ></text>
</g>
<g >
<title>std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt; (1 samples, 0.04%)</title><rect x="252.3" y="437" width="0.5" height="15.0" fill="rgb(239,16,26)" rx="2" ry="2" />
<text  x="255.26" y="447.5" ></text>
</g>
<g >
<title>c10::Dispatcher::call&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::TensorOptions const&amp;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (144 samples, 6.47%)</title><rect x="375.8" y="565" width="76.3" height="15.0" fill="rgb(252,68,31)" rx="2" ry="2" />
<text  x="378.77" y="575.5" >c10::Dis..</text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.04%)</title><rect x="264.4" y="453" width="0.6" height="15.0" fill="rgb(230,211,15)" rx="2" ry="2" />
<text  x="267.45" y="463.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="370.5" y="565" width="0.5" height="15.0" fill="rgb(218,189,24)" rx="2" ry="2" />
<text  x="373.47" y="575.5" ></text>
</g>
<g >
<title>empty_memory_format (126 samples, 5.66%)</title><rect x="384.2" y="469" width="66.8" height="15.0" fill="rgb(223,188,7)" rx="2" ry="2" />
<text  x="387.25" y="479.5" >empty_m..</text>
</g>
<g >
<title>[microbenchmark] (1 samples, 0.04%)</title><rect x="170.6" y="405" width="0.6" height="15.0" fill="rgb(222,127,36)" rx="2" ry="2" />
<text  x="173.62" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;c10::IValue, std::allocator&lt;c10::IValue&gt; &gt;::_Vector_impl::_Vector_impl (2 samples, 0.09%)</title><rect x="715.6" y="357" width="1.0" height="15.0" fill="rgb(229,9,21)" rx="2" ry="2" />
<text  x="718.56" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;c10::AutogradMetaInterface, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::reset (1 samples, 0.04%)</title><rect x="670.5" y="549" width="0.5" height="15.0" fill="rgb(251,59,24)" rx="2" ry="2" />
<text  x="673.50" y="559.5" ></text>
</g>
<g >
<title>at::Tensor::Tensor (1 samples, 0.04%)</title><rect x="670.0" y="581" width="0.5" height="15.0" fill="rgb(231,109,44)" rx="2" ry="2" />
<text  x="672.97" y="591.5" ></text>
</g>
<g >
<title>c10::SmallVectorBase::SmallVectorBase (5 samples, 0.22%)</title><rect x="980.6" y="149" width="2.7" height="15.0" fill="rgb(254,182,29)" rx="2" ry="2" />
<text  x="983.61" y="159.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.04%)</title><rect x="210.9" y="197" width="0.5" height="15.0" fill="rgb(232,8,25)" rx="2" ry="2" />
<text  x="213.91" y="207.5" ></text>
</g>
<g >
<title>c10::TensorOptions::memory_format (8 samples, 0.36%)</title><rect x="1071.3" y="309" width="4.2" height="15.0" fill="rgb(209,161,33)" rx="2" ry="2" />
<text  x="1074.26" y="319.5" ></text>
</g>
<g >
<title>torch::jit::Operator::JitOnlyOperator::~JitOnlyOperator (1 samples, 0.04%)</title><rect x="325.9" y="309" width="0.6" height="15.0" fill="rgb(254,101,1)" rx="2" ry="2" />
<text  x="328.94" y="319.5" ></text>
</g>
<g >
<title>c10::KernelFunction::KernelFunction (1 samples, 0.04%)</title><rect x="267.1" y="501" width="0.5" height="15.0" fill="rgb(235,71,27)" rx="2" ry="2" />
<text  x="270.10" y="511.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;c10::ThreadLocalDebugInfo,  (1 samples, 0.04%)</title><rect x="753.2" y="229" width="0.5" height="15.0" fill="rgb(225,225,14)" rx="2" ry="2" />
<text  x="756.20" y="239.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (74 samples, 3.32%)</title><rect x="610.6" y="597" width="39.2" height="15.0" fill="rgb(234,203,17)" rx="2" ry="2" />
<text  x="613.60" y="607.5" >c10..</text>
</g>
<g >
<title>c10::optional&lt;c10::MemoryFormat&gt;::initialized (1 samples, 0.04%)</title><rect x="821.1" y="533" width="0.5" height="15.0" fill="rgb(218,128,47)" rx="2" ry="2" />
<text  x="824.05" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;torch::jit::Token, std::allocator&lt;torch::jit::Token&gt; &gt;::_M_erase (1 samples, 0.04%)</title><rect x="281.9" y="405" width="0.6" height="15.0" fill="rgb(215,184,0)" rx="2" ry="2" />
<text  x="284.94" y="415.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.04%)</title><rect x="239.5" y="261" width="0.6" height="15.0" fill="rgb(215,189,35)" rx="2" ry="2" />
<text  x="242.53" y="271.5" ></text>
</g>
<g >
<title>c10::detail::_str_wrapper&lt;char const*, char const* const&amp;, char const*, unsigned int const&amp;&gt;::call[abi:cxx11] (1 samples, 0.04%)</title><rect x="252.3" y="501" width="0.5" height="15.0" fill="rgb(230,135,50)" rx="2" ry="2" />
<text  x="255.26" y="511.5" ></text>
</g>
<g >
<title>c10::SmallVectorTemplateCommon&lt;long, void&gt;::operator[] (2 samples, 0.09%)</title><rect x="785.5" y="293" width="1.1" height="15.0" fill="rgb(206,71,46)" rx="2" ry="2" />
<text  x="788.53" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::replace (1 samples, 0.04%)</title><rect x="192.9" y="421" width="0.5" height="15.0" fill="rgb(222,72,40)" rx="2" ry="2" />
<text  x="195.88" y="431.5" ></text>
</g>
<g >
<title>_dl_init (235 samples, 10.56%)</title><rect x="173.3" y="677" width="124.5" height="15.0" fill="rgb(228,11,4)" rx="2" ry="2" />
<text  x="176.27" y="687.5" >_dl_init</text>
</g>
<g >
<title>parseDeclaration (1 samples, 0.04%)</title><rect x="153.1" y="613" width="0.6" height="15.0" fill="rgb(245,200,8)" rx="2" ry="2" />
<text  x="156.13" y="623.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor  (1 samples, 0.04%)</title><rect x="203.5" y="549" width="0.5" height="15.0" fill="rgb(225,97,0)" rx="2" ry="2" />
<text  x="206.49" y="559.5" ></text>
</g>
<g >
<title>c10::ThreadLocalDebugInfo::get (6 samples, 0.27%)</title><rect x="850.7" y="341" width="3.2" height="15.0" fill="rgb(226,229,36)" rx="2" ry="2" />
<text  x="853.74" y="351.5" ></text>
</g>
<g >
<title>at::detail::make_tensor&lt;c10::TensorImpl, c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;, c10::DispatchKey, caffe2::TypeMeta&amp;&gt; (38 samples, 1.71%)</title><rect x="974.8" y="309" width="20.1" height="15.0" fill="rgb(250,174,42)" rx="2" ry="2" />
<text  x="977.78" y="319.5" ></text>
</g>
<g >
<title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (130 samples, 5.84%)</title><rect x="382.7" y="501" width="68.9" height="15.0" fill="rgb(220,200,46)" rx="2" ry="2" />
<text  x="385.66" y="511.5" >c10::im..</text>
</g>
<g >
<title>std::_Hashtable&lt;c10::Symbol, c10::Symbol, std::allocator&lt;c10::Symbol&gt;, std::__detail::_Identity, std::equal_to&lt;c10::Symbol&gt;, std::hash&lt;c10::Symbol&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_uses_single_bucket (1 samples, 0.04%)</title><rect x="266.0" y="277" width="0.6" height="15.0" fill="rgb(246,75,48)" rx="2" ry="2" />
<text  x="269.04" y="287.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (1 samples, 0.04%)</title><rect x="317.5" y="277" width="0.5" height="15.0" fill="rgb(231,44,45)" rx="2" ry="2" />
<text  x="320.46" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::RegistrationHandleRAII, std::allocator&lt;c10::RegistrationHandleRAII&gt; &gt;::~vector (25 samples, 1.12%)</title><rect x="312.2" y="549" width="13.2" height="15.0" fill="rgb(236,131,25)" rx="2" ry="2" />
<text  x="315.16" y="559.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (1 samples, 0.04%)</title><rect x="205.6" y="437" width="0.5" height="15.0" fill="rgb(206,154,26)" rx="2" ry="2" />
<text  x="208.61" y="447.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1 samples, 0.04%)</title><rect x="262.9" y="565" width="0.5" height="15.0" fill="rgb(233,178,9)" rx="2" ry="2" />
<text  x="265.86" y="575.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::lookup (1 samples, 0.04%)</title><rect x="594.2" y="421" width="0.5" height="15.0" fill="rgb(250,158,54)" rx="2" ry="2" />
<text  x="597.17" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1 samples, 0.04%)</title><rect x="110.2" y="645" width="0.5" height="15.0" fill="rgb(221,146,37)" rx="2" ry="2" />
<text  x="113.19" y="655.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;c10::Type&gt;::~shared_ptr (1 samples, 0.04%)</title><rect x="255.4" y="469" width="0.6" height="15.0" fill="rgb(240,29,12)" rx="2" ry="2" />
<text  x="258.44" y="479.5" ></text>
</g>
<g >
<title>c10::demangle_type&lt;caffe2::SplitByLengthsOp&lt;caffe2::CPUContext&gt; &gt; (1 samples, 0.04%)</title><rect x="276.6" y="613" width="0.6" height="15.0" fill="rgb(226,43,17)" rx="2" ry="2" />
<text  x="279.64" y="623.5" ></text>
</g>
<g >
<title>__static_initialization_and_destruction_0 (1 samples, 0.04%)</title><rect x="268.2" y="613" width="0.5" height="15.0" fill="rgb(238,146,46)" rx="2" ry="2" />
<text  x="271.16" y="623.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_qconcat.cpp (1 samples, 0.04%)</title><rect x="267.1" y="549" width="0.5" height="15.0" fill="rgb(225,91,29)" rx="2" ry="2" />
<text  x="270.10" y="559.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.04%)</title><rect x="180.7" y="261" width="0.5" height="15.0" fill="rgb(216,21,14)" rx="2" ry="2" />
<text  x="183.69" y="271.5" ></text>
</g>
<g >
<title>c10::Argument::Argument (1 samples, 0.04%)</title><rect x="177.0" y="389" width="0.5" height="15.0" fill="rgb(241,102,53)" rx="2" ry="2" />
<text  x="179.98" y="399.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (1 samples, 0.04%)</title><rect x="1155.0" y="421" width="0.5" height="15.0" fill="rgb(245,65,29)" rx="2" ry="2" />
<text  x="1158.01" y="431.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="256.5" y="357" width="0.5" height="15.0" fill="rgb(242,11,39)" rx="2" ry="2" />
<text  x="259.50" y="367.5" ></text>
</g>
<g >
<title>c10::Dispatcher::findOp (2 samples, 0.09%)</title><rect x="215.7" y="501" width="1.0" height="15.0" fill="rgb(210,1,50)" rx="2" ry="2" />
<text  x="218.68" y="511.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.09%)</title><rect x="1106.8" y="373" width="1.0" height="15.0" fill="rgb(217,22,48)" rx="2" ry="2" />
<text  x="1109.77" y="383.5" ></text>
</g>
<g >
<title>ska::detailv3::KeyOrValueHasher&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::hash&lt;c10::OperatorName&gt; &gt;::operator (1 samples, 0.04%)</title><rect x="216.2" y="405" width="0.5" height="15.0" fill="rgb(206,79,27)" rx="2" ry="2" />
<text  x="219.21" y="415.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;c10::Type&gt;::shared_ptr (1 samples, 0.04%)</title><rect x="166.4" y="501" width="0.5" height="15.0" fill="rgb(240,214,30)" rx="2" ry="2" />
<text  x="169.38" y="511.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.04%)</title><rect x="169.0" y="501" width="0.6" height="15.0" fill="rgb(212,105,3)" rx="2" ry="2" />
<text  x="172.03" y="511.5" ></text>
</g>
<g >
<title>checked_request2size (1 samples, 0.04%)</title><rect x="777.6" y="213" width="0.5" height="15.0" fill="rgb(208,177,48)" rx="2" ry="2" />
<text  x="780.58" y="223.5" ></text>
</g>
<g >
<title>_dl_load_cache_lookup (1 samples, 0.04%)</title><rect x="1106.2" y="549" width="0.6" height="15.0" fill="rgb(229,79,35)" rx="2" ry="2" />
<text  x="1109.24" y="559.5" ></text>
</g>
<g >
<title>unlock_page_memcg (1 samples, 0.04%)</title><rect x="1137.5" y="389" width="0.6" height="15.0" fill="rgb(233,130,17)" rx="2" ry="2" />
<text  x="1140.52" y="399.5" ></text>
</g>
<g >
<title>mark_page_accessed (4 samples, 0.18%)</title><rect x="1174.6" y="517" width="2.1" height="15.0" fill="rgb(226,63,5)" rx="2" ry="2" />
<text  x="1177.63" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::FileDescriptorProto::_InternalParse (2 samples, 0.09%)</title><rect x="295.7" y="533" width="1.1" height="15.0" fill="rgb(234,48,51)" rx="2" ry="2" />
<text  x="298.72" y="543.5" ></text>
</g>
<g >
<title>c10::Dispatcher::callWithDispatchKey&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::TensorOptions const&amp;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (278 samples, 12.49%)</title><rect x="954.6" y="421" width="147.4" height="15.0" fill="rgb(249,213,45)" rx="2" ry="2" />
<text  x="957.64" y="431.5" >c10::Dispatcher::c..</text>
</g>
<g >
<title>torch::jit::parseName (1 samples, 0.04%)</title><rect x="252.8" y="533" width="0.5" height="15.0" fill="rgb(237,34,10)" rx="2" ry="2" />
<text  x="255.79" y="543.5" ></text>
</g>
<g >
<title>c10::TensorImpl::compute_contiguous (1 samples, 0.04%)</title><rect x="580.9" y="261" width="0.5" height="15.0" fill="rgb(209,57,27)" rx="2" ry="2" />
<text  x="583.92" y="271.5" ></text>
</g>
<g >
<title>at::AutoNonVariableTypeMode::AutoNonVariableTypeMode (9 samples, 0.40%)</title><rect x="511.5" y="597" width="4.7" height="15.0" fill="rgb(236,114,2)" rx="2" ry="2" />
<text  x="514.47" y="607.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;::operator=&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt; (21 samples, 0.94%)</title><rect x="621.7" y="517" width="11.2" height="15.0" fill="rgb(235,16,21)" rx="2" ry="2" />
<text  x="624.73" y="527.5" ></text>
</g>
<g >
<title>exit_mmap (21 samples, 0.94%)</title><rect x="1169.9" y="597" width="11.1" height="15.0" fill="rgb(209,200,35)" rx="2" ry="2" />
<text  x="1172.86" y="607.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;torch::jit::SchemaTypeParser::parseAliasAnnotation (1 samples, 0.04%)</title><rect x="161.6" y="677" width="0.5" height="15.0" fill="rgb(223,21,26)" rx="2" ry="2" />
<text  x="164.61" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (1 samples, 0.04%)</title><rect x="190.2" y="325" width="0.6" height="15.0" fill="rgb(254,164,45)" rx="2" ry="2" />
<text  x="193.23" y="335.5" ></text>
</g>
<g >
<title>at::RecordFunction::RecordFunction (4 samples, 0.18%)</title><rect x="521.5" y="533" width="2.2" height="15.0" fill="rgb(247,67,18)" rx="2" ry="2" />
<text  x="524.55" y="543.5" ></text>
</g>
<g >
<title>c10::SmallVectorImpl&lt;unsigned long&gt;::SmallVectorImpl (1 samples, 0.04%)</title><rect x="532.1" y="389" width="0.6" height="15.0" fill="rgb(230,210,49)" rx="2" ry="2" />
<text  x="535.15" y="399.5" ></text>
</g>
<g >
<title>c10::GetAllocator (1 samples, 0.04%)</title><rect x="52.9" y="677" width="0.6" height="15.0" fill="rgb(229,187,30)" rx="2" ry="2" />
<text  x="55.94" y="687.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (3 samples, 0.13%)</title><rect x="671.0" y="565" width="1.6" height="15.0" fill="rgb(221,210,41)" rx="2" ry="2" />
<text  x="674.03" y="575.5" ></text>
</g>
<g >
<title>torch::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Tracer (3 samples, 0.13%)</title><rect x="203.5" y="581" width="1.6" height="15.0" fill="rgb(251,228,52)" rx="2" ry="2" />
<text  x="206.49" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, char&gt; (1 samples, 0.04%)</title><rect x="285.7" y="421" width="0.5" height="15.0" fill="rgb(252,186,16)" rx="2" ry="2" />
<text  x="288.65" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::IValue, std::allocator&lt;c10::IValue&gt; &gt;::~vector (1 samples, 0.04%)</title><rect x="946.7" y="501" width="0.5" height="15.0" fill="rgb(251,85,5)" rx="2" ry="2" />
<text  x="949.68" y="511.5" ></text>
</g>
<g >
<title>[microbenchmark] (1 samples, 0.04%)</title><rect x="920.2" y="485" width="0.5" height="15.0" fill="rgb(251,200,49)" rx="2" ry="2" />
<text  x="923.18" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_ostringstream (1 samples, 0.04%)</title><rect x="209.8" y="485" width="0.6" height="15.0" fill="rgb(221,84,50)" rx="2" ry="2" />
<text  x="212.85" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;torch::jit::Operator&gt;, std::allocator&lt;std::shared_ptr&lt;torch::jit::Operator&gt; &gt; &gt;::_M_realloc_insert&lt;std::shared_ptr&lt;torch::jit::Operator&gt; &gt; (1 samples, 0.04%)</title><rect x="297.3" y="501" width="0.5" height="15.0" fill="rgb(214,61,7)" rx="2" ry="2" />
<text  x="300.31" y="511.5" ></text>
</g>
<g >
<title>c10::TensorOptions::computeDispatchKey (7 samples, 0.31%)</title><rect x="525.8" y="453" width="3.7" height="15.0" fill="rgb(252,7,53)" rx="2" ry="2" />
<text  x="528.79" y="463.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="269.7" y="501" width="0.6" height="15.0" fill="rgb(215,198,51)" rx="2" ry="2" />
<text  x="272.75" y="511.5" ></text>
</g>
<g >
<title>c10::OperatorName::OperatorName (1 samples, 0.04%)</title><rect x="191.8" y="389" width="0.6" height="15.0" fill="rgb(227,96,31)" rx="2" ry="2" />
<text  x="194.82" y="399.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::createFunctionSchemaFromTraitsFlattenedReturns&lt;c10::guts::function_traits&lt;at::Tensor  (1 samples, 0.04%)</title><rect x="260.2" y="501" width="0.5" height="15.0" fill="rgb(222,193,5)" rx="2" ry="2" />
<text  x="263.21" y="511.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.04%)</title><rect x="198.2" y="517" width="0.5" height="15.0" fill="rgb(219,118,5)" rx="2" ry="2" />
<text  x="201.19" y="527.5" ></text>
</g>
<g >
<title>c10::TensorOptions::merge_in (34 samples, 1.53%)</title><rect x="1075.5" y="309" width="18.0" height="15.0" fill="rgb(218,131,14)" rx="2" ry="2" />
<text  x="1078.50" y="319.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.04%)</title><rect x="181.8" y="245" width="0.5" height="15.0" fill="rgb(227,222,24)" rx="2" ry="2" />
<text  x="184.75" y="255.5" ></text>
</g>
<g >
<title>[libcusparse.so.11.1.0.218] (1 samples, 0.04%)</title><rect x="175.4" y="597" width="0.5" height="15.0" fill="rgb(231,206,5)" rx="2" ry="2" />
<text  x="178.39" y="607.5" ></text>
</g>
<g >
<title>c10::Device::validate (1 samples, 0.04%)</title><rect x="796.1" y="277" width="0.6" height="15.0" fill="rgb(240,62,23)" rx="2" ry="2" />
<text  x="799.14" y="287.5" ></text>
</g>
<g >
<title>c10::Device::validate (1 samples, 0.04%)</title><rect x="1001.8" y="277" width="0.5" height="15.0" fill="rgb(250,228,12)" rx="2" ry="2" />
<text  x="1004.81" y="287.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr_target::release_resources (3 samples, 0.13%)</title><rect x="151.5" y="677" width="1.6" height="15.0" fill="rgb(231,126,34)" rx="2" ry="2" />
<text  x="154.54" y="687.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (1 samples, 0.04%)</title><rect x="231.6" y="309" width="0.5" height="15.0" fill="rgb(253,51,6)" rx="2" ry="2" />
<text  x="234.58" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt;::_M_put_node (1 samples, 0.04%)</title><rect x="318.5" y="341" width="0.5" height="15.0" fill="rgb(230,94,7)" rx="2" ry="2" />
<text  x="321.52" y="351.5" ></text>
</g>
<g >
<title>std::make_unique&lt;torch::autograd::AutogradMeta, c10::TensorImpl*, bool&amp;&gt; (22 samples, 0.99%)</title><rect x="909.0" y="581" width="11.7" height="15.0" fill="rgb(225,220,5)" rx="2" ry="2" />
<text  x="912.05" y="591.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="181.2" y="117" width="0.6" height="15.0" fill="rgb(239,32,14)" rx="2" ry="2" />
<text  x="184.22" y="127.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.04%)</title><rect x="179.6" y="405" width="0.6" height="15.0" fill="rgb(242,203,33)" rx="2" ry="2" />
<text  x="182.63" y="415.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.04%)</title><rect x="226.3" y="213" width="0.5" height="15.0" fill="rgb(207,93,15)" rx="2" ry="2" />
<text  x="229.28" y="223.5" ></text>
</g>
<g >
<title>at::RecordFunction::RecordFunction (4 samples, 0.18%)</title><rect x="956.2" y="405" width="2.1" height="15.0" fill="rgb(220,52,47)" rx="2" ry="2" />
<text  x="959.23" y="415.5" ></text>
</g>
<g >
<title>function&lt;c10::Dispatcher::registerImpl (1 samples, 0.04%)</title><rect x="193.9" y="517" width="0.6" height="15.0" fill="rgb(245,83,29)" rx="2" ry="2" />
<text  x="196.94" y="527.5" ></text>
</g>
<g >
<title>hasThreadLocalCallbacks (2 samples, 0.09%)</title><rect x="712.9" y="357" width="1.1" height="15.0" fill="rgb(226,1,9)" rx="2" ry="2" />
<text  x="715.91" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="189.2" y="453" width="0.5" height="15.0" fill="rgb(212,222,10)" rx="2" ry="2" />
<text  x="192.17" y="463.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::computeDispatchTableEntryWithDebug (1 samples, 0.04%)</title><rect x="324.3" y="389" width="0.6" height="15.0" fill="rgb(221,128,24)" rx="2" ry="2" />
<text  x="327.35" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt; &gt;::_M_erase (3 samples, 0.13%)</title><rect x="310.6" y="549" width="1.6" height="15.0" fill="rgb(214,204,44)" rx="2" ry="2" />
<text  x="313.57" y="559.5" ></text>
</g>
<g >
<title>__GI__IO_setb (1 samples, 0.04%)</title><rect x="213.6" y="357" width="0.5" height="15.0" fill="rgb(241,58,47)" rx="2" ry="2" />
<text  x="216.56" y="367.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="258.6" y="373" width="0.5" height="15.0" fill="rgb(213,194,24)" rx="2" ry="2" />
<text  x="261.62" y="383.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;c10::Type&gt;::shared_ptr&lt;c10::OptionalType, void&gt; (1 samples, 0.04%)</title><rect x="179.6" y="437" width="0.6" height="15.0" fill="rgb(245,200,28)" rx="2" ry="2" />
<text  x="182.63" y="447.5" ></text>
</g>
<g >
<title>TORCH_LIBRARY_IMPL_init_prepacked_CPU (1 samples, 0.04%)</title><rect x="196.1" y="581" width="0.5" height="15.0" fill="rgb(249,51,53)" rx="2" ry="2" />
<text  x="199.06" y="591.5" ></text>
</g>
<g >
<title>c10::DataPtr::clear (4 samples, 0.18%)</title><rect x="467.5" y="469" width="2.1" height="15.0" fill="rgb(254,219,13)" rx="2" ry="2" />
<text  x="470.48" y="479.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.04%)</title><rect x="242.7" y="437" width="0.5" height="15.0" fill="rgb(222,227,5)" rx="2" ry="2" />
<text  x="245.71" y="447.5" ></text>
</g>
<g >
<title>at::RecordFunction::RecordFunction@plt (1 samples, 0.04%)</title><rect x="702.3" y="517" width="0.5" height="15.0" fill="rgb(243,37,1)" rx="2" ry="2" />
<text  x="705.31" y="527.5" ></text>
</g>
<g >
<title>at::hasCallbacks (2 samples, 0.09%)</title><rect x="531.1" y="405" width="1.0" height="15.0" fill="rgb(250,22,46)" rx="2" ry="2" />
<text  x="534.09" y="415.5" ></text>
</g>
<g >
<title>c10::detail::_str_wrapper&lt;char const*, char const* const&amp;, char const*, unsigned int const&amp;&gt;::call[abi:cxx11] (1 samples, 0.04%)</title><rect x="206.7" y="485" width="0.5" height="15.0" fill="rgb(238,4,29)" rx="2" ry="2" />
<text  x="209.67" y="495.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.04%)</title><rect x="194.5" y="421" width="0.5" height="15.0" fill="rgb(225,10,47)" rx="2" ry="2" />
<text  x="197.47" y="431.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.09%)</title><rect x="348.2" y="581" width="1.1" height="15.0" fill="rgb(214,7,43)" rx="2" ry="2" />
<text  x="351.20" y="591.5" ></text>
</g>
<g >
<title>c10::ThreadLocalDebugInfo::get (6 samples, 0.27%)</title><rect x="58.8" y="677" width="3.1" height="15.0" fill="rgb(254,172,1)" rx="2" ry="2" />
<text  x="61.77" y="687.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::computeDispatchTableEntry (1 samples, 0.04%)</title><rect x="248.0" y="469" width="0.5" height="15.0" fill="rgb(226,79,38)" rx="2" ry="2" />
<text  x="251.01" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (1 samples, 0.04%)</title><rect x="258.6" y="469" width="0.5" height="15.0" fill="rgb(246,127,19)" rx="2" ry="2" />
<text  x="261.62" y="479.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.04%)</title><rect x="387.4" y="357" width="0.6" height="15.0" fill="rgb(224,43,34)" rx="2" ry="2" />
<text  x="390.43" y="367.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.04%)</title><rect x="209.8" y="405" width="0.6" height="15.0" fill="rgb(205,101,21)" rx="2" ry="2" />
<text  x="212.85" y="415.5" ></text>
</g>
<g >
<title>perf_event_mmap_output (1 samples, 0.04%)</title><rect x="231.1" y="85" width="0.5" height="15.0" fill="rgb(245,25,41)" rx="2" ry="2" />
<text  x="234.05" y="95.5" ></text>
</g>
<g >
<title>do_anonymous_page (2 samples, 0.09%)</title><rect x="229.5" y="181" width="1.0" height="15.0" fill="rgb(254,11,20)" rx="2" ry="2" />
<text  x="232.46" y="191.5" ></text>
</g>
<g >
<title>c10::detail::_str&lt;char const*, char const*, char const*, unsigned int&gt; (1 samples, 0.04%)</title><rect x="252.3" y="485" width="0.5" height="15.0" fill="rgb(245,50,3)" rx="2" ry="2" />
<text  x="255.26" y="495.5" ></text>
</g>
<g >
<title>strcmp (1 samples, 0.04%)</title><rect x="1147.6" y="517" width="0.5" height="15.0" fill="rgb(205,176,7)" rx="2" ry="2" />
<text  x="1150.59" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::ParseFrom&lt; (2 samples, 0.09%)</title><rect x="295.7" y="565" width="1.1" height="15.0" fill="rgb(247,6,43)" rx="2" ry="2" />
<text  x="298.72" y="575.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate (1 samples, 0.04%)</title><rect x="188.1" y="261" width="0.5" height="15.0" fill="rgb(238,123,4)" rx="2" ry="2" />
<text  x="191.11" y="271.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="277.2" y="533" width="0.5" height="15.0" fill="rgb(212,180,49)" rx="2" ry="2" />
<text  x="280.17" y="543.5" ></text>
</g>
<g >
<title>at::TORCH_LIBRARY_IMPL_init_aten_VmapMode (1 samples, 0.04%)</title><rect x="259.1" y="581" width="0.6" height="15.0" fill="rgb(240,114,13)" rx="2" ry="2" />
<text  x="262.15" y="591.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.04%)</title><rect x="276.1" y="565" width="0.5" height="15.0" fill="rgb(207,190,4)" rx="2" ry="2" />
<text  x="279.11" y="575.5" ></text>
</g>
<g >
<title>micro_requires_grad_true (527 samples, 23.67%)</title><rect x="826.4" y="629" width="279.3" height="15.0" fill="rgb(235,6,28)" rx="2" ry="2" />
<text  x="829.35" y="639.5" >micro_requires_grad_true</text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.04%)</title><rect x="281.4" y="565" width="0.5" height="15.0" fill="rgb(242,189,49)" rx="2" ry="2" />
<text  x="284.41" y="575.5" ></text>
</g>
<g >
<title>c10::Registerer&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unique_ptr&lt;c10::C10FlagParser, std::default_delete&lt;c10::C10FlagParser&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;::Registerer (1 samples, 0.04%)</title><rect x="272.9" y="613" width="0.6" height="15.0" fill="rgb(243,54,17)" rx="2" ry="2" />
<text  x="275.93" y="623.5" ></text>
</g>
<g >
<title>__tls_get_addr (3 samples, 0.13%)</title><rect x="997.6" y="277" width="1.6" height="15.0" fill="rgb(210,219,34)" rx="2" ry="2" />
<text  x="1000.57" y="287.5" ></text>
</g>
<g >
<title>caffe2::detail::make_function_schema_for_c10 (1 samples, 0.04%)</title><rect x="281.4" y="597" width="0.5" height="15.0" fill="rgb(243,23,14)" rx="2" ry="2" />
<text  x="284.41" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;c10::Dispatcher::OperatorDef, std::allocator&lt;c10::Dispatcher::OperatorDef&gt; &gt;::_M_insert&lt;c10::OperatorName&gt; (3 samples, 0.13%)</title><rect x="180.7" y="485" width="1.6" height="15.0" fill="rgb(247,10,52)" rx="2" ry="2" />
<text  x="183.69" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.04%)</title><rect x="191.8" y="277" width="0.6" height="15.0" fill="rgb(243,137,24)" rx="2" ry="2" />
<text  x="194.82" y="287.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;c10::Type&gt;::~shared_ptr (1 samples, 0.04%)</title><rect x="272.4" y="453" width="0.5" height="15.0" fill="rgb(240,94,3)" rx="2" ry="2" />
<text  x="275.40" y="463.5" ></text>
</g>
<g >
<title>c10::TensorOptions::dtype_opt (5 samples, 0.22%)</title><rect x="807.8" y="293" width="2.6" height="15.0" fill="rgb(222,188,49)" rx="2" ry="2" />
<text  x="810.80" y="303.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (1 samples, 0.04%)</title><rect x="193.9" y="533" width="0.6" height="15.0" fill="rgb(223,46,50)" rx="2" ry="2" />
<text  x="196.94" y="543.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="284.6" y="469" width="0.5" height="15.0" fill="rgb(236,155,52)" rx="2" ry="2" />
<text  x="287.59" y="479.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::(anonymous namespace)::createArgumentVector (1 samples, 0.04%)</title><rect x="199.8" y="469" width="0.5" height="15.0" fill="rgb(242,8,28)" rx="2" ry="2" />
<text  x="202.78" y="479.5" ></text>
</g>
<g >
<title>__GI___libc_free (4 samples, 0.18%)</title><rect x="342.9" y="501" width="2.1" height="15.0" fill="rgb(224,130,12)" rx="2" ry="2" />
<text  x="345.90" y="511.5" ></text>
</g>
<g >
<title>at::RecordFunction::RecordFunction (3 samples, 0.13%)</title><rect x="1157.7" y="693" width="1.6" height="15.0" fill="rgb(205,8,50)" rx="2" ry="2" />
<text  x="1160.66" y="703.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="261.3" y="501" width="0.5" height="15.0" fill="rgb(225,203,38)" rx="2" ry="2" />
<text  x="264.27" y="511.5" ></text>
</g>
<g >
<title>std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;::pair&lt;c10::OperatorHandle&amp;, true&gt; (1 samples, 0.04%)</title><rect x="191.8" y="405" width="0.6" height="15.0" fill="rgb(205,151,39)" rx="2" ry="2" />
<text  x="194.82" y="415.5" ></text>
</g>
<g >
<title>c10::DispatchKeyExtractor::setOperatorHasFallthroughForKey (1 samples, 0.04%)</title><rect x="218.3" y="373" width="0.6" height="15.0" fill="rgb(222,200,48)" rx="2" ry="2" />
<text  x="221.33" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1 samples, 0.04%)</title><rect x="170.6" y="469" width="0.6" height="15.0" fill="rgb(240,116,44)" rx="2" ry="2" />
<text  x="173.62" y="479.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.04%)</title><rect x="195.5" y="501" width="0.6" height="15.0" fill="rgb(206,56,28)" rx="2" ry="2" />
<text  x="198.53" y="511.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_VariableType_2.cpp (4 samples, 0.18%)</title><rect x="253.3" y="629" width="2.1" height="15.0" fill="rgb(226,87,18)" rx="2" ry="2" />
<text  x="256.32" y="639.5" ></text>
</g>
<g >
<title>c10::VariableVersion::VariableVersion (5 samples, 0.22%)</title><rect x="983.3" y="213" width="2.6" height="15.0" fill="rgb(233,12,47)" rx="2" ry="2" />
<text  x="986.26" y="223.5" ></text>
</g>
<g >
<title>std::array&lt;c10::KernelFunction, 38ul&gt;::operator[] (1 samples, 0.04%)</title><rect x="595.2" y="517" width="0.6" height="15.0" fill="rgb(244,13,45)" rx="2" ry="2" />
<text  x="598.23" y="527.5" ></text>
</g>
<g >
<title>torch::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Tracer (1 samples, 0.04%)</title><rect x="203.0" y="565" width="0.5" height="15.0" fill="rgb(211,175,18)" rx="2" ry="2" />
<text  x="205.96" y="575.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="689.1" y="549" width="0.5" height="15.0" fill="rgb(211,192,21)" rx="2" ry="2" />
<text  x="692.06" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt; &gt;::_M_erase (3 samples, 0.13%)</title><rect x="310.6" y="565" width="1.6" height="15.0" fill="rgb(214,215,7)" rx="2" ry="2" />
<text  x="313.57" y="575.5" ></text>
</g>
<g >
<title>impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor (1 samples, 0.04%)</title><rect x="203.5" y="565" width="0.5" height="15.0" fill="rgb(236,27,27)" rx="2" ry="2" />
<text  x="206.49" y="575.5" ></text>
</g>
<g >
<title>createArgumentVector (1 samples, 0.04%)</title><rect x="203.5" y="469" width="0.5" height="15.0" fill="rgb(240,142,46)" rx="2" ry="2" />
<text  x="206.49" y="479.5" ></text>
</g>
<g >
<title>dispatchTypeId (1 samples, 0.04%)</title><rect x="697.5" y="501" width="0.6" height="15.0" fill="rgb(208,114,36)" rx="2" ry="2" />
<text  x="700.54" y="511.5" ></text>
</g>
<g >
<title>__static_initialization_and_destruction_0 (1 samples, 0.04%)</title><rect x="265.0" y="613" width="0.5" height="15.0" fill="rgb(224,200,26)" rx="2" ry="2" />
<text  x="267.98" y="623.5" ></text>
</g>
<g >
<title>c10::dtype (21 samples, 0.94%)</title><rect x="893.1" y="613" width="11.2" height="15.0" fill="rgb(242,117,0)" rx="2" ry="2" />
<text  x="896.14" y="623.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::registerKernel (2 samples, 0.09%)</title><rect x="253.3" y="517" width="1.1" height="15.0" fill="rgb(236,75,23)" rx="2" ry="2" />
<text  x="256.32" y="527.5" ></text>
</g>
<g >
<title>c10::TensorImpl::~TensorImpl (10 samples, 0.45%)</title><rect x="140.4" y="677" width="5.3" height="15.0" fill="rgb(253,108,29)" rx="2" ry="2" />
<text  x="143.40" y="687.5" ></text>
</g>
<g >
<title>[libcublas.so.11.1.0.229] (3 samples, 0.13%)</title><rect x="303.1" y="581" width="1.6" height="15.0" fill="rgb(235,30,13)" rx="2" ry="2" />
<text  x="306.14" y="591.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTable_ (1 samples, 0.04%)</title><rect x="248.0" y="485" width="0.5" height="15.0" fill="rgb(246,169,18)" rx="2" ry="2" />
<text  x="251.01" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (1 samples, 0.04%)</title><rect x="203.5" y="357" width="0.5" height="15.0" fill="rgb(208,197,32)" rx="2" ry="2" />
<text  x="206.49" y="367.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_VariableType_1.cpp (2 samples, 0.09%)</title><rect x="252.3" y="629" width="1.0" height="15.0" fill="rgb(238,160,41)" rx="2" ry="2" />
<text  x="255.26" y="639.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.04%)</title><rect x="276.1" y="549" width="0.5" height="15.0" fill="rgb(236,127,21)" rx="2" ry="2" />
<text  x="279.11" y="559.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.04%)</title><rect x="196.6" y="485" width="0.5" height="15.0" fill="rgb(238,87,50)" rx="2" ry="2" />
<text  x="199.59" y="495.5" ></text>
</g>
<g >
<title>_int_free (2 samples, 0.09%)</title><rect x="312.7" y="293" width="1.0" height="15.0" fill="rgb(242,119,18)" rx="2" ry="2" />
<text  x="315.69" y="303.5" ></text>
</g>
<g >
<title>c10::Dispatcher::findOrRegisterName_ (4 samples, 0.18%)</title><rect x="180.7" y="517" width="2.1" height="15.0" fill="rgb(215,43,42)" rx="2" ry="2" />
<text  x="183.69" y="527.5" ></text>
</g>
<g >
<title>_dl_start_final (98 samples, 4.40%)</title><rect x="1105.7" y="661" width="52.0" height="15.0" fill="rgb(222,223,34)" rx="2" ry="2" />
<text  x="1108.71" y="671.5" >_dl_s..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;c10::Argument&gt; &gt;::allocate (1 samples, 0.04%)</title><rect x="179.1" y="421" width="0.5" height="15.0" fill="rgb(249,96,38)" rx="2" ry="2" />
<text  x="182.10" y="431.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (1 samples, 0.04%)</title><rect x="861.9" y="453" width="0.5" height="15.0" fill="rgb(225,212,36)" rx="2" ry="2" />
<text  x="864.87" y="463.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::expect (1 samples, 0.04%)</title><rect x="169.0" y="517" width="0.6" height="15.0" fill="rgb(233,129,9)" rx="2" ry="2" />
<text  x="172.03" y="527.5" ></text>
</g>
<g >
<title>do_mprotect_pkey (1 samples, 0.04%)</title><rect x="1108.4" y="453" width="0.5" height="15.0" fill="rgb(216,213,20)" rx="2" ry="2" />
<text  x="1111.36" y="463.5" ></text>
</g>
<g >
<title>c10::SmallVectorTemplateBase&lt;unsigned long, true&gt;::SmallVectorTemplateBase (1 samples, 0.04%)</title><rect x="523.1" y="485" width="0.6" height="15.0" fill="rgb(226,160,54)" rx="2" ry="2" />
<text  x="526.14" y="495.5" ></text>
</g>
<g >
<title>__tlb_remove_page_size (1 samples, 0.04%)</title><rect x="1172.5" y="517" width="0.5" height="15.0" fill="rgb(223,117,12)" rx="2" ry="2" />
<text  x="1175.51" y="527.5" ></text>
</g>
<g >
<title>ska::flat_hash_map&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt;, std::hash&lt;c10::DispatchKey&gt;, std::equal_to&lt;c10::DispatchKey&gt;, std::allocator&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt; &gt; &gt;::operator[] (1 samples, 0.04%)</title><rect x="175.9" y="485" width="0.6" height="15.0" fill="rgb(229,91,38)" rx="2" ry="2" />
<text  x="178.92" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1 samples, 0.04%)</title><rect x="239.5" y="309" width="0.6" height="15.0" fill="rgb(205,33,16)" rx="2" ry="2" />
<text  x="242.53" y="319.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.04%)</title><rect x="319.0" y="213" width="0.6" height="15.0" fill="rgb(223,212,28)" rx="2" ry="2" />
<text  x="322.05" y="223.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_expand_op_gpu.cc (1 samples, 0.04%)</title><rect x="261.8" y="613" width="0.5" height="15.0" fill="rgb(224,13,26)" rx="2" ry="2" />
<text  x="264.80" y="623.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.04%)</title><rect x="195.5" y="293" width="0.6" height="15.0" fill="rgb(209,20,52)" rx="2" ry="2" />
<text  x="198.53" y="303.5" ></text>
</g>
<g >
<title>c10::SmallVectorImpl&lt;unsigned long&gt;::SmallVectorImpl (3 samples, 0.13%)</title><rect x="714.0" y="373" width="1.6" height="15.0" fill="rgb(244,116,21)" rx="2" ry="2" />
<text  x="716.97" y="383.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.04%)</title><rect x="214.1" y="261" width="0.5" height="15.0" fill="rgb(230,198,44)" rx="2" ry="2" />
<text  x="217.09" y="271.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="1156.6" y="501" width="0.5" height="15.0" fill="rgb(222,116,2)" rx="2" ry="2" />
<text  x="1159.60" y="511.5" ></text>
</g>
<g >
<title>at::TORCH_LIBRARY_IMPL_init_aten_SparseCUDA (1 samples, 0.04%)</title><rect x="197.1" y="581" width="0.6" height="15.0" fill="rgb(250,32,20)" rx="2" ry="2" />
<text  x="200.12" y="591.5" ></text>
</g>
<g >
<title>torch::empty (349 samples, 15.68%)</title><rect x="920.7" y="597" width="185.0" height="15.0" fill="rgb(238,170,53)" rx="2" ry="2" />
<text  x="923.71" y="607.5" >torch::empty</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1 samples, 0.04%)</title><rect x="319.0" y="293" width="0.6" height="15.0" fill="rgb(236,130,17)" rx="2" ry="2" />
<text  x="322.05" y="303.5" ></text>
</g>
<g >
<title>do_user_addr_fault (2 samples, 0.09%)</title><rect x="229.5" y="229" width="1.0" height="15.0" fill="rgb(246,218,3)" rx="2" ry="2" />
<text  x="232.46" y="239.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor  (1 samples, 0.04%)</title><rect x="200.8" y="565" width="0.6" height="15.0" fill="rgb(209,18,11)" rx="2" ry="2" />
<text  x="203.84" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt; &gt;::_M_erase (3 samples, 0.13%)</title><rect x="310.6" y="581" width="1.6" height="15.0" fill="rgb(244,208,40)" rx="2" ry="2" />
<text  x="313.57" y="591.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.04%)</title><rect x="284.6" y="325" width="0.5" height="15.0" fill="rgb(207,166,45)" rx="2" ry="2" />
<text  x="287.59" y="335.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="230.5" y="277" width="0.6" height="15.0" fill="rgb(222,95,28)" rx="2" ry="2" />
<text  x="233.52" y="287.5" ></text>
</g>
<g >
<title>c10::AliasInfo::~AliasInfo (1 samples, 0.04%)</title><rect x="322.2" y="213" width="0.6" height="15.0" fill="rgb(237,116,6)" rx="2" ry="2" />
<text  x="325.23" y="223.5" ></text>
</g>
<g >
<title>at::RecordFunction::RecordFunction (6 samples, 0.27%)</title><rect x="378.9" y="533" width="3.2" height="15.0" fill="rgb(249,148,5)" rx="2" ry="2" />
<text  x="381.95" y="543.5" ></text>
</g>
<g >
<title>scalarTypeToTypeMeta (1 samples, 0.04%)</title><rect x="156.3" y="645" width="0.5" height="15.0" fill="rgb(254,103,21)" rx="2" ry="2" />
<text  x="159.31" y="655.5" ></text>
</g>
<g >
<title>__mod_memcg_state (1 samples, 0.04%)</title><rect x="1156.6" y="405" width="0.5" height="15.0" fill="rgb(216,189,17)" rx="2" ry="2" />
<text  x="1159.60" y="415.5" ></text>
</g>
<g >
<title>torch::CppFunction::makeUnboxedOnly&lt;at::Tensor&amp;  (1 samples, 0.04%)</title><rect x="178.6" y="565" width="0.5" height="15.0" fill="rgb(254,42,11)" rx="2" ry="2" />
<text  x="181.57" y="575.5" ></text>
</g>
<g >
<title>at::Tensor::~Tensor (1 samples, 0.04%)</title><rect x="361.5" y="613" width="0.5" height="15.0" fill="rgb(221,173,4)" rx="2" ry="2" />
<text  x="364.46" y="623.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.04%)</title><rect x="314.8" y="197" width="0.5" height="15.0" fill="rgb(249,92,3)" rx="2" ry="2" />
<text  x="317.81" y="207.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.04%)</title><rect x="74.1" y="677" width="0.6" height="15.0" fill="rgb(239,158,20)" rx="2" ry="2" />
<text  x="77.14" y="687.5" ></text>
</g>
<g >
<title>page_fault (3 samples, 0.13%)</title><rect x="292.5" y="533" width="1.6" height="15.0" fill="rgb(225,130,52)" rx="2" ry="2" />
<text  x="295.54" y="543.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;, std::allocator&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt; &gt;::~_Vector_base (2 samples, 0.09%)</title><rect x="473.3" y="485" width="1.1" height="15.0" fill="rgb(208,195,28)" rx="2" ry="2" />
<text  x="476.31" y="495.5" ></text>
</g>
<g >
<title>c10::TensorOptions::computeDispatchKey (1 samples, 0.04%)</title><rect x="383.7" y="453" width="0.5" height="15.0" fill="rgb(230,151,11)" rx="2" ry="2" />
<text  x="386.72" y="463.5" ></text>
</g>
<g >
<title>malloc_consolidate (1 samples, 0.04%)</title><rect x="314.8" y="181" width="0.5" height="15.0" fill="rgb(245,134,38)" rx="2" ry="2" />
<text  x="317.81" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::~_Vector_base (2 samples, 0.09%)</title><rect x="320.6" y="229" width="1.1" height="15.0" fill="rgb(206,53,3)" rx="2" ry="2" />
<text  x="323.64" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="231.1" y="197" width="0.5" height="15.0" fill="rgb(212,17,10)" rx="2" ry="2" />
<text  x="234.05" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::_M_allocate (1 samples, 0.04%)</title><rect x="198.7" y="437" width="0.5" height="15.0" fill="rgb(233,161,3)" rx="2" ry="2" />
<text  x="201.72" y="447.5" ></text>
</g>
<g >
<title>c10::Dispatcher::OperatorDef::~OperatorDef (5 samples, 0.22%)</title><rect x="313.7" y="309" width="2.7" height="15.0" fill="rgb(229,148,42)" rx="2" ry="2" />
<text  x="316.75" y="319.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.04%)</title><rect x="276.6" y="309" width="0.6" height="15.0" fill="rgb(221,11,2)" rx="2" ry="2" />
<text  x="279.64" y="319.5" ></text>
</g>
<g >
<title>function&lt;c10::Dispatcher::registerImpl (1 samples, 0.04%)</title><rect x="256.5" y="501" width="0.5" height="15.0" fill="rgb(205,70,40)" rx="2" ry="2" />
<text  x="259.50" y="511.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="1108.9" y="485" width="0.5" height="15.0" fill="rgb(205,39,43)" rx="2" ry="2" />
<text  x="1111.89" y="495.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::VariableVersion::VersionCounter, c10::detail::intrusive_target_default_null_type&lt;c10::VariableVersion::VersionCounter&gt; &gt;::reset_ (7 samples, 0.31%)</title><rect x="474.9" y="517" width="3.7" height="15.0" fill="rgb(216,198,47)" rx="2" ry="2" />
<text  x="477.90" y="527.5" ></text>
</g>
<g >
<title>operator (1 samples, 0.04%)</title><rect x="218.9" y="453" width="0.5" height="15.0" fill="rgb(244,88,25)" rx="2" ry="2" />
<text  x="221.86" y="463.5" ></text>
</g>
<g >
<title>__cxa_finalize (1 samples, 0.04%)</title><rect x="75.7" y="677" width="0.6" height="15.0" fill="rgb(217,156,33)" rx="2" ry="2" />
<text  x="78.73" y="687.5" ></text>
</g>
<g >
<title>c10::Dispatcher::findOrRegisterName_ (1 samples, 0.04%)</title><rect x="250.1" y="517" width="0.6" height="15.0" fill="rgb(241,151,20)" rx="2" ry="2" />
<text  x="253.13" y="527.5" ></text>
</g>
<g >
<title>c10::TypedOperatorHandle&lt;at::Tensor  (278 samples, 12.49%)</title><rect x="954.6" y="437" width="147.4" height="15.0" fill="rgb(231,168,21)" rx="2" ry="2" />
<text  x="957.64" y="447.5" >c10::TypedOperator..</text>
</g>
<g >
<title>c10::DispatchKeyExtractor::makeBitsetForDispatchArgs (1 samples, 0.04%)</title><rect x="272.4" y="501" width="0.5" height="15.0" fill="rgb(246,195,53)" rx="2" ry="2" />
<text  x="275.40" y="511.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::vector&lt;caffe2::TensorShape, std::allocator&lt;caffe2::TensorShape&gt; &gt;  (1 samples, 0.04%)</title><rect x="108.1" y="661" width="0.5" height="15.0" fill="rgb(209,190,19)" rx="2" ry="2" />
<text  x="111.07" y="671.5" ></text>
</g>
<g >
<title>c10::operator!= (1 samples, 0.04%)</title><rect x="206.1" y="469" width="0.6" height="15.0" fill="rgb(234,190,38)" rx="2" ry="2" />
<text  x="209.14" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.04%)</title><rect x="114.4" y="501" width="0.6" height="15.0" fill="rgb(219,61,51)" rx="2" ry="2" />
<text  x="117.43" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (1 samples, 0.04%)</title><rect x="110.2" y="581" width="0.5" height="15.0" fill="rgb(244,52,47)" rx="2" ry="2" />
<text  x="113.19" y="591.5" ></text>
</g>
<g >
<title>__static_initialization_and_destruction_0 (2 samples, 0.09%)</title><rect x="193.9" y="613" width="1.1" height="15.0" fill="rgb(250,123,33)" rx="2" ry="2" />
<text  x="196.94" y="623.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.04%)</title><rect x="106.5" y="565" width="0.5" height="15.0" fill="rgb(253,60,9)" rx="2" ry="2" />
<text  x="109.48" y="575.5" ></text>
</g>
<g >
<title>c10::DispatchKeyExtractor::getDispatchKeyUnboxed&lt;c10::ArrayRef&lt;long&gt;, c10::TensorOptions const&amp;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (2 samples, 0.09%)</title><rect x="520.0" y="549" width="1.0" height="15.0" fill="rgb(228,128,38)" rx="2" ry="2" />
<text  x="522.96" y="559.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="110.7" y="501" width="0.5" height="15.0" fill="rgb(207,166,49)" rx="2" ry="2" />
<text  x="113.72" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.04%)</title><rect x="284.6" y="613" width="0.5" height="15.0" fill="rgb(250,116,34)" rx="2" ry="2" />
<text  x="287.59" y="623.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (1 samples, 0.04%)</title><rect x="198.2" y="389" width="0.5" height="15.0" fill="rgb(247,75,5)" rx="2" ry="2" />
<text  x="201.19" y="399.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;c10::ThreadLocalDebugInfo&gt;::shared_ptr (3 samples, 0.13%)</title><rect x="852.3" y="325" width="1.6" height="15.0" fill="rgb(244,31,31)" rx="2" ry="2" />
<text  x="855.33" y="335.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTableFull_ (1 samples, 0.04%)</title><rect x="218.3" y="389" width="0.6" height="15.0" fill="rgb(222,193,24)" rx="2" ry="2" />
<text  x="221.33" y="399.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.04%)</title><rect x="274.5" y="341" width="0.5" height="15.0" fill="rgb(234,192,39)" rx="2" ry="2" />
<text  x="277.52" y="351.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="285.1" y="517" width="0.6" height="15.0" fill="rgb(232,211,43)" rx="2" ry="2" />
<text  x="288.12" y="527.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="304.2" y="485" width="0.5" height="15.0" fill="rgb(220,70,19)" rx="2" ry="2" />
<text  x="307.20" y="495.5" ></text>
</g>
<g >
<title>__posix_memalign (64 samples, 2.88%)</title><rect x="1010.8" y="277" width="34.0" height="15.0" fill="rgb(251,184,40)" rx="2" ry="2" />
<text  x="1013.83" y="287.5" >__..</text>
</g>
<g >
<title>c10::SmallVectorTemplateBase&lt;unsigned long, true&gt;::SmallVectorTemplateBase (3 samples, 0.13%)</title><rect x="714.0" y="357" width="1.6" height="15.0" fill="rgb(245,196,3)" rx="2" ry="2" />
<text  x="716.97" y="367.5" ></text>
</g>
<g >
<title>c10::Dispatcher::deregisterFallback_ (1 samples, 0.04%)</title><rect x="324.3" y="437" width="0.6" height="15.0" fill="rgb(218,175,16)" rx="2" ry="2" />
<text  x="327.35" y="447.5" ></text>
</g>
<g >
<title>debugString (1 samples, 0.04%)</title><rect x="246.4" y="533" width="0.6" height="15.0" fill="rgb(241,64,23)" rx="2" ry="2" />
<text  x="249.42" y="543.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.04%)</title><rect x="753.2" y="213" width="0.5" height="15.0" fill="rgb(254,178,34)" rx="2" ry="2" />
<text  x="756.20" y="223.5" ></text>
</g>
<g >
<title>c10::TensorImpl::compute_contiguous (1 samples, 0.04%)</title><rect x="434.6" y="277" width="0.5" height="15.0" fill="rgb(231,105,49)" rx="2" ry="2" />
<text  x="437.61" y="287.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (1 samples, 0.04%)</title><rect x="260.7" y="517" width="0.6" height="15.0" fill="rgb(216,55,4)" rx="2" ry="2" />
<text  x="263.74" y="527.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;unsigned char&gt; (2 samples, 0.09%)</title><rect x="953.6" y="389" width="1.0" height="15.0" fill="rgb(254,171,36)" rx="2" ry="2" />
<text  x="956.58" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;torch::jit::Token&gt; &gt;::destroy&lt;torch::jit::Token&gt; (1 samples, 0.04%)</title><rect x="214.1" y="421" width="0.5" height="15.0" fill="rgb(232,177,40)" rx="2" ry="2" />
<text  x="217.09" y="431.5" ></text>
</g>
<g >
<title>at::hasCallbacks (2 samples, 0.09%)</title><rect x="1184.2" y="677" width="1.0" height="15.0" fill="rgb(229,178,4)" rx="2" ry="2" />
<text  x="1187.17" y="687.5" ></text>
</g>
<g >
<title>c10::SmallVectorBase::SmallVectorBase (1 samples, 0.04%)</title><rect x="543.3" y="165" width="0.5" height="15.0" fill="rgb(242,70,31)" rx="2" ry="2" />
<text  x="546.28" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;torch::jit::Source&gt;::construct&lt;torch::jit::Source, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.04%)</title><rect x="188.1" y="373" width="0.5" height="15.0" fill="rgb(208,78,49)" rx="2" ry="2" />
<text  x="191.11" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_find_node (1 samples, 0.04%)</title><rect x="217.3" y="293" width="0.5" height="15.0" fill="rgb(241,213,15)" rx="2" ry="2" />
<text  x="220.27" y="303.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::registerKernel (1 samples, 0.04%)</title><rect x="268.2" y="517" width="0.5" height="15.0" fill="rgb(249,109,19)" rx="2" ry="2" />
<text  x="271.16" y="527.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::intrusive_ptr (1 samples, 0.04%)</title><rect x="670.0" y="565" width="0.5" height="15.0" fill="rgb(238,26,25)" rx="2" ry="2" />
<text  x="672.97" y="575.5" ></text>
</g>
<g >
<title>[microbenchmark] (1 samples, 0.04%)</title><rect x="855.5" y="517" width="0.5" height="15.0" fill="rgb(251,98,39)" rx="2" ry="2" />
<text  x="858.51" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.04%)</title><rect x="203.5" y="341" width="0.5" height="15.0" fill="rgb(240,46,1)" rx="2" ry="2" />
<text  x="206.49" y="351.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.04%)</title><rect x="240.1" y="261" width="0.5" height="15.0" fill="rgb(248,39,39)" rx="2" ry="2" />
<text  x="243.06" y="271.5" ></text>
</g>
<g >
<title>c10::OptionalType::create (1 samples, 0.04%)</title><rect x="234.2" y="373" width="0.6" height="15.0" fill="rgb(236,215,19)" rx="2" ry="2" />
<text  x="237.23" y="383.5" ></text>
</g>
<g >
<title>c10::DataPtr::DataPtr (1 samples, 0.04%)</title><rect x="448.4" y="293" width="0.5" height="15.0" fill="rgb(213,32,19)" rx="2" ry="2" />
<text  x="451.39" y="303.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (1 samples, 0.04%)</title><rect x="209.8" y="437" width="0.6" height="15.0" fill="rgb(239,78,33)" rx="2" ry="2" />
<text  x="212.85" y="447.5" ></text>
</g>
<g >
<title>typeMetaToScalarType (3 samples, 0.13%)</title><rect x="505.1" y="549" width="1.6" height="15.0" fill="rgb(230,78,48)" rx="2" ry="2" />
<text  x="508.11" y="559.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::Lexer (1 samples, 0.04%)</title><rect x="248.5" y="485" width="0.6" height="15.0" fill="rgb(233,137,5)" rx="2" ry="2" />
<text  x="251.54" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::~vector (4 samples, 0.18%)</title><rect x="319.6" y="245" width="2.1" height="15.0" fill="rgb(239,140,25)" rx="2" ry="2" />
<text  x="322.58" y="255.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor&gt;  (1 samples, 0.04%)</title><rect x="209.8" y="565" width="0.6" height="15.0" fill="rgb(208,213,49)" rx="2" ry="2" />
<text  x="212.85" y="575.5" ></text>
</g>
<g >
<title>c10::inferFunctionSchemaFlattenedReturns&lt;at::Tensor  (1 samples, 0.04%)</title><rect x="179.1" y="517" width="0.5" height="15.0" fill="rgb(217,181,37)" rx="2" ry="2" />
<text  x="182.10" y="527.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (1 samples, 0.04%)</title><rect x="1111.5" y="357" width="0.6" height="15.0" fill="rgb(215,3,45)" rx="2" ry="2" />
<text  x="1114.55" y="367.5" ></text>
</g>
<g >
<title>createArgumentVector (1 samples, 0.04%)</title><rect x="260.2" y="469" width="0.5" height="15.0" fill="rgb(253,11,38)" rx="2" ry="2" />
<text  x="263.21" y="479.5" ></text>
</g>
<g >
<title>c10::TensorType::operator== (1 samples, 0.04%)</title><rect x="206.1" y="453" width="0.6" height="15.0" fill="rgb(211,75,13)" rx="2" ry="2" />
<text  x="209.14" y="463.5" ></text>
</g>
<g >
<title>hasThreadLocalCallbacks (1 samples, 0.04%)</title><rect x="701.2" y="469" width="0.6" height="15.0" fill="rgb(237,220,54)" rx="2" ry="2" />
<text  x="704.25" y="479.5" ></text>
</g>
<g >
<title>c10::TensorImpl::compute_contiguous (1 samples, 0.04%)</title><rect x="792.4" y="245" width="0.6" height="15.0" fill="rgb(242,58,6)" rx="2" ry="2" />
<text  x="795.43" y="255.5" ></text>
</g>
<g >
<title>c10::KernelFunction::call&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::TensorOptions const&amp;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (260 samples, 11.68%)</title><rect x="962.6" y="405" width="137.8" height="15.0" fill="rgb(245,62,53)" rx="2" ry="2" />
<text  x="965.59" y="415.5" >c10::KernelFuncti..</text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (2 samples, 0.09%)</title><rect x="265.5" y="405" width="1.1" height="15.0" fill="rgb(207,229,10)" rx="2" ry="2" />
<text  x="268.51" y="415.5" ></text>
</g>
<g >
<title>c10::impl::AnnotatedSchema::~AnnotatedSchema (2 samples, 0.09%)</title><rect x="322.2" y="373" width="1.1" height="15.0" fill="rgb(210,146,1)" rx="2" ry="2" />
<text  x="325.23" y="383.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::__atomic_base (1 samples, 0.04%)</title><rect x="737.8" y="181" width="0.6" height="15.0" fill="rgb(229,71,32)" rx="2" ry="2" />
<text  x="740.83" y="191.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.04%)</title><rect x="210.9" y="277" width="0.5" height="15.0" fill="rgb(241,91,19)" rx="2" ry="2" />
<text  x="213.91" y="287.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.04%)</title><rect x="252.3" y="549" width="0.5" height="15.0" fill="rgb(219,88,5)" rx="2" ry="2" />
<text  x="255.26" y="559.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.04%)</title><rect x="205.1" y="341" width="0.5" height="15.0" fill="rgb(224,7,0)" rx="2" ry="2" />
<text  x="208.08" y="351.5" ></text>
</g>
<g >
<title>c10::TensorImpl::compute_contiguous (2 samples, 0.09%)</title><rect x="1064.4" y="245" width="1.0" height="15.0" fill="rgb(239,222,8)" rx="2" ry="2" />
<text  x="1067.37" y="255.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="1106.2" y="485" width="0.6" height="15.0" fill="rgb(240,9,49)" rx="2" ry="2" />
<text  x="1109.24" y="495.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.04%)</title><rect x="241.7" y="453" width="0.5" height="15.0" fill="rgb(232,127,5)" rx="2" ry="2" />
<text  x="244.65" y="463.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.04%)</title><rect x="1063.8" y="261" width="0.6" height="15.0" fill="rgb(210,202,36)" rx="2" ry="2" />
<text  x="1066.84" y="271.5" ></text>
</g>
<g >
<title>c10::optional_base&lt;c10::AliasInfo&gt;::~optional_base (1 samples, 0.04%)</title><rect x="319.6" y="133" width="0.5" height="15.0" fill="rgb(207,173,36)" rx="2" ry="2" />
<text  x="322.58" y="143.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (4 samples, 0.18%)</title><rect x="111.2" y="629" width="2.2" height="15.0" fill="rgb(209,55,53)" rx="2" ry="2" />
<text  x="114.25" y="639.5" ></text>
</g>
<g >
<title>torch::jit::parseSchema (9 samples, 0.40%)</title><rect x="287.2" y="597" width="4.8" height="15.0" fill="rgb(233,13,32)" rx="2" ry="2" />
<text  x="290.24" y="607.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::createFunctionSchemaFromTraitsFlattenedReturns&lt;c10::guts::function_traits&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;  (1 samples, 0.04%)</title><rect x="108.6" y="613" width="0.5" height="15.0" fill="rgb(245,127,37)" rx="2" ry="2" />
<text  x="111.60" y="623.5" ></text>
</g>
<g >
<title>c10::TensorOptions::TensorOptions (4 samples, 0.18%)</title><rect x="795.1" y="309" width="2.1" height="15.0" fill="rgb(226,174,26)" rx="2" ry="2" />
<text  x="798.08" y="319.5" ></text>
</g>
<g >
<title>std::function&lt;int  (1 samples, 0.04%)</title><rect x="279.3" y="533" width="0.5" height="15.0" fill="rgb(231,1,39)" rx="2" ry="2" />
<text  x="282.29" y="543.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.04%)</title><rect x="1109.4" y="389" width="0.6" height="15.0" fill="rgb(234,163,30)" rx="2" ry="2" />
<text  x="1112.42" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate (1 samples, 0.04%)</title><rect x="188.1" y="277" width="0.5" height="15.0" fill="rgb(217,2,36)" rx="2" ry="2" />
<text  x="191.11" y="287.5" ></text>
</g>
<g >
<title>c10::OperatorName::setNamespaceIfNotSet (2 samples, 0.09%)</title><rect x="182.8" y="533" width="1.1" height="15.0" fill="rgb(215,160,31)" rx="2" ry="2" />
<text  x="185.81" y="543.5" ></text>
</g>
<g >
<title>c10::ThreadLocalDebugInfo::get (1 samples, 0.04%)</title><rect x="469.1" y="357" width="0.5" height="15.0" fill="rgb(214,32,15)" rx="2" ry="2" />
<text  x="472.07" y="367.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="186.0" y="389" width="0.5" height="15.0" fill="rgb(254,19,47)" rx="2" ry="2" />
<text  x="188.99" y="399.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (1 samples, 0.04%)</title><rect x="182.3" y="261" width="0.5" height="15.0" fill="rgb(208,82,19)" rx="2" ry="2" />
<text  x="185.28" y="271.5" ></text>
</g>
<g >
<title>c10::VariableVersion::~VariableVersion (17 samples, 0.76%)</title><rect x="339.2" y="549" width="9.0" height="15.0" fill="rgb(240,118,47)" rx="2" ry="2" />
<text  x="342.19" y="559.5" ></text>
</g>
<g >
<title>c10::Storage::operator= (7 samples, 0.31%)</title><rect x="334.4" y="565" width="3.7" height="15.0" fill="rgb(217,88,22)" rx="2" ry="2" />
<text  x="337.42" y="575.5" ></text>
</g>
<g >
<title>caffe2::OpSchemaRegistry::NewSchema (3 samples, 0.13%)</title><rect x="279.3" y="613" width="1.6" height="15.0" fill="rgb(210,102,41)" rx="2" ry="2" />
<text  x="282.29" y="623.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;c10::IValue*&gt; (1 samples, 0.04%)</title><rect x="533.7" y="357" width="0.6" height="15.0" fill="rgb(252,79,23)" rx="2" ry="2" />
<text  x="536.74" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::replace (1 samples, 0.04%)</title><rect x="201.9" y="405" width="0.5" height="15.0" fill="rgb(232,190,13)" rx="2" ry="2" />
<text  x="204.90" y="415.5" ></text>
</g>
<g >
<title>_M_hash_code (1 samples, 0.04%)</title><rect x="132.5" y="581" width="0.5" height="15.0" fill="rgb(241,60,6)" rx="2" ry="2" />
<text  x="135.45" y="591.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.04%)</title><rect x="212.0" y="325" width="0.5" height="15.0" fill="rgb(243,16,12)" rx="2" ry="2" />
<text  x="214.97" y="335.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.04%)</title><rect x="214.6" y="517" width="0.5" height="15.0" fill="rgb(243,12,9)" rx="2" ry="2" />
<text  x="217.62" y="527.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (1 samples, 0.04%)</title><rect x="363.6" y="581" width="0.5" height="15.0" fill="rgb(249,121,12)" rx="2" ry="2" />
<text  x="366.58" y="591.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseDeclaration (1 samples, 0.04%)</title><rect x="195.0" y="421" width="0.5" height="15.0" fill="rgb(211,124,2)" rx="2" ry="2" />
<text  x="198.00" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;at::RecordFunctionCallback, unsigned long&gt;, std::allocator&lt;std::pair&lt;at::RecordFunctionCallback, unsigned long&gt; &gt; &gt;::empty (2 samples, 0.09%)</title><rect x="381.1" y="469" width="1.0" height="15.0" fill="rgb(250,140,36)" rx="2" ry="2" />
<text  x="384.07" y="479.5" ></text>
</g>
<g >
<title>at::RecordFunction::end (1 samples, 0.04%)</title><rect x="41.3" y="677" width="0.5" height="15.0" fill="rgb(207,214,15)" rx="2" ry="2" />
<text  x="44.28" y="687.5" ></text>
</g>
<g >
<title>c10::Registerer&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unique_ptr&lt;caffe2::OperatorBase, std::default_delete&lt;caffe2::OperatorBase&gt; &gt;, caffe2::OperatorDef const&amp;, caffe2::Workspace*&gt;::Registerer (1 samples, 0.04%)</title><rect x="270.3" y="597" width="0.5" height="15.0" fill="rgb(206,226,19)" rx="2" ry="2" />
<text  x="273.28" y="607.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::RegistrationListener::onOperatorDeregistered (2 samples, 0.09%)</title><rect x="309.5" y="405" width="1.1" height="15.0" fill="rgb(236,7,30)" rx="2" ry="2" />
<text  x="312.51" y="415.5" ></text>
</g>
<g >
<title>__internal_atexit (1 samples, 0.04%)</title><rect x="268.7" y="581" width="0.5" height="15.0" fill="rgb(220,64,0)" rx="2" ry="2" />
<text  x="271.69" y="591.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (1 samples, 0.04%)</title><rect x="254.4" y="517" width="0.5" height="15.0" fill="rgb(238,166,2)" rx="2" ry="2" />
<text  x="257.38" y="527.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.04%)</title><rect x="253.3" y="437" width="0.5" height="15.0" fill="rgb(208,212,8)" rx="2" ry="2" />
<text  x="256.32" y="447.5" ></text>
</g>
<g >
<title>empty_memory_format (1 samples, 0.04%)</title><rect x="154.2" y="677" width="0.5" height="15.0" fill="rgb(249,64,19)" rx="2" ry="2" />
<text  x="157.19" y="687.5" ></text>
</g>
<g >
<title>at::RecordFunction::end@plt (1 samples, 0.04%)</title><rect x="945.6" y="501" width="0.6" height="15.0" fill="rgb(205,27,13)" rx="2" ry="2" />
<text  x="948.62" y="511.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseType (1 samples, 0.04%)</title><rect x="170.6" y="549" width="0.6" height="15.0" fill="rgb(219,22,32)" rx="2" ry="2" />
<text  x="173.62" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string (3 samples, 0.13%)</title><rect x="207.7" y="421" width="1.6" height="15.0" fill="rgb(219,72,6)" rx="2" ry="2" />
<text  x="210.73" y="431.5" ></text>
</g>
<g >
<title>tcache_get (1 samples, 0.04%)</title><rect x="984.3" y="133" width="0.6" height="15.0" fill="rgb(231,139,36)" rx="2" ry="2" />
<text  x="987.32" y="143.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (1 samples, 0.04%)</title><rect x="260.2" y="533" width="0.5" height="15.0" fill="rgb(205,62,21)" rx="2" ry="2" />
<text  x="263.21" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1 samples, 0.04%)</title><rect x="67.8" y="661" width="0.5" height="15.0" fill="rgb(251,30,32)" rx="2" ry="2" />
<text  x="70.78" y="671.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerFallback (1 samples, 0.04%)</title><rect x="259.7" y="533" width="0.5" height="15.0" fill="rgb(244,151,5)" rx="2" ry="2" />
<text  x="262.68" y="543.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, torch::CppFunction&gt; (1 samples, 0.04%)</title><rect x="259.1" y="549" width="0.6" height="15.0" fill="rgb(219,83,23)" rx="2" ry="2" />
<text  x="262.15" y="559.5" ></text>
</g>
<g >
<title>d_path (1 samples, 0.04%)</title><rect x="1168.8" y="485" width="0.5" height="15.0" fill="rgb(222,155,39)" rx="2" ry="2" />
<text  x="1171.80" y="495.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.04%)</title><rect x="434.1" y="277" width="0.5" height="15.0" fill="rgb(235,160,38)" rx="2" ry="2" />
<text  x="437.08" y="287.5" ></text>
</g>
<g >
<title>_int_free (2 samples, 0.09%)</title><rect x="310.6" y="405" width="1.0" height="15.0" fill="rgb(219,201,52)" rx="2" ry="2" />
<text  x="313.57" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::internal::InlineGreedyStringParser (1 samples, 0.04%)</title><rect x="296.3" y="453" width="0.5" height="15.0" fill="rgb(252,162,31)" rx="2" ry="2" />
<text  x="299.25" y="463.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.04%)</title><rect x="264.4" y="501" width="0.6" height="15.0" fill="rgb(239,134,11)" rx="2" ry="2" />
<text  x="267.45" y="511.5" ></text>
</g>
<g >
<title>c10::DefaultCPUAllocator::ReportAndDelete (2 samples, 0.09%)</title><rect x="468.5" y="405" width="1.1" height="15.0" fill="rgb(219,5,46)" rx="2" ry="2" />
<text  x="471.54" y="415.5" ></text>
</g>
<g >
<title>c10::RegisterOperators::~RegisterOperators (2 samples, 0.09%)</title><rect x="309.5" y="581" width="1.1" height="15.0" fill="rgb(237,157,5)" rx="2" ry="2" />
<text  x="312.51" y="591.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.04%)</title><rect x="322.2" y="181" width="0.6" height="15.0" fill="rgb(210,8,26)" rx="2" ry="2" />
<text  x="325.23" y="191.5" ></text>
</g>
<g >
<title>xas_load (1 samples, 0.04%)</title><rect x="108.6" y="405" width="0.5" height="15.0" fill="rgb(230,160,40)" rx="2" ry="2" />
<text  x="111.60" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (1 samples, 0.04%)</title><rect x="183.3" y="437" width="0.6" height="15.0" fill="rgb(236,103,29)" rx="2" ry="2" />
<text  x="186.34" y="447.5" ></text>
</g>
<g >
<title>c10::Registerer&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unique_ptr&lt;at::CUDAHooksInterface, std::default_delete&lt;at::CUDAHooksInterface&gt; &gt;, at::CUDAHooksArgs&gt;::Registerer (1 samples, 0.04%)</title><rect x="184.4" y="597" width="0.5" height="15.0" fill="rgb(245,166,51)" rx="2" ry="2" />
<text  x="187.40" y="607.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="283.0" y="469" width="0.5" height="15.0" fill="rgb(213,226,2)" rx="2" ry="2" />
<text  x="286.00" y="479.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseDeclaration (1 samples, 0.04%)</title><rect x="169.0" y="581" width="0.6" height="15.0" fill="rgb(219,10,16)" rx="2" ry="2" />
<text  x="172.03" y="591.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.04%)</title><rect x="269.7" y="485" width="0.6" height="15.0" fill="rgb(254,127,32)" rx="2" ry="2" />
<text  x="272.75" y="495.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.04%)</title><rect x="234.2" y="325" width="0.6" height="15.0" fill="rgb(205,36,23)" rx="2" ry="2" />
<text  x="237.23" y="335.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_jit_avx_kernel_b0_c_gemm_s8u8s32_kern_autogen.cpp (1 samples, 0.04%)</title><rect x="264.4" y="629" width="0.6" height="15.0" fill="rgb(250,170,28)" rx="2" ry="2" />
<text  x="267.45" y="639.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;c10::Argument&gt; &gt;::allocate (1 samples, 0.04%)</title><rect x="226.3" y="421" width="0.5" height="15.0" fill="rgb(208,91,10)" rx="2" ry="2" />
<text  x="229.28" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (1 samples, 0.04%)</title><rect x="205.1" y="405" width="0.5" height="15.0" fill="rgb(221,63,6)" rx="2" ry="2" />
<text  x="208.08" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;c10::Symbol, c10::Symbol, std::allocator&lt;c10::Symbol&gt;, std::__detail::_Identity, std::equal_to&lt;c10::Symbol&gt;, std::hash&lt;c10::Symbol&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_Hashtable (1 samples, 0.04%)</title><rect x="236.9" y="277" width="0.5" height="15.0" fill="rgb(221,213,34)" rx="2" ry="2" />
<text  x="239.88" y="287.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.04%)</title><rect x="201.4" y="517" width="0.5" height="15.0" fill="rgb(228,164,26)" rx="2" ry="2" />
<text  x="204.37" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::_M_allocate (1 samples, 0.04%)</title><rect x="179.1" y="437" width="0.5" height="15.0" fill="rgb(223,212,2)" rx="2" ry="2" />
<text  x="182.10" y="447.5" ></text>
</g>
<g >
<title>operator (1 samples, 0.04%)</title><rect x="286.2" y="533" width="0.5" height="15.0" fill="rgb(251,153,3)" rx="2" ry="2" />
<text  x="289.18" y="543.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerFallback (1 samples, 0.04%)</title><rect x="270.8" y="533" width="0.5" height="15.0" fill="rgb(237,23,25)" rx="2" ry="2" />
<text  x="273.81" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;torch::jit::Token, std::allocator&lt;torch::jit::Token&gt; &gt;::_M_erase (1 samples, 0.04%)</title><rect x="163.7" y="677" width="0.6" height="15.0" fill="rgb(238,138,17)" rx="2" ry="2" />
<text  x="166.73" y="687.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.04%)</title><rect x="846.0" y="389" width="0.5" height="15.0" fill="rgb(228,124,22)" rx="2" ry="2" />
<text  x="848.97" y="399.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor  (1 samples, 0.04%)</title><rect x="209.3" y="565" width="0.5" height="15.0" fill="rgb(221,2,4)" rx="2" ry="2" />
<text  x="212.32" y="575.5" ></text>
</g>
<g >
<title>torch::detail::TorchLibraryInit::TorchLibraryInit (1 samples, 0.04%)</title><rect x="268.2" y="597" width="0.5" height="15.0" fill="rgb(254,103,38)" rx="2" ry="2" />
<text  x="271.16" y="607.5" ></text>
</g>
<g >
<title>c10::demangle_type&lt;caffe2::FloatToFusedNBitRowwiseQuantizedOp&lt;4, float, &amp;caffe2::internal::convertfp32fp32, false&gt; &gt; (1 samples, 0.04%)</title><rect x="109.1" y="661" width="0.6" height="15.0" fill="rgb(216,130,39)" rx="2" ry="2" />
<text  x="112.13" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;at::RecordFunctionCallback, unsigned long&gt;, std::allocator&lt;std::pair&lt;at::RecordFunctionCallback, unsigned long&gt; &gt; &gt;::empty (1 samples, 0.04%)</title><rect x="956.8" y="341" width="0.5" height="15.0" fill="rgb(240,157,48)" rx="2" ry="2" />
<text  x="959.76" y="351.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (2 samples, 0.09%)</title><rect x="227.9" y="437" width="1.0" height="15.0" fill="rgb(207,112,44)" rx="2" ry="2" />
<text  x="230.87" y="447.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::computeDispatchTableEntry (1 samples, 0.04%)</title><rect x="253.8" y="485" width="0.6" height="15.0" fill="rgb(244,24,4)" rx="2" ry="2" />
<text  x="256.85" y="495.5" ></text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 0.09%)</title><rect x="1152.9" y="453" width="1.1" height="15.0" fill="rgb(236,227,35)" rx="2" ry="2" />
<text  x="1155.89" y="463.5" ></text>
</g>
<g >
<title>torch::Library::_impl (4 samples, 0.18%)</title><rect x="244.8" y="549" width="2.2" height="15.0" fill="rgb(228,215,31)" rx="2" ry="2" />
<text  x="247.83" y="559.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.04%)</title><rect x="187.6" y="469" width="0.5" height="15.0" fill="rgb(226,40,28)" rx="2" ry="2" />
<text  x="190.58" y="479.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.04%)</title><rect x="189.2" y="421" width="0.5" height="15.0" fill="rgb(226,3,42)" rx="2" ry="2" />
<text  x="192.17" y="431.5" ></text>
</g>
<g >
<title>__GI___libc_free (2 samples, 0.09%)</title><rect x="846.5" y="389" width="1.1" height="15.0" fill="rgb(233,127,11)" rx="2" ry="2" />
<text  x="849.50" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;, std::allocator&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.04%)</title><rect x="915.4" y="517" width="0.5" height="15.0" fill="rgb(245,229,21)" rx="2" ry="2" />
<text  x="918.41" y="527.5" ></text>
</g>
<g >
<title>ext4_filemap_fault (1 samples, 0.04%)</title><rect x="1152.4" y="437" width="0.5" height="15.0" fill="rgb(246,147,29)" rx="2" ry="2" />
<text  x="1155.36" y="447.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseType (1 samples, 0.04%)</title><rect x="153.1" y="533" width="0.6" height="15.0" fill="rgb(217,129,54)" rx="2" ry="2" />
<text  x="156.13" y="543.5" ></text>
</g>
<g >
<title>checked_request2size (1 samples, 0.04%)</title><rect x="189.7" y="405" width="0.5" height="15.0" fill="rgb(228,77,52)" rx="2" ry="2" />
<text  x="192.70" y="415.5" ></text>
</g>
<g >
<title>torch::dispatch&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor  (1 samples, 0.04%)</title><rect x="184.9" y="565" width="0.6" height="15.0" fill="rgb(238,77,21)" rx="2" ry="2" />
<text  x="187.93" y="575.5" ></text>
</g>
<g >
<title>vfs_read (1 samples, 0.04%)</title><rect x="197.7" y="357" width="0.5" height="15.0" fill="rgb(220,0,51)" rx="2" ry="2" />
<text  x="200.65" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::RegistryPriority&gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (1 samples, 0.04%)</title><rect x="274.5" y="533" width="0.5" height="15.0" fill="rgb(246,64,37)" rx="2" ry="2" />
<text  x="277.52" y="543.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_insert&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, true&gt; &gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="217.3" y="309" width="0.5" height="15.0" fill="rgb(217,88,2)" rx="2" ry="2" />
<text  x="220.27" y="319.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="256.5" y="453" width="0.5" height="15.0" fill="rgb(209,67,6)" rx="2" ry="2" />
<text  x="259.50" y="463.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.04%)</title><rect x="175.4" y="453" width="0.5" height="15.0" fill="rgb(211,135,7)" rx="2" ry="2" />
<text  x="178.39" y="463.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (1 samples, 0.04%)</title><rect x="230.0" y="165" width="0.5" height="15.0" fill="rgb(221,15,40)" rx="2" ry="2" />
<text  x="232.99" y="175.5" ></text>
</g>
<g >
<title>torch::empty (2 samples, 0.09%)</title><rect x="156.8" y="661" width="1.1" height="15.0" fill="rgb(230,145,44)" rx="2" ry="2" />
<text  x="159.84" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt; const&amp;&gt; (1 samples, 0.04%)</title><rect x="110.7" y="565" width="0.5" height="15.0" fill="rgb(242,66,30)" rx="2" ry="2" />
<text  x="113.72" y="575.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::clear (1 samples, 0.04%)</title><rect x="190.2" y="341" width="0.6" height="15.0" fill="rgb(249,23,30)" rx="2" ry="2" />
<text  x="193.23" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::RegistryPriority&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::RegistryPriority&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (1 samples, 0.04%)</title><rect x="274.0" y="533" width="0.5" height="15.0" fill="rgb(219,103,1)" rx="2" ry="2" />
<text  x="276.99" y="543.5" ></text>
</g>
<g >
<title>c10::TensorImpl::compute_contiguous (2 samples, 0.09%)</title><rect x="792.4" y="261" width="1.1" height="15.0" fill="rgb(230,74,43)" rx="2" ry="2" />
<text  x="795.43" y="271.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;int&gt; (1 samples, 0.04%)</title><rect x="706.5" y="373" width="0.6" height="15.0" fill="rgb(242,76,53)" rx="2" ry="2" />
<text  x="709.55" y="383.5" ></text>
</g>
<g >
<title>parseDeclaration (24 samples, 1.08%)</title><rect x="228.9" y="469" width="12.8" height="15.0" fill="rgb(249,184,22)" rx="2" ry="2" />
<text  x="231.93" y="479.5" ></text>
</g>
<g >
<title>copy_page_to_iter (1 samples, 0.04%)</title><rect x="1111.5" y="341" width="0.6" height="15.0" fill="rgb(211,17,21)" rx="2" ry="2" />
<text  x="1114.55" y="351.5" ></text>
</g>
<g >
<title>torch::CppFunction::CppFunction&lt;at::Tensor  (1 samples, 0.04%)</title><rect x="260.2" y="549" width="0.5" height="15.0" fill="rgb(222,24,32)" rx="2" ry="2" />
<text  x="263.21" y="559.5" ></text>
</g>
<g >
<title>debugString (1 samples, 0.04%)</title><rect x="194.5" y="533" width="0.5" height="15.0" fill="rgb(210,60,44)" rx="2" ry="2" />
<text  x="197.47" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.04%)</title><rect x="284.6" y="565" width="0.5" height="15.0" fill="rgb(240,129,3)" rx="2" ry="2" />
<text  x="287.59" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.04%)</title><rect x="252.8" y="341" width="0.5" height="15.0" fill="rgb(251,77,48)" rx="2" ry="2" />
<text  x="255.79" y="351.5" ></text>
</g>
<g >
<title>__static_initialization_and_destruction_0 (5 samples, 0.22%)</title><rect x="249.6" y="613" width="2.7" height="15.0" fill="rgb(222,63,20)" rx="2" ry="2" />
<text  x="252.60" y="623.5" ></text>
</g>
<g >
<title>at::TORCH_LIBRARY_IMPL_init_aten_CPU (8 samples, 0.36%)</title><rect x="180.2" y="581" width="4.2" height="15.0" fill="rgb(214,2,50)" rx="2" ry="2" />
<text  x="183.16" y="591.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.04%)</title><rect x="285.1" y="581" width="0.6" height="15.0" fill="rgb(228,157,8)" rx="2" ry="2" />
<text  x="288.12" y="591.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;c10::ThreadLocalDebugInfo&gt;::shared_ptr (2 samples, 0.09%)</title><rect x="1007.1" y="245" width="1.1" height="15.0" fill="rgb(215,172,37)" rx="2" ry="2" />
<text  x="1010.12" y="255.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.04%)</title><rect x="181.2" y="165" width="0.6" height="15.0" fill="rgb(245,137,28)" rx="2" ry="2" />
<text  x="184.22" y="175.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;c10::ThreadLocalDebugInfo,  (1 samples, 0.04%)</title><rect x="337.6" y="325" width="0.5" height="15.0" fill="rgb(222,64,16)" rx="2" ry="2" />
<text  x="340.60" y="335.5" ></text>
</g>
<g >
<title>checked_request2size (1 samples, 0.04%)</title><rect x="500.9" y="549" width="0.5" height="15.0" fill="rgb(221,128,37)" rx="2" ry="2" />
<text  x="503.87" y="559.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.04%)</title><rect x="259.1" y="373" width="0.6" height="15.0" fill="rgb(251,102,1)" rx="2" ry="2" />
<text  x="262.15" y="383.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::Lexer (2 samples, 0.09%)</title><rect x="227.9" y="469" width="1.0" height="15.0" fill="rgb(207,10,5)" rx="2" ry="2" />
<text  x="230.87" y="479.5" ></text>
</g>
<g >
<title>debugString (1 samples, 0.04%)</title><rect x="206.7" y="517" width="0.5" height="15.0" fill="rgb(230,226,8)" rx="2" ry="2" />
<text  x="209.67" y="527.5" ></text>
</g>
<g >
<title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, c10::OperatorName, std::hash&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueHasher&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::hash&lt;c10::OperatorName&gt; &gt;, std::equal_to&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueEquality&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::equal_to&lt;c10::OperatorName&gt; &gt;, std::allocator&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt; &gt; &gt;::hash_object&lt;c10::OperatorName&gt; (1 samples, 0.04%)</title><rect x="192.4" y="421" width="0.5" height="15.0" fill="rgb(235,218,18)" rx="2" ry="2" />
<text  x="195.35" y="431.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.04%)</title><rect x="249.1" y="341" width="0.5" height="15.0" fill="rgb(205,28,43)" rx="2" ry="2" />
<text  x="252.07" y="351.5" ></text>
</g>
<g >
<title>at::hasCallbacks (3 samples, 0.13%)</title><rect x="379.5" y="485" width="1.6" height="15.0" fill="rgb(243,93,1)" rx="2" ry="2" />
<text  x="382.48" y="495.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.04%)</title><rect x="1108.9" y="421" width="0.5" height="15.0" fill="rgb(249,101,28)" rx="2" ry="2" />
<text  x="1111.89" y="431.5" ></text>
</g>
<g >
<title>at::RecordFunction::~RecordFunction@plt (1 samples, 0.04%)</title><rect x="947.2" y="517" width="0.5" height="15.0" fill="rgb(219,163,42)" rx="2" ry="2" />
<text  x="950.21" y="527.5" ></text>
</g>
<g >
<title>torch::jit::registerOperator (1 samples, 0.04%)</title><rect x="297.3" y="565" width="0.5" height="15.0" fill="rgb(209,49,2)" rx="2" ry="2" />
<text  x="300.31" y="575.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, c10::FunctionSchema*, std::default_delete&lt;c10::FunctionSchema&gt; &gt;::_Tuple_impl&lt;c10::FunctionSchema*&amp;, std::default_delete&lt;c10::FunctionSchema&gt;, void&gt; (1 samples, 0.04%)</title><rect x="259.7" y="453" width="0.5" height="15.0" fill="rgb(215,197,27)" rx="2" ry="2" />
<text  x="262.68" y="463.5" ></text>
</g>
<g >
<title>onnx_torch::Utils::DataTypeUtils::ToType (1 samples, 0.04%)</title><rect x="269.2" y="485" width="0.5" height="15.0" fill="rgb(215,165,13)" rx="2" ry="2" />
<text  x="272.22" y="495.5" ></text>
</g>
<g >
<title>open_verify (1 samples, 0.04%)</title><rect x="1112.1" y="549" width="0.5" height="15.0" fill="rgb(207,21,44)" rx="2" ry="2" />
<text  x="1115.08" y="559.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.04%)</title><rect x="256.5" y="309" width="0.5" height="15.0" fill="rgb(246,34,49)" rx="2" ry="2" />
<text  x="259.50" y="319.5" ></text>
</g>
<g >
<title>c10::utils::bitset::set (1 samples, 0.04%)</title><rect x="219.4" y="469" width="0.5" height="15.0" fill="rgb(235,190,46)" rx="2" ry="2" />
<text  x="222.39" y="479.5" ></text>
</g>
<g >
<title>c10::TensorImpl::release_resources (16 samples, 0.72%)</title><rect x="465.9" y="581" width="8.5" height="15.0" fill="rgb(234,169,25)" rx="2" ry="2" />
<text  x="468.88" y="591.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="199.2" y="485" width="0.6" height="15.0" fill="rgb(230,170,5)" rx="2" ry="2" />
<text  x="202.25" y="495.5" ></text>
</g>
<g >
<title>torch::empty (290 samples, 13.03%)</title><rect x="672.6" y="597" width="153.8" height="15.0" fill="rgb(250,154,41)" rx="2" ry="2" />
<text  x="675.62" y="607.5" >torch::empty</text>
</g>
<g >
<title>register_conv_params&lt;3&gt; (1 samples, 0.04%)</title><rect x="262.3" y="597" width="0.6" height="15.0" fill="rgb(244,181,35)" rx="2" ry="2" />
<text  x="265.33" y="607.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="179.1" y="341" width="0.5" height="15.0" fill="rgb(242,11,13)" rx="2" ry="2" />
<text  x="182.10" y="351.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::VariableVersion::VersionCounter, c10::detail::intrusive_target_default_null_type&lt;c10::VariableVersion::VersionCounter&gt; &gt;::make&lt;unsigned int&amp;&gt; (5 samples, 0.22%)</title><rect x="983.3" y="181" width="2.6" height="15.0" fill="rgb(222,64,52)" rx="2" ry="2" />
<text  x="986.26" y="191.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="98.0" y="677" width="0.5" height="15.0" fill="rgb(206,53,39)" rx="2" ry="2" />
<text  x="101.00" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (1 samples, 0.04%)</title><rect x="183.3" y="421" width="0.6" height="15.0" fill="rgb(214,133,38)" rx="2" ry="2" />
<text  x="186.34" y="431.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (2 samples, 0.09%)</title><rect x="240.6" y="373" width="1.1" height="15.0" fill="rgb(217,197,33)" rx="2" ry="2" />
<text  x="243.59" y="383.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor&amp;  (1 samples, 0.04%)</title><rect x="198.7" y="533" width="0.5" height="15.0" fill="rgb(222,23,42)" rx="2" ry="2" />
<text  x="201.72" y="543.5" ></text>
</g>
<g >
<title>parseDeclarations (1 samples, 0.04%)</title><rect x="201.4" y="501" width="0.5" height="15.0" fill="rgb(242,51,0)" rx="2" ry="2" />
<text  x="204.37" y="511.5" ></text>
</g>
<g >
<title>c10::Argument::type (1 samples, 0.04%)</title><rect x="195.5" y="389" width="0.6" height="15.0" fill="rgb(215,97,21)" rx="2" ry="2" />
<text  x="198.53" y="399.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.04%)</title><rect x="1109.4" y="357" width="0.6" height="15.0" fill="rgb(209,119,50)" rx="2" ry="2" />
<text  x="1112.42" y="367.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (4 samples, 0.18%)</title><rect x="180.7" y="533" width="2.1" height="15.0" fill="rgb(249,229,51)" rx="2" ry="2" />
<text  x="183.69" y="543.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.04%)</title><rect x="277.7" y="597" width="0.5" height="15.0" fill="rgb(254,169,54)" rx="2" ry="2" />
<text  x="280.70" y="607.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.04%)</title><rect x="256.5" y="421" width="0.5" height="15.0" fill="rgb(238,196,25)" rx="2" ry="2" />
<text  x="259.50" y="431.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (18 samples, 0.81%)</title><rect x="312.2" y="421" width="9.5" height="15.0" fill="rgb(241,10,10)" rx="2" ry="2" />
<text  x="315.16" y="431.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor  (1 samples, 0.04%)</title><rect x="199.2" y="549" width="0.6" height="15.0" fill="rgb(248,100,48)" rx="2" ry="2" />
<text  x="202.25" y="559.5" ></text>
</g>
<g >
<title>at::Tensor::~Tensor (1 samples, 0.04%)</title><rect x="861.9" y="485" width="0.5" height="15.0" fill="rgb(220,220,22)" rx="2" ry="2" />
<text  x="864.87" y="495.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_THVector.cpp (1 samples, 0.04%)</title><rect x="197.7" y="613" width="0.5" height="15.0" fill="rgb(245,9,11)" rx="2" ry="2" />
<text  x="200.65" y="623.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;::deallocate (1 samples, 0.04%)</title><rect x="318.5" y="325" width="0.5" height="15.0" fill="rgb(225,121,16)" rx="2" ry="2" />
<text  x="321.52" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node (1 samples, 0.04%)</title><rect x="190.2" y="309" width="0.6" height="15.0" fill="rgb(213,65,39)" rx="2" ry="2" />
<text  x="193.23" y="319.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::computeDispatchTableEntryWithDebug (1 samples, 0.04%)</title><rect x="270.8" y="485" width="0.5" height="15.0" fill="rgb(244,220,15)" rx="2" ry="2" />
<text  x="273.81" y="495.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (1 samples, 0.04%)</title><rect x="76.8" y="677" width="0.5" height="15.0" fill="rgb(207,72,8)" rx="2" ry="2" />
<text  x="79.79" y="687.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.04%)</title><rect x="322.8" y="277" width="0.5" height="15.0" fill="rgb(251,69,44)" rx="2" ry="2" />
<text  x="325.76" y="287.5" ></text>
</g>
<g >
<title>wp_page_copy (1 samples, 0.04%)</title><rect x="1149.2" y="453" width="0.5" height="15.0" fill="rgb(227,187,49)" rx="2" ry="2" />
<text  x="1152.18" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;c10::Dispatcher::OperatorDef, std::allocator&lt;c10::Dispatcher::OperatorDef&gt; &gt;::emplace_back&lt;c10::OperatorName&gt; (1 samples, 0.04%)</title><rect x="210.4" y="501" width="0.5" height="15.0" fill="rgb(251,218,48)" rx="2" ry="2" />
<text  x="213.38" y="511.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_CPUType.cpp (11 samples, 0.49%)</title><rect x="178.6" y="629" width="5.8" height="15.0" fill="rgb(250,161,40)" rx="2" ry="2" />
<text  x="181.57" y="639.5" ></text>
</g>
<g >
<title>c10::impl::(anonymous namespace)::checkSchema (1 samples, 0.04%)</title><rect x="206.1" y="501" width="0.6" height="15.0" fill="rgb(205,143,30)" rx="2" ry="2" />
<text  x="209.14" y="511.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.04%)</title><rect x="189.2" y="405" width="0.5" height="15.0" fill="rgb(212,93,20)" rx="2" ry="2" />
<text  x="192.17" y="415.5" ></text>
</g>
<g >
<title>c10::TensorImpl::~TensorImpl (18 samples, 0.81%)</title><rect x="864.5" y="549" width="9.6" height="15.0" fill="rgb(206,96,2)" rx="2" ry="2" />
<text  x="867.52" y="559.5" ></text>
</g>
<g >
<title>c10::TensorImpl::refresh_contiguous (4 samples, 0.18%)</title><rect x="791.4" y="277" width="2.1" height="15.0" fill="rgb(248,81,26)" rx="2" ry="2" />
<text  x="794.37" y="287.5" ></text>
</g>
<g >
<title>c10::TensorImpl::refresh_contiguous (2 samples, 0.09%)</title><rect x="781.3" y="293" width="1.1" height="15.0" fill="rgb(214,222,16)" rx="2" ry="2" />
<text  x="784.29" y="303.5" ></text>
</g>
<g >
<title>c10::DefaultCPUAllocator::allocate (2 samples, 0.09%)</title><rect x="133.0" y="677" width="1.0" height="15.0" fill="rgb(236,189,32)" rx="2" ry="2" />
<text  x="135.98" y="687.5" ></text>
</g>
<g >
<title>c10::SmallVectorBase::SmallVectorBase (1 samples, 0.04%)</title><rect x="523.1" y="453" width="0.6" height="15.0" fill="rgb(249,134,19)" rx="2" ry="2" />
<text  x="526.14" y="463.5" ></text>
</g>
<g >
<title>std::hash&lt;c10::OperatorName&gt;::operator (1 samples, 0.04%)</title><rect x="192.4" y="373" width="0.5" height="15.0" fill="rgb(236,1,0)" rx="2" ry="2" />
<text  x="195.35" y="383.5" ></text>
</g>
<g >
<title>__GI___sbrk (1 samples, 0.04%)</title><rect x="186.0" y="293" width="0.5" height="15.0" fill="rgb(215,50,28)" rx="2" ry="2" />
<text  x="188.99" y="303.5" ></text>
</g>
<g >
<title>torch::jit::Token::~Token (1 samples, 0.04%)</title><rect x="240.1" y="341" width="0.5" height="15.0" fill="rgb(205,54,44)" rx="2" ry="2" />
<text  x="243.06" y="351.5" ></text>
</g>
<g >
<title>do_lookup_x (2 samples, 0.09%)</title><rect x="64.6" y="677" width="1.1" height="15.0" fill="rgb(206,20,47)" rx="2" ry="2" />
<text  x="67.60" y="687.5" ></text>
</g>
<g >
<title>c10::demangle[abi:cxx11] (1 samples, 0.04%)</title><rect x="276.6" y="597" width="0.6" height="15.0" fill="rgb(213,212,48)" rx="2" ry="2" />
<text  x="279.64" y="607.5" ></text>
</g>
<g >
<title>TORCH_LIBRARY_IMPL_init_aten_Autograd (1 samples, 0.04%)</title><rect x="252.3" y="581" width="0.5" height="15.0" fill="rgb(210,43,9)" rx="2" ry="2" />
<text  x="255.26" y="591.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="179.1" y="389" width="0.5" height="15.0" fill="rgb(206,149,34)" rx="2" ry="2" />
<text  x="182.10" y="399.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseDeclaration (16 samples, 0.72%)</title><rect x="231.6" y="421" width="8.5" height="15.0" fill="rgb(219,133,1)" rx="2" ry="2" />
<text  x="234.58" y="431.5" ></text>
</g>
<g >
<title>std::mutex::lock (1 samples, 0.04%)</title><rect x="254.4" y="501" width="0.5" height="15.0" fill="rgb(216,210,41)" rx="2" ry="2" />
<text  x="257.38" y="511.5" ></text>
</g>
<g >
<title>alloc_set_pte (1 samples, 0.04%)</title><rect x="261.3" y="469" width="0.5" height="15.0" fill="rgb(220,120,25)" rx="2" ry="2" />
<text  x="264.27" y="479.5" ></text>
</g>
<g >
<title>copy_page (1 samples, 0.04%)</title><rect x="1151.8" y="469" width="0.6" height="15.0" fill="rgb(213,126,51)" rx="2" ry="2" />
<text  x="1154.83" y="479.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;signed char&gt; (1 samples, 0.04%)</title><rect x="95.9" y="677" width="0.5" height="15.0" fill="rgb(227,65,45)" rx="2" ry="2" />
<text  x="98.88" y="687.5" ></text>
</g>
<g >
<title>c10::TensorOptions::device (13 samples, 0.58%)</title><rect x="649.8" y="597" width="6.9" height="15.0" fill="rgb(209,142,21)" rx="2" ry="2" />
<text  x="652.83" y="607.5" ></text>
</g>
<g >
<title>std::function&lt;void  (2 samples, 0.09%)</title><rect x="166.4" y="581" width="1.0" height="15.0" fill="rgb(242,102,6)" rx="2" ry="2" />
<text  x="169.38" y="591.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="1149.2" y="517" width="0.5" height="15.0" fill="rgb(237,58,42)" rx="2" ry="2" />
<text  x="1152.18" y="527.5" ></text>
</g>
<g >
<title>perf_iterate_sb (1 samples, 0.04%)</title><rect x="231.1" y="117" width="0.5" height="15.0" fill="rgb(224,135,34)" rx="2" ry="2" />
<text  x="234.05" y="127.5" ></text>
</g>
<g >
<title>do_group_exit (21 samples, 0.94%)</title><rect x="1169.9" y="645" width="11.1" height="15.0" fill="rgb(210,175,18)" rx="2" ry="2" />
<text  x="1172.86" y="655.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (4 samples, 0.18%)</title><rect x="590.5" y="277" width="2.1" height="15.0" fill="rgb(248,150,33)" rx="2" ry="2" />
<text  x="593.46" y="287.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="712.9" y="325" width="0.5" height="15.0" fill="rgb(241,182,22)" rx="2" ry="2" />
<text  x="715.91" y="335.5" ></text>
</g>
<g >
<title>_callWriteFuncOnBackgroundInstance&lt;c10::Dispatcher::findOrRegisterName_ (1 samples, 0.04%)</title><rect x="218.9" y="469" width="0.5" height="15.0" fill="rgb(227,55,31)" rx="2" ry="2" />
<text  x="221.86" y="479.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.04%)</title><rect x="221.5" y="421" width="0.5" height="15.0" fill="rgb(209,42,53)" rx="2" ry="2" />
<text  x="224.51" y="431.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (1 samples, 0.04%)</title><rect x="73.6" y="677" width="0.5" height="15.0" fill="rgb(221,52,43)" rx="2" ry="2" />
<text  x="76.61" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_ostringstream (1 samples, 0.04%)</title><rect x="194.5" y="485" width="0.5" height="15.0" fill="rgb(245,189,29)" rx="2" ry="2" />
<text  x="197.47" y="495.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="198.7" y="389" width="0.5" height="15.0" fill="rgb(213,161,11)" rx="2" ry="2" />
<text  x="201.72" y="399.5" ></text>
</g>
<g >
<title>_int_malloc (3 samples, 0.13%)</title><rect x="282.5" y="565" width="1.6" height="15.0" fill="rgb(208,142,18)" rx="2" ry="2" />
<text  x="285.47" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node_ptr (1 samples, 0.04%)</title><rect x="181.8" y="293" width="0.5" height="15.0" fill="rgb(217,114,11)" rx="2" ry="2" />
<text  x="184.75" y="303.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTable_ (1 samples, 0.04%)</title><rect x="324.3" y="421" width="0.6" height="15.0" fill="rgb(206,191,4)" rx="2" ry="2" />
<text  x="327.35" y="431.5" ></text>
</g>
<g >
<title>torch::jit::Token::Token (1 samples, 0.04%)</title><rect x="241.7" y="437" width="0.5" height="15.0" fill="rgb(248,93,34)" rx="2" ry="2" />
<text  x="244.65" y="447.5" ></text>
</g>
<g >
<title>at::(anonymous namespace)::empty_memory_format (3 samples, 0.13%)</title><rect x="34.9" y="677" width="1.6" height="15.0" fill="rgb(216,111,33)" rx="2" ry="2" />
<text  x="37.91" y="687.5" ></text>
</g>
<g >
<title>c10::SmallVectorTemplateCommon&lt;long, void&gt;::size (2 samples, 0.09%)</title><rect x="1050.1" y="277" width="1.0" height="15.0" fill="rgb(254,163,3)" rx="2" ry="2" />
<text  x="1053.05" y="287.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt;::pair&lt;char const  (1 samples, 0.04%)</title><rect x="109.7" y="661" width="0.5" height="15.0" fill="rgb(221,129,28)" rx="2" ry="2" />
<text  x="112.66" y="671.5" ></text>
</g>
<g >
<title>c10::SmallVectorTemplateBase&lt;long, true&gt;::SmallVectorTemplateBase (1 samples, 0.04%)</title><rect x="543.3" y="197" width="0.5" height="15.0" fill="rgb(243,1,36)" rx="2" ry="2" />
<text  x="546.28" y="207.5" ></text>
</g>
<g >
<title>c10::operator!= (1 samples, 0.04%)</title><rect x="310.0" y="357" width="0.6" height="15.0" fill="rgb(248,112,15)" rx="2" ry="2" />
<text  x="313.04" y="367.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.13%)</title><rect x="813.6" y="277" width="1.6" height="15.0" fill="rgb(211,70,42)" rx="2" ry="2" />
<text  x="816.63" y="287.5" ></text>
</g>
<g >
<title>mmput (21 samples, 0.94%)</title><rect x="1169.9" y="613" width="11.1" height="15.0" fill="rgb(230,83,30)" rx="2" ry="2" />
<text  x="1172.86" y="623.5" ></text>
</g>
<g >
<title>torch::detail::TorchLibraryInit::TorchLibraryInit (11 samples, 0.49%)</title><rect x="178.6" y="597" width="5.8" height="15.0" fill="rgb(214,58,13)" rx="2" ry="2" />
<text  x="181.57" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.04%)</title><rect x="16.9" y="677" width="0.5" height="15.0" fill="rgb(212,167,8)" rx="2" ry="2" />
<text  x="19.89" y="687.5" ></text>
</g>
<g >
<title>c10::Symbol::dimname (2 samples, 0.09%)</title><rect x="189.2" y="597" width="1.0" height="15.0" fill="rgb(219,68,25)" rx="2" ry="2" />
<text  x="192.17" y="607.5" ></text>
</g>
<g >
<title>torch::CppFunction::CppFunction&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor  (3 samples, 0.13%)</title><rect x="243.2" y="549" width="1.6" height="15.0" fill="rgb(240,220,4)" rx="2" ry="2" />
<text  x="246.24" y="559.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseDeclaration (3 samples, 0.13%)</title><rect x="169.6" y="597" width="1.6" height="15.0" fill="rgb(245,114,11)" rx="2" ry="2" />
<text  x="172.56" y="607.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (2 samples, 0.09%)</title><rect x="243.2" y="485" width="1.1" height="15.0" fill="rgb(212,29,42)" rx="2" ry="2" />
<text  x="246.24" y="495.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;c10::OperatorKernel&gt;::~shared_ptr (2 samples, 0.09%)</title><rect x="315.3" y="245" width="1.1" height="15.0" fill="rgb(240,198,33)" rx="2" ry="2" />
<text  x="318.34" y="255.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;c10::IValue*&gt; (1 samples, 0.04%)</title><rect x="533.7" y="373" width="0.6" height="15.0" fill="rgb(209,147,23)" rx="2" ry="2" />
<text  x="536.74" y="383.5" ></text>
</g>
<g >
<title>parseList (1 samples, 0.04%)</title><rect x="153.1" y="597" width="0.6" height="15.0" fill="rgb(228,54,37)" rx="2" ry="2" />
<text  x="156.13" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::replace (1 samples, 0.04%)</title><rect x="205.1" y="421" width="0.5" height="15.0" fill="rgb(251,55,11)" rx="2" ry="2" />
<text  x="208.08" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::RegistryPriority&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::RegistryPriority&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (1 samples, 0.04%)</title><rect x="270.3" y="533" width="0.5" height="15.0" fill="rgb(209,9,38)" rx="2" ry="2" />
<text  x="273.28" y="543.5" ></text>
</g>
<g >
<title>c10::Dispatcher::findOrRegisterName_ (1 samples, 0.04%)</title><rect x="247.5" y="517" width="0.5" height="15.0" fill="rgb(246,84,1)" rx="2" ry="2" />
<text  x="250.48" y="527.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::lookup (1 samples, 0.04%)</title><rect x="595.2" y="533" width="0.6" height="15.0" fill="rgb(252,26,44)" rx="2" ry="2" />
<text  x="598.23" y="543.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::operator++ (6 samples, 0.27%)</title><rect x="991.7" y="261" width="3.2" height="15.0" fill="rgb(240,29,11)" rx="2" ry="2" />
<text  x="994.74" y="271.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.04%)</title><rect x="198.2" y="421" width="0.5" height="15.0" fill="rgb(212,120,5)" rx="2" ry="2" />
<text  x="201.19" y="431.5" ></text>
</g>
<g >
<title>c10::TensorImpl::empty_tensor_restride (14 samples, 0.63%)</title><rect x="786.6" y="293" width="7.4" height="15.0" fill="rgb(220,61,31)" rx="2" ry="2" />
<text  x="789.59" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.04%)</title><rect x="162.1" y="629" width="0.6" height="15.0" fill="rgb(250,227,44)" rx="2" ry="2" />
<text  x="165.14" y="639.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::createFunctionSchemaFromTraitsFlattenedReturns&lt;c10::guts::function_traits&lt;at::Tensor  (1 samples, 0.04%)</title><rect x="199.8" y="501" width="0.5" height="15.0" fill="rgb(230,38,52)" rx="2" ry="2" />
<text  x="202.78" y="511.5" ></text>
</g>
<g >
<title>c10::detail::_str_wrapper&lt;char const*, char const* const&amp;, char const*, unsigned int const&amp;&gt;::call[abi:cxx11] (1 samples, 0.04%)</title><rect x="194.5" y="501" width="0.5" height="15.0" fill="rgb(223,225,26)" rx="2" ry="2" />
<text  x="197.47" y="511.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (1 samples, 0.04%)</title><rect x="162.7" y="677" width="0.5" height="15.0" fill="rgb(225,177,36)" rx="2" ry="2" />
<text  x="165.67" y="687.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (2 samples, 0.09%)</title><rect x="543.8" y="229" width="1.1" height="15.0" fill="rgb(219,137,40)" rx="2" ry="2" />
<text  x="546.81" y="239.5" ></text>
</g>
<g >
<title>torch::detail::TorchLibraryInit::TorchLibraryInit (2 samples, 0.09%)</title><rect x="252.3" y="597" width="1.0" height="15.0" fill="rgb(225,144,47)" rx="2" ry="2" />
<text  x="255.26" y="607.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.04%)</title><rect x="198.7" y="357" width="0.5" height="15.0" fill="rgb(233,129,51)" rx="2" ry="2" />
<text  x="201.72" y="367.5" ></text>
</g>
<g >
<title>c10::SmallVectorImpl&lt;long&gt;::resize (3 samples, 0.13%)</title><rect x="1057.5" y="277" width="1.6" height="15.0" fill="rgb(231,146,16)" rx="2" ry="2" />
<text  x="1060.48" y="287.5" ></text>
</g>
<g >
<title>c10::TensorImpl::release_resources (23 samples, 1.03%)</title><rect x="620.7" y="565" width="12.2" height="15.0" fill="rgb(239,62,11)" rx="2" ry="2" />
<text  x="623.67" y="575.5" ></text>
</g>
<g >
<title>_int_free (17 samples, 0.76%)</title><rect x="115.0" y="677" width="9.0" height="15.0" fill="rgb(213,89,39)" rx="2" ry="2" />
<text  x="117.96" y="687.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::Lexer (1 samples, 0.04%)</title><rect x="214.6" y="485" width="0.5" height="15.0" fill="rgb(206,190,46)" rx="2" ry="2" />
<text  x="217.62" y="495.5" ></text>
</g>
<g >
<title>TORCH_LIBRARY_IMPL_init_aten_Autograd (4 samples, 0.18%)</title><rect x="249.6" y="581" width="2.1" height="15.0" fill="rgb(233,102,19)" rx="2" ry="2" />
<text  x="252.60" y="591.5" ></text>
</g>
<g >
<title>walk_component (1 samples, 0.04%)</title><rect x="1110.5" y="389" width="0.5" height="15.0" fill="rgb(220,218,21)" rx="2" ry="2" />
<text  x="1113.49" y="399.5" ></text>
</g>
<g >
<title>c10::impl::(anonymous namespace)::checkSchema (1 samples, 0.04%)</title><rect x="253.3" y="501" width="0.5" height="15.0" fill="rgb(241,61,8)" rx="2" ry="2" />
<text  x="256.32" y="511.5" ></text>
</g>
<g >
<title>[libc10.so] (38 samples, 1.71%)</title><rect x="77.9" y="693" width="20.1" height="15.0" fill="rgb(244,218,29)" rx="2" ry="2" />
<text  x="80.85" y="703.5" ></text>
</g>
<g >
<title>__posix_memalign (44 samples, 1.98%)</title><rect x="754.8" y="261" width="23.3" height="15.0" fill="rgb(233,192,34)" rx="2" ry="2" />
<text  x="757.79" y="271.5" >_..</text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="108.6" y="501" width="0.5" height="15.0" fill="rgb(227,97,12)" rx="2" ry="2" />
<text  x="111.60" y="511.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::shared_ptr&lt;torch::jit::Operator&gt;*, std::shared_ptr&lt;torch::jit::Operator&gt; &gt; (2 samples, 0.09%)</title><rect x="325.4" y="549" width="1.1" height="15.0" fill="rgb(208,127,5)" rx="2" ry="2" />
<text  x="328.41" y="559.5" ></text>
</g>
<g >
<title>torch::jit::Source::calc_line_start_offsets (1 samples, 0.04%)</title><rect x="188.1" y="341" width="0.5" height="15.0" fill="rgb(225,155,48)" rx="2" ry="2" />
<text  x="191.11" y="351.5" ></text>
</g>
<g >
<title>c10::detail::_str_wrapper&lt;char const*, char const* const&amp;, char const*, unsigned int const&amp;&gt;::call[abi:cxx11] (1 samples, 0.04%)</title><rect x="205.1" y="501" width="0.5" height="15.0" fill="rgb(205,199,41)" rx="2" ry="2" />
<text  x="208.08" y="511.5" ></text>
</g>
<g >
<title>c10::ProfiledCPUMemoryReporter::Delete (1 samples, 0.04%)</title><rect x="469.1" y="389" width="0.5" height="15.0" fill="rgb(233,211,29)" rx="2" ry="2" />
<text  x="472.07" y="399.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="226.3" y="293" width="0.5" height="15.0" fill="rgb(212,62,52)" rx="2" ry="2" />
<text  x="229.28" y="303.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.09%)</title><rect x="500.9" y="581" width="1.0" height="15.0" fill="rgb(231,205,51)" rx="2" ry="2" />
<text  x="503.87" y="591.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="284.6" y="549" width="0.5" height="15.0" fill="rgb(213,73,46)" rx="2" ry="2" />
<text  x="287.59" y="559.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="256.5" y="325" width="0.5" height="15.0" fill="rgb(226,28,8)" rx="2" ry="2" />
<text  x="259.50" y="335.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.04%)</title><rect x="184.9" y="485" width="0.6" height="15.0" fill="rgb(237,101,28)" rx="2" ry="2" />
<text  x="187.93" y="495.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;std::tuple&lt;at::Tensor, at::Tensor&gt;  (1 samples, 0.04%)</title><rect x="186.0" y="533" width="0.5" height="15.0" fill="rgb(236,215,0)" rx="2" ry="2" />
<text  x="188.99" y="543.5" ></text>
</g>
<g >
<title>micro_requires_grad_false (240 samples, 10.78%)</title><rect x="326.5" y="645" width="127.2" height="15.0" fill="rgb(252,52,19)" rx="2" ry="2" />
<text  x="329.47" y="655.5" >micro_requires_..</text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.04%)</title><rect x="696.5" y="469" width="0.5" height="15.0" fill="rgb(206,162,19)" rx="2" ry="2" />
<text  x="699.48" y="479.5" ></text>
</g>
<g >
<title>[[heap]] (21 samples, 0.94%)</title><rect x="10.0" y="693" width="11.1" height="15.0" fill="rgb(217,17,11)" rx="2" ry="2" />
<text  x="13.00" y="703.5" ></text>
</g>
<g >
<title>c10::storage_t&lt;c10::AliasInfo&gt;::storage_t&lt;c10::AliasInfo&gt; (1 samples, 0.04%)</title><rect x="236.9" y="325" width="0.5" height="15.0" fill="rgb(253,92,51)" rx="2" ry="2" />
<text  x="239.88" y="335.5" ></text>
</g>
<g >
<title>at::Tensor::~Tensor (1 samples, 0.04%)</title><rect x="155.8" y="661" width="0.5" height="15.0" fill="rgb(228,4,49)" rx="2" ry="2" />
<text  x="158.78" y="671.5" ></text>
</g>
<g >
<title>c10::findSchemaDifferences[abi:cxx11] (1 samples, 0.04%)</title><rect x="255.4" y="485" width="0.6" height="15.0" fill="rgb(228,49,17)" rx="2" ry="2" />
<text  x="258.44" y="495.5" ></text>
</g>
<g >
<title>c10::constexpr_storage_t&lt;c10::MemoryFormat&gt;::constexpr_storage_t (1 samples, 0.04%)</title><rect x="819.5" y="389" width="0.5" height="15.0" fill="rgb(244,194,31)" rx="2" ry="2" />
<text  x="822.46" y="399.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.04%)</title><rect x="256.5" y="405" width="0.5" height="15.0" fill="rgb(249,48,10)" rx="2" ry="2" />
<text  x="259.50" y="415.5" ></text>
</g>
<g >
<title>c10::TensorImpl::release_resources (37 samples, 1.66%)</title><rect x="844.9" y="565" width="19.6" height="15.0" fill="rgb(222,117,21)" rx="2" ry="2" />
<text  x="847.91" y="575.5" ></text>
</g>
<g >
<title>c10::guts::to_string&lt;unsigned long&gt; (1 samples, 0.04%)</title><rect x="184.9" y="453" width="0.6" height="15.0" fill="rgb(249,81,50)" rx="2" ry="2" />
<text  x="187.93" y="463.5" ></text>
</g>
<g >
<title>c10::GetCPUAllocator (2 samples, 0.09%)</title><rect x="574.0" y="325" width="1.1" height="15.0" fill="rgb(239,178,45)" rx="2" ry="2" />
<text  x="577.03" y="335.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ParseContext::ParseMessage&lt;google::protobuf::FieldDescriptorProto&gt; (2 samples, 0.09%)</title><rect x="295.7" y="485" width="1.1" height="15.0" fill="rgb(225,133,44)" rx="2" ry="2" />
<text  x="298.72" y="495.5" ></text>
</g>
<g >
<title>__vsnprintf_internal (1 samples, 0.04%)</title><rect x="10.5" y="677" width="0.6" height="15.0" fill="rgb(249,4,32)" rx="2" ry="2" />
<text  x="13.53" y="687.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::nextIf (1 samples, 0.04%)</title><rect x="237.4" y="357" width="0.5" height="15.0" fill="rgb(225,31,26)" rx="2" ry="2" />
<text  x="240.41" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::_M_realloc_insert&lt;c10::Argument&gt; (1 samples, 0.04%)</title><rect x="288.8" y="469" width="0.6" height="15.0" fill="rgb(241,13,51)" rx="2" ry="2" />
<text  x="291.83" y="479.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;float&gt; (1 samples, 0.04%)</title><rect x="917.0" y="501" width="0.5" height="15.0" fill="rgb(205,98,22)" rx="2" ry="2" />
<text  x="920.00" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (1 samples, 0.04%)</title><rect x="296.3" y="389" width="0.5" height="15.0" fill="rgb(225,187,16)" rx="2" ry="2" />
<text  x="299.25" y="399.5" ></text>
</g>
<g >
<title>show_cpuinfo (1 samples, 0.04%)</title><rect x="197.7" y="293" width="0.5" height="15.0" fill="rgb(211,205,3)" rx="2" ry="2" />
<text  x="200.65" y="303.5" ></text>
</g>
<g >
<title>create_elf_tables (1 samples, 0.04%)</title><rect x="1168.3" y="597" width="0.5" height="15.0" fill="rgb(238,122,38)" rx="2" ry="2" />
<text  x="1171.27" y="607.5" ></text>
</g>
<g >
<title>torch::detail::TorchLibraryInit::TorchLibraryInit (1 samples, 0.04%)</title><rect x="196.1" y="597" width="0.5" height="15.0" fill="rgb(205,97,28)" rx="2" ry="2" />
<text  x="199.06" y="607.5" ></text>
</g>
<g >
<title>c10::TensorImpl::~TensorImpl (18 samples, 0.81%)</title><rect x="864.5" y="565" width="9.6" height="15.0" fill="rgb(215,13,28)" rx="2" ry="2" />
<text  x="867.52" y="575.5" ></text>
</g>
<g >
<title>c10::FunctionSchema::~FunctionSchema (1 samples, 0.04%)</title><rect x="325.9" y="261" width="0.6" height="15.0" fill="rgb(245,7,16)" rx="2" ry="2" />
<text  x="328.94" y="271.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.04%)</title><rect x="285.1" y="501" width="0.6" height="15.0" fill="rgb(234,84,38)" rx="2" ry="2" />
<text  x="288.12" y="511.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (1 samples, 0.04%)</title><rect x="213.6" y="533" width="0.5" height="15.0" fill="rgb(234,74,1)" rx="2" ry="2" />
<text  x="216.56" y="543.5" ></text>
</g>
<g >
<title>c10::VariableVersion::~VariableVersion (28 samples, 1.26%)</title><rect x="632.9" y="533" width="14.8" height="15.0" fill="rgb(242,85,28)" rx="2" ry="2" />
<text  x="635.87" y="543.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="261.3" y="549" width="0.5" height="15.0" fill="rgb(224,25,10)" rx="2" ry="2" />
<text  x="264.27" y="559.5" ></text>
</g>
<g >
<title>c10::Dispatcher::deregisterImpl_ (17 samples, 0.76%)</title><rect x="312.7" y="405" width="9.0" height="15.0" fill="rgb(229,90,25)" rx="2" ry="2" />
<text  x="315.69" y="415.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.04%)</title><rect x="193.9" y="437" width="0.6" height="15.0" fill="rgb(222,105,4)" rx="2" ry="2" />
<text  x="196.94" y="447.5" ></text>
</g>
<g >
<title>c10::Storage::~Storage (2 samples, 0.09%)</title><rect x="975.3" y="261" width="1.1" height="15.0" fill="rgb(224,139,23)" rx="2" ry="2" />
<text  x="978.31" y="271.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;c10::Argument*&gt; (1 samples, 0.04%)</title><rect x="322.2" y="309" width="0.6" height="15.0" fill="rgb(212,35,21)" rx="2" ry="2" />
<text  x="325.23" y="319.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.04%)</title><rect x="204.0" y="549" width="0.5" height="15.0" fill="rgb(225,45,45)" rx="2" ry="2" />
<text  x="207.02" y="559.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;c10::ThreadLocalDebugInfo,  (1 samples, 0.04%)</title><rect x="337.1" y="325" width="0.5" height="15.0" fill="rgb(222,37,0)" rx="2" ry="2" />
<text  x="340.07" y="335.5" ></text>
</g>
<g >
<title>__GI___sbrk (1 samples, 0.04%)</title><rect x="231.1" y="245" width="0.5" height="15.0" fill="rgb(231,56,27)" rx="2" ry="2" />
<text  x="234.05" y="255.5" ></text>
</g>
<g >
<title>c10::ProfiledCPUMemoryReporter::New (3 samples, 0.13%)</title><rect x="552.3" y="309" width="1.6" height="15.0" fill="rgb(232,44,31)" rx="2" ry="2" />
<text  x="555.29" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.04%)</title><rect x="239.5" y="293" width="0.6" height="15.0" fill="rgb(205,87,21)" rx="2" ry="2" />
<text  x="242.53" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (1 samples, 0.04%)</title><rect x="280.4" y="517" width="0.5" height="15.0" fill="rgb(241,2,48)" rx="2" ry="2" />
<text  x="283.35" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.04%)</title><rect x="251.7" y="485" width="0.6" height="15.0" fill="rgb(214,86,11)" rx="2" ry="2" />
<text  x="254.73" y="495.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::operator++ (3 samples, 0.13%)</title><rect x="742.1" y="261" width="1.6" height="15.0" fill="rgb(219,96,34)" rx="2" ry="2" />
<text  x="745.07" y="271.5" ></text>
</g>
<g >
<title>parseDeclaration (2 samples, 0.09%)</title><rect x="113.9" y="533" width="1.1" height="15.0" fill="rgb(226,135,18)" rx="2" ry="2" />
<text  x="116.90" y="543.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::expect (1 samples, 0.04%)</title><rect x="111.2" y="485" width="0.6" height="15.0" fill="rgb(234,119,15)" rx="2" ry="2" />
<text  x="114.25" y="495.5" ></text>
</g>
<g >
<title>__vma_adjust (1 samples, 0.04%)</title><rect x="243.8" y="181" width="0.5" height="15.0" fill="rgb(229,110,53)" rx="2" ry="2" />
<text  x="246.77" y="191.5" ></text>
</g>
<g >
<title>[libcublasLt.so.11.1.0.229] (1 samples, 0.04%)</title><rect x="173.3" y="613" width="0.5" height="15.0" fill="rgb(240,223,40)" rx="2" ry="2" />
<text  x="176.27" y="623.5" ></text>
</g>
<g >
<title>[libcufft.so.10.2.0.218] (1 samples, 0.04%)</title><rect x="104.4" y="677" width="0.5" height="15.0" fill="rgb(240,61,13)" rx="2" ry="2" />
<text  x="107.36" y="687.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.04%)</title><rect x="276.1" y="517" width="0.5" height="15.0" fill="rgb(219,94,20)" rx="2" ry="2" />
<text  x="279.11" y="527.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="1149.2" y="533" width="0.5" height="15.0" fill="rgb(211,119,19)" rx="2" ry="2" />
<text  x="1152.18" y="543.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::nextIf (1 samples, 0.04%)</title><rect x="249.1" y="293" width="0.5" height="15.0" fill="rgb(243,33,54)" rx="2" ry="2" />
<text  x="252.07" y="303.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (1 samples, 0.04%)</title><rect x="200.3" y="533" width="0.5" height="15.0" fill="rgb(227,19,41)" rx="2" ry="2" />
<text  x="203.31" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_realloc_insert&lt;unsigned long&gt; (1 samples, 0.04%)</title><rect x="188.1" y="293" width="0.5" height="15.0" fill="rgb(216,204,28)" rx="2" ry="2" />
<text  x="191.11" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::~_Hashtable (1 samples, 0.04%)</title><rect x="181.8" y="357" width="0.5" height="15.0" fill="rgb(241,190,10)" rx="2" ry="2" />
<text  x="184.75" y="367.5" ></text>
</g>
<g >
<title>google::protobuf::Arena::CreateMaybeMessage&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.04%)</title><rect x="295.7" y="373" width="0.6" height="15.0" fill="rgb(243,113,26)" rx="2" ry="2" />
<text  x="298.72" y="383.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::registerKernel (2 samples, 0.09%)</title><rect x="255.4" y="517" width="1.1" height="15.0" fill="rgb(245,110,28)" rx="2" ry="2" />
<text  x="258.44" y="527.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.04%)</title><rect x="1109.4" y="373" width="0.6" height="15.0" fill="rgb(242,54,26)" rx="2" ry="2" />
<text  x="1112.42" y="383.5" ></text>
</g>
<g >
<title>_M_invoke (1 samples, 0.04%)</title><rect x="169.6" y="501" width="0.5" height="15.0" fill="rgb(210,169,8)" rx="2" ry="2" />
<text  x="172.56" y="511.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, torch::CppFunction&gt; (1 samples, 0.04%)</title><rect x="256.5" y="549" width="0.5" height="15.0" fill="rgb(249,219,43)" rx="2" ry="2" />
<text  x="259.50" y="559.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.04%)</title><rect x="198.7" y="485" width="0.5" height="15.0" fill="rgb(234,147,54)" rx="2" ry="2" />
<text  x="201.72" y="495.5" ></text>
</g>
<g >
<title>c10::inferFunctionSchemaFlattenedReturns&lt;c10::intrusive_ptr&lt;LinearPackedParamsBase, c10::detail::intrusive_target_default_null_type&lt;LinearPackedParamsBase&gt; &gt;  (1 samples, 0.04%)</title><rect x="267.6" y="517" width="0.6" height="15.0" fill="rgb(253,28,1)" rx="2" ry="2" />
<text  x="270.63" y="527.5" ></text>
</g>
<g >
<title>SchemaParser (1 samples, 0.04%)</title><rect x="188.1" y="501" width="0.5" height="15.0" fill="rgb(226,1,49)" rx="2" ry="2" />
<text  x="191.11" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;torch::jit::Token, std::allocator&lt;torch::jit::Token&gt; &gt;::push_back (1 samples, 0.04%)</title><rect x="214.6" y="453" width="0.5" height="15.0" fill="rgb(241,218,30)" rx="2" ry="2" />
<text  x="217.62" y="463.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.04%)</title><rect x="277.2" y="597" width="0.5" height="15.0" fill="rgb(247,112,0)" rx="2" ry="2" />
<text  x="280.17" y="607.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.04%)</title><rect x="283.0" y="549" width="0.5" height="15.0" fill="rgb(249,94,12)" rx="2" ry="2" />
<text  x="286.00" y="559.5" ></text>
</g>
<g >
<title>torch::Library::_impl (2 samples, 0.09%)</title><rect x="255.4" y="549" width="1.1" height="15.0" fill="rgb(249,224,25)" rx="2" ry="2" />
<text  x="258.44" y="559.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::createFunctionSchemaFromTraitsFlattenedReturns&lt;c10::guts::function_traits&lt;at::Tensor&amp;  (1 samples, 0.04%)</title><rect x="185.5" y="501" width="0.5" height="15.0" fill="rgb(238,162,4)" rx="2" ry="2" />
<text  x="188.46" y="511.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.04%)</title><rect x="166.4" y="453" width="0.5" height="15.0" fill="rgb(246,49,39)" rx="2" ry="2" />
<text  x="169.38" y="463.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;c10::RegistrationHandleRAII*&gt; (25 samples, 1.12%)</title><rect x="312.2" y="501" width="13.2" height="15.0" fill="rgb(240,169,24)" rx="2" ry="2" />
<text  x="315.16" y="511.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerName (1 samples, 0.04%)</title><rect x="286.2" y="597" width="0.5" height="15.0" fill="rgb(239,172,14)" rx="2" ry="2" />
<text  x="289.18" y="607.5" ></text>
</g>
<g >
<title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;, c10::DispatchKey, std::hash&lt;c10::DispatchKey&gt;, ska::detailv3::KeyOrValueHasher&lt;c10::DispatchKey, std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;, std::hash&lt;c10::DispatchKey&gt; &gt;, std::equal_to&lt;c10::DispatchKey&gt;, ska::detailv3::KeyOrValueEquality&lt;c10::DispatchKey, std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;, std::equal_to&lt;c10::DispatchKey&gt; &gt;, std::allocator&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt; &gt; &gt; &gt;::begin (1 samples, 0.04%)</title><rect x="220.4" y="501" width="0.6" height="15.0" fill="rgb(250,126,3)" rx="2" ry="2" />
<text  x="223.45" y="511.5" ></text>
</g>
<g >
<title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, c10::OperatorName, std::hash&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueHasher&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::hash&lt;c10::OperatorName&gt; &gt;, std::equal_to&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueEquality&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::equal_to&lt;c10::OperatorName&gt; &gt;, std::allocator&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt; &gt; &gt;::emplace_new_key&lt;c10::OperatorName const&amp;, c10::OperatorHandle&amp;&gt; (1 samples, 0.04%)</title><rect x="182.3" y="421" width="0.5" height="15.0" fill="rgb(219,107,3)" rx="2" ry="2" />
<text  x="185.28" y="431.5" ></text>
</g>
<g >
<title>c10::TensorImpl::compute_contiguous (2 samples, 0.09%)</title><rect x="1064.4" y="261" width="1.0" height="15.0" fill="rgb(206,173,14)" rx="2" ry="2" />
<text  x="1067.37" y="271.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;torch::jit::Token&gt; (1 samples, 0.04%)</title><rect x="193.4" y="405" width="0.5" height="15.0" fill="rgb(222,54,49)" rx="2" ry="2" />
<text  x="196.41" y="415.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;c10::Type&gt;::~shared_ptr (1 samples, 0.04%)</title><rect x="176.5" y="437" width="0.5" height="15.0" fill="rgb(214,210,44)" rx="2" ry="2" />
<text  x="179.45" y="447.5" ></text>
</g>
<g >
<title>c10::Registry&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unique_ptr&lt;caffe2::GradientMakerBase, std::default_delete&lt;caffe2::GradientMakerBase&gt; &gt;, caffe2::OperatorDef const&amp;, std::vector&lt;caffe2::GradientWrapper, std::allocator&lt;caffe2::GradientWrapper&gt; &gt; const&amp;&gt;::Register (1 samples, 0.04%)</title><rect x="273.5" y="597" width="0.5" height="15.0" fill="rgb(243,76,18)" rx="2" ry="2" />
<text  x="276.46" y="607.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.04%)</title><rect x="407.0" y="229" width="0.6" height="15.0" fill="rgb(227,124,50)" rx="2" ry="2" />
<text  x="410.04" y="239.5" ></text>
</g>
<g >
<title>c10::SmallVectorTemplateCommon&lt;long, void&gt;::SmallVectorTemplateCommon (5 samples, 0.22%)</title><rect x="980.6" y="165" width="2.7" height="15.0" fill="rgb(254,125,4)" rx="2" ry="2" />
<text  x="983.61" y="175.5" ></text>
</g>
<g >
<title>operator (1 samples, 0.04%)</title><rect x="212.5" y="309" width="0.5" height="15.0" fill="rgb(207,219,43)" rx="2" ry="2" />
<text  x="215.50" y="319.5" ></text>
</g>
<g >
<title>_int_free (3 samples, 0.13%)</title><rect x="623.9" y="389" width="1.5" height="15.0" fill="rgb(252,101,11)" rx="2" ry="2" />
<text  x="626.85" y="399.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (9 samples, 0.40%)</title><rect x="1185.2" y="549" width="4.8" height="15.0" fill="rgb(233,183,23)" rx="2" ry="2" />
<text  x="1188.23" y="559.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, at::Tensor  (1 samples, 0.04%)</title><rect x="260.2" y="565" width="0.5" height="15.0" fill="rgb(249,93,54)" rx="2" ry="2" />
<text  x="263.21" y="575.5" ></text>
</g>
<g >
<title>c10::impl::tls_local_dispatch_key_set (4 samples, 0.18%)</title><rect x="547.5" y="309" width="2.1" height="15.0" fill="rgb(242,169,13)" rx="2" ry="2" />
<text  x="550.52" y="319.5" ></text>
</g>
<g >
<title>c10::DataPtr::clear (7 samples, 0.31%)</title><rect x="334.4" y="469" width="3.7" height="15.0" fill="rgb(253,153,9)" rx="2" ry="2" />
<text  x="337.42" y="479.5" ></text>
</g>
<g >
<title>std::function&lt;void  (3 samples, 0.13%)</title><rect x="169.6" y="613" width="1.6" height="15.0" fill="rgb(250,78,12)" rx="2" ry="2" />
<text  x="172.56" y="623.5" ></text>
</g>
<g >
<title>c10::Dispatcher::OperatorDef::OperatorDef (3 samples, 0.13%)</title><rect x="190.2" y="421" width="1.6" height="15.0" fill="rgb(240,77,44)" rx="2" ry="2" />
<text  x="193.23" y="431.5" ></text>
</g>
<g >
<title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (1 samples, 0.04%)</title><rect x="252.3" y="421" width="0.5" height="15.0" fill="rgb(209,39,32)" rx="2" ry="2" />
<text  x="255.26" y="431.5" ></text>
</g>
<g >
<title>torch::jit::parseName (1 samples, 0.04%)</title><rect x="197.1" y="533" width="0.6" height="15.0" fill="rgb(217,220,25)" rx="2" ry="2" />
<text  x="200.12" y="543.5" ></text>
</g>
<g >
<title>at::hasCallbacks (1 samples, 0.04%)</title><rect x="531.6" y="373" width="0.5" height="15.0" fill="rgb(250,88,28)" rx="2" ry="2" />
<text  x="534.62" y="383.5" ></text>
</g>
<g >
<title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, c10::OperatorName, std::hash&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueHasher&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::hash&lt;c10::OperatorName&gt; &gt;, std::equal_to&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueEquality&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::equal_to&lt;c10::OperatorName&gt; &gt;, std::allocator&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt; &gt; &gt;::compares_equal&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt; (1 samples, 0.04%)</title><rect x="286.2" y="485" width="0.5" height="15.0" fill="rgb(210,185,45)" rx="2" ry="2" />
<text  x="289.18" y="495.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;c10::OperatorKernel,  (2 samples, 0.09%)</title><rect x="316.4" y="309" width="1.1" height="15.0" fill="rgb(206,191,44)" rx="2" ry="2" />
<text  x="319.40" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.04%)</title><rect x="162.1" y="645" width="0.6" height="15.0" fill="rgb(215,156,40)" rx="2" ry="2" />
<text  x="165.14" y="655.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.04%)</title><rect x="1106.2" y="533" width="0.6" height="15.0" fill="rgb(215,10,50)" rx="2" ry="2" />
<text  x="1109.24" y="543.5" ></text>
</g>
<g >
<title>c10::TensorOptions::requires_grad (5 samples, 0.22%)</title><rect x="1103.1" y="581" width="2.6" height="15.0" fill="rgb(249,229,24)" rx="2" ry="2" />
<text  x="1106.06" y="591.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;void, void  (1 samples, 0.04%)</title><rect x="448.4" y="213" width="0.5" height="15.0" fill="rgb(235,113,17)" rx="2" ry="2" />
<text  x="451.39" y="223.5" ></text>
</g>
<g >
<title>torch::autograd::AutogradMeta::set_requires_grad (2 samples, 0.09%)</title><rect x="164.3" y="677" width="1.0" height="15.0" fill="rgb(215,46,34)" rx="2" ry="2" />
<text  x="167.26" y="687.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="205.1" y="373" width="0.5" height="15.0" fill="rgb(219,18,51)" rx="2" ry="2" />
<text  x="208.08" y="383.5" ></text>
</g>
<g >
<title>parseList (4 samples, 0.18%)</title><rect x="111.2" y="581" width="2.2" height="15.0" fill="rgb(246,118,32)" rx="2" ry="2" />
<text  x="114.25" y="591.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.04%)</title><rect x="168.5" y="677" width="0.5" height="15.0" fill="rgb(246,175,23)" rx="2" ry="2" />
<text  x="171.50" y="687.5" ></text>
</g>
<g >
<title>alloc_set_pte (1 samples, 0.04%)</title><rect x="264.4" y="485" width="0.6" height="15.0" fill="rgb(221,96,35)" rx="2" ry="2" />
<text  x="267.45" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.04%)</title><rect x="132.5" y="549" width="0.5" height="15.0" fill="rgb(212,212,28)" rx="2" ry="2" />
<text  x="135.45" y="559.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt; &gt;  (1 samples, 0.04%)</title><rect x="206.1" y="565" width="0.6" height="15.0" fill="rgb(228,144,28)" rx="2" ry="2" />
<text  x="209.14" y="575.5" ></text>
</g>
<g >
<title>torch::empty (169 samples, 7.59%)</title><rect x="364.1" y="613" width="89.6" height="15.0" fill="rgb(240,229,42)" rx="2" ry="2" />
<text  x="367.11" y="623.5" >torch::empty</text>
</g>
<g >
<title>parseDeclarations (6 samples, 0.27%)</title><rect x="288.8" y="565" width="3.2" height="15.0" fill="rgb(213,158,51)" rx="2" ry="2" />
<text  x="291.83" y="575.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.04%)</title><rect x="218.9" y="325" width="0.5" height="15.0" fill="rgb(254,76,27)" rx="2" ry="2" />
<text  x="221.86" y="335.5" ></text>
</g>
<g >
<title>c10::DispatchKeyExtractor::getDispatchKeyUnboxed&lt;c10::ArrayRef&lt;long&gt;, c10::TensorOptions const&amp;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (9 samples, 0.40%)</title><rect x="937.7" y="533" width="4.7" height="15.0" fill="rgb(219,46,49)" rx="2" ry="2" />
<text  x="940.67" y="543.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.04%)</title><rect x="336.5" y="341" width="0.6" height="15.0" fill="rgb(241,117,45)" rx="2" ry="2" />
<text  x="339.54" y="351.5" ></text>
</g>
<g >
<title>torch::autograd::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Autograd (2 samples, 0.09%)</title><rect x="255.4" y="565" width="1.1" height="15.0" fill="rgb(210,53,26)" rx="2" ry="2" />
<text  x="258.44" y="575.5" ></text>
</g>
<g >
<title>torch::Library::impl_UNBOXED&lt;char const*, std::tuple&lt;at::Tensor, at::Tensor&gt;  (1 samples, 0.04%)</title><rect x="202.4" y="565" width="0.6" height="15.0" fill="rgb(224,141,40)" rx="2" ry="2" />
<text  x="205.43" y="575.5" ></text>
</g>
<g >
<title>c10::DefaultCPUAllocator::ReportAndDelete (5 samples, 0.22%)</title><rect x="335.5" y="405" width="2.6" height="15.0" fill="rgb(230,73,33)" rx="2" ry="2" />
<text  x="338.48" y="415.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="294.1" y="533" width="0.6" height="15.0" fill="rgb(238,135,21)" rx="2" ry="2" />
<text  x="297.13" y="543.5" ></text>
</g>
<g >
<title>[libgcc_s.so.1] (1 samples, 0.04%)</title><rect x="98.0" y="693" width="0.5" height="15.0" fill="rgb(229,21,5)" rx="2" ry="2" />
<text  x="101.00" y="703.5" ></text>
</g>
<g >
<title>c10::TensorImpl::compute_numel (1 samples, 0.04%)</title><rect x="581.4" y="293" width="0.6" height="15.0" fill="rgb(230,219,45)" rx="2" ry="2" />
<text  x="584.45" y="303.5" ></text>
</g>
<g >
<title>c10::TensorOptions::memory_format (2 samples, 0.09%)</title><rect x="436.7" y="325" width="1.1" height="15.0" fill="rgb(211,115,43)" rx="2" ry="2" />
<text  x="439.73" y="335.5" ></text>
</g>
<g >
<title>checked_request2size (1 samples, 0.04%)</title><rect x="814.2" y="245" width="0.5" height="15.0" fill="rgb(208,152,26)" rx="2" ry="2" />
<text  x="817.16" y="255.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::validIdent (1 samples, 0.04%)</title><rect x="290.4" y="421" width="0.6" height="15.0" fill="rgb(241,112,19)" rx="2" ry="2" />
<text  x="293.42" y="431.5" ></text>
</g>
<g >
<title>_int_free (2 samples, 0.09%)</title><rect x="470.1" y="533" width="1.1" height="15.0" fill="rgb(219,19,44)" rx="2" ry="2" />
<text  x="473.13" y="543.5" ></text>
</g>
<g >
<title>c10::OperatorName::~OperatorName (1 samples, 0.04%)</title><rect x="324.9" y="373" width="0.5" height="15.0" fill="rgb(250,35,10)" rx="2" ry="2" />
<text  x="327.88" y="383.5" ></text>
</g>
<g >
<title>TORCH_LIBRARY_IMPL_init_aten_CatchAll (1 samples, 0.04%)</title><rect x="285.7" y="597" width="0.5" height="15.0" fill="rgb(242,29,47)" rx="2" ry="2" />
<text  x="288.65" y="607.5" ></text>
</g>
<g >
<title>c10::Dispatcher::callWithDispatchKey&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::TensorOptions const&amp;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (125 samples, 5.62%)</title><rect x="384.8" y="437" width="66.2" height="15.0" fill="rgb(213,66,7)" rx="2" ry="2" />
<text  x="387.78" y="447.5" >c10::Di..</text>
</g>
<g >
<title>std::unique_ptr&lt;c10::AutogradMetaInterface, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::get (1 samples, 0.04%)</title><rect x="906.9" y="533" width="0.6" height="15.0" fill="rgb(235,157,21)" rx="2" ry="2" />
<text  x="909.93" y="543.5" ></text>
</g>
<g >
<title>c10::TensorImpl::TensorImpl (21 samples, 0.94%)</title><rect x="976.4" y="261" width="11.1" height="15.0" fill="rgb(242,153,27)" rx="2" ry="2" />
<text  x="979.37" y="271.5" ></text>
</g>
<g >
<title>torch::detail::TorchLibraryInit::TorchLibraryInit (3 samples, 0.13%)</title><rect x="265.5" y="597" width="1.6" height="15.0" fill="rgb(245,114,43)" rx="2" ry="2" />
<text  x="268.51" y="607.5" ></text>
</g>
<g >
<title>google::protobuf::FieldDescriptorProto::_internal_mutable_name[abi:cxx11] (1 samples, 0.04%)</title><rect x="295.7" y="453" width="0.6" height="15.0" fill="rgb(251,128,48)" rx="2" ry="2" />
<text  x="298.72" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;void, void  (1 samples, 0.04%)</title><rect x="448.4" y="261" width="0.5" height="15.0" fill="rgb(252,149,15)" rx="2" ry="2" />
<text  x="451.39" y="271.5" ></text>
</g>
<g >
<title>at::hasCallbacks (2 samples, 0.09%)</title><rect x="944.6" y="469" width="1.0" height="15.0" fill="rgb(205,147,20)" rx="2" ry="2" />
<text  x="947.56" y="479.5" ></text>
</g>
<g >
<title>c10::KernelFunction::call&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::TensorOptions const&amp;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (130 samples, 5.84%)</title><rect x="382.7" y="533" width="68.9" height="15.0" fill="rgb(254,72,11)" rx="2" ry="2" />
<text  x="385.66" y="543.5" >c10::Ke..</text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="269.7" y="517" width="0.6" height="15.0" fill="rgb(234,152,35)" rx="2" ry="2" />
<text  x="272.75" y="527.5" ></text>
</g>
<g >
<title>c10::RegistrationHandleRAII::~RegistrationHandleRAII (2 samples, 0.09%)</title><rect x="309.5" y="485" width="1.1" height="15.0" fill="rgb(214,69,2)" rx="2" ry="2" />
<text  x="312.51" y="495.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.04%)</title><rect x="259.1" y="309" width="0.6" height="15.0" fill="rgb(253,71,38)" rx="2" ry="2" />
<text  x="262.15" y="319.5" ></text>
</g>
<g >
<title>c10::make_intrusive&lt;c10::TensorImpl, c10::detail::intrusive_target_default_null_type&lt;c10::TensorImpl&gt;, c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;, c10::DispatchKey, caffe2::TypeMeta&amp;&gt; (37 samples, 1.66%)</title><rect x="975.3" y="293" width="19.6" height="15.0" fill="rgb(250,198,37)" rx="2" ry="2" />
<text  x="978.31" y="303.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;float&gt; (1 samples, 0.04%)</title><rect x="156.3" y="629" width="0.5" height="15.0" fill="rgb(254,9,36)" rx="2" ry="2" />
<text  x="159.31" y="639.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="1156.6" y="517" width="0.5" height="15.0" fill="rgb(218,41,54)" rx="2" ry="2" />
<text  x="1159.60" y="527.5" ></text>
</g>
<g >
<title>c10::alloc_cpu (1 samples, 0.04%)</title><rect x="102.2" y="661" width="0.6" height="15.0" fill="rgb(224,21,11)" rx="2" ry="2" />
<text  x="105.24" y="671.5" ></text>
</g>
<g >
<title>c10::DispatchKeyExtractor::dispatchKeySetToDispatchKey_ (7 samples, 0.31%)</title><rect x="694.4" y="517" width="3.7" height="15.0" fill="rgb(223,67,39)" rx="2" ry="2" />
<text  x="697.36" y="527.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::AliasInfo&gt;::~optional (1 samples, 0.04%)</title><rect x="319.6" y="149" width="0.5" height="15.0" fill="rgb(207,142,30)" rx="2" ry="2" />
<text  x="322.58" y="159.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.04%)</title><rect x="256.5" y="533" width="0.5" height="15.0" fill="rgb(249,51,14)" rx="2" ry="2" />
<text  x="259.50" y="543.5" ></text>
</g>
<g >
<title>unmap_region (1 samples, 0.04%)</title><rect x="182.3" y="293" width="0.5" height="15.0" fill="rgb(206,186,32)" rx="2" ry="2" />
<text  x="185.28" y="303.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;c10::ThreadLocalDebugInfo&gt;::~shared_ptr (1 samples, 0.04%)</title><rect x="337.6" y="341" width="0.5" height="15.0" fill="rgb(226,8,13)" rx="2" ry="2" />
<text  x="340.60" y="351.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="278.2" y="517" width="0.6" height="15.0" fill="rgb(229,189,24)" rx="2" ry="2" />
<text  x="281.23" y="527.5" ></text>
</g>
<g >
<title>onnx_torch::OpSchema::TypeConstraint (1 samples, 0.04%)</title><rect x="269.2" y="517" width="0.5" height="15.0" fill="rgb(208,122,37)" rx="2" ry="2" />
<text  x="272.22" y="527.5" ></text>
</g>
<g >
<title>at::AutoNonVariableTypeMode::AutoNonVariableTypeMode (9 samples, 0.40%)</title><rect x="930.8" y="581" width="4.8" height="15.0" fill="rgb(229,123,29)" rx="2" ry="2" />
<text  x="933.78" y="591.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::optional&lt;caffe2::TypeMeta, false&gt; (1 samples, 0.04%)</title><rect x="494.5" y="613" width="0.5" height="15.0" fill="rgb(254,171,38)" rx="2" ry="2" />
<text  x="497.51" y="623.5" ></text>
</g>
<g >
<title>dispatchTypeId (3 samples, 0.13%)</title><rect x="376.3" y="517" width="1.6" height="15.0" fill="rgb(228,156,53)" rx="2" ry="2" />
<text  x="379.30" y="527.5" ></text>
</g>
<g >
<title>at::hasCallbacks (4 samples, 0.18%)</title><rect x="45.5" y="645" width="2.1" height="15.0" fill="rgb(250,85,6)" rx="2" ry="2" />
<text  x="48.52" y="655.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (1 samples, 0.04%)</title><rect x="176.5" y="373" width="0.5" height="15.0" fill="rgb(226,227,9)" rx="2" ry="2" />
<text  x="179.45" y="383.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.04%)</title><rect x="174.9" y="501" width="0.5" height="15.0" fill="rgb(248,44,44)" rx="2" ry="2" />
<text  x="177.86" y="511.5" ></text>
</g>
<g >
<title>c10::TensorOptions::requires_grad (5 samples, 0.22%)</title><rect x="487.6" y="629" width="2.7" height="15.0" fill="rgb(212,194,54)" rx="2" ry="2" />
<text  x="490.62" y="639.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.04%)</title><rect x="214.1" y="469" width="0.5" height="15.0" fill="rgb(208,103,47)" rx="2" ry="2" />
<text  x="217.09" y="479.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.04%)</title><rect x="630.2" y="325" width="0.5" height="15.0" fill="rgb(211,43,27)" rx="2" ry="2" />
<text  x="633.22" y="335.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="264.4" y="533" width="0.6" height="15.0" fill="rgb(221,60,1)" rx="2" ry="2" />
<text  x="267.45" y="543.5" ></text>
</g>
<g >
<title>[libtorch_cuda.so] (1 samples, 0.04%)</title><rect x="271.9" y="613" width="0.5" height="15.0" fill="rgb(231,199,1)" rx="2" ry="2" />
<text  x="274.87" y="623.5" ></text>
</g>
<g >
<title>c10::TensorImpl::TensorImpl (17 samples, 0.76%)</title><rect x="729.9" y="261" width="9.0" height="15.0" fill="rgb(228,178,29)" rx="2" ry="2" />
<text  x="732.87" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_find_before_node (1 samples, 0.04%)</title><rect x="217.3" y="277" width="0.5" height="15.0" fill="rgb(206,63,36)" rx="2" ry="2" />
<text  x="220.27" y="287.5" ></text>
</g>
<g >
<title>torch::schema (1 samples, 0.04%)</title><rect x="195.5" y="533" width="0.6" height="15.0" fill="rgb(224,226,12)" rx="2" ry="2" />
<text  x="198.53" y="543.5" ></text>
</g>
<g >
<title>llvm::detail::LeadingZerosCounter&lt;unsigned long, 8ul&gt;::count (3 samples, 0.13%)</title><rect x="376.3" y="469" width="1.6" height="15.0" fill="rgb(250,64,0)" rx="2" ry="2" />
<text  x="379.30" y="479.5" ></text>
</g>
<g >
<title>tcache_put (5 samples, 0.22%)</title><rect x="842.3" y="549" width="2.6" height="15.0" fill="rgb(212,99,8)" rx="2" ry="2" />
<text  x="845.26" y="559.5" ></text>
</g>
<g >
<title>parseDeclaration (5 samples, 0.22%)</title><rect x="288.8" y="549" width="2.7" height="15.0" fill="rgb(217,116,9)" rx="2" ry="2" />
<text  x="291.83" y="559.5" ></text>
</g>
<g >
<title>std::atomic&lt;unsigned long&gt;::atomic (2 samples, 0.09%)</title><rect x="397.5" y="149" width="1.1" height="15.0" fill="rgb(213,34,40)" rx="2" ry="2" />
<text  x="400.50" y="159.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;torch::jit::Token*, torch::jit::Token&gt; (1 samples, 0.04%)</title><rect x="193.4" y="453" width="0.5" height="15.0" fill="rgb(209,214,40)" rx="2" ry="2" />
<text  x="196.41" y="463.5" ></text>
</g>
<g >
<title>torch::Library::_impl (4 samples, 0.18%)</title><rect x="247.5" y="549" width="2.1" height="15.0" fill="rgb(222,92,42)" rx="2" ry="2" />
<text  x="250.48" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.04%)</title><rect x="251.7" y="501" width="0.6" height="15.0" fill="rgb(227,119,49)" rx="2" ry="2" />
<text  x="254.73" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;c10::Symbol, true&gt; &gt; &gt;::allocate (1 samples, 0.04%)</title><rect x="212.5" y="197" width="0.5" height="15.0" fill="rgb(252,225,37)" rx="2" ry="2" />
<text  x="215.50" y="207.5" ></text>
</g>
<g >
<title>mem_cgroup_update_lru_size (1 samples, 0.04%)</title><rect x="230.0" y="101" width="0.5" height="15.0" fill="rgb(206,159,46)" rx="2" ry="2" />
<text  x="232.99" y="111.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::VariableVersion::VersionCounter, c10::detail::intrusive_target_default_null_type&lt;c10::VariableVersion::VersionCounter&gt; &gt;::~intrusive_ptr (18 samples, 0.81%)</title><rect x="864.5" y="517" width="9.6" height="15.0" fill="rgb(206,73,8)" rx="2" ry="2" />
<text  x="867.52" y="527.5" ></text>
</g>
<g >
<title>c10::TensorImpl::dim (1 samples, 0.04%)</title><rect x="1064.9" y="229" width="0.5" height="15.0" fill="rgb(237,22,24)" rx="2" ry="2" />
<text  x="1067.90" y="239.5" ></text>
</g>
<g >
<title>[[stack]] (103 samples, 4.63%)</title><rect x="21.1" y="693" width="54.6" height="15.0" fill="rgb(209,153,28)" rx="2" ry="2" />
<text  x="24.13" y="703.5" >[[sta..</text>
</g>
<g >
<title>parseDeclarations (1 samples, 0.04%)</title><rect x="195.0" y="485" width="0.5" height="15.0" fill="rgb(221,186,17)" rx="2" ry="2" />
<text  x="198.00" y="495.5" ></text>
</g>
<g >
<title>[libcublas.so.11.1.0.229] (1 samples, 0.04%)</title><rect x="102.8" y="677" width="0.5" height="15.0" fill="rgb(231,126,53)" rx="2" ry="2" />
<text  x="105.77" y="687.5" ></text>
</g>
<g >
<title>c10::memoryProfilingEnabled (1 samples, 0.04%)</title><rect x="469.1" y="373" width="0.5" height="15.0" fill="rgb(234,78,2)" rx="2" ry="2" />
<text  x="472.07" y="383.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (1 samples, 0.04%)</title><rect x="251.2" y="485" width="0.5" height="15.0" fill="rgb(224,54,39)" rx="2" ry="2" />
<text  x="254.19" y="495.5" ></text>
</g>
<g >
<title>[libtorch_cpu.so] (2 samples, 0.09%)</title><rect x="37.6" y="661" width="1.0" height="15.0" fill="rgb(236,11,11)" rx="2" ry="2" />
<text  x="40.57" y="671.5" ></text>
</g>
<g >
<title>subfunc (955 samples, 42.90%)</title><rect x="599.5" y="645" width="506.2" height="15.0" fill="rgb(210,185,29)" rx="2" ry="2" />
<text  x="602.47" y="655.5" >subfunc</text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.09%)</title><rect x="316.4" y="293" width="1.1" height="15.0" fill="rgb(253,207,33)" rx="2" ry="2" />
<text  x="319.40" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;c10::FunctionSchema, std::default_delete&lt;c10::FunctionSchema&gt; &gt;::~unique_ptr (4 samples, 0.18%)</title><rect x="319.6" y="293" width="2.1" height="15.0" fill="rgb(206,166,52)" rx="2" ry="2" />
<text  x="322.58" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt; &gt;::_M_emplace_unique&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, caffe2::OpSchema&gt; &gt; (1 samples, 0.04%)</title><rect x="279.8" y="581" width="0.6" height="15.0" fill="rgb(242,204,23)" rx="2" ry="2" />
<text  x="282.82" y="591.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="261.3" y="533" width="0.5" height="15.0" fill="rgb(252,88,17)" rx="2" ry="2" />
<text  x="264.27" y="543.5" ></text>
</g>
<g >
<title>count (1 samples, 0.04%)</title><rect x="131.9" y="645" width="0.6" height="15.0" fill="rgb(222,149,36)" rx="2" ry="2" />
<text  x="134.92" y="655.5" ></text>
</g>
<g >
<title>__GI___libc_free (4 samples, 0.18%)</title><rect x="640.3" y="485" width="2.1" height="15.0" fill="rgb(228,19,54)" rx="2" ry="2" />
<text  x="643.29" y="495.5" ></text>
</g>
<g >
<title>c10::Device::validate (1 samples, 0.04%)</title><rect x="582.0" y="293" width="0.5" height="15.0" fill="rgb(208,140,51)" rx="2" ry="2" />
<text  x="584.98" y="303.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.04%)</title><rect x="267.6" y="373" width="0.6" height="15.0" fill="rgb(246,134,2)" rx="2" ry="2" />
<text  x="270.63" y="383.5" ></text>
</g>
<g >
<title>__do_page_fault (2 samples, 0.09%)</title><rect x="1137.0" y="501" width="1.1" height="15.0" fill="rgb(246,7,44)" rx="2" ry="2" />
<text  x="1139.99" y="511.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseType (3 samples, 0.13%)</title><rect x="169.6" y="565" width="1.6" height="15.0" fill="rgb(230,115,26)" rx="2" ry="2" />
<text  x="172.56" y="575.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::createFunctionSchemaFromTraitsFlattenedReturns&lt;c10::guts::function_traits&lt;at::Tensor  (2 samples, 0.09%)</title><rect x="243.2" y="501" width="1.1" height="15.0" fill="rgb(244,224,29)" rx="2" ry="2" />
<text  x="246.24" y="511.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::nextIf (1 samples, 0.04%)</title><rect x="111.8" y="485" width="0.5" height="15.0" fill="rgb(231,55,54)" rx="2" ry="2" />
<text  x="114.78" y="495.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.04%)</title><rect x="258.6" y="341" width="0.5" height="15.0" fill="rgb(207,121,27)" rx="2" ry="2" />
<text  x="261.62" y="351.5" ></text>
</g>
<g >
<title>torch::jit::parseName (1 samples, 0.04%)</title><rect x="193.4" y="533" width="0.5" height="15.0" fill="rgb(245,147,53)" rx="2" ry="2" />
<text  x="196.41" y="543.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (1 samples, 0.04%)</title><rect x="272.4" y="373" width="0.5" height="15.0" fill="rgb(225,137,37)" rx="2" ry="2" />
<text  x="275.40" y="383.5" ></text>
</g>
<g >
<title>_int_malloc (15 samples, 0.67%)</title><rect x="564.5" y="229" width="7.9" height="15.0" fill="rgb(235,102,10)" rx="2" ry="2" />
<text  x="567.48" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string (1 samples, 0.04%)</title><rect x="184.9" y="421" width="0.6" height="15.0" fill="rgb(236,199,28)" rx="2" ry="2" />
<text  x="187.93" y="431.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTableFull_ (2 samples, 0.09%)</title><rect x="190.8" y="389" width="1.0" height="15.0" fill="rgb(229,67,31)" rx="2" ry="2" />
<text  x="193.76" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;c10::AutogradMetaInterface, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::reset (2 samples, 0.09%)</title><rect x="338.1" y="565" width="1.1" height="15.0" fill="rgb(206,127,7)" rx="2" ry="2" />
<text  x="341.13" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::IValue, std::allocator&lt;c10::IValue&gt; &gt;::~vector (1 samples, 0.04%)</title><rect x="961.0" y="389" width="0.5" height="15.0" fill="rgb(211,166,2)" rx="2" ry="2" />
<text  x="964.00" y="399.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;::basic_ostream (1 samples, 0.04%)</title><rect x="222.0" y="485" width="0.6" height="15.0" fill="rgb(228,151,53)" rx="2" ry="2" />
<text  x="225.04" y="495.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor&amp;  (1 samples, 0.04%)</title><rect x="214.6" y="565" width="0.5" height="15.0" fill="rgb(205,211,49)" rx="2" ry="2" />
<text  x="217.62" y="575.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1 samples, 0.04%)</title><rect x="254.4" y="469" width="0.5" height="15.0" fill="rgb(250,14,31)" rx="2" ry="2" />
<text  x="257.38" y="479.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_schema.cc (1 samples, 0.04%)</title><rect x="269.2" y="629" width="0.5" height="15.0" fill="rgb(228,73,3)" rx="2" ry="2" />
<text  x="272.22" y="639.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_TraceType_1.cpp (6 samples, 0.27%)</title><rect x="199.8" y="629" width="3.2" height="15.0" fill="rgb(232,210,24)" rx="2" ry="2" />
<text  x="202.78" y="639.5" ></text>
</g>
<g >
<title>_dl_relocate_object (85 samples, 3.82%)</title><rect x="1112.6" y="613" width="45.1" height="15.0" fill="rgb(235,209,26)" rx="2" ry="2" />
<text  x="1115.61" y="623.5" >_dl_..</text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;float&gt; (1 samples, 0.04%)</title><rect x="157.9" y="629" width="0.5" height="15.0" fill="rgb(207,128,54)" rx="2" ry="2" />
<text  x="160.90" y="639.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;long&gt; (1 samples, 0.04%)</title><rect x="707.1" y="373" width="0.5" height="15.0" fill="rgb(253,190,9)" rx="2" ry="2" />
<text  x="710.08" y="383.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;c10::Type,  (1 samples, 0.04%)</title><rect x="166.4" y="421" width="0.5" height="15.0" fill="rgb(249,163,19)" rx="2" ry="2" />
<text  x="169.38" y="431.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;torch::jit::Source,  (1 samples, 0.04%)</title><rect x="188.1" y="437" width="0.5" height="15.0" fill="rgb(207,108,6)" rx="2" ry="2" />
<text  x="191.11" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (21 samples, 0.94%)</title><rect x="1169.9" y="661" width="11.1" height="15.0" fill="rgb(237,166,14)" rx="2" ry="2" />
<text  x="1172.86" y="671.5" ></text>
</g>
<g >
<title>parseDeclarations (3 samples, 0.13%)</title><rect x="169.6" y="661" width="1.6" height="15.0" fill="rgb(220,15,43)" rx="2" ry="2" />
<text  x="172.56" y="671.5" ></text>
</g>
<g >
<title>_int_free (9 samples, 0.40%)</title><rect x="297.8" y="693" width="4.8" height="15.0" fill="rgb(220,3,52)" rx="2" ry="2" />
<text  x="300.84" y="703.5" ></text>
</g>
<g >
<title>at::RecordFunction::end (1 samples, 0.04%)</title><rect x="523.7" y="517" width="0.5" height="15.0" fill="rgb(221,140,51)" rx="2" ry="2" />
<text  x="526.67" y="527.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;long&gt; (1 samples, 0.04%)</title><rect x="527.4" y="405" width="0.5" height="15.0" fill="rgb(211,11,32)" rx="2" ry="2" />
<text  x="530.38" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (3 samples, 0.13%)</title><rect x="21.1" y="677" width="1.6" height="15.0" fill="rgb(239,0,17)" rx="2" ry="2" />
<text  x="24.13" y="687.5" ></text>
</g>
<g >
<title>__cudaRegisterLinkedBinary_56_tmpxft_00002e86_00000000_8_all_reduce_compute_70_cpp1_ii_4363e514 (1 samples, 0.04%)</title><rect x="271.3" y="629" width="0.6" height="15.0" fill="rgb(206,13,18)" rx="2" ry="2" />
<text  x="274.34" y="639.5" ></text>
</g>
<g >
<title>lru_add_drain (1 samples, 0.04%)</title><rect x="1107.3" y="341" width="0.5" height="15.0" fill="rgb(220,168,36)" rx="2" ry="2" />
<text  x="1110.30" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;c10::Symbol, true&gt; &gt;::allocate (1 samples, 0.04%)</title><rect x="212.5" y="181" width="0.5" height="15.0" fill="rgb(234,105,39)" rx="2" ry="2" />
<text  x="215.50" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;c10::RegistrationHandleRAII&gt; &gt;::construct&lt;c10::RegistrationHandleRAII, c10::RegistrationHandleRAII&gt; (1 samples, 0.04%)</title><rect x="187.6" y="517" width="0.5" height="15.0" fill="rgb(236,167,42)" rx="2" ry="2" />
<text  x="190.58" y="527.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::shared_ptr (1 samples, 0.04%)</title><rect x="522.1" y="469" width="0.5" height="15.0" fill="rgb(223,86,29)" rx="2" ry="2" />
<text  x="525.08" y="479.5" ></text>
</g>
<g >
<title>xas_find (1 samples, 0.04%)</title><rect x="108.6" y="421" width="0.5" height="15.0" fill="rgb(242,12,42)" rx="2" ry="2" />
<text  x="111.60" y="431.5" ></text>
</g>
<g >
<title>torch::jit::RegisterOperators::RegisterOperators (3 samples, 0.13%)</title><rect x="113.4" y="661" width="1.6" height="15.0" fill="rgb(213,84,27)" rx="2" ry="2" />
<text  x="116.37" y="671.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (2 samples, 0.09%)</title><rect x="448.9" y="277" width="1.1" height="15.0" fill="rgb(208,80,51)" rx="2" ry="2" />
<text  x="451.92" y="287.5" ></text>
</g>
<g >
<title>_int_free (15 samples, 0.67%)</title><rect x="758.5" y="213" width="8.0" height="15.0" fill="rgb(215,121,32)" rx="2" ry="2" />
<text  x="761.50" y="223.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;short&gt; (3 samples, 0.13%)</title><rect x="94.3" y="677" width="1.6" height="15.0" fill="rgb(226,194,41)" rx="2" ry="2" />
<text  x="97.29" y="687.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_VariableType_3.cpp (3 samples, 0.13%)</title><rect x="255.4" y="629" width="1.6" height="15.0" fill="rgb(239,229,37)" rx="2" ry="2" />
<text  x="258.44" y="639.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.04%)</title><rect x="77.3" y="677" width="0.6" height="15.0" fill="rgb(217,181,54)" rx="2" ry="2" />
<text  x="80.32" y="687.5" ></text>
</g>
<g >
<title>SchemaParser (1 samples, 0.04%)</title><rect x="205.6" y="501" width="0.5" height="15.0" fill="rgb(219,214,8)" rx="2" ry="2" />
<text  x="208.61" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="1108.4" y="501" width="0.5" height="15.0" fill="rgb(211,74,53)" rx="2" ry="2" />
<text  x="1111.36" y="511.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.04%)</title><rect x="281.4" y="517" width="0.5" height="15.0" fill="rgb(218,169,43)" rx="2" ry="2" />
<text  x="284.41" y="527.5" ></text>
</g>
<g >
<title>c10::guts::make_unique_base&lt;c10::OperatorKernel, c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor&amp;  (1 samples, 0.04%)</title><rect x="178.6" y="533" width="0.5" height="15.0" fill="rgb(218,27,49)" rx="2" ry="2" />
<text  x="181.57" y="543.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;torch::jit::Source,  (1 samples, 0.04%)</title><rect x="249.1" y="357" width="0.5" height="15.0" fill="rgb(206,141,51)" rx="2" ry="2" />
<text  x="252.07" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::RegistryPriority&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::RegistryPriority&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (1 samples, 0.04%)</title><rect x="270.3" y="517" width="0.5" height="15.0" fill="rgb(228,143,27)" rx="2" ry="2" />
<text  x="273.28" y="527.5" ></text>
</g>
<g >
<title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, c10::OperatorName, std::hash&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueHasher&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::hash&lt;c10::OperatorName&gt; &gt;, std::equal_to&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueEquality&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::equal_to&lt;c10::OperatorName&gt; &gt;, std::allocator&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt; &gt; &gt;::emplace&lt;c10::OperatorName const&amp;, c10::OperatorHandle&amp;&gt; (2 samples, 0.09%)</title><rect x="191.8" y="437" width="1.1" height="15.0" fill="rgb(250,138,27)" rx="2" ry="2" />
<text  x="194.82" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;torch::jit::Source&gt;::construct&lt;torch::jit::Source, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.04%)</title><rect x="252.8" y="373" width="0.5" height="15.0" fill="rgb(242,83,40)" rx="2" ry="2" />
<text  x="255.79" y="383.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.04%)</title><rect x="261.3" y="581" width="0.5" height="15.0" fill="rgb(227,72,35)" rx="2" ry="2" />
<text  x="264.27" y="591.5" ></text>
</g>
<g >
<title>c10::TensorImpl::compute_contiguous (1 samples, 0.04%)</title><rect x="427.7" y="277" width="0.5" height="15.0" fill="rgb(216,35,35)" rx="2" ry="2" />
<text  x="430.72" y="287.5" ></text>
</g>
<g >
<title>__cxa_finalize (3 samples, 0.13%)</title><rect x="303.1" y="597" width="1.6" height="15.0" fill="rgb(234,33,31)" rx="2" ry="2" />
<text  x="306.14" y="607.5" ></text>
</g>
<g >
<title>at::AutoNonVariableTypeMode::AutoNonVariableTypeMode (4 samples, 0.18%)</title><rect x="688.0" y="581" width="2.1" height="15.0" fill="rgb(251,19,3)" rx="2" ry="2" />
<text  x="691.00" y="591.5" ></text>
</g>
<g >
<title>c10::either&lt;c10::OperatorName, c10::FunctionSchema&gt;::either (1 samples, 0.04%)</title><rect x="210.9" y="485" width="0.5" height="15.0" fill="rgb(246,213,16)" rx="2" ry="2" />
<text  x="213.91" y="495.5" ></text>
</g>
<g >
<title>c10::Dispatcher::singleton@plt (1 samples, 0.04%)</title><rect x="1102.5" y="549" width="0.6" height="15.0" fill="rgb(218,183,14)" rx="2" ry="2" />
<text  x="1105.53" y="559.5" ></text>
</g>
<g >
<title>c10::ObservedOperators::isObserved (2 samples, 0.09%)</title><rect x="181.2" y="389" width="1.1" height="15.0" fill="rgb(252,215,32)" rx="2" ry="2" />
<text  x="184.22" y="399.5" ></text>
</g>
<g >
<title>c10::impl::AnnotatedKernel::AnnotatedKernel (1 samples, 0.04%)</title><rect x="259.7" y="517" width="0.5" height="15.0" fill="rgb(217,226,9)" rx="2" ry="2" />
<text  x="262.68" y="527.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;c10::FunctionSchema, std::default_delete&lt;c10::FunctionSchema&gt; &gt;::release (1 samples, 0.04%)</title><rect x="207.2" y="501" width="0.5" height="15.0" fill="rgb(243,172,27)" rx="2" ry="2" />
<text  x="210.20" y="511.5" ></text>
</g>
<g >
<title>tcache_get (2 samples, 0.09%)</title><rect x="448.9" y="261" width="1.1" height="15.0" fill="rgb(248,159,14)" rx="2" ry="2" />
<text  x="451.92" y="271.5" ></text>
</g>
<g >
<title>mem_cgroup_update_lru_size (1 samples, 0.04%)</title><rect x="1179.9" y="469" width="0.6" height="15.0" fill="rgb(244,217,41)" rx="2" ry="2" />
<text  x="1182.93" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.13%)</title><rect x="1106.8" y="485" width="1.6" height="15.0" fill="rgb(237,109,29)" rx="2" ry="2" />
<text  x="1109.77" y="495.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.09%)</title><rect x="1008.2" y="229" width="1.0" height="15.0" fill="rgb(208,63,53)" rx="2" ry="2" />
<text  x="1011.18" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;torch::jit::Source&gt; &gt;::construct&lt;torch::jit::Source, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.04%)</title><rect x="252.8" y="389" width="0.5" height="15.0" fill="rgb(252,18,8)" rx="2" ry="2" />
<text  x="255.79" y="399.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (1 samples, 0.04%)</title><rect x="255.4" y="389" width="0.6" height="15.0" fill="rgb(207,218,7)" rx="2" ry="2" />
<text  x="258.44" y="399.5" ></text>
</g>
<g >
<title>c10::OperatorName::setNamespaceIfNotSet (1 samples, 0.04%)</title><rect x="177.5" y="533" width="0.5" height="15.0" fill="rgb(231,80,38)" rx="2" ry="2" />
<text  x="180.51" y="543.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseType (14 samples, 0.63%)</title><rect x="232.6" y="389" width="7.5" height="15.0" fill="rgb(240,197,38)" rx="2" ry="2" />
<text  x="235.64" y="399.5" ></text>
</g>
<g >
<title>c10::ArrayRef&lt;long&gt;::ArrayRef&lt;void&gt; (1 samples, 0.04%)</title><rect x="794.5" y="245" width="0.6" height="15.0" fill="rgb(210,10,4)" rx="2" ry="2" />
<text  x="797.55" y="255.5" ></text>
</g>
<g >
<title>c10::Device::validate (2 samples, 0.09%)</title><rect x="49.8" y="677" width="1.0" height="15.0" fill="rgb(247,10,38)" rx="2" ry="2" />
<text  x="52.76" y="687.5" ></text>
</g>
<g >
<title>torch::jit::parseName (2 samples, 0.09%)</title><rect x="188.1" y="533" width="1.1" height="15.0" fill="rgb(205,212,14)" rx="2" ry="2" />
<text  x="191.11" y="543.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.04%)</title><rect x="226.3" y="245" width="0.5" height="15.0" fill="rgb(254,35,54)" rx="2" ry="2" />
<text  x="229.28" y="255.5" ></text>
</g>
<g >
<title>__x64_sys_execve (3 samples, 0.13%)</title><rect x="1168.3" y="661" width="1.6" height="15.0" fill="rgb(218,184,16)" rx="2" ry="2" />
<text  x="1171.27" y="671.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="221.5" y="389" width="0.5" height="15.0" fill="rgb(245,89,7)" rx="2" ry="2" />
<text  x="224.51" y="399.5" ></text>
</g>
<g >
<title>torch::Library::_impl (5 samples, 0.22%)</title><rect x="186.5" y="549" width="2.7" height="15.0" fill="rgb(229,84,40)" rx="2" ry="2" />
<text  x="189.52" y="559.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.04%)</title><rect x="276.6" y="373" width="0.6" height="15.0" fill="rgb(235,71,3)" rx="2" ry="2" />
<text  x="279.64" y="383.5" ></text>
</g>
<g >
<title>torch::jit::parseName (1 samples, 0.04%)</title><rect x="258.6" y="533" width="0.5" height="15.0" fill="rgb(215,135,46)" rx="2" ry="2" />
<text  x="261.62" y="543.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::OperatorEntry (3 samples, 0.13%)</title><rect x="217.3" y="405" width="1.6" height="15.0" fill="rgb(233,143,41)" rx="2" ry="2" />
<text  x="220.27" y="415.5" ></text>
</g>
<g >
<title>c10::str&lt;char [15], char const*, char [2], unsigned int&gt; (1 samples, 0.04%)</title><rect x="206.7" y="501" width="0.5" height="15.0" fill="rgb(243,228,9)" rx="2" ry="2" />
<text  x="209.67" y="511.5" ></text>
</g>
<g >
<title>c10::either&lt;c10::FunctionSchema, torch::jit::Operator::UnparsedFunctionSchema&gt;::~either (1 samples, 0.04%)</title><rect x="325.9" y="293" width="0.6" height="15.0" fill="rgb(226,192,17)" rx="2" ry="2" />
<text  x="328.94" y="303.5" ></text>
</g>
<g >
<title>createArgumentVector (1 samples, 0.04%)</title><rect x="257.0" y="469" width="0.6" height="15.0" fill="rgb(250,7,53)" rx="2" ry="2" />
<text  x="260.03" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.04%)</title><rect x="109.7" y="645" width="0.5" height="15.0" fill="rgb(227,185,20)" rx="2" ry="2" />
<text  x="112.66" y="655.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;void, void  (1 samples, 0.04%)</title><rect x="448.4" y="245" width="0.5" height="15.0" fill="rgb(234,127,41)" rx="2" ry="2" />
<text  x="451.39" y="255.5" ></text>
</g>
<g >
<title>[libcublasLt.so.11.1.0.229] (1 samples, 0.04%)</title><rect x="304.7" y="581" width="0.6" height="15.0" fill="rgb(208,215,38)" rx="2" ry="2" />
<text  x="307.73" y="591.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.04%)</title><rect x="189.2" y="437" width="0.5" height="15.0" fill="rgb(243,177,10)" rx="2" ry="2" />
<text  x="192.17" y="447.5" ></text>
</g>
<g >
<title>at::impl::variable_excluded_from_dispatch (4 samples, 0.18%)</title><rect x="547.5" y="325" width="2.1" height="15.0" fill="rgb(222,17,45)" rx="2" ry="2" />
<text  x="550.52" y="335.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (77 samples, 3.46%)</title><rect x="833.2" y="581" width="40.9" height="15.0" fill="rgb(233,198,1)" rx="2" ry="2" />
<text  x="836.24" y="591.5" >c10..</text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (4 samples, 0.18%)</title><rect x="104.9" y="677" width="2.1" height="15.0" fill="rgb(251,148,2)" rx="2" ry="2" />
<text  x="107.89" y="687.5" ></text>
</g>
<g >
<title>c10::demangle_type&lt;caffe2::VariableLengthSequencePaddingOp&lt;float, caffe2::CPUContext&gt; &gt; (1 samples, 0.04%)</title><rect x="277.7" y="613" width="0.5" height="15.0" fill="rgb(235,208,17)" rx="2" ry="2" />
<text  x="280.70" y="623.5" ></text>
</g>
<g >
<title>c10::Dispatcher::callWithDispatchKey&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::TensorOptions const&amp;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (4 samples, 0.18%)</title><rect x="50.8" y="677" width="2.1" height="15.0" fill="rgb(247,203,5)" rx="2" ry="2" />
<text  x="53.82" y="687.5" ></text>
</g>
<g >
<title>c10::DefaultCPUAllocator::ReportAndDelete (14 samples, 0.63%)</title><rect x="625.4" y="389" width="7.5" height="15.0" fill="rgb(205,60,24)" rx="2" ry="2" />
<text  x="628.44" y="399.5" ></text>
</g>
<g >
<title>c10::SmallVectorBase::SmallVectorBase (3 samples, 0.13%)</title><rect x="714.0" y="325" width="1.6" height="15.0" fill="rgb(242,166,20)" rx="2" ry="2" />
<text  x="716.97" y="335.5" ></text>
</g>
<g >
<title>torch::Library::impl_UNBOXED&lt;char const*, std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;&gt;  (1 samples, 0.04%)</title><rect x="201.9" y="565" width="0.5" height="15.0" fill="rgb(250,95,51)" rx="2" ry="2" />
<text  x="204.90" y="575.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash (1 samples, 0.04%)</title><rect x="216.2" y="341" width="0.5" height="15.0" fill="rgb(224,102,5)" rx="2" ry="2" />
<text  x="219.21" y="351.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="1108.9" y="469" width="0.5" height="15.0" fill="rgb(216,33,8)" rx="2" ry="2" />
<text  x="1111.89" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::~_Hashtable (1 samples, 0.04%)</title><rect x="217.8" y="357" width="0.5" height="15.0" fill="rgb(236,100,24)" rx="2" ry="2" />
<text  x="220.80" y="367.5" ></text>
</g>
<g >
<title>c10::TensorImpl::TensorImpl (5 samples, 0.22%)</title><rect x="542.2" y="261" width="2.7" height="15.0" fill="rgb(219,166,37)" rx="2" ry="2" />
<text  x="545.22" y="271.5" ></text>
</g>
<g >
<title>[libcublas.so.11.1.0.229] (2 samples, 0.09%)</title><rect x="303.1" y="565" width="1.1" height="15.0" fill="rgb(239,193,49)" rx="2" ry="2" />
<text  x="306.14" y="575.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;void, void  (18 samples, 0.81%)</title><rect x="623.3" y="405" width="9.6" height="15.0" fill="rgb(231,189,12)" rx="2" ry="2" />
<text  x="626.32" y="415.5" ></text>
</g>
<g >
<title>std::default_delete&lt;c10::AutogradMetaInterface&gt;::operator (9 samples, 0.40%)</title><rect x="469.6" y="549" width="4.8" height="15.0" fill="rgb(208,187,47)" rx="2" ry="2" />
<text  x="472.60" y="559.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (3 samples, 0.13%)</title><rect x="282.5" y="581" width="1.6" height="15.0" fill="rgb(233,20,28)" rx="2" ry="2" />
<text  x="285.47" y="591.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;::basic_ostream (1 samples, 0.04%)</title><rect x="206.7" y="453" width="0.5" height="15.0" fill="rgb(244,189,43)" rx="2" ry="2" />
<text  x="209.67" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;torch::jit::Token, std::allocator&lt;torch::jit::Token&gt; &gt;::erase (1 samples, 0.04%)</title><rect x="281.9" y="421" width="0.6" height="15.0" fill="rgb(229,198,38)" rx="2" ry="2" />
<text  x="284.94" y="431.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.04%)</title><rect x="276.6" y="325" width="0.6" height="15.0" fill="rgb(215,104,46)" rx="2" ry="2" />
<text  x="279.64" y="335.5" ></text>
</g>
<g >
<title>c10::demangle_type&lt;caffe2::ExpandGradientOp&lt;caffe2::TensorTypes&lt;int, long, float, double&gt;, caffe2::CUDAContext&gt; &gt; (1 samples, 0.04%)</title><rect x="261.8" y="597" width="0.5" height="15.0" fill="rgb(221,219,34)" rx="2" ry="2" />
<text  x="264.80" y="607.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.04%)</title><rect x="284.6" y="405" width="0.5" height="15.0" fill="rgb(247,216,35)" rx="2" ry="2" />
<text  x="287.59" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::shared_ptr&lt;torch::jit::Operator&gt; &gt; &gt;::construct&lt;std::shared_ptr&lt;torch::jit::Operator&gt;, std::shared_ptr&lt;torch::jit::Operator&gt; &gt; (1 samples, 0.04%)</title><rect x="297.3" y="405" width="0.5" height="15.0" fill="rgb(232,111,1)" rx="2" ry="2" />
<text  x="300.31" y="415.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.04%)</title><rect x="276.1" y="405" width="0.5" height="15.0" fill="rgb(249,69,31)" rx="2" ry="2" />
<text  x="279.11" y="415.5" ></text>
</g>
<g >
<title>parseDeclaration (1 samples, 0.04%)</title><rect x="281.9" y="533" width="0.6" height="15.0" fill="rgb(253,222,45)" rx="2" ry="2" />
<text  x="284.94" y="543.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (1 samples, 0.04%)</title><rect x="284.6" y="341" width="0.5" height="15.0" fill="rgb(215,45,33)" rx="2" ry="2" />
<text  x="287.59" y="351.5" ></text>
</g>
<g >
<title>c10::TensorImpl::empty_tensor_restride (4 samples, 0.18%)</title><rect x="575.1" y="325" width="2.1" height="15.0" fill="rgb(209,68,16)" rx="2" ry="2" />
<text  x="578.09" y="335.5" ></text>
</g>
<g >
<title>torch::jit::parseName (2 samples, 0.09%)</title><rect x="248.5" y="533" width="1.1" height="15.0" fill="rgb(215,55,11)" rx="2" ry="2" />
<text  x="251.54" y="543.5" ></text>
</g>
<g >
<title>c10::Registerer&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unique_ptr&lt;caffe2::OperatorBase, std::default_delete&lt;caffe2::OperatorBase&gt; &gt;, caffe2::OperatorDef const&amp;, caffe2::Workspace*&gt;::Registerer (3 samples, 0.13%)</title><rect x="274.0" y="613" width="1.6" height="15.0" fill="rgb(214,193,39)" rx="2" ry="2" />
<text  x="276.99" y="623.5" ></text>
</g>
<g >
<title>std::unordered_set&lt;c10::Symbol, std::hash&lt;c10::Symbol&gt;, std::equal_to&lt;c10::Symbol&gt;, std::allocator&lt;c10::Symbol&gt; &gt;::unordered_set (1 samples, 0.04%)</title><rect x="236.4" y="341" width="0.5" height="15.0" fill="rgb(244,116,33)" rx="2" ry="2" />
<text  x="239.35" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;c10::Dispatcher::OperatorDef&gt; &gt; &gt;::destroy&lt;c10::Dispatcher::OperatorDef&gt; (1 samples, 0.04%)</title><rect x="321.7" y="373" width="0.5" height="15.0" fill="rgb(248,188,28)" rx="2" ry="2" />
<text  x="324.70" y="383.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.04%)</title><rect x="111.2" y="469" width="0.6" height="15.0" fill="rgb(223,64,28)" rx="2" ry="2" />
<text  x="114.25" y="479.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (3 samples, 0.13%)</title><rect x="739.9" y="245" width="1.6" height="15.0" fill="rgb(237,219,48)" rx="2" ry="2" />
<text  x="742.95" y="255.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::expect (1 samples, 0.04%)</title><rect x="198.2" y="453" width="0.5" height="15.0" fill="rgb(229,182,2)" rx="2" ry="2" />
<text  x="201.19" y="463.5" ></text>
</g>
<g >
<title>c10::FunctionSchema::FunctionSchema (2 samples, 0.09%)</title><rect x="287.2" y="581" width="1.1" height="15.0" fill="rgb(254,138,12)" rx="2" ry="2" />
<text  x="290.24" y="591.5" ></text>
</g>
<g >
<title>__new_exitfn (1 samples, 0.04%)</title><rect x="268.7" y="565" width="0.5" height="15.0" fill="rgb(208,72,6)" rx="2" ry="2" />
<text  x="271.69" y="575.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (1 samples, 0.04%)</title><rect x="323.8" y="389" width="0.5" height="15.0" fill="rgb(250,83,47)" rx="2" ry="2" />
<text  x="326.82" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::reserve (1 samples, 0.04%)</title><rect x="260.2" y="453" width="0.5" height="15.0" fill="rgb(224,136,51)" rx="2" ry="2" />
<text  x="263.21" y="463.5" ></text>
</g>
<g >
<title>sysmalloc (1 samples, 0.04%)</title><rect x="231.1" y="277" width="0.5" height="15.0" fill="rgb(216,48,53)" rx="2" ry="2" />
<text  x="234.05" y="287.5" ></text>
</g>
<g >
<title>__GI___libc_free (2 samples, 0.09%)</title><rect x="613.3" y="565" width="1.0" height="15.0" fill="rgb(253,51,54)" rx="2" ry="2" />
<text  x="616.25" y="575.5" ></text>
</g>
<g >
<title>malloc_consolidate (1 samples, 0.04%)</title><rect x="321.7" y="213" width="0.5" height="15.0" fill="rgb(236,79,52)" rx="2" ry="2" />
<text  x="324.70" y="223.5" ></text>
</g>
<g >
<title>[libc10.so] (3 samples, 0.13%)</title><rect x="101.2" y="677" width="1.6" height="15.0" fill="rgb(217,120,54)" rx="2" ry="2" />
<text  x="104.18" y="687.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="226.3" y="261" width="0.5" height="15.0" fill="rgb(207,1,35)" rx="2" ry="2" />
<text  x="229.28" y="271.5" ></text>
</g>
<g >
<title>ska::flat_hash_map&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt;, std::hash&lt;c10::DispatchKey&gt;, std::equal_to&lt;c10::DispatchKey&gt;, std::allocator&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt; &gt; &gt;::~flat_hash_map (1 samples, 0.04%)</title><rect x="321.7" y="309" width="0.5" height="15.0" fill="rgb(244,194,11)" rx="2" ry="2" />
<text  x="324.70" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::RegistrationHandleRAII, std::allocator&lt;c10::RegistrationHandleRAII&gt; &gt;::emplace_back&lt;c10::RegistrationHandleRAII&gt; (1 samples, 0.04%)</title><rect x="187.6" y="533" width="0.5" height="15.0" fill="rgb(247,173,15)" rx="2" ry="2" />
<text  x="190.58" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.04%)</title><rect x="276.6" y="581" width="0.6" height="15.0" fill="rgb(215,61,20)" rx="2" ry="2" />
<text  x="279.64" y="591.5" ></text>
</g>
<g >
<title>onnx_torch::OpSet_PyTorch_ver1::ForEachSchema (1 samples, 0.04%)</title><rect x="269.2" y="549" width="0.5" height="15.0" fill="rgb(215,220,36)" rx="2" ry="2" />
<text  x="272.22" y="559.5" ></text>
</g>
<g >
<title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (132 samples, 5.93%)</title><rect x="525.3" y="501" width="69.9" height="15.0" fill="rgb(252,87,48)" rx="2" ry="2" />
<text  x="528.26" y="511.5" >c10::im..</text>
</g>
<g >
<title>torch::jit::SharedParserData::match (1 samples, 0.04%)</title><rect x="169.6" y="405" width="0.5" height="15.0" fill="rgb(230,60,29)" rx="2" ry="2" />
<text  x="172.56" y="415.5" ></text>
</g>
<g >
<title>c10::ThreadLocalDebugInfo::get (1 samples, 0.04%)</title><rect x="100.1" y="677" width="0.5" height="15.0" fill="rgb(230,20,15)" rx="2" ry="2" />
<text  x="103.12" y="687.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, at::Tensor  (3 samples, 0.13%)</title><rect x="176.5" y="565" width="1.5" height="15.0" fill="rgb(239,174,3)" rx="2" ry="2" />
<text  x="179.45" y="575.5" ></text>
</g>
<g >
<title>at::CPUType::empty_memory_format (113 samples, 5.08%)</title><rect x="534.3" y="357" width="59.9" height="15.0" fill="rgb(221,91,17)" rx="2" ry="2" />
<text  x="537.27" y="367.5" >at::CP..</text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.04%)</title><rect x="213.6" y="485" width="0.5" height="15.0" fill="rgb(209,116,54)" rx="2" ry="2" />
<text  x="216.56" y="495.5" ></text>
</g>
<g >
<title>at::prod_intlist (1 samples, 0.04%)</title><rect x="1000.8" y="309" width="0.5" height="15.0" fill="rgb(216,138,11)" rx="2" ry="2" />
<text  x="1003.75" y="319.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (1 samples, 0.04%)</title><rect x="199.2" y="533" width="0.6" height="15.0" fill="rgb(243,178,3)" rx="2" ry="2" />
<text  x="202.25" y="543.5" ></text>
</g>
<g >
<title>torch::detail::TorchLibraryInit::TorchLibraryInit (2 samples, 0.09%)</title><rect x="195.0" y="597" width="1.1" height="15.0" fill="rgb(229,87,43)" rx="2" ry="2" />
<text  x="198.00" y="607.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.04%)</title><rect x="179.6" y="485" width="0.6" height="15.0" fill="rgb(214,101,52)" rx="2" ry="2" />
<text  x="182.63" y="495.5" ></text>
</g>
<g >
<title>c10::operator== (1 samples, 0.04%)</title><rect x="310.0" y="341" width="0.6" height="15.0" fill="rgb(239,65,3)" rx="2" ry="2" />
<text  x="313.04" y="351.5" ></text>
</g>
<g >
<title>do_user_addr_fault (9 samples, 0.40%)</title><rect x="1150.8" y="517" width="4.7" height="15.0" fill="rgb(214,18,16)" rx="2" ry="2" />
<text  x="1153.77" y="527.5" ></text>
</g>
<g >
<title>c10::SmallVectorBase::SmallVectorBase (1 samples, 0.04%)</title><rect x="532.1" y="341" width="0.6" height="15.0" fill="rgb(229,78,6)" rx="2" ry="2" />
<text  x="535.15" y="351.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.04%)</title><rect x="188.6" y="453" width="0.6" height="15.0" fill="rgb(209,179,9)" rx="2" ry="2" />
<text  x="191.64" y="463.5" ></text>
</g>
<g >
<title>torch::jit::Token::Token (1 samples, 0.04%)</title><rect x="266.6" y="373" width="0.5" height="15.0" fill="rgb(229,173,42)" rx="2" ry="2" />
<text  x="269.57" y="383.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::MemoryFormat&gt;::optional (1 samples, 0.04%)</title><rect x="821.1" y="549" width="0.5" height="15.0" fill="rgb(247,119,6)" rx="2" ry="2" />
<text  x="824.05" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (1 samples, 0.04%)</title><rect x="272.9" y="565" width="0.6" height="15.0" fill="rgb(239,192,18)" rx="2" ry="2" />
<text  x="275.93" y="575.5" ></text>
</g>
<g >
<title>c10::guts::to_string&lt;unsigned long&gt; (1 samples, 0.04%)</title><rect x="285.7" y="469" width="0.5" height="15.0" fill="rgb(208,110,51)" rx="2" ry="2" />
<text  x="288.65" y="479.5" ></text>
</g>
<g >
<title>operator (1 samples, 0.04%)</title><rect x="250.1" y="469" width="0.6" height="15.0" fill="rgb(236,90,28)" rx="2" ry="2" />
<text  x="253.13" y="479.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.04%)</title><rect x="113.4" y="517" width="0.5" height="15.0" fill="rgb(211,208,13)" rx="2" ry="2" />
<text  x="116.37" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::RegistryPriority&gt;, true&gt; &gt; &gt;::allocate (1 samples, 0.04%)</title><rect x="274.5" y="517" width="0.5" height="15.0" fill="rgb(250,87,30)" rx="2" ry="2" />
<text  x="277.52" y="527.5" ></text>
</g>
<g >
<title>c10::DispatchKeySet::highestPriorityTypeId (1 samples, 0.04%)</title><rect x="697.5" y="485" width="0.6" height="15.0" fill="rgb(212,169,26)" rx="2" ry="2" />
<text  x="700.54" y="495.5" ></text>
</g>
<g >
<title>at::RecordFunction::RecordFunction@plt (1 samples, 0.04%)</title><rect x="533.2" y="421" width="0.5" height="15.0" fill="rgb(245,27,15)" rx="2" ry="2" />
<text  x="536.21" y="431.5" ></text>
</g>
<g >
<title>at::hasCallbacks (2 samples, 0.09%)</title><rect x="531.1" y="389" width="1.0" height="15.0" fill="rgb(217,83,22)" rx="2" ry="2" />
<text  x="534.09" y="399.5" ></text>
</g>
<g >
<title>hasThreadLocalCallbacks (1 samples, 0.04%)</title><rect x="47.6" y="645" width="0.6" height="15.0" fill="rgb(225,45,16)" rx="2" ry="2" />
<text  x="50.64" y="655.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="1106.2" y="501" width="0.6" height="15.0" fill="rgb(208,157,51)" rx="2" ry="2" />
<text  x="1109.24" y="511.5" ></text>
</g>
<g >
<title>llvm::detail::LeadingZerosCounter&lt;unsigned long, 8ul&gt;::count (1 samples, 0.04%)</title><rect x="520.5" y="469" width="0.5" height="15.0" fill="rgb(216,33,19)" rx="2" ry="2" />
<text  x="523.49" y="479.5" ></text>
</g>
<g >
<title>c10::DispatchKeyExtractor::registerSchema (2 samples, 0.09%)</title><rect x="219.4" y="501" width="1.0" height="15.0" fill="rgb(211,130,46)" rx="2" ry="2" />
<text  x="222.39" y="511.5" ></text>
</g>
<g >
<title>__mod_node_page_state (2 samples, 0.09%)</title><rect x="1176.7" y="485" width="1.1" height="15.0" fill="rgb(211,0,39)" rx="2" ry="2" />
<text  x="1179.75" y="495.5" ></text>
</g>
<g >
<title>__brk (1 samples, 0.04%)</title><rect x="186.0" y="277" width="0.5" height="15.0" fill="rgb(213,189,3)" rx="2" ry="2" />
<text  x="188.99" y="287.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.04%)</title><rect x="209.8" y="421" width="0.6" height="15.0" fill="rgb(212,42,7)" rx="2" ry="2" />
<text  x="212.85" y="431.5" ></text>
</g>
<g >
<title>_int_free (2 samples, 0.09%)</title><rect x="467.5" y="405" width="1.0" height="15.0" fill="rgb(245,2,23)" rx="2" ry="2" />
<text  x="470.48" y="415.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::createFunctionSchemaFromTraitsFlattenedReturns&lt;c10::guts::function_traits&lt;std::tuple&lt;at::Tensor, at::Tensor&gt;  (1 samples, 0.04%)</title><rect x="186.0" y="501" width="0.5" height="15.0" fill="rgb(212,126,20)" rx="2" ry="2" />
<text  x="188.99" y="511.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.04%)</title><rect x="181.2" y="197" width="0.6" height="15.0" fill="rgb(235,223,10)" rx="2" ry="2" />
<text  x="184.22" y="207.5" ></text>
</g>
<g >
<title>__posix_memalign (33 samples, 1.48%)</title><rect x="556.0" y="293" width="17.5" height="15.0" fill="rgb(224,76,50)" rx="2" ry="2" />
<text  x="559.00" y="303.5" ></text>
</g>
<g >
<title>torch::CppFunction::CppFunction&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor&amp;  (1 samples, 0.04%)</title><rect x="196.6" y="549" width="0.5" height="15.0" fill="rgb(205,38,46)" rx="2" ry="2" />
<text  x="199.59" y="559.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.04%)</title><rect x="269.7" y="581" width="0.6" height="15.0" fill="rgb(241,98,4)" rx="2" ry="2" />
<text  x="272.75" y="591.5" ></text>
</g>
<g >
<title>torch::dispatch&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor&amp;  (1 samples, 0.04%)</title><rect x="196.6" y="565" width="0.5" height="15.0" fill="rgb(241,111,48)" rx="2" ry="2" />
<text  x="199.59" y="575.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (1 samples, 0.04%)</title><rect x="702.8" y="469" width="0.6" height="15.0" fill="rgb(221,185,10)" rx="2" ry="2" />
<text  x="705.84" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::DescriptorProto::_InternalParse (2 samples, 0.09%)</title><rect x="295.7" y="501" width="1.1" height="15.0" fill="rgb(245,208,41)" rx="2" ry="2" />
<text  x="298.72" y="511.5" ></text>
</g>
<g >
<title>write&lt;c10::Dispatcher::findOrRegisterName_ (1 samples, 0.04%)</title><rect x="182.3" y="501" width="0.5" height="15.0" fill="rgb(237,119,1)" rx="2" ry="2" />
<text  x="185.28" y="511.5" ></text>
</g>
<g >
<title>__GI___libc_free (2 samples, 0.09%)</title><rect x="869.3" y="485" width="1.1" height="15.0" fill="rgb(248,214,24)" rx="2" ry="2" />
<text  x="872.29" y="495.5" ></text>
</g>
<g >
<title>_int_free (9 samples, 0.40%)</title><rect x="642.4" y="485" width="4.8" height="15.0" fill="rgb(237,41,27)" rx="2" ry="2" />
<text  x="645.41" y="495.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.04%)</title><rect x="269.2" y="373" width="0.5" height="15.0" fill="rgb(209,228,52)" rx="2" ry="2" />
<text  x="272.22" y="383.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::expect (2 samples, 0.09%)</title><rect x="289.4" y="469" width="1.0" height="15.0" fill="rgb(249,16,43)" rx="2" ry="2" />
<text  x="292.36" y="479.5" ></text>
</g>
<g >
<title>__static_initialization_and_destruction_0 (74 samples, 3.32%)</title><rect x="210.4" y="613" width="39.2" height="15.0" fill="rgb(211,193,54)" rx="2" ry="2" />
<text  x="213.38" y="623.5" >__s..</text>
</g>
<g >
<title>operator new (2 samples, 0.09%)</title><rect x="448.9" y="293" width="1.1" height="15.0" fill="rgb(224,166,31)" rx="2" ry="2" />
<text  x="451.92" y="303.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::impl::CppSignature&gt;::optional&lt;c10::impl::CppSignature, false&gt; (1 samples, 0.04%)</title><rect x="180.2" y="549" width="0.5" height="15.0" fill="rgb(229,50,51)" rx="2" ry="2" />
<text  x="183.16" y="559.5" ></text>
</g>
<g >
<title>torch::Library::~Library (25 samples, 1.12%)</title><rect x="312.2" y="565" width="13.2" height="15.0" fill="rgb(225,202,43)" rx="2" ry="2" />
<text  x="315.16" y="575.5" ></text>
</g>
<g >
<title>change_pte_range (1 samples, 0.04%)</title><rect x="1108.4" y="389" width="0.5" height="15.0" fill="rgb(214,18,51)" rx="2" ry="2" />
<text  x="1111.36" y="399.5" ></text>
</g>
<g >
<title>TORCH_LIBRARY_IMPL_init_aten_Tracer (1 samples, 0.04%)</title><rect x="207.2" y="581" width="0.5" height="15.0" fill="rgb(241,188,14)" rx="2" ry="2" />
<text  x="210.20" y="591.5" ></text>
</g>
<g >
<title>_int_free (13 samples, 0.58%)</title><rect x="25.4" y="677" width="6.9" height="15.0" fill="rgb(221,39,43)" rx="2" ry="2" />
<text  x="28.37" y="687.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::detail::intrusive_target_default_null_type&lt;c10::TensorImpl&gt; &gt;::make&lt;c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;, c10::DispatchKey, caffe2::TypeMeta&amp;&gt; (8 samples, 0.36%)</title><rect x="397.0" y="293" width="4.2" height="15.0" fill="rgb(223,22,17)" rx="2" ry="2" />
<text  x="399.97" y="303.5" ></text>
</g>
<g >
<title>ska::flat_hash_map&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt;, std::hash&lt;c10::DispatchKey&gt;, std::equal_to&lt;c10::DispatchKey&gt;, std::allocator&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt; &gt; &gt;::~flat_hash_map (3 samples, 0.13%)</title><rect x="313.7" y="277" width="1.6" height="15.0" fill="rgb(227,13,13)" rx="2" ry="2" />
<text  x="316.75" y="287.5" ></text>
</g>
<g >
<title>TORCH_LIBRARY_IMPL_init_aten_Autograd (3 samples, 0.13%)</title><rect x="253.3" y="581" width="1.6" height="15.0" fill="rgb(223,144,50)" rx="2" ry="2" />
<text  x="256.32" y="591.5" ></text>
</g>
<g >
<title>c10::alloc_cpu (46 samples, 2.07%)</title><rect x="753.7" y="293" width="24.4" height="15.0" fill="rgb(234,163,17)" rx="2" ry="2" />
<text  x="756.73" y="303.5" >c..</text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (1 samples, 0.04%)</title><rect x="218.9" y="357" width="0.5" height="15.0" fill="rgb(252,167,36)" rx="2" ry="2" />
<text  x="221.86" y="367.5" ></text>
</g>
<g >
<title>count (1 samples, 0.04%)</title><rect x="131.9" y="661" width="0.6" height="15.0" fill="rgb(228,190,48)" rx="2" ry="2" />
<text  x="134.92" y="671.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.04%)</title><rect x="205.6" y="517" width="0.5" height="15.0" fill="rgb(237,117,37)" rx="2" ry="2" />
<text  x="208.61" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::shared_ptr&lt;torch::jit::Operator&gt; &gt;::construct&lt;std::shared_ptr&lt;torch::jit::Operator&gt;, std::shared_ptr&lt;torch::jit::Operator&gt; &gt; (1 samples, 0.04%)</title><rect x="297.3" y="389" width="0.5" height="15.0" fill="rgb(217,99,18)" rx="2" ry="2" />
<text  x="300.31" y="399.5" ></text>
</g>
<g >
<title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;, c10::DispatchKey, std::hash&lt;c10::DispatchKey&gt;, ska::detailv3::KeyOrValueHasher&lt;c10::DispatchKey, std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;, std::hash&lt;c10::DispatchKey&gt; &gt;, std::equal_to&lt;c10::DispatchKey&gt;, ska::detailv3::KeyOrValueEquality&lt;c10::DispatchKey, std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;, std::equal_to&lt;c10::DispatchKey&gt; &gt;, std::allocator&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt; &gt; &gt; &gt;::emplace_new_key&lt;c10::DispatchKey const&amp;, ska::flat_hash_map&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt;, std::hash&lt;c10::DispatchKey&gt;, std::equal_to&lt;c10::DispatchKey&gt;, std::allocator&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt; &gt; &gt;::convertible_to_value&gt; (1 samples, 0.04%)</title><rect x="258.1" y="469" width="0.5" height="15.0" fill="rgb(230,22,2)" rx="2" ry="2" />
<text  x="261.09" y="479.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.04%)</title><rect x="259.1" y="533" width="0.6" height="15.0" fill="rgb(224,212,3)" rx="2" ry="2" />
<text  x="262.15" y="543.5" ></text>
</g>
<g >
<title>[microbenchmark] (1 samples, 0.04%)</title><rect x="239.5" y="245" width="0.6" height="15.0" fill="rgb(207,141,50)" rx="2" ry="2" />
<text  x="242.53" y="255.5" ></text>
</g>
<g >
<title>torch::Library::_impl (3 samples, 0.13%)</title><rect x="253.3" y="549" width="1.6" height="15.0" fill="rgb(213,149,52)" rx="2" ry="2" />
<text  x="256.32" y="559.5" ></text>
</g>
<g >
<title>free_unref_page_prepare.part.0 (1 samples, 0.04%)</title><rect x="182.3" y="213" width="0.5" height="15.0" fill="rgb(213,128,0)" rx="2" ry="2" />
<text  x="185.28" y="223.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.04%)</title><rect x="851.8" y="325" width="0.5" height="15.0" fill="rgb(253,63,21)" rx="2" ry="2" />
<text  x="854.80" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt; &gt;::_M_insert_node@plt (1 samples, 0.04%)</title><rect x="279.8" y="565" width="0.6" height="15.0" fill="rgb(206,204,3)" rx="2" ry="2" />
<text  x="282.82" y="575.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.04%)</title><rect x="214.1" y="549" width="0.5" height="15.0" fill="rgb(231,228,7)" rx="2" ry="2" />
<text  x="217.09" y="559.5" ></text>
</g>
<g >
<title>std::array&lt;c10::KernelFunction, 38ul&gt;::~array (2 samples, 0.09%)</title><rect x="315.3" y="277" width="1.1" height="15.0" fill="rgb(216,89,6)" rx="2" ry="2" />
<text  x="318.34" y="287.5" ></text>
</g>
<g >
<title>torch::autograd::AutogradMeta::~AutogradMeta (6 samples, 0.27%)</title><rect x="861.3" y="517" width="3.2" height="15.0" fill="rgb(242,226,46)" rx="2" ry="2" />
<text  x="864.34" y="527.5" ></text>
</g>
<g >
<title>parseDeclaration (4 samples, 0.18%)</title><rect x="111.2" y="597" width="2.2" height="15.0" fill="rgb(211,195,52)" rx="2" ry="2" />
<text  x="114.25" y="607.5" ></text>
</g>
<g >
<title>c10::TensorOptions::dtype_opt (3 samples, 0.13%)</title><rect x="445.2" y="309" width="1.6" height="15.0" fill="rgb(252,148,31)" rx="2" ry="2" />
<text  x="448.21" y="319.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;c10::IValue*, c10::IValue&gt; (1 samples, 0.04%)</title><rect x="533.7" y="389" width="0.6" height="15.0" fill="rgb(244,171,24)" rx="2" ry="2" />
<text  x="536.74" y="399.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;c10::ThreadLocalDebugInfo,  (3 samples, 0.13%)</title><rect x="630.7" y="309" width="1.6" height="15.0" fill="rgb(253,214,7)" rx="2" ry="2" />
<text  x="633.75" y="319.5" ></text>
</g>
<g >
<title>c10::ThreadLocalDebugInfo::get (2 samples, 0.09%)</title><rect x="552.8" y="277" width="1.1" height="15.0" fill="rgb(244,89,43)" rx="2" ry="2" />
<text  x="555.82" y="287.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (1 samples, 0.04%)</title><rect x="252.3" y="405" width="0.5" height="15.0" fill="rgb(222,78,6)" rx="2" ry="2" />
<text  x="255.26" y="415.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="944.6" y="437" width="0.5" height="15.0" fill="rgb(251,185,37)" rx="2" ry="2" />
<text  x="947.56" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;c10::Symbol, c10::Symbol, std::allocator&lt;c10::Symbol&gt;, std::__detail::_Identity, std::equal_to&lt;c10::Symbol&gt;, std::hash&lt;c10::Symbol&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::~_Hashtable@plt (1 samples, 0.04%)</title><rect x="232.1" y="341" width="0.5" height="15.0" fill="rgb(206,229,36)" rx="2" ry="2" />
<text  x="235.11" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::either&lt;c10::OperatorName, c10::FunctionSchema&gt;, std::allocator&lt;c10::either&lt;c10::OperatorName, c10::FunctionSchema&gt; &gt; &gt;::_M_realloc_insert&lt;c10::either&lt;c10::OperatorName, c10::FunctionSchema&gt; &gt; (1 samples, 0.04%)</title><rect x="69.9" y="677" width="0.5" height="15.0" fill="rgb(211,43,52)" rx="2" ry="2" />
<text  x="72.90" y="687.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="186.0" y="261" width="0.5" height="15.0" fill="rgb(221,46,33)" rx="2" ry="2" />
<text  x="188.99" y="271.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.04%)</title><rect x="260.2" y="325" width="0.5" height="15.0" fill="rgb(250,91,45)" rx="2" ry="2" />
<text  x="263.21" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::reserve (1 samples, 0.04%)</title><rect x="243.8" y="453" width="0.5" height="15.0" fill="rgb(223,3,54)" rx="2" ry="2" />
<text  x="246.77" y="463.5" ></text>
</g>
<g >
<title>_int_malloc (4 samples, 0.18%)</title><rect x="292.5" y="549" width="2.2" height="15.0" fill="rgb(237,14,25)" rx="2" ry="2" />
<text  x="295.54" y="559.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;::reset_ (2 samples, 0.09%)</title><rect x="975.3" y="229" width="1.1" height="15.0" fill="rgb(213,24,20)" rx="2" ry="2" />
<text  x="978.31" y="239.5" ></text>
</g>
<g >
<title>c10::guts::detail::to_string_&lt;unsigned long, void&gt;::call[abi:cxx11] (1 samples, 0.04%)</title><rect x="285.7" y="453" width="0.5" height="15.0" fill="rgb(241,89,37)" rx="2" ry="2" />
<text  x="288.65" y="463.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (1 samples, 0.04%)</title><rect x="1155.5" y="549" width="0.6" height="15.0" fill="rgb(225,31,28)" rx="2" ry="2" />
<text  x="1158.54" y="559.5" ></text>
</g>
<g >
<title>c10::TensorOptions::device (1 samples, 0.04%)</title><rect x="1070.2" y="309" width="0.5" height="15.0" fill="rgb(236,214,21)" rx="2" ry="2" />
<text  x="1073.20" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;c10::either&lt;c10::OperatorName, c10::FunctionSchema&gt; &gt; &gt;::allocate (1 samples, 0.04%)</title><rect x="69.9" y="645" width="0.5" height="15.0" fill="rgb(233,211,44)" rx="2" ry="2" />
<text  x="72.90" y="655.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.04%)</title><rect x="204.5" y="549" width="0.6" height="15.0" fill="rgb(252,130,40)" rx="2" ry="2" />
<text  x="207.55" y="559.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::VariableVersion::VersionCounter, c10::detail::intrusive_target_default_null_type&lt;c10::VariableVersion::VersionCounter&gt; &gt;::make&lt;unsigned int&amp;&gt; (4 samples, 0.18%)</title><rect x="397.0" y="197" width="2.1" height="15.0" fill="rgb(214,103,2)" rx="2" ry="2" />
<text  x="399.97" y="207.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (1 samples, 0.04%)</title><rect x="187.1" y="517" width="0.5" height="15.0" fill="rgb(206,35,9)" rx="2" ry="2" />
<text  x="190.05" y="527.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;::basic_ostream (1 samples, 0.04%)</title><rect x="251.2" y="501" width="0.5" height="15.0" fill="rgb(242,34,20)" rx="2" ry="2" />
<text  x="254.19" y="511.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.04%)</title><rect x="224.2" y="421" width="0.5" height="15.0" fill="rgb(214,105,27)" rx="2" ry="2" />
<text  x="227.16" y="431.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.09%)</title><rect x="293.1" y="453" width="1.0" height="15.0" fill="rgb(254,90,35)" rx="2" ry="2" />
<text  x="296.07" y="463.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.04%)</title><rect x="752.7" y="213" width="0.5" height="15.0" fill="rgb(229,47,7)" rx="2" ry="2" />
<text  x="755.67" y="223.5" ></text>
</g>
<g >
<title>at::prod_intlist (1 samples, 0.04%)</title><rect x="404.4" y="325" width="0.5" height="15.0" fill="rgb(253,78,36)" rx="2" ry="2" />
<text  x="407.39" y="335.5" ></text>
</g>
<g >
<title>std::array&lt;c10::KernelFunction, 38ul&gt;::operator[] (1 samples, 0.04%)</title><rect x="1102.0" y="501" width="0.5" height="15.0" fill="rgb(228,51,24)" rx="2" ry="2" />
<text  x="1105.00" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (1 samples, 0.04%)</title><rect x="132.5" y="517" width="0.5" height="15.0" fill="rgb(243,10,10)" rx="2" ry="2" />
<text  x="135.45" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.04%)</title><rect x="178.0" y="581" width="0.6" height="15.0" fill="rgb(208,100,31)" rx="2" ry="2" />
<text  x="181.04" y="591.5" ></text>
</g>
<g >
<title>__x64_sys_openat (1 samples, 0.04%)</title><rect x="1110.5" y="469" width="0.5" height="15.0" fill="rgb(236,119,49)" rx="2" ry="2" />
<text  x="1113.49" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;c10::Argument&gt; &gt;::deallocate (2 samples, 0.09%)</title><rect x="320.6" y="197" width="1.1" height="15.0" fill="rgb(243,53,8)" rx="2" ry="2" />
<text  x="323.64" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::Symbol&gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;&gt;, std::tuple&lt;&gt; &gt; (1 samples, 0.04%)</title><rect x="189.7" y="501" width="0.5" height="15.0" fill="rgb(208,211,12)" rx="2" ry="2" />
<text  x="192.70" y="511.5" ></text>
</g>
<g >
<title>[microbenchmark] (1 samples, 0.04%)</title><rect x="688.0" y="565" width="0.5" height="15.0" fill="rgb(222,97,43)" rx="2" ry="2" />
<text  x="691.00" y="575.5" ></text>
</g>
<g >
<title>cpuinfo_initialize (1 samples, 0.04%)</title><rect x="197.7" y="533" width="0.5" height="15.0" fill="rgb(216,161,5)" rx="2" ry="2" />
<text  x="200.65" y="543.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_qlinear_prepack.cpp (1 samples, 0.04%)</title><rect x="267.6" y="629" width="0.6" height="15.0" fill="rgb(223,109,36)" rx="2" ry="2" />
<text  x="270.63" y="639.5" ></text>
</g>
<g >
<title>torch::jit::parseSchema (1 samples, 0.04%)</title><rect x="281.9" y="581" width="0.6" height="15.0" fill="rgb(223,96,40)" rx="2" ry="2" />
<text  x="284.94" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::push_back (1 samples, 0.04%)</title><rect x="177.0" y="453" width="0.5" height="15.0" fill="rgb(208,224,5)" rx="2" ry="2" />
<text  x="179.98" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::vector (2 samples, 0.09%)</title><rect x="225.8" y="485" width="1.0" height="15.0" fill="rgb(245,24,14)" rx="2" ry="2" />
<text  x="228.75" y="495.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.04%)</title><rect x="176.5" y="405" width="0.5" height="15.0" fill="rgb(245,28,18)" rx="2" ry="2" />
<text  x="179.45" y="415.5" ></text>
</g>
<g >
<title>__atomic_add_dispatch (1 samples, 0.04%)</title><rect x="250.7" y="389" width="0.5" height="15.0" fill="rgb(216,197,16)" rx="2" ry="2" />
<text  x="253.66" y="399.5" ></text>
</g>
<g >
<title>[unknown] (132 samples, 5.93%)</title><rect x="101.2" y="693" width="70.0" height="15.0" fill="rgb(217,5,39)" rx="2" ry="2" />
<text  x="104.18" y="703.5" >[unknown]</text>
</g>
<g >
<title>c10::detail::_str&lt;char const*, unsigned int&gt; (1 samples, 0.04%)</title><rect x="223.6" y="453" width="0.6" height="15.0" fill="rgb(225,25,46)" rx="2" ry="2" />
<text  x="226.63" y="463.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_BackendSelectRegister.cpp (1 samples, 0.04%)</title><rect x="175.9" y="629" width="0.6" height="15.0" fill="rgb(219,151,1)" rx="2" ry="2" />
<text  x="178.92" y="639.5" ></text>
</g>
<g >
<title>torch::schema (1 samples, 0.04%)</title><rect x="195.0" y="533" width="0.5" height="15.0" fill="rgb(235,66,5)" rx="2" ry="2" />
<text  x="198.00" y="543.5" ></text>
</g>
<g >
<title>unmap_vmas (20 samples, 0.90%)</title><rect x="1170.4" y="581" width="10.6" height="15.0" fill="rgb(216,188,3)" rx="2" ry="2" />
<text  x="1173.39" y="591.5" ></text>
</g>
<g >
<title>call_init (235 samples, 10.56%)</title><rect x="173.3" y="661" width="124.5" height="15.0" fill="rgb(215,147,13)" rx="2" ry="2" />
<text  x="176.27" y="671.5" >call_init</text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, torch::CppFunction&gt; (1 samples, 0.04%)</title><rect x="175.9" y="549" width="0.6" height="15.0" fill="rgb(247,75,6)" rx="2" ry="2" />
<text  x="178.92" y="559.5" ></text>
</g>
<g >
<title>parseDeclarations (1 samples, 0.04%)</title><rect x="198.2" y="501" width="0.5" height="15.0" fill="rgb(244,48,41)" rx="2" ry="2" />
<text  x="201.19" y="511.5" ></text>
</g>
<g >
<title>ska::detailv3::functor_storage&lt;bool, std::equal_to&lt;c10::OperatorName&gt; &gt;::operator (1 samples, 0.04%)</title><rect x="286.2" y="453" width="0.5" height="15.0" fill="rgb(219,215,52)" rx="2" ry="2" />
<text  x="289.18" y="463.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.04%)</title><rect x="174.9" y="581" width="0.5" height="15.0" fill="rgb(216,45,6)" rx="2" ry="2" />
<text  x="177.86" y="591.5" ></text>
</g>
<g >
<title>c10::impl::tls_local_dispatch_key_set (4 samples, 0.18%)</title><rect x="938.2" y="485" width="2.1" height="15.0" fill="rgb(235,31,9)" rx="2" ry="2" />
<text  x="941.20" y="495.5" ></text>
</g>
<g >
<title>free_unref_page_commit (1 samples, 0.04%)</title><rect x="1179.4" y="453" width="0.5" height="15.0" fill="rgb(250,140,42)" rx="2" ry="2" />
<text  x="1182.40" y="463.5" ></text>
</g>
<g >
<title>malloc_consolidate (1 samples, 0.04%)</title><rect x="325.4" y="389" width="0.5" height="15.0" fill="rgb(249,93,21)" rx="2" ry="2" />
<text  x="328.41" y="399.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (1 samples, 0.04%)</title><rect x="193.9" y="485" width="0.6" height="15.0" fill="rgb(242,188,4)" rx="2" ry="2" />
<text  x="196.94" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.04%)</title><rect x="234.8" y="341" width="0.5" height="15.0" fill="rgb(208,102,17)" rx="2" ry="2" />
<text  x="237.76" y="351.5" ></text>
</g>
<g >
<title>torch::jit::parseSchema (5 samples, 0.22%)</title><rect x="210.9" y="517" width="2.7" height="15.0" fill="rgb(228,149,19)" rx="2" ry="2" />
<text  x="213.91" y="527.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.04%)</title><rect x="405.5" y="293" width="0.5" height="15.0" fill="rgb(205,134,54)" rx="2" ry="2" />
<text  x="408.45" y="303.5" ></text>
</g>
<g >
<title>torch::Library::impl_UNBOXED&lt;char const*, at::Tensor  (1 samples, 0.04%)</title><rect x="206.7" y="565" width="0.5" height="15.0" fill="rgb(247,154,29)" rx="2" ry="2" />
<text  x="209.67" y="575.5" ></text>
</g>
<g >
<title>do_fault (2 samples, 0.09%)</title><rect x="1137.0" y="437" width="1.1" height="15.0" fill="rgb(224,148,5)" rx="2" ry="2" />
<text  x="1139.99" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::EncodedDescriptorDatabase::Add (2 samples, 0.09%)</title><rect x="295.7" y="597" width="1.1" height="15.0" fill="rgb(245,141,42)" rx="2" ry="2" />
<text  x="298.72" y="607.5" ></text>
</g>
<g >
<title>checked_request2size (1 samples, 0.04%)</title><rect x="1096.2" y="245" width="0.5" height="15.0" fill="rgb(207,170,35)" rx="2" ry="2" />
<text  x="1099.17" y="255.5" ></text>
</g>
<g >
<title>c10::SmallVectorTemplateCommon&lt;unsigned long, void&gt;::SmallVectorTemplateCommon (1 samples, 0.04%)</title><rect x="523.1" y="469" width="0.6" height="15.0" fill="rgb(213,125,19)" rx="2" ry="2" />
<text  x="526.14" y="479.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerDef (12 samples, 0.54%)</title><rect x="215.7" y="533" width="6.3" height="15.0" fill="rgb(205,24,14)" rx="2" ry="2" />
<text  x="218.68" y="543.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;c10::Dispatcher::OperatorDef&gt; &gt; &gt;::destroy&lt;c10::Dispatcher::OperatorDef&gt; (5 samples, 0.22%)</title><rect x="313.7" y="341" width="2.7" height="15.0" fill="rgb(239,218,42)" rx="2" ry="2" />
<text  x="316.75" y="351.5" ></text>
</g>
<g >
<title>lock_page_memcg (1 samples, 0.04%)</title><rect x="1177.8" y="501" width="0.5" height="15.0" fill="rgb(229,200,19)" rx="2" ry="2" />
<text  x="1180.81" y="511.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;torch::jit::Source,  (1 samples, 0.04%)</title><rect x="227.3" y="421" width="0.6" height="15.0" fill="rgb(241,209,12)" rx="2" ry="2" />
<text  x="230.34" y="431.5" ></text>
</g>
<g >
<title>at::hasCallbacks (5 samples, 0.22%)</title><rect x="45.5" y="677" width="2.7" height="15.0" fill="rgb(218,26,45)" rx="2" ry="2" />
<text  x="48.52" y="687.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (1 samples, 0.04%)</title><rect x="1111.5" y="389" width="0.6" height="15.0" fill="rgb(216,127,2)" rx="2" ry="2" />
<text  x="1114.55" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (1 samples, 0.04%)</title><rect x="190.2" y="229" width="0.6" height="15.0" fill="rgb(206,4,43)" rx="2" ry="2" />
<text  x="193.23" y="239.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="109.7" y="613" width="0.5" height="15.0" fill="rgb(223,116,9)" rx="2" ry="2" />
<text  x="112.66" y="623.5" ></text>
</g>
<g >
<title>c10::impl::ExcludeDispatchKeyGuard::~ExcludeDispatchKeyGuard (1 samples, 0.04%)</title><rect x="690.6" y="565" width="0.6" height="15.0" fill="rgb(250,164,26)" rx="2" ry="2" />
<text  x="693.65" y="575.5" ></text>
</g>
<g >
<title>[libcusparse.so.11.1.0.218] (1 samples, 0.04%)</title><rect x="175.4" y="629" width="0.5" height="15.0" fill="rgb(211,197,41)" rx="2" ry="2" />
<text  x="178.39" y="639.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::_Vector_base (2 samples, 0.09%)</title><rect x="225.8" y="469" width="1.0" height="15.0" fill="rgb(206,63,9)" rx="2" ry="2" />
<text  x="228.75" y="479.5" ></text>
</g>
<g >
<title>seq_read (1 samples, 0.04%)</title><rect x="197.7" y="309" width="0.5" height="15.0" fill="rgb(207,75,39)" rx="2" ry="2" />
<text  x="200.65" y="319.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::shared_ptr&lt;torch::jit::Operator&gt;*, std::shared_ptr&lt;torch::jit::Operator&gt;*, std::allocator&lt;std::shared_ptr&lt;torch::jit::Operator&gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="297.3" y="453" width="0.5" height="15.0" fill="rgb(253,213,19)" rx="2" ry="2" />
<text  x="300.31" y="463.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="226.3" y="277" width="0.5" height="15.0" fill="rgb(246,10,47)" rx="2" ry="2" />
<text  x="229.28" y="287.5" ></text>
</g>
<g >
<title>perf_event_exec (9 samples, 0.40%)</title><rect x="1185.2" y="581" width="4.8" height="15.0" fill="rgb(246,36,14)" rx="2" ry="2" />
<text  x="1188.23" y="591.5" ></text>
</g>
<g >
<title>c10::DispatchKeyExtractor::dispatchKeySetToDispatchKey_ (9 samples, 0.40%)</title><rect x="937.7" y="517" width="4.7" height="15.0" fill="rgb(253,157,4)" rx="2" ry="2" />
<text  x="940.67" y="527.5" ></text>
</g>
<g >
<title>__cxa_finalize (1 samples, 0.04%)</title><rect x="304.7" y="597" width="0.6" height="15.0" fill="rgb(205,156,4)" rx="2" ry="2" />
<text  x="307.73" y="607.5" ></text>
</g>
<g >
<title>at::hasCallbacks (5 samples, 0.22%)</title><rect x="379.5" y="501" width="2.6" height="15.0" fill="rgb(211,106,30)" rx="2" ry="2" />
<text  x="382.48" y="511.5" ></text>
</g>
<g >
<title>c10::SmallVectorTemplateCommon&lt;long, void&gt;::size (1 samples, 0.04%)</title><rect x="426.7" y="293" width="0.5" height="15.0" fill="rgb(222,117,50)" rx="2" ry="2" />
<text  x="429.66" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::replace (1 samples, 0.04%)</title><rect x="192.9" y="437" width="0.5" height="15.0" fill="rgb(225,40,14)" rx="2" ry="2" />
<text  x="195.88" y="447.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (3 samples, 0.13%)</title><rect x="211.4" y="405" width="1.6" height="15.0" fill="rgb(205,140,16)" rx="2" ry="2" />
<text  x="214.44" y="415.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.04%)</title><rect x="166.9" y="389" width="0.5" height="15.0" fill="rgb(225,96,33)" rx="2" ry="2" />
<text  x="169.91" y="399.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.09%)</title><rect x="862.4" y="453" width="1.1" height="15.0" fill="rgb(207,171,1)" rx="2" ry="2" />
<text  x="865.40" y="463.5" ></text>
</g>
<g >
<title>c10::guts::detail::to_string_&lt;unsigned long, void&gt;::call[abi:cxx11] (1 samples, 0.04%)</title><rect x="184.9" y="437" width="0.6" height="15.0" fill="rgb(249,216,20)" rx="2" ry="2" />
<text  x="187.93" y="447.5" ></text>
</g>
<g >
<title>c10::TensorImpl::TensorImpl (15 samples, 0.67%)</title><rect x="730.9" y="245" width="8.0" height="15.0" fill="rgb(218,77,23)" rx="2" ry="2" />
<text  x="733.93" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Insert_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::insert (1 samples, 0.04%)</title><rect x="181.2" y="325" width="0.6" height="15.0" fill="rgb(228,31,18)" rx="2" ry="2" />
<text  x="184.22" y="335.5" ></text>
</g>
<g >
<title>at::Tensor::Tensor (1 samples, 0.04%)</title><rect x="914.9" y="549" width="0.5" height="15.0" fill="rgb(242,5,2)" rx="2" ry="2" />
<text  x="917.88" y="559.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="180.7" y="405" width="0.5" height="15.0" fill="rgb(248,30,45)" rx="2" ry="2" />
<text  x="183.69" y="415.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.04%)</title><rect x="304.7" y="533" width="0.6" height="15.0" fill="rgb(237,184,35)" rx="2" ry="2" />
<text  x="307.73" y="543.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;c10::AutogradMetaInterface, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::_M_ptr (1 samples, 0.04%)</title><rect x="362.5" y="533" width="0.5" height="15.0" fill="rgb(251,66,44)" rx="2" ry="2" />
<text  x="365.52" y="543.5" ></text>
</g>
<g >
<title>__GI___default_morecore (1 samples, 0.04%)</title><rect x="231.1" y="261" width="0.5" height="15.0" fill="rgb(249,24,2)" rx="2" ry="2" />
<text  x="234.05" y="271.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;torch::jit::Source&gt;::~shared_ptr (1 samples, 0.04%)</title><rect x="259.1" y="405" width="0.6" height="15.0" fill="rgb(234,41,48)" rx="2" ry="2" />
<text  x="262.15" y="415.5" ></text>
</g>
<g >
<title>at::native::check_size_nonnegative (2 samples, 0.09%)</title><rect x="549.6" y="325" width="1.1" height="15.0" fill="rgb(216,53,14)" rx="2" ry="2" />
<text  x="552.64" y="335.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_THVector.cpp (1 samples, 0.04%)</title><rect x="197.7" y="629" width="0.5" height="15.0" fill="rgb(248,223,9)" rx="2" ry="2" />
<text  x="200.65" y="639.5" ></text>
</g>
<g >
<title>__GI___libc_free (5 samples, 0.22%)</title><rect x="835.9" y="565" width="2.6" height="15.0" fill="rgb(221,128,16)" rx="2" ry="2" />
<text  x="838.89" y="575.5" ></text>
</g>
<g >
<title>c10::either&lt;c10::OperatorName, c10::FunctionSchema&gt;::_construct_right&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;, std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;, bool&amp;, bool&amp;&gt; (1 samples, 0.04%)</title><rect x="195.5" y="437" width="0.6" height="15.0" fill="rgb(232,52,19)" rx="2" ry="2" />
<text  x="198.53" y="447.5" ></text>
</g>
<g >
<title>torch::detail::TorchLibraryInit::TorchLibraryInit (4 samples, 0.18%)</title><rect x="176.5" y="597" width="2.1" height="15.0" fill="rgb(247,99,18)" rx="2" ry="2" />
<text  x="179.45" y="607.5" ></text>
</g>
<g >
<title>torch::Library::_fallback (1 samples, 0.04%)</title><rect x="270.8" y="549" width="0.5" height="15.0" fill="rgb(210,154,50)" rx="2" ry="2" />
<text  x="273.81" y="559.5" ></text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.04%)</title><rect x="1179.4" y="469" width="0.5" height="15.0" fill="rgb(214,159,28)" rx="2" ry="2" />
<text  x="1182.40" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::reserve (1 samples, 0.04%)</title><rect x="186.0" y="453" width="0.5" height="15.0" fill="rgb(216,118,43)" rx="2" ry="2" />
<text  x="188.99" y="463.5" ></text>
</g>
<g >
<title>__GI___sbrk (1 samples, 0.04%)</title><rect x="243.8" y="293" width="0.5" height="15.0" fill="rgb(224,16,7)" rx="2" ry="2" />
<text  x="246.77" y="303.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.04%)</title><rect x="209.3" y="469" width="0.5" height="15.0" fill="rgb(222,81,47)" rx="2" ry="2" />
<text  x="212.32" y="479.5" ></text>
</g>
<g >
<title>do_user_addr_fault (2 samples, 0.09%)</title><rect x="1137.0" y="485" width="1.1" height="15.0" fill="rgb(236,68,16)" rx="2" ry="2" />
<text  x="1139.99" y="495.5" ></text>
</g>
<g >
<title>c10::UndefinedTensorImpl::_singleton (1 samples, 0.04%)</title><rect x="165.8" y="661" width="0.6" height="15.0" fill="rgb(222,125,36)" rx="2" ry="2" />
<text  x="168.85" y="671.5" ></text>
</g>
<g >
<title>at::RecordFunction::end@plt (1 samples, 0.04%)</title><rect x="382.1" y="517" width="0.6" height="15.0" fill="rgb(219,194,28)" rx="2" ry="2" />
<text  x="385.13" y="527.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::impl::AnnotatedSchema&gt;::clear (2 samples, 0.09%)</title><rect x="322.2" y="389" width="1.1" height="15.0" fill="rgb(227,134,3)" rx="2" ry="2" />
<text  x="325.23" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (1 samples, 0.04%)</title><rect x="284.6" y="581" width="0.5" height="15.0" fill="rgb(223,156,0)" rx="2" ry="2" />
<text  x="287.59" y="591.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.04%)</title><rect x="476.0" y="501" width="0.5" height="15.0" fill="rgb(235,68,0)" rx="2" ry="2" />
<text  x="478.96" y="511.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.04%)</title><rect x="276.6" y="485" width="0.6" height="15.0" fill="rgb(250,1,14)" rx="2" ry="2" />
<text  x="279.64" y="495.5" ></text>
</g>
<g >
<title>[libtorch_cpu.so] (4 samples, 0.18%)</title><rect x="99.1" y="693" width="2.1" height="15.0" fill="rgb(210,198,42)" rx="2" ry="2" />
<text  x="102.06" y="703.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (35 samples, 1.57%)</title><rect x="460.6" y="613" width="18.5" height="15.0" fill="rgb(245,70,53)" rx="2" ry="2" />
<text  x="463.58" y="623.5" ></text>
</g>
<g >
<title>c10::RegisterOperators::registerOp_ (1 samples, 0.04%)</title><rect x="272.4" y="565" width="0.5" height="15.0" fill="rgb(209,86,30)" rx="2" ry="2" />
<text  x="275.40" y="575.5" ></text>
</g>
<g >
<title>at::impl::variable_excluded_from_dispatch (8 samples, 0.36%)</title><rect x="994.9" y="309" width="4.3" height="15.0" fill="rgb(210,108,27)" rx="2" ry="2" />
<text  x="997.92" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;c10::Symbol, true&gt; &gt; &gt;::_M_allocate_node&lt;c10::Symbol const&amp;&gt; (1 samples, 0.04%)</title><rect x="212.5" y="213" width="0.5" height="15.0" fill="rgb(240,167,10)" rx="2" ry="2" />
<text  x="215.50" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (1 samples, 0.04%)</title><rect x="178.0" y="549" width="0.6" height="15.0" fill="rgb(221,111,21)" rx="2" ry="2" />
<text  x="181.04" y="559.5" ></text>
</g>
<g >
<title>[libcufft.so.10.2.0.218] (1 samples, 0.04%)</title><rect x="173.8" y="597" width="0.5" height="15.0" fill="rgb(216,3,43)" rx="2" ry="2" />
<text  x="176.80" y="607.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::expect (1 samples, 0.04%)</title><rect x="241.7" y="469" width="0.5" height="15.0" fill="rgb(247,141,13)" rx="2" ry="2" />
<text  x="244.65" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;, std::allocator&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt; &gt;::_Vector_base (1 samples, 0.04%)</title><rect x="915.4" y="533" width="0.5" height="15.0" fill="rgb(238,0,18)" rx="2" ry="2" />
<text  x="918.41" y="543.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_VariableType_0.cpp (5 samples, 0.22%)</title><rect x="249.6" y="629" width="2.7" height="15.0" fill="rgb(254,199,17)" rx="2" ry="2" />
<text  x="252.60" y="639.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (1 samples, 0.04%)</title><rect x="68.8" y="677" width="0.6" height="15.0" fill="rgb(242,189,24)" rx="2" ry="2" />
<text  x="71.84" y="687.5" ></text>
</g>
<g >
<title>__vm_munmap (1 samples, 0.04%)</title><rect x="182.3" y="325" width="0.5" height="15.0" fill="rgb(235,126,16)" rx="2" ry="2" />
<text  x="185.28" y="335.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::Mutable (1 samples, 0.04%)</title><rect x="295.7" y="437" width="0.6" height="15.0" fill="rgb(214,61,18)" rx="2" ry="2" />
<text  x="298.72" y="447.5" ></text>
</g>
<g >
<title>c10::DispatchKeyExtractor::makeBitsetForDispatchArgs (2 samples, 0.09%)</title><rect x="219.4" y="485" width="1.0" height="15.0" fill="rgb(214,21,25)" rx="2" ry="2" />
<text  x="222.39" y="495.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (1 samples, 0.04%)</title><rect x="155.8" y="629" width="0.5" height="15.0" fill="rgb(237,167,3)" rx="2" ry="2" />
<text  x="158.78" y="639.5" ></text>
</g>
<g >
<title>c10::RegistrationHandleRAII::~RegistrationHandleRAII (25 samples, 1.12%)</title><rect x="312.2" y="469" width="13.2" height="15.0" fill="rgb(216,36,9)" rx="2" ry="2" />
<text  x="315.16" y="479.5" ></text>
</g>
<g >
<title>c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (113 samples, 5.08%)</title><rect x="390.6" y="373" width="59.9" height="15.0" fill="rgb(241,156,26)" rx="2" ry="2" />
<text  x="393.61" y="383.5" >c10::i..</text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.04%)</title><rect x="224.2" y="437" width="0.5" height="15.0" fill="rgb(225,224,35)" rx="2" ry="2" />
<text  x="227.16" y="447.5" ></text>
</g>
<g >
<title>TORCH_LIBRARY_IMPL_init_aten_CPU (3 samples, 0.13%)</title><rect x="178.6" y="581" width="1.6" height="15.0" fill="rgb(213,10,0)" rx="2" ry="2" />
<text  x="181.57" y="591.5" ></text>
</g>
<g >
<title>c10::Storage::operator= (21 samples, 0.94%)</title><rect x="621.7" y="549" width="11.2" height="15.0" fill="rgb(219,48,12)" rx="2" ry="2" />
<text  x="624.73" y="559.5" ></text>
</g>
<g >
<title>malloc_consolidate (2 samples, 0.09%)</title><rect x="310.6" y="389" width="1.0" height="15.0" fill="rgb(245,9,52)" rx="2" ry="2" />
<text  x="313.57" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_List_node&lt;c10::Dispatcher::OperatorDef&gt; &gt;::allocate (1 samples, 0.04%)</title><rect x="216.7" y="421" width="0.6" height="15.0" fill="rgb(237,106,15)" rx="2" ry="2" />
<text  x="219.74" y="431.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::deregisterKernel_ (10 samples, 0.45%)</title><rect x="316.4" y="389" width="5.3" height="15.0" fill="rgb(246,213,16)" rx="2" ry="2" />
<text  x="319.40" y="399.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.04%)</title><rect x="325.9" y="165" width="0.6" height="15.0" fill="rgb(247,75,14)" rx="2" ry="2" />
<text  x="328.94" y="175.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="631.8" y="293" width="0.5" height="15.0" fill="rgb(242,54,13)" rx="2" ry="2" />
<text  x="634.81" y="303.5" ></text>
</g>
<g >
<title>_IO_str_init_static_internal (1 samples, 0.04%)</title><rect x="213.6" y="373" width="0.5" height="15.0" fill="rgb(212,91,50)" rx="2" ry="2" />
<text  x="216.56" y="383.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.04%)</title><rect x="276.1" y="485" width="0.5" height="15.0" fill="rgb(233,226,54)" rx="2" ry="2" />
<text  x="279.11" y="495.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (2 samples, 0.09%)</title><rect x="325.4" y="437" width="1.1" height="15.0" fill="rgb(210,210,42)" rx="2" ry="2" />
<text  x="328.41" y="447.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (1 samples, 0.04%)</title><rect x="908.5" y="565" width="0.5" height="15.0" fill="rgb(248,131,47)" rx="2" ry="2" />
<text  x="911.52" y="575.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTableFull_ (1 samples, 0.04%)</title><rect x="286.7" y="565" width="0.5" height="15.0" fill="rgb(208,150,20)" rx="2" ry="2" />
<text  x="289.71" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string (1 samples, 0.04%)</title><rect x="213.6" y="421" width="0.5" height="15.0" fill="rgb(206,164,25)" rx="2" ry="2" />
<text  x="216.56" y="431.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;short&gt; (1 samples, 0.04%)</title><rect x="527.9" y="389" width="0.5" height="15.0" fill="rgb(209,210,40)" rx="2" ry="2" />
<text  x="530.91" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_ostringstream (1 samples, 0.04%)</title><rect x="182.8" y="517" width="0.5" height="15.0" fill="rgb(237,200,50)" rx="2" ry="2" />
<text  x="185.81" y="527.5" ></text>
</g>
<g >
<title>c10::ThreadLocalDebugInfo::get (5 samples, 0.22%)</title><rect x="751.1" y="261" width="2.6" height="15.0" fill="rgb(246,222,50)" rx="2" ry="2" />
<text  x="754.08" y="271.5" ></text>
</g>
<g >
<title>debugString (2 samples, 0.09%)</title><rect x="223.6" y="533" width="1.1" height="15.0" fill="rgb(248,172,13)" rx="2" ry="2" />
<text  x="226.63" y="543.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.04%)</title><rect x="264.4" y="597" width="0.6" height="15.0" fill="rgb(226,20,40)" rx="2" ry="2" />
<text  x="267.45" y="607.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="230.5" y="261" width="0.6" height="15.0" fill="rgb(236,78,36)" rx="2" ry="2" />
<text  x="233.52" y="271.5" ></text>
</g>
<g >
<title>__cudaRegisterVar (1 samples, 0.04%)</title><rect x="295.2" y="597" width="0.5" height="15.0" fill="rgb(241,72,42)" rx="2" ry="2" />
<text  x="298.19" y="607.5" ></text>
</g>
<g >
<title>checked_request2size (2 samples, 0.09%)</title><rect x="912.8" y="533" width="1.0" height="15.0" fill="rgb(248,100,20)" rx="2" ry="2" />
<text  x="915.76" y="543.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.04%)</title><rect x="180.7" y="197" width="0.5" height="15.0" fill="rgb(250,63,35)" rx="2" ry="2" />
<text  x="183.69" y="207.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.13%)</title><rect x="282.5" y="597" width="1.6" height="15.0" fill="rgb(210,228,53)" rx="2" ry="2" />
<text  x="285.47" y="607.5" ></text>
</g>
<g >
<title>at::CPUType::empty_memory_format (258 samples, 11.59%)</title><rect x="963.1" y="341" width="136.8" height="15.0" fill="rgb(229,74,1)" rx="2" ry="2" />
<text  x="966.12" y="351.5" >at::CPUType::empt..</text>
</g>
<g >
<title>torch::Library::_impl (7 samples, 0.31%)</title><rect x="190.2" y="549" width="3.7" height="15.0" fill="rgb(234,142,14)" rx="2" ry="2" />
<text  x="193.23" y="559.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="260.2" y="309" width="0.5" height="15.0" fill="rgb(214,119,42)" rx="2" ry="2" />
<text  x="263.21" y="319.5" ></text>
</g>
<g >
<title>c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (191 samples, 8.58%)</title><rect x="718.2" y="357" width="101.3" height="15.0" fill="rgb(247,116,52)" rx="2" ry="2" />
<text  x="721.21" y="367.5" >c10::impl::d..</text>
</g>
<g >
<title>handle_mm_fault (3 samples, 0.13%)</title><rect x="292.5" y="469" width="1.6" height="15.0" fill="rgb(214,221,11)" rx="2" ry="2" />
<text  x="295.54" y="479.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="109.7" y="629" width="0.5" height="15.0" fill="rgb(211,55,12)" rx="2" ry="2" />
<text  x="112.66" y="639.5" ></text>
</g>
<g >
<title>std::hash&lt;c10::OperatorName&gt;::operator (1 samples, 0.04%)</title><rect x="218.9" y="373" width="0.5" height="15.0" fill="rgb(227,182,22)" rx="2" ry="2" />
<text  x="221.86" y="383.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="180.7" y="277" width="0.5" height="15.0" fill="rgb(228,181,24)" rx="2" ry="2" />
<text  x="183.69" y="287.5" ></text>
</g>
<g >
<title>micro_requires_grad_true (275 samples, 12.35%)</title><rect x="453.7" y="645" width="145.8" height="15.0" fill="rgb(254,224,12)" rx="2" ry="2" />
<text  x="456.69" y="655.5" >micro_requires_gra..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.04%)</title><rect x="191.8" y="357" width="0.6" height="15.0" fill="rgb(220,69,23)" rx="2" ry="2" />
<text  x="194.82" y="367.5" ></text>
</g>
<g >
<title>__tls_init (3 samples, 0.13%)</title><rect x="379.5" y="469" width="1.6" height="15.0" fill="rgb(248,148,9)" rx="2" ry="2" />
<text  x="382.48" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (1 samples, 0.04%)</title><rect x="110.7" y="645" width="0.5" height="15.0" fill="rgb(249,214,19)" rx="2" ry="2" />
<text  x="113.72" y="655.5" ></text>
</g>
<g >
<title>torch::Library::def&lt;char const  (52 samples, 2.34%)</title><rect x="215.7" y="565" width="27.5" height="15.0" fill="rgb(247,201,38)" rx="2" ry="2" />
<text  x="218.68" y="575.5" >t..</text>
</g>
<g >
<title>std::max&lt;long&gt; (1 samples, 0.04%)</title><rect x="1065.4" y="277" width="0.6" height="15.0" fill="rgb(227,94,16)" rx="2" ry="2" />
<text  x="1068.43" y="287.5" ></text>
</g>
<g >
<title>parseDeclarations (1 samples, 0.04%)</title><rect x="169.0" y="645" width="0.6" height="15.0" fill="rgb(246,191,31)" rx="2" ry="2" />
<text  x="172.03" y="655.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::computeDispatchTableEntry (1 samples, 0.04%)</title><rect x="146.2" y="677" width="0.6" height="15.0" fill="rgb(226,114,3)" rx="2" ry="2" />
<text  x="149.24" y="687.5" ></text>
</g>
<g >
<title>do_filp_open (1 samples, 0.04%)</title><rect x="1112.1" y="453" width="0.5" height="15.0" fill="rgb(250,129,29)" rx="2" ry="2" />
<text  x="1115.08" y="463.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.04%)</title><rect x="632.3" y="309" width="0.6" height="15.0" fill="rgb(230,198,3)" rx="2" ry="2" />
<text  x="635.34" y="319.5" ></text>
</g>
<g >
<title>torch::autograd::AutogradMeta::AutogradMeta (12 samples, 0.54%)</title><rect x="914.3" y="565" width="6.4" height="15.0" fill="rgb(210,150,14)" rx="2" ry="2" />
<text  x="917.35" y="575.5" ></text>
</g>
<g >
<title>c10::Device::validate (1 samples, 0.04%)</title><rect x="818.9" y="325" width="0.6" height="15.0" fill="rgb(211,208,45)" rx="2" ry="2" />
<text  x="821.93" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (1 samples, 0.04%)</title><rect x="278.8" y="597" width="0.5" height="15.0" fill="rgb(225,147,3)" rx="2" ry="2" />
<text  x="281.76" y="607.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1 samples, 0.04%)</title><rect x="296.8" y="565" width="0.5" height="15.0" fill="rgb(233,173,15)" rx="2" ry="2" />
<text  x="299.78" y="575.5" ></text>
</g>
<g >
<title>tcache_get (1 samples, 0.04%)</title><rect x="913.8" y="533" width="0.5" height="15.0" fill="rgb(243,184,29)" rx="2" ry="2" />
<text  x="916.82" y="543.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::createFunctionSchemaFromTraitsFlattenedReturns&lt;c10::guts::function_traits&lt;at::Tensor&amp;  (1 samples, 0.04%)</title><rect x="196.6" y="501" width="0.5" height="15.0" fill="rgb(238,113,25)" rx="2" ry="2" />
<text  x="199.59" y="511.5" ></text>
</g>
<g >
<title>call_init (235 samples, 10.56%)</title><rect x="173.3" y="645" width="124.5" height="15.0" fill="rgb(218,67,13)" rx="2" ry="2" />
<text  x="176.27" y="655.5" >call_init</text>
</g>
<g >
<title>c10::findSchemaDifferences[abi:cxx11] (1 samples, 0.04%)</title><rect x="253.3" y="485" width="0.5" height="15.0" fill="rgb(248,173,0)" rx="2" ry="2" />
<text  x="256.32" y="495.5" ></text>
</g>
<g >
<title>isalpha (1 samples, 0.04%)</title><rect x="213.0" y="325" width="0.6" height="15.0" fill="rgb(234,195,33)" rx="2" ry="2" />
<text  x="216.03" y="335.5" ></text>
</g>
<g >
<title>std::tuple&lt;c10::NamedTensorMetaInterface*, std::default_delete&lt;c10::NamedTensorMetaInterface&gt; &gt;::tuple&lt;c10::NamedTensorMetaInterface*, std::default_delete&lt;c10::NamedTensorMetaInterface&gt;, true&gt; (1 samples, 0.04%)</title><rect x="738.4" y="181" width="0.5" height="15.0" fill="rgb(253,68,35)" rx="2" ry="2" />
<text  x="741.36" y="191.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="256.5" y="341" width="0.5" height="15.0" fill="rgb(244,57,34)" rx="2" ry="2" />
<text  x="259.50" y="351.5" ></text>
</g>
<g >
<title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (1 samples, 0.04%)</title><rect x="68.3" y="677" width="0.5" height="15.0" fill="rgb(239,15,26)" rx="2" ry="2" />
<text  x="71.31" y="687.5" ></text>
</g>
<g >
<title>c10::SmallVectorImpl&lt;long&gt;::SmallVectorImpl (3 samples, 0.13%)</title><rect x="734.6" y="197" width="1.6" height="15.0" fill="rgb(239,122,47)" rx="2" ry="2" />
<text  x="737.65" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.04%)</title><rect x="170.6" y="437" width="0.6" height="15.0" fill="rgb(228,20,49)" rx="2" ry="2" />
<text  x="173.62" y="447.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.04%)</title><rect x="250.7" y="405" width="0.5" height="15.0" fill="rgb(243,228,40)" rx="2" ry="2" />
<text  x="253.66" y="415.5" ></text>
</g>
<g >
<title>c10::TensorImpl::~TensorImpl (9 samples, 0.40%)</title><rect x="140.9" y="661" width="4.8" height="15.0" fill="rgb(224,62,15)" rx="2" ry="2" />
<text  x="143.93" y="671.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="278.8" y="501" width="0.5" height="15.0" fill="rgb(227,92,3)" rx="2" ry="2" />
<text  x="281.76" y="511.5" ></text>
</g>
<g >
<title>ksys_read (1 samples, 0.04%)</title><rect x="197.7" y="373" width="0.5" height="15.0" fill="rgb(220,219,39)" rx="2" ry="2" />
<text  x="200.65" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;c10::AutogradMetaInterface, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::operator= (1 samples, 0.04%)</title><rect x="906.9" y="565" width="0.6" height="15.0" fill="rgb(242,84,52)" rx="2" ry="2" />
<text  x="909.93" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.04%)</title><rect x="261.3" y="597" width="0.5" height="15.0" fill="rgb(212,40,52)" rx="2" ry="2" />
<text  x="264.27" y="607.5" ></text>
</g>
<g >
<title>std::make_unique&lt;c10::FunctionSchema, c10::FunctionSchema&gt; (1 samples, 0.04%)</title><rect x="199.2" y="517" width="0.6" height="15.0" fill="rgb(206,192,13)" rx="2" ry="2" />
<text  x="202.25" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (1 samples, 0.04%)</title><rect x="191.8" y="341" width="0.6" height="15.0" fill="rgb(252,68,34)" rx="2" ry="2" />
<text  x="194.82" y="351.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.04%)</title><rect x="476.5" y="501" width="0.5" height="15.0" fill="rgb(248,163,42)" rx="2" ry="2" />
<text  x="479.49" y="511.5" ></text>
</g>
<g >
<title>torch::class_&lt;ConvPackedParamsBase&lt;3&gt; &gt;::defineMethod&lt;torch::detail::WrapMethod&lt;c10::List&lt;long&gt;  (1 samples, 0.04%)</title><rect x="262.3" y="565" width="0.6" height="15.0" fill="rgb(212,214,42)" rx="2" ry="2" />
<text  x="265.33" y="575.5" ></text>
</g>
<g >
<title>__posix_memalign (33 samples, 1.48%)</title><rect x="408.1" y="277" width="17.5" height="15.0" fill="rgb(224,8,3)" rx="2" ry="2" />
<text  x="411.10" y="287.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;unsigned char&gt; (1 samples, 0.04%)</title><rect x="708.1" y="389" width="0.6" height="15.0" fill="rgb(246,101,10)" rx="2" ry="2" />
<text  x="711.14" y="399.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="109.1" y="581" width="0.6" height="15.0" fill="rgb(224,112,17)" rx="2" ry="2" />
<text  x="112.13" y="591.5" ></text>
</g>
<g >
<title>c10::KernelFunction::makeFromUnboxedRuntimeFunction&lt;false, at::Tensor  (1 samples, 0.04%)</title><rect x="267.1" y="533" width="0.5" height="15.0" fill="rgb(229,11,13)" rx="2" ry="2" />
<text  x="270.10" y="543.5" ></text>
</g>
<g >
<title>createArgumentVector (1 samples, 0.04%)</title><rect x="243.8" y="469" width="0.5" height="15.0" fill="rgb(220,209,38)" rx="2" ry="2" />
<text  x="246.77" y="479.5" ></text>
</g>
<g >
<title>tcache_get (1 samples, 0.04%)</title><rect x="283.5" y="549" width="0.6" height="15.0" fill="rgb(231,63,14)" rx="2" ry="2" />
<text  x="286.53" y="559.5" ></text>
</g>
<g >
<title>unlink_chunk (1 samples, 0.04%)</title><rect x="571.9" y="197" width="0.5" height="15.0" fill="rgb(237,170,2)" rx="2" ry="2" />
<text  x="574.90" y="207.5" ></text>
</g>
<g >
<title>c10::str&lt;char [15], char const*, char [2], unsigned int&gt; (1 samples, 0.04%)</title><rect x="183.9" y="517" width="0.5" height="15.0" fill="rgb(229,115,7)" rx="2" ry="2" />
<text  x="186.87" y="527.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (1 samples, 0.04%)</title><rect x="195.0" y="405" width="0.5" height="15.0" fill="rgb(218,208,44)" rx="2" ry="2" />
<text  x="198.00" y="415.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (1 samples, 0.04%)</title><rect x="192.4" y="357" width="0.5" height="15.0" fill="rgb(228,171,28)" rx="2" ry="2" />
<text  x="195.35" y="367.5" ></text>
</g>
<g >
<title>c10::Registry&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unique_ptr&lt;at::CUDAHooksInterface, std::default_delete&lt;at::CUDAHooksInterface&gt; &gt;, at::CUDAHooksArgs&gt;::Register (1 samples, 0.04%)</title><rect x="184.4" y="565" width="0.5" height="15.0" fill="rgb(253,25,40)" rx="2" ry="2" />
<text  x="187.40" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;std::unique_ptr&lt;caffe2::OperatorBase, std::default_delete&lt;caffe2::OperatorBase&gt; &gt;  (1 samples, 0.04%)</title><rect x="275.0" y="517" width="0.6" height="15.0" fill="rgb(219,29,32)" rx="2" ry="2" />
<text  x="278.05" y="527.5" ></text>
</g>
<g >
<title>c10::SmallVectorImpl&lt;long&gt;::resize (1 samples, 0.04%)</title><rect x="426.7" y="309" width="0.5" height="15.0" fill="rgb(206,177,19)" rx="2" ry="2" />
<text  x="429.66" y="319.5" ></text>
</g>
<g >
<title>c10::SmallVectorImpl&lt;long&gt;::SmallVectorImpl (5 samples, 0.22%)</title><rect x="980.6" y="197" width="2.7" height="15.0" fill="rgb(245,38,32)" rx="2" ry="2" />
<text  x="983.61" y="207.5" ></text>
</g>
<g >
<title>__posix_memalign (2 samples, 0.09%)</title><rect x="107.0" y="661" width="1.1" height="15.0" fill="rgb(244,189,9)" rx="2" ry="2" />
<text  x="110.01" y="671.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.04%)</title><rect x="855.0" y="517" width="0.5" height="15.0" fill="rgb(234,123,33)" rx="2" ry="2" />
<text  x="857.98" y="527.5" ></text>
</g>
<g >
<title>parseDeclaration (1 samples, 0.04%)</title><rect x="198.2" y="485" width="0.5" height="15.0" fill="rgb(239,64,36)" rx="2" ry="2" />
<text  x="201.19" y="495.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.04%)</title><rect x="291.5" y="549" width="0.5" height="15.0" fill="rgb(245,148,44)" rx="2" ry="2" />
<text  x="294.48" y="559.5" ></text>
</g>
<g >
<title>__cxa_demangle (1 samples, 0.04%)</title><rect x="109.1" y="629" width="0.6" height="15.0" fill="rgb(237,94,39)" rx="2" ry="2" />
<text  x="112.13" y="639.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;torch::autograd::Node&gt;::~weak_ptr (2 samples, 0.09%)</title><rect x="863.5" y="485" width="1.0" height="15.0" fill="rgb(240,34,13)" rx="2" ry="2" />
<text  x="866.46" y="495.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (1 samples, 0.04%)</title><rect x="363.6" y="597" width="0.5" height="15.0" fill="rgb(217,120,30)" rx="2" ry="2" />
<text  x="366.58" y="607.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt;  (1 samples, 0.04%)</title><rect x="201.4" y="565" width="0.5" height="15.0" fill="rgb(233,73,8)" rx="2" ry="2" />
<text  x="204.37" y="575.5" ></text>
</g>
<g >
<title>c10::DispatchKeySet::add (1 samples, 0.04%)</title><rect x="218.3" y="357" width="0.6" height="15.0" fill="rgb(206,171,5)" rx="2" ry="2" />
<text  x="221.33" y="367.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.09%)</title><rect x="229.5" y="213" width="1.0" height="15.0" fill="rgb(245,213,37)" rx="2" ry="2" />
<text  x="232.46" y="223.5" ></text>
</g>
<g >
<title>c10::SmallVectorImpl&lt;long&gt;::resize (1 samples, 0.04%)</title><rect x="790.3" y="277" width="0.5" height="15.0" fill="rgb(248,28,54)" rx="2" ry="2" />
<text  x="793.31" y="287.5" ></text>
</g>
<g >
<title>c10::ProfiledCPUMemoryReporter::New (5 samples, 0.22%)</title><rect x="404.9" y="309" width="2.7" height="15.0" fill="rgb(233,168,6)" rx="2" ry="2" />
<text  x="407.92" y="319.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, c10::RegistryPriority, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::RegistryPriority&gt; &gt; &gt;::operator[] (2 samples, 0.09%)</title><rect x="274.0" y="565" width="1.0" height="15.0" fill="rgb(247,174,51)" rx="2" ry="2" />
<text  x="276.99" y="575.5" ></text>
</g>
<g >
<title>c10::SmallVectorTemplateCommon&lt;unsigned long, void&gt;::SmallVectorTemplateCommon (3 samples, 0.13%)</title><rect x="714.0" y="341" width="1.6" height="15.0" fill="rgb(227,159,14)" rx="2" ry="2" />
<text  x="716.97" y="351.5" ></text>
</g>
<g >
<title>c10::TensorType::sizes (1 samples, 0.04%)</title><rect x="206.1" y="437" width="0.6" height="15.0" fill="rgb(216,221,47)" rx="2" ry="2" />
<text  x="209.14" y="447.5" ></text>
</g>
<g >
<title>c10::alloc_cpu (37 samples, 1.66%)</title><rect x="553.9" y="309" width="19.6" height="15.0" fill="rgb(253,86,36)" rx="2" ry="2" />
<text  x="556.88" y="319.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (1 samples, 0.04%)</title><rect x="153.1" y="549" width="0.6" height="15.0" fill="rgb(244,168,18)" rx="2" ry="2" />
<text  x="156.13" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign&lt;char*, void&gt; (1 samples, 0.04%)</title><rect x="192.9" y="453" width="0.5" height="15.0" fill="rgb(219,32,8)" rx="2" ry="2" />
<text  x="195.88" y="463.5" ></text>
</g>
<g >
<title>c10::Storage::~Storage (1 samples, 0.04%)</title><rect x="541.2" y="277" width="0.5" height="15.0" fill="rgb(231,53,19)" rx="2" ry="2" />
<text  x="544.16" y="287.5" ></text>
</g>
<g >
<title>[libcufft.so.10.2.0.218] (3 samples, 0.13%)</title><rect x="173.8" y="629" width="1.6" height="15.0" fill="rgb(206,145,44)" rx="2" ry="2" />
<text  x="176.80" y="639.5" ></text>
</g>
<g >
<title>c10::SmallVectorImpl&lt;unsigned long&gt;::~SmallVectorImpl (1 samples, 0.04%)</title><rect x="946.2" y="485" width="0.5" height="15.0" fill="rgb(211,89,1)" rx="2" ry="2" />
<text  x="949.15" y="495.5" ></text>
</g>
<g >
<title>__static_initialization_and_destruction_0 (1 samples, 0.04%)</title><rect x="263.9" y="613" width="0.5" height="15.0" fill="rgb(224,213,52)" rx="2" ry="2" />
<text  x="266.92" y="623.5" ></text>
</g>
<g >
<title>isalpha@plt (1 samples, 0.04%)</title><rect x="240.6" y="341" width="0.5" height="15.0" fill="rgb(226,85,41)" rx="2" ry="2" />
<text  x="243.59" y="351.5" ></text>
</g>
<g >
<title>c10::TensorImpl::empty_tensor_restride (2 samples, 0.09%)</title><rect x="1098.8" y="325" width="1.1" height="15.0" fill="rgb(253,199,50)" rx="2" ry="2" />
<text  x="1101.82" y="335.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="276.6" y="517" width="0.6" height="15.0" fill="rgb(208,31,3)" rx="2" ry="2" />
<text  x="279.64" y="527.5" ></text>
</g>
<g >
<title>filemap_map_pages (2 samples, 0.09%)</title><rect x="1137.0" y="421" width="1.1" height="15.0" fill="rgb(227,152,40)" rx="2" ry="2" />
<text  x="1139.99" y="431.5" ></text>
</g>
<g >
<title>c10::KernelFunction::makeFromUnboxedOnlyRuntimeFunction&lt;at::Tensor&amp;  (1 samples, 0.04%)</title><rect x="178.6" y="549" width="0.5" height="15.0" fill="rgb(207,179,15)" rx="2" ry="2" />
<text  x="181.57" y="559.5" ></text>
</g>
<g >
<title>c10::RegistrationHandleRAII::RegistrationHandleRAII (1 samples, 0.04%)</title><rect x="224.7" y="485" width="0.5" height="15.0" fill="rgb(217,36,53)" rx="2" ry="2" />
<text  x="227.69" y="495.5" ></text>
</g>
<g >
<title>c10::FunctionSchema::FunctionSchema (1 samples, 0.04%)</title><rect x="176.5" y="469" width="0.5" height="15.0" fill="rgb(223,128,25)" rx="2" ry="2" />
<text  x="179.45" y="479.5" ></text>
</g>
<g >
<title>c10::ProfiledCPUMemoryReporter::Delete (1 samples, 0.04%)</title><rect x="134.0" y="677" width="0.6" height="15.0" fill="rgb(239,21,7)" rx="2" ry="2" />
<text  x="137.04" y="687.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="181.2" y="149" width="0.6" height="15.0" fill="rgb(216,12,21)" rx="2" ry="2" />
<text  x="184.22" y="159.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::ParseFromArray (2 samples, 0.09%)</title><rect x="295.7" y="581" width="1.1" height="15.0" fill="rgb(238,5,41)" rx="2" ry="2" />
<text  x="298.72" y="591.5" ></text>
</g>
<g >
<title>c10::TensorImpl::refresh_contiguous (5 samples, 0.22%)</title><rect x="1062.8" y="277" width="2.6" height="15.0" fill="rgb(222,77,33)" rx="2" ry="2" />
<text  x="1065.78" y="287.5" ></text>
</g>
<g >
<title>perf (9 samples, 0.40%)</title><rect x="1185.2" y="709" width="4.8" height="15.0" fill="rgb(216,149,16)" rx="2" ry="2" />
<text  x="1188.23" y="719.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="1163.5" y="677" width="0.5" height="15.0" fill="rgb(221,156,11)" rx="2" ry="2" />
<text  x="1166.50" y="687.5" ></text>
</g>
<g >
<title>torch::autograd::make_variable (3 samples, 0.13%)</title><rect x="96.4" y="677" width="1.6" height="15.0" fill="rgb(233,66,3)" rx="2" ry="2" />
<text  x="99.41" y="687.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::_M_deallocate (2 samples, 0.09%)</title><rect x="320.6" y="213" width="1.1" height="15.0" fill="rgb(209,33,48)" rx="2" ry="2" />
<text  x="323.64" y="223.5" ></text>
</g>
<g >
<title>torch::empty (174 samples, 7.82%)</title><rect x="507.2" y="613" width="92.3" height="15.0" fill="rgb(241,207,23)" rx="2" ry="2" />
<text  x="510.23" y="623.5" >torch::empty</text>
</g>
<g >
<title>c10::impl::OperatorEntry::computeDispatchTableEntryWithDebug@plt (1 samples, 0.04%)</title><rect x="253.8" y="469" width="0.6" height="15.0" fill="rgb(205,105,45)" rx="2" ry="2" />
<text  x="256.85" y="479.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;torch::jit::Source,  (1 samples, 0.04%)</title><rect x="252.8" y="437" width="0.5" height="15.0" fill="rgb(247,80,13)" rx="2" ry="2" />
<text  x="255.79" y="447.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.27%)</title><rect x="988.6" y="261" width="3.1" height="15.0" fill="rgb(207,83,8)" rx="2" ry="2" />
<text  x="991.56" y="271.5" ></text>
</g>
<g >
<title>c10::TensorImpl::dim (1 samples, 0.04%)</title><rect x="790.8" y="277" width="0.6" height="15.0" fill="rgb(249,144,37)" rx="2" ry="2" />
<text  x="793.84" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1 samples, 0.04%)</title><rect x="251.7" y="517" width="0.6" height="15.0" fill="rgb(216,97,25)" rx="2" ry="2" />
<text  x="254.73" y="527.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;c10::DebugInfoBase&gt;::~shared_ptr (1 samples, 0.04%)</title><rect x="853.9" y="341" width="0.5" height="15.0" fill="rgb(249,159,1)" rx="2" ry="2" />
<text  x="856.92" y="351.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.04%)</title><rect x="221.5" y="437" width="0.5" height="15.0" fill="rgb(252,16,3)" rx="2" ry="2" />
<text  x="224.51" y="447.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1 samples, 0.04%)</title><rect x="280.4" y="533" width="0.5" height="15.0" fill="rgb(217,18,46)" rx="2" ry="2" />
<text  x="283.35" y="543.5" ></text>
</g>
<g >
<title>c10::TensorOptions::set_device (2 samples, 0.09%)</title><rect x="655.7" y="581" width="1.0" height="15.0" fill="rgb(238,94,37)" rx="2" ry="2" />
<text  x="658.66" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (1 samples, 0.04%)</title><rect x="215.1" y="485" width="0.6" height="15.0" fill="rgb(242,80,3)" rx="2" ry="2" />
<text  x="218.15" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_ostringstream (1 samples, 0.04%)</title><rect x="251.2" y="517" width="0.5" height="15.0" fill="rgb(239,180,5)" rx="2" ry="2" />
<text  x="254.19" y="527.5" ></text>
</g>
<g >
<title>parseName (1 samples, 0.04%)</title><rect x="114.4" y="517" width="0.6" height="15.0" fill="rgb(248,218,15)" rx="2" ry="2" />
<text  x="117.43" y="527.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.04%)</title><rect x="280.9" y="437" width="0.5" height="15.0" fill="rgb(221,82,43)" rx="2" ry="2" />
<text  x="283.88" y="447.5" ></text>
</g>
<g >
<title>c10::demangle[abi:cxx11] (1 samples, 0.04%)</title><rect x="276.1" y="597" width="0.5" height="15.0" fill="rgb(215,100,50)" rx="2" ry="2" />
<text  x="279.11" y="607.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;torch::jit::Source, std::allocator&lt;torch::jit::Source&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.04%)</title><rect x="188.1" y="469" width="0.5" height="15.0" fill="rgb(217,194,32)" rx="2" ry="2" />
<text  x="191.11" y="479.5" ></text>
</g>
<g >
<title>torch::CppFunction::CppFunction&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor  (1 samples, 0.04%)</title><rect x="179.1" y="549" width="0.5" height="15.0" fill="rgb(217,36,25)" rx="2" ry="2" />
<text  x="182.10" y="559.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, caffe2::OpSchema, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt; &gt;::emplace&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, caffe2::OpSchema&gt; &gt; (1 samples, 0.04%)</title><rect x="279.8" y="597" width="0.6" height="15.0" fill="rgb(245,39,6)" rx="2" ry="2" />
<text  x="282.82" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::vector (1 samples, 0.04%)</title><rect x="210.9" y="437" width="0.5" height="15.0" fill="rgb(206,51,2)" rx="2" ry="2" />
<text  x="213.91" y="447.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::Lexer (1 samples, 0.04%)</title><rect x="288.3" y="549" width="0.5" height="15.0" fill="rgb(208,27,19)" rx="2" ry="2" />
<text  x="291.30" y="559.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="260.2" y="389" width="0.5" height="15.0" fill="rgb(232,130,32)" rx="2" ry="2" />
<text  x="263.21" y="399.5" ></text>
</g>
<g >
<title>__GI___sbrk (1 samples, 0.04%)</title><rect x="231.1" y="229" width="0.5" height="15.0" fill="rgb(241,162,24)" rx="2" ry="2" />
<text  x="234.05" y="239.5" ></text>
</g>
<g >
<title>at::detail::make_tensor&lt;c10::TensorImpl, c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;, c10::DispatchKey, caffe2::TypeMeta&amp;&gt; (3 samples, 0.13%)</title><rect x="128.7" y="645" width="1.6" height="15.0" fill="rgb(232,229,35)" rx="2" ry="2" />
<text  x="131.74" y="655.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (1 samples, 0.04%)</title><rect x="163.2" y="677" width="0.5" height="15.0" fill="rgb(214,133,50)" rx="2" ry="2" />
<text  x="166.20" y="687.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_rnn.cpp (1 samples, 0.04%)</title><rect x="268.7" y="613" width="0.5" height="15.0" fill="rgb(254,1,10)" rx="2" ry="2" />
<text  x="271.69" y="623.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.04%)</title><rect x="253.3" y="421" width="0.5" height="15.0" fill="rgb(208,128,20)" rx="2" ry="2" />
<text  x="256.32" y="431.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.09%)</title><rect x="315.3" y="213" width="1.1" height="15.0" fill="rgb(206,218,39)" rx="2" ry="2" />
<text  x="318.34" y="223.5" ></text>
</g>
<g >
<title>install_exec_creds (1 samples, 0.04%)</title><rect x="1169.3" y="597" width="0.6" height="15.0" fill="rgb(212,178,22)" rx="2" ry="2" />
<text  x="1172.33" y="607.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.04%)</title><rect x="293.1" y="421" width="0.5" height="15.0" fill="rgb(207,197,29)" rx="2" ry="2" />
<text  x="296.07" y="431.5" ></text>
</g>
<g >
<title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;, c10::DispatchKey, std::hash&lt;c10::DispatchKey&gt;, ska::detailv3::KeyOrValueHasher&lt;c10::DispatchKey, std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;, std::hash&lt;c10::DispatchKey&gt; &gt;, std::equal_to&lt;c10::DispatchKey&gt;, ska::detailv3::KeyOrValueEquality&lt;c10::DispatchKey, std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;, std::equal_to&lt;c10::DispatchKey&gt; &gt;, std::allocator&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt; &gt; &gt; &gt;::emplace&lt;c10::DispatchKey const&amp;, ska::flat_hash_map&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt;, std::hash&lt;c10::DispatchKey&gt;, std::equal_to&lt;c10::DispatchKey&gt;, std::allocator&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt; &gt; &gt;::convertible_to_value&gt; (1 samples, 0.04%)</title><rect x="258.1" y="485" width="0.5" height="15.0" fill="rgb(238,186,21)" rx="2" ry="2" />
<text  x="261.09" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;c10::Dispatcher::OperatorDef, std::allocator&lt;c10::Dispatcher::OperatorDef&gt; &gt;::_M_insert&lt;c10::OperatorName&gt; (4 samples, 0.18%)</title><rect x="216.7" y="485" width="2.2" height="15.0" fill="rgb(223,77,11)" rx="2" ry="2" />
<text  x="219.74" y="495.5" ></text>
</g>
<g >
<title>pte_alloc_one (1 samples, 0.04%)</title><rect x="1109.4" y="405" width="0.6" height="15.0" fill="rgb(228,18,52)" rx="2" ry="2" />
<text  x="1112.42" y="415.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.04%)</title><rect x="281.9" y="437" width="0.6" height="15.0" fill="rgb(232,94,41)" rx="2" ry="2" />
<text  x="284.94" y="447.5" ></text>
</g>
<g >
<title>[libcublasLt.so.11.1.0.229] (2 samples, 0.09%)</title><rect x="103.3" y="677" width="1.1" height="15.0" fill="rgb(247,163,29)" rx="2" ry="2" />
<text  x="106.30" y="687.5" ></text>
</g>
<g >
<title>c10::TensorImpl::compute_numel (2 samples, 0.09%)</title><rect x="1066.0" y="277" width="1.0" height="15.0" fill="rgb(219,59,35)" rx="2" ry="2" />
<text  x="1068.96" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str (1 samples, 0.04%)</title><rect x="201.9" y="453" width="0.5" height="15.0" fill="rgb(250,121,7)" rx="2" ry="2" />
<text  x="204.90" y="463.5" ></text>
</g>
<g >
<title>at::RecordFunction::~RecordFunction (7 samples, 0.31%)</title><rect x="41.8" y="677" width="3.7" height="15.0" fill="rgb(212,52,22)" rx="2" ry="2" />
<text  x="44.81" y="687.5" ></text>
</g>
<g >
<title>_Hashtable (1 samples, 0.04%)</title><rect x="132.5" y="645" width="0.5" height="15.0" fill="rgb(220,74,23)" rx="2" ry="2" />
<text  x="135.45" y="655.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, c10::FunctionSchema*, false&gt;::_Head_base&lt;c10::FunctionSchema*&amp;&gt; (1 samples, 0.04%)</title><rect x="259.7" y="437" width="0.5" height="15.0" fill="rgb(248,208,28)" rx="2" ry="2" />
<text  x="262.68" y="447.5" ></text>
</g>
<g >
<title>debugString (1 samples, 0.04%)</title><rect x="254.9" y="517" width="0.5" height="15.0" fill="rgb(211,23,35)" rx="2" ry="2" />
<text  x="257.91" y="527.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::isNumber (1 samples, 0.04%)</title><rect x="213.0" y="341" width="0.6" height="15.0" fill="rgb(209,180,39)" rx="2" ry="2" />
<text  x="216.03" y="351.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::operator++ (7 samples, 0.31%)</title><rect x="815.2" y="277" width="3.7" height="15.0" fill="rgb(254,84,13)" rx="2" ry="2" />
<text  x="818.22" y="287.5" ></text>
</g>
<g >
<title>c10::DataPtr::clear (16 samples, 0.72%)</title><rect x="846.0" y="453" width="8.4" height="15.0" fill="rgb(223,62,14)" rx="2" ry="2" />
<text  x="848.97" y="463.5" ></text>
</g>
<g >
<title>[microbenchmark] (1 samples, 0.04%)</title><rect x="868.8" y="485" width="0.5" height="15.0" fill="rgb(230,170,31)" rx="2" ry="2" />
<text  x="871.76" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt; &gt;::_M_drop_node (2 samples, 0.09%)</title><rect x="310.6" y="469" width="1.0" height="15.0" fill="rgb(226,140,0)" rx="2" ry="2" />
<text  x="313.57" y="479.5" ></text>
</g>
<g >
<title>parseList (2 samples, 0.09%)</title><rect x="265.5" y="453" width="1.1" height="15.0" fill="rgb(240,68,5)" rx="2" ry="2" />
<text  x="268.51" y="463.5" ></text>
</g>
<g >
<title>new_sync_read (1 samples, 0.04%)</title><rect x="1111.5" y="405" width="0.6" height="15.0" fill="rgb(250,195,33)" rx="2" ry="2" />
<text  x="1114.55" y="415.5" ></text>
</g>
<g >
<title>at::empty (248 samples, 11.14%)</title><rect x="691.2" y="581" width="131.4" height="15.0" fill="rgb(238,127,12)" rx="2" ry="2" />
<text  x="694.18" y="591.5" >at::empty</text>
</g>
<g >
<title>_int_malloc (1 samples, 0.04%)</title><rect x="189.7" y="421" width="0.5" height="15.0" fill="rgb(251,228,45)" rx="2" ry="2" />
<text  x="192.70" y="431.5" ></text>
</g>
<g >
<title>torch::jit::parseName (1 samples, 0.04%)</title><rect x="198.2" y="533" width="0.5" height="15.0" fill="rgb(218,186,27)" rx="2" ry="2" />
<text  x="201.19" y="543.5" ></text>
</g>
<g >
<title>at::StringView::~StringView (1 samples, 0.04%)</title><rect x="702.8" y="501" width="0.6" height="15.0" fill="rgb(243,95,26)" rx="2" ry="2" />
<text  x="705.84" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.09%)</title><rect x="1110.0" y="501" width="1.0" height="15.0" fill="rgb(231,26,31)" rx="2" ry="2" />
<text  x="1112.96" y="511.5" ></text>
</g>
<g >
<title>c10::TypedOperatorHandle&lt;at::Tensor  (124 samples, 5.57%)</title><rect x="529.5" y="453" width="65.7" height="15.0" fill="rgb(207,19,24)" rx="2" ry="2" />
<text  x="532.50" y="463.5" >c10::Ty..</text>
</g>
<g >
<title>at::impl::variable_excluded_from_dispatch (3 samples, 0.13%)</title><rect x="401.7" y="325" width="1.6" height="15.0" fill="rgb(227,48,10)" rx="2" ry="2" />
<text  x="404.74" y="335.5" ></text>
</g>
<g >
<title>c10::SmallVector&lt;long, 5u&gt;::SmallVector (3 samples, 0.13%)</title><rect x="734.6" y="213" width="1.6" height="15.0" fill="rgb(216,89,17)" rx="2" ry="2" />
<text  x="737.65" y="223.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTable_ (1 samples, 0.04%)</title><rect x="268.2" y="485" width="0.5" height="15.0" fill="rgb(251,107,47)" rx="2" ry="2" />
<text  x="271.16" y="495.5" ></text>
</g>
<g >
<title>torch::schema (1 samples, 0.04%)</title><rect x="195.0" y="549" width="0.5" height="15.0" fill="rgb(207,58,54)" rx="2" ry="2" />
<text  x="198.00" y="559.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.04%)</title><rect x="318.5" y="293" width="0.5" height="15.0" fill="rgb(236,227,49)" rx="2" ry="2" />
<text  x="321.52" y="303.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (1 samples, 0.04%)</title><rect x="194.5" y="405" width="0.5" height="15.0" fill="rgb(234,14,25)" rx="2" ry="2" />
<text  x="197.47" y="415.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::nextIf (1 samples, 0.04%)</title><rect x="213.0" y="421" width="0.6" height="15.0" fill="rgb(209,27,44)" rx="2" ry="2" />
<text  x="216.03" y="431.5" ></text>
</g>
<g >
<title>__tls_get_addr@plt (1 samples, 0.04%)</title><rect x="945.1" y="437" width="0.5" height="15.0" fill="rgb(209,112,13)" rx="2" ry="2" />
<text  x="948.09" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;c10::AutogradMetaInterface, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::_M_ptr (1 samples, 0.04%)</title><rect x="906.9" y="517" width="0.6" height="15.0" fill="rgb(206,16,45)" rx="2" ry="2" />
<text  x="909.93" y="527.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="274.5" y="469" width="0.5" height="15.0" fill="rgb(243,118,21)" rx="2" ry="2" />
<text  x="277.52" y="479.5" ></text>
</g>
<g >
<title>[microbenchmark] (2 samples, 0.09%)</title><rect x="668.9" y="581" width="1.1" height="15.0" fill="rgb(233,108,10)" rx="2" ry="2" />
<text  x="671.91" y="591.5" ></text>
</g>
<g >
<title>__do_execve_file.isra.0 (9 samples, 0.40%)</title><rect x="1185.2" y="645" width="4.8" height="15.0" fill="rgb(218,59,26)" rx="2" ry="2" />
<text  x="1188.23" y="655.5" ></text>
</g>
<g >
<title>[microbenchmark] (1 samples, 0.04%)</title><rect x="690.1" y="565" width="0.5" height="15.0" fill="rgb(216,90,17)" rx="2" ry="2" />
<text  x="693.12" y="575.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="174.9" y="533" width="0.5" height="15.0" fill="rgb(206,13,45)" rx="2" ry="2" />
<text  x="177.86" y="543.5" ></text>
</g>
<g >
<title>c10::detail::_str_wrapper&lt;char const*, char const* const&amp;, char const*, unsigned int const&amp;&gt;::call[abi:cxx11] (1 samples, 0.04%)</title><rect x="209.8" y="501" width="0.6" height="15.0" fill="rgb(226,123,43)" rx="2" ry="2" />
<text  x="212.85" y="511.5" ></text>
</g>
<g >
<title>torch::Library::def&lt;char const  (1 samples, 0.04%)</title><rect x="195.5" y="565" width="0.6" height="15.0" fill="rgb(225,59,18)" rx="2" ry="2" />
<text  x="198.53" y="575.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="1109.4" y="485" width="0.6" height="15.0" fill="rgb(211,228,45)" rx="2" ry="2" />
<text  x="1112.42" y="495.5" ></text>
</g>
<g >
<title>__lru_cache_add (1 samples, 0.04%)</title><rect x="284.6" y="373" width="0.5" height="15.0" fill="rgb(241,129,39)" rx="2" ry="2" />
<text  x="287.59" y="383.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (2 samples, 0.09%)</title><rect x="323.3" y="405" width="1.0" height="15.0" fill="rgb(207,35,50)" rx="2" ry="2" />
<text  x="326.29" y="415.5" ></text>
</g>
<g >
<title>c10::Device::Device (1 samples, 0.04%)</title><rect x="796.1" y="293" width="0.6" height="15.0" fill="rgb(218,143,3)" rx="2" ry="2" />
<text  x="799.14" y="303.5" ></text>
</g>
<g >
<title>__static_initialization_and_destruction_0 (1 samples, 0.04%)</title><rect x="263.4" y="613" width="0.5" height="15.0" fill="rgb(222,156,25)" rx="2" ry="2" />
<text  x="266.39" y="623.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.04%)</title><rect x="170.1" y="517" width="0.5" height="15.0" fill="rgb(210,140,15)" rx="2" ry="2" />
<text  x="173.09" y="527.5" ></text>
</g>
<g >
<title>at::hasCallbacks (1 samples, 0.04%)</title><rect x="956.2" y="357" width="0.6" height="15.0" fill="rgb(247,59,21)" rx="2" ry="2" />
<text  x="959.23" y="367.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (1 samples, 0.04%)</title><rect x="209.3" y="501" width="0.5" height="15.0" fill="rgb(252,70,25)" rx="2" ry="2" />
<text  x="212.32" y="511.5" ></text>
</g>
<g >
<title>c10::SmallVectorTemplateCommon&lt;long, void&gt;::SmallVectorTemplateCommon (1 samples, 0.04%)</title><rect x="543.3" y="181" width="0.5" height="15.0" fill="rgb(209,107,54)" rx="2" ry="2" />
<text  x="546.28" y="191.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="274.5" y="405" width="0.5" height="15.0" fill="rgb(218,211,5)" rx="2" ry="2" />
<text  x="277.52" y="415.5" ></text>
</g>
<g >
<title>__activate_page (3 samples, 0.13%)</title><rect x="1175.2" y="469" width="1.5" height="15.0" fill="rgb(224,4,20)" rx="2" ry="2" />
<text  x="1178.16" y="479.5" ></text>
</g>
<g >
<title>at::RecordFunction::RecordFunction (4 samples, 0.18%)</title><rect x="531.1" y="421" width="2.1" height="15.0" fill="rgb(214,82,17)" rx="2" ry="2" />
<text  x="534.09" y="431.5" ></text>
</g>
<g >
<title>cpuinfo_x86_linux_init (1 samples, 0.04%)</title><rect x="197.7" y="501" width="0.5" height="15.0" fill="rgb(213,220,29)" rx="2" ry="2" />
<text  x="200.65" y="511.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.04%)</title><rect x="169.0" y="597" width="0.6" height="15.0" fill="rgb(229,125,10)" rx="2" ry="2" />
<text  x="172.03" y="607.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; (1 samples, 0.04%)</title><rect x="181.2" y="341" width="0.6" height="15.0" fill="rgb(240,20,18)" rx="2" ry="2" />
<text  x="184.22" y="351.5" ></text>
</g>
<g >
<title>c10::dtype (1 samples, 0.04%)</title><rect x="157.9" y="661" width="0.5" height="15.0" fill="rgb(238,145,4)" rx="2" ry="2" />
<text  x="160.90" y="671.5" ></text>
</g>
<g >
<title>std::hash&lt;c10::OperatorName&gt;::operator (1 samples, 0.04%)</title><rect x="216.2" y="373" width="0.5" height="15.0" fill="rgb(220,171,32)" rx="2" ry="2" />
<text  x="219.21" y="383.5" ></text>
</g>
<g >
<title>c10::demangle[abi:cxx11] (1 samples, 0.04%)</title><rect x="275.6" y="597" width="0.5" height="15.0" fill="rgb(240,88,23)" rx="2" ry="2" />
<text  x="278.58" y="607.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (1 samples, 0.04%)</title><rect x="274.5" y="325" width="0.5" height="15.0" fill="rgb(253,176,16)" rx="2" ry="2" />
<text  x="277.52" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_ostringstream (1 samples, 0.04%)</title><rect x="224.2" y="485" width="0.5" height="15.0" fill="rgb(233,15,43)" rx="2" ry="2" />
<text  x="227.16" y="495.5" ></text>
</g>
<g >
<title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (193 samples, 8.67%)</title><rect x="717.2" y="373" width="102.3" height="15.0" fill="rgb(216,11,44)" rx="2" ry="2" />
<text  x="720.15" y="383.5" >c10::impl::w..</text>
</g>
<g >
<title>std::unique_ptr&lt;void, void  (18 samples, 0.81%)</title><rect x="623.3" y="421" width="9.6" height="15.0" fill="rgb(240,222,26)" rx="2" ry="2" />
<text  x="626.32" y="431.5" ></text>
</g>
<g >
<title>_mid_memalign (43 samples, 1.93%)</title><rect x="755.3" y="245" width="22.8" height="15.0" fill="rgb(235,150,47)" rx="2" ry="2" />
<text  x="758.32" y="255.5" >_..</text>
</g>
<g >
<title>at::is_custom_op (2 samples, 0.09%)</title><rect x="131.9" y="677" width="1.1" height="15.0" fill="rgb(254,201,32)" rx="2" ry="2" />
<text  x="134.92" y="687.5" ></text>
</g>
<g >
<title>dispatchTypeId (1 samples, 0.04%)</title><rect x="520.5" y="517" width="0.5" height="15.0" fill="rgb(233,162,17)" rx="2" ry="2" />
<text  x="523.49" y="527.5" ></text>
</g>
<g >
<title>llvm::countLeadingZeros&lt;unsigned long&gt; (2 samples, 0.09%)</title><rect x="941.4" y="469" width="1.0" height="15.0" fill="rgb(207,25,47)" rx="2" ry="2" />
<text  x="944.38" y="479.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (3 samples, 0.13%)</title><rect x="240.1" y="453" width="1.6" height="15.0" fill="rgb(217,101,49)" rx="2" ry="2" />
<text  x="243.06" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::_Vector_base (1 samples, 0.04%)</title><rect x="210.9" y="421" width="0.5" height="15.0" fill="rgb(228,93,35)" rx="2" ry="2" />
<text  x="213.91" y="431.5" ></text>
</g>
<g >
<title>c10::Dispatcher::cleanup (1 samples, 0.04%)</title><rect x="321.7" y="421" width="0.5" height="15.0" fill="rgb(239,198,5)" rx="2" ry="2" />
<text  x="324.70" y="431.5" ></text>
</g>
<g >
<title>c10::DispatchKeyExtractor::dispatchKeySetToDispatchKey_ (4 samples, 0.18%)</title><rect x="375.8" y="533" width="2.1" height="15.0" fill="rgb(229,94,44)" rx="2" ry="2" />
<text  x="378.77" y="543.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_qconcat.cpp (1 samples, 0.04%)</title><rect x="267.1" y="629" width="0.5" height="15.0" fill="rgb(236,95,17)" rx="2" ry="2" />
<text  x="270.10" y="639.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.04%)</title><rect x="249.1" y="421" width="0.5" height="15.0" fill="rgb(207,49,52)" rx="2" ry="2" />
<text  x="252.07" y="431.5" ></text>
</g>
<g >
<title>torch::jit::parseName (1 samples, 0.04%)</title><rect x="259.1" y="517" width="0.6" height="15.0" fill="rgb(251,118,47)" rx="2" ry="2" />
<text  x="262.15" y="527.5" ></text>
</g>
<g >
<title>c10::TensorOptions::dtype (8 samples, 0.36%)</title><rect x="490.3" y="613" width="4.2" height="15.0" fill="rgb(207,178,33)" rx="2" ry="2" />
<text  x="493.27" y="623.5" ></text>
</g>
<g >
<title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;, c10::DispatchKey, std::hash&lt;c10::DispatchKey&gt;, ska::detailv3::KeyOrValueHasher&lt;c10::DispatchKey, std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;, std::hash&lt;c10::DispatchKey&gt; &gt;, std::equal_to&lt;c10::DispatchKey&gt;, ska::detailv3::KeyOrValueEquality&lt;c10::DispatchKey, std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;, std::equal_to&lt;c10::DispatchKey&gt; &gt;, std::allocator&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt; &gt; &gt; &gt;::~sherwood_v3_table (3 samples, 0.13%)</title><rect x="313.7" y="261" width="1.6" height="15.0" fill="rgb(231,96,8)" rx="2" ry="2" />
<text  x="316.75" y="271.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.04%)</title><rect x="212.5" y="341" width="0.5" height="15.0" fill="rgb(220,132,29)" rx="2" ry="2" />
<text  x="215.50" y="351.5" ></text>
</g>
<g >
<title>__static_initialization_and_destruction_0 (1 samples, 0.04%)</title><rect x="269.2" y="613" width="0.5" height="15.0" fill="rgb(218,94,24)" rx="2" ry="2" />
<text  x="272.22" y="623.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (1 samples, 0.04%)</title><rect x="200.8" y="485" width="0.6" height="15.0" fill="rgb(254,114,30)" rx="2" ry="2" />
<text  x="203.84" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;c10::Symbol, c10::Symbol, std::allocator&lt;c10::Symbol&gt;, std::__detail::_Identity, std::equal_to&lt;c10::Symbol&gt;, std::hash&lt;c10::Symbol&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_Hashtable (1 samples, 0.04%)</title><rect x="242.2" y="373" width="0.5" height="15.0" fill="rgb(213,130,7)" rx="2" ry="2" />
<text  x="245.18" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::_M_create_storage (2 samples, 0.09%)</title><rect x="225.8" y="453" width="1.0" height="15.0" fill="rgb(241,156,0)" rx="2" ry="2" />
<text  x="228.75" y="463.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="304.2" y="517" width="0.5" height="15.0" fill="rgb(250,74,54)" rx="2" ry="2" />
<text  x="307.20" y="527.5" ></text>
</g>
<g >
<title>c10::alloc_cpu (34 samples, 1.53%)</title><rect x="407.6" y="309" width="18.0" height="15.0" fill="rgb(245,229,22)" rx="2" ry="2" />
<text  x="410.57" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Insert_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::insert (1 samples, 0.04%)</title><rect x="217.3" y="325" width="0.5" height="15.0" fill="rgb(215,121,24)" rx="2" ry="2" />
<text  x="220.27" y="335.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (1 samples, 0.04%)</title><rect x="210.9" y="181" width="0.5" height="15.0" fill="rgb(207,104,34)" rx="2" ry="2" />
<text  x="213.91" y="191.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, torch::CppFunction&gt; (4 samples, 0.18%)</title><rect x="247.5" y="565" width="2.1" height="15.0" fill="rgb(206,168,21)" rx="2" ry="2" />
<text  x="250.48" y="575.5" ></text>
</g>
<g >
<title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, c10::OperatorName, std::hash&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueHasher&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::hash&lt;c10::OperatorName&gt; &gt;, std::equal_to&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueEquality&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::equal_to&lt;c10::OperatorName&gt; &gt;, std::allocator&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt; &gt; &gt;::find (1 samples, 0.04%)</title><rect x="250.1" y="453" width="0.6" height="15.0" fill="rgb(246,157,41)" rx="2" ry="2" />
<text  x="253.13" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;c10::IValue, std::allocator&lt;c10::IValue&gt; &gt;::_Vector_impl_data::_Vector_impl_data (1 samples, 0.04%)</title><rect x="532.7" y="357" width="0.5" height="15.0" fill="rgb(213,16,33)" rx="2" ry="2" />
<text  x="535.68" y="367.5" ></text>
</g>
<g >
<title>c10::KernelFunction::makeFromUnboxedFunctor&lt;false, c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (1 samples, 0.04%)</title><rect x="267.1" y="517" width="0.5" height="15.0" fill="rgb(252,63,21)" rx="2" ry="2" />
<text  x="270.10" y="527.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (1 samples, 0.04%)</title><rect x="361.5" y="597" width="0.5" height="15.0" fill="rgb(222,55,54)" rx="2" ry="2" />
<text  x="364.46" y="607.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.04%)</title><rect x="284.6" y="485" width="0.5" height="15.0" fill="rgb(212,70,25)" rx="2" ry="2" />
<text  x="287.59" y="495.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="264.4" y="549" width="0.6" height="15.0" fill="rgb(237,81,43)" rx="2" ry="2" />
<text  x="267.45" y="559.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;caffe2::OpSchema::num_inputs_outputs_allowed_::{lambda (1 samples, 0.04%)</title><rect x="171.2" y="677" width="0.5" height="15.0" fill="rgb(215,158,14)" rx="2" ry="2" />
<text  x="174.15" y="687.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor  (1 samples, 0.04%)</title><rect x="200.3" y="549" width="0.5" height="15.0" fill="rgb(212,49,52)" rx="2" ry="2" />
<text  x="203.31" y="559.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::__atomic_base (1 samples, 0.04%)</title><rect x="813.1" y="229" width="0.5" height="15.0" fill="rgb(237,92,50)" rx="2" ry="2" />
<text  x="816.10" y="239.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.04%)</title><rect x="175.4" y="405" width="0.5" height="15.0" fill="rgb(207,43,13)" rx="2" ry="2" />
<text  x="178.39" y="415.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;float&gt; (4 samples, 0.18%)</title><rect x="91.6" y="677" width="2.2" height="15.0" fill="rgb(214,78,13)" rx="2" ry="2" />
<text  x="94.64" y="687.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (1 samples, 0.04%)</title><rect x="272.4" y="389" width="0.5" height="15.0" fill="rgb(227,124,13)" rx="2" ry="2" />
<text  x="275.40" y="399.5" ></text>
</g>
<g >
<title>c10::GetCPUAllocator@plt (1 samples, 0.04%)</title><rect x="1046.9" y="309" width="0.5" height="15.0" fill="rgb(205,210,34)" rx="2" ry="2" />
<text  x="1049.87" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::RegistryPriority&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::RegistryPriority&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (1 samples, 0.04%)</title><rect x="273.5" y="517" width="0.5" height="15.0" fill="rgb(210,137,30)" rx="2" ry="2" />
<text  x="276.46" y="527.5" ></text>
</g>
<g >
<title>parseDeclaration (1 samples, 0.04%)</title><rect x="195.0" y="469" width="0.5" height="15.0" fill="rgb(220,194,28)" rx="2" ry="2" />
<text  x="198.00" y="479.5" ></text>
</g>
<g >
<title>torch::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Tracer (1 samples, 0.04%)</title><rect x="199.8" y="549" width="0.5" height="15.0" fill="rgb(228,161,14)" rx="2" ry="2" />
<text  x="202.78" y="559.5" ></text>
</g>
<g >
<title>__tls_get_addr (2 samples, 0.09%)</title><rect x="380.0" y="453" width="1.1" height="15.0" fill="rgb(226,24,17)" rx="2" ry="2" />
<text  x="383.01" y="463.5" ></text>
</g>
<g >
<title>__posix_memalign (45 samples, 2.02%)</title><rect x="754.3" y="277" width="23.8" height="15.0" fill="rgb(246,168,35)" rx="2" ry="2" />
<text  x="757.26" y="287.5" >_..</text>
</g>
<g >
<title>std::__shared_ptr&lt;torch::jit::Source,  (1 samples, 0.04%)</title><rect x="240.1" y="293" width="0.5" height="15.0" fill="rgb(210,192,1)" rx="2" ry="2" />
<text  x="243.06" y="303.5" ></text>
</g>
<g >
<title>impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor (1 samples, 0.04%)</title><rect x="199.2" y="565" width="0.6" height="15.0" fill="rgb(243,3,33)" rx="2" ry="2" />
<text  x="202.25" y="575.5" ></text>
</g>
<g >
<title>__vfs_read (1 samples, 0.04%)</title><rect x="1111.5" y="421" width="0.6" height="15.0" fill="rgb(238,178,37)" rx="2" ry="2" />
<text  x="1114.55" y="431.5" ></text>
</g>
<g >
<title>activate_page (3 samples, 0.13%)</title><rect x="1173.0" y="517" width="1.6" height="15.0" fill="rgb(209,135,43)" rx="2" ry="2" />
<text  x="1176.04" y="527.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (1 samples, 0.04%)</title><rect x="182.3" y="277" width="0.5" height="15.0" fill="rgb(250,163,40)" rx="2" ry="2" />
<text  x="185.28" y="287.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="284.6" y="437" width="0.5" height="15.0" fill="rgb(222,171,32)" rx="2" ry="2" />
<text  x="287.59" y="447.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="226.3" y="373" width="0.5" height="15.0" fill="rgb(212,29,17)" rx="2" ry="2" />
<text  x="229.28" y="383.5" ></text>
</g>
<g >
<title>__GI___libc_free (2 samples, 0.09%)</title><rect x="334.4" y="405" width="1.1" height="15.0" fill="rgb(253,221,3)" rx="2" ry="2" />
<text  x="337.42" y="415.5" ></text>
</g>
<g >
<title>at::hasCallbacks (4 samples, 0.18%)</title><rect x="943.5" y="501" width="2.1" height="15.0" fill="rgb(224,152,51)" rx="2" ry="2" />
<text  x="946.50" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;at::RecordFunctionCallback, unsigned long&gt;, std::allocator&lt;std::pair&lt;at::RecordFunctionCallback, unsigned long&gt; &gt; &gt;::empty (1 samples, 0.04%)</title><rect x="701.2" y="453" width="0.6" height="15.0" fill="rgb(223,40,44)" rx="2" ry="2" />
<text  x="704.25" y="463.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.04%)</title><rect x="108.6" y="533" width="0.5" height="15.0" fill="rgb(240,186,41)" rx="2" ry="2" />
<text  x="111.60" y="543.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.13%)</title><rect x="983.3" y="165" width="1.6" height="15.0" fill="rgb(224,57,44)" rx="2" ry="2" />
<text  x="986.26" y="175.5" ></text>
</g>
<g >
<title>c10::TensorOptions::device (16 samples, 0.72%)</title><rect x="479.1" y="613" width="8.5" height="15.0" fill="rgb(212,189,20)" rx="2" ry="2" />
<text  x="482.14" y="623.5" ></text>
</g>
<g >
<title>[libc10.so] (2 samples, 0.09%)</title><rect x="611.1" y="565" width="1.1" height="15.0" fill="rgb(250,53,53)" rx="2" ry="2" />
<text  x="614.13" y="575.5" ></text>
</g>
<g >
<title>c10::detail::_str_wrapper&lt;char const*, char const* const&amp;, char const*, unsigned int const&amp;&gt;::call[abi:cxx11] (2 samples, 0.09%)</title><rect x="223.6" y="501" width="1.1" height="15.0" fill="rgb(252,54,8)" rx="2" ry="2" />
<text  x="226.63" y="511.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (1 samples, 0.04%)</title><rect x="281.9" y="469" width="0.6" height="15.0" fill="rgb(223,55,11)" rx="2" ry="2" />
<text  x="284.94" y="479.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_init_intrinsics_check.cc (1 samples, 0.04%)</title><rect x="263.4" y="629" width="0.5" height="15.0" fill="rgb(228,116,36)" rx="2" ry="2" />
<text  x="266.39" y="639.5" ></text>
</g>
<g >
<title>deregisterOperator (2 samples, 0.09%)</title><rect x="309.5" y="373" width="1.1" height="15.0" fill="rgb(232,172,4)" rx="2" ry="2" />
<text  x="312.51" y="383.5" ></text>
</g>
<g >
<title>c10::impl::ExcludeDispatchKeyGuard::~ExcludeDispatchKeyGuard (1 samples, 0.04%)</title><rect x="935.6" y="565" width="0.5" height="15.0" fill="rgb(219,45,40)" rx="2" ry="2" />
<text  x="938.55" y="575.5" ></text>
</g>
<g >
<title>parseDeclaration (1 samples, 0.04%)</title><rect x="201.4" y="485" width="0.5" height="15.0" fill="rgb(212,104,35)" rx="2" ry="2" />
<text  x="204.37" y="495.5" ></text>
</g>
<g >
<title>_int_free (4 samples, 0.18%)</title><rect x="345.0" y="501" width="2.1" height="15.0" fill="rgb(246,105,47)" rx="2" ry="2" />
<text  x="348.02" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string (1 samples, 0.04%)</title><rect x="196.6" y="421" width="0.5" height="15.0" fill="rgb(215,140,43)" rx="2" ry="2" />
<text  x="199.59" y="431.5" ></text>
</g>
<g >
<title>caffe2::OpSchema::Input (1 samples, 0.04%)</title><rect x="278.2" y="613" width="0.6" height="15.0" fill="rgb(245,169,11)" rx="2" ry="2" />
<text  x="281.23" y="623.5" ></text>
</g>
<g >
<title>c10::either&lt;torch::jit::Operator::C10Operator, torch::jit::Operator::JitOnlyOperator&gt;::fold&lt;c10::FunctionSchema const&amp;, torch::jit::Operator::schema (3 samples, 0.13%)</title><rect x="113.4" y="613" width="1.6" height="15.0" fill="rgb(228,157,3)" rx="2" ry="2" />
<text  x="116.37" y="623.5" ></text>
</g>
<g >
<title>vm_normal_page (1 samples, 0.04%)</title><rect x="1180.5" y="517" width="0.5" height="15.0" fill="rgb(211,61,3)" rx="2" ry="2" />
<text  x="1183.46" y="527.5" ></text>
</g>
<g >
<title>cpuinfo_linux_parse_multiline_file (1 samples, 0.04%)</title><rect x="197.7" y="469" width="0.5" height="15.0" fill="rgb(211,164,9)" rx="2" ry="2" />
<text  x="200.65" y="479.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.04%)</title><rect x="277.2" y="581" width="0.5" height="15.0" fill="rgb(249,175,14)" rx="2" ry="2" />
<text  x="280.17" y="591.5" ></text>
</g>
<g >
<title>c10::Device::Device (1 samples, 0.04%)</title><rect x="749.0" y="293" width="0.5" height="15.0" fill="rgb(251,110,5)" rx="2" ry="2" />
<text  x="751.96" y="303.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::Lexer (1 samples, 0.04%)</title><rect x="197.1" y="485" width="0.6" height="15.0" fill="rgb(226,110,38)" rx="2" ry="2" />
<text  x="200.12" y="495.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.04%)</title><rect x="223.6" y="373" width="0.6" height="15.0" fill="rgb(231,150,13)" rx="2" ry="2" />
<text  x="226.63" y="383.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::nextIf (1 samples, 0.04%)</title><rect x="290.4" y="517" width="0.6" height="15.0" fill="rgb(214,166,18)" rx="2" ry="2" />
<text  x="293.42" y="527.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseType (2 samples, 0.09%)</title><rect x="166.4" y="533" width="1.0" height="15.0" fill="rgb(238,184,31)" rx="2" ry="2" />
<text  x="169.38" y="543.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="178.0" y="485" width="0.6" height="15.0" fill="rgb(240,176,43)" rx="2" ry="2" />
<text  x="181.04" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;c10::Argument&gt;::deallocate (2 samples, 0.09%)</title><rect x="320.6" y="181" width="1.1" height="15.0" fill="rgb(252,172,39)" rx="2" ry="2" />
<text  x="323.64" y="191.5" ></text>
</g>
<g >
<title>c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (113 samples, 5.08%)</title><rect x="534.3" y="373" width="59.9" height="15.0" fill="rgb(206,16,41)" rx="2" ry="2" />
<text  x="537.27" y="383.5" >c10::i..</text>
</g>
<g >
<title>at::RecordFunction::~RecordFunction (1 samples, 0.04%)</title><rect x="533.7" y="421" width="0.6" height="15.0" fill="rgb(205,47,44)" rx="2" ry="2" />
<text  x="536.74" y="431.5" ></text>
</g>
<g >
<title>c10::Dispatcher::callWithDispatchKey&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::TensorOptions const&amp;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (208 samples, 9.34%)</title><rect x="709.2" y="421" width="110.3" height="15.0" fill="rgb(252,178,2)" rx="2" ry="2" />
<text  x="712.20" y="431.5" >c10::Dispatch..</text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="304.2" y="533" width="0.5" height="15.0" fill="rgb(223,156,11)" rx="2" ry="2" />
<text  x="307.20" y="543.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_QuantizedCPUType.cpp (2 samples, 0.09%)</title><rect x="193.9" y="629" width="1.1" height="15.0" fill="rgb(216,164,14)" rx="2" ry="2" />
<text  x="196.94" y="639.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;c10::OperatorKernel,  (1 samples, 0.04%)</title><rect x="267.1" y="469" width="0.5" height="15.0" fill="rgb(215,109,42)" rx="2" ry="2" />
<text  x="270.10" y="479.5" ></text>
</g>
<g >
<title>at::hasCallbacks (2 samples, 0.09%)</title><rect x="1184.2" y="661" width="1.0" height="15.0" fill="rgb(235,34,48)" rx="2" ry="2" />
<text  x="1187.17" y="671.5" ></text>
</g>
<g >
<title>c10::TensorImpl::~TensorImpl (17 samples, 0.76%)</title><rect x="339.2" y="581" width="9.0" height="15.0" fill="rgb(212,174,22)" rx="2" ry="2" />
<text  x="342.19" y="591.5" ></text>
</g>
<g >
<title>_dl_runtime_resolve_xsave (1 samples, 0.04%)</title><rect x="195.0" y="389" width="0.5" height="15.0" fill="rgb(250,179,51)" rx="2" ry="2" />
<text  x="198.00" y="399.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (5 samples, 0.22%)</title><rect x="544.9" y="261" width="2.6" height="15.0" fill="rgb(232,216,37)" rx="2" ry="2" />
<text  x="547.87" y="271.5" ></text>
</g>
<g >
<title>std::ostream::operator&lt;&lt; (1 samples, 0.04%)</title><rect x="223.6" y="421" width="0.6" height="15.0" fill="rgb(231,99,39)" rx="2" ry="2" />
<text  x="226.63" y="431.5" ></text>
</g>
<g >
<title>c10::TypedOperatorHandle&lt;at::Tensor  (126 samples, 5.66%)</title><rect x="384.2" y="453" width="66.8" height="15.0" fill="rgb(205,174,12)" rx="2" ry="2" />
<text  x="387.25" y="463.5" >c10::Ty..</text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.04%)</title><rect x="257.6" y="437" width="0.5" height="15.0" fill="rgb(232,64,42)" rx="2" ry="2" />
<text  x="260.56" y="447.5" ></text>
</g>
<g >
<title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, c10::OperatorName, std::hash&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueHasher&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::hash&lt;c10::OperatorName&gt; &gt;, std::equal_to&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueEquality&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::equal_to&lt;c10::OperatorName&gt; &gt;, std::allocator&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt; &gt; &gt;::emplace_new_key&lt;c10::OperatorName const&amp;, c10::OperatorHandle&amp;&gt; (1 samples, 0.04%)</title><rect x="191.8" y="421" width="0.6" height="15.0" fill="rgb(238,6,45)" rx="2" ry="2" />
<text  x="194.82" y="431.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::registerer (2 samples, 0.09%)</title><rect x="296.8" y="613" width="1.0" height="15.0" fill="rgb(252,43,43)" rx="2" ry="2" />
<text  x="299.78" y="623.5" ></text>
</g>
<g >
<title>torch::detail::TorchLibraryInit::TorchLibraryInit (4 samples, 0.18%)</title><rect x="257.0" y="597" width="2.1" height="15.0" fill="rgb(229,175,3)" rx="2" ry="2" />
<text  x="260.03" y="607.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.04%)</title><rect x="316.9" y="277" width="0.6" height="15.0" fill="rgb(247,229,1)" rx="2" ry="2" />
<text  x="319.93" y="287.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.04%)</title><rect x="274.5" y="421" width="0.5" height="15.0" fill="rgb(236,46,12)" rx="2" ry="2" />
<text  x="277.52" y="431.5" ></text>
</g>
<g >
<title>error_entry (1 samples, 0.04%)</title><rect x="32.3" y="661" width="0.5" height="15.0" fill="rgb(234,56,10)" rx="2" ry="2" />
<text  x="35.26" y="671.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_register_prim_ops_c10.cpp (1 samples, 0.04%)</title><rect x="268.2" y="565" width="0.5" height="15.0" fill="rgb(220,103,38)" rx="2" ry="2" />
<text  x="271.16" y="575.5" ></text>
</g>
<g >
<title>page_add_file_rmap (1 samples, 0.04%)</title><rect x="264.4" y="469" width="0.6" height="15.0" fill="rgb(230,176,28)" rx="2" ry="2" />
<text  x="267.45" y="479.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (1 samples, 0.04%)</title><rect x="209.3" y="485" width="0.5" height="15.0" fill="rgb(244,189,46)" rx="2" ry="2" />
<text  x="212.32" y="495.5" ></text>
</g>
<g >
<title>__static_initialization_and_destruction_0 (1 samples, 0.04%)</title><rect x="270.8" y="613" width="0.5" height="15.0" fill="rgb(253,162,19)" rx="2" ry="2" />
<text  x="273.81" y="623.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.04%)</title><rect x="1108.9" y="517" width="0.5" height="15.0" fill="rgb(213,219,51)" rx="2" ry="2" />
<text  x="1111.89" y="527.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;::~intrusive_ptr (16 samples, 0.72%)</title><rect x="846.0" y="501" width="8.4" height="15.0" fill="rgb(212,11,48)" rx="2" ry="2" />
<text  x="848.97" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, char&gt; (1 samples, 0.04%)</title><rect x="203.5" y="405" width="0.5" height="15.0" fill="rgb(215,92,45)" rx="2" ry="2" />
<text  x="206.49" y="415.5" ></text>
</g>
<g >
<title>c10::DispatchKeySet::highestPriorityTypeId (3 samples, 0.13%)</title><rect x="376.3" y="501" width="1.6" height="15.0" fill="rgb(207,180,19)" rx="2" ry="2" />
<text  x="379.30" y="511.5" ></text>
</g>
<g >
<title>c10::callUnboxedKernelFunction&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::TensorOptions const&amp;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (260 samples, 11.68%)</title><rect x="962.6" y="389" width="137.8" height="15.0" fill="rgb(229,2,47)" rx="2" ry="2" />
<text  x="965.59" y="399.5" >c10::callUnboxedK..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;c10::Argument&gt;::allocate (1 samples, 0.04%)</title><rect x="185.5" y="405" width="0.5" height="15.0" fill="rgb(206,10,10)" rx="2" ry="2" />
<text  x="188.46" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_insert&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, true&gt; &gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="181.2" y="309" width="0.6" height="15.0" fill="rgb(207,141,4)" rx="2" ry="2" />
<text  x="184.22" y="319.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;c10::ThreadLocalDebugInfo,  (2 samples, 0.09%)</title><rect x="406.5" y="245" width="1.1" height="15.0" fill="rgb(219,43,3)" rx="2" ry="2" />
<text  x="409.51" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt; const*&gt; (1 samples, 0.04%)</title><rect x="110.7" y="629" width="0.5" height="15.0" fill="rgb(247,114,27)" rx="2" ry="2" />
<text  x="113.72" y="639.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="260.2" y="373" width="0.5" height="15.0" fill="rgb(242,218,27)" rx="2" ry="2" />
<text  x="263.21" y="383.5" ></text>
</g>
<g >
<title>at::CPUType::empty_memory_format (191 samples, 8.58%)</title><rect x="718.2" y="341" width="101.3" height="15.0" fill="rgb(231,57,19)" rx="2" ry="2" />
<text  x="721.21" y="351.5" >at::CPUType:..</text>
</g>
<g >
<title>~SchemaParser (1 samples, 0.04%)</title><rect x="193.4" y="501" width="0.5" height="15.0" fill="rgb(210,203,37)" rx="2" ry="2" />
<text  x="196.41" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;char const*, char const*&gt;, std::allocator&lt;std::pair&lt;char const*, char const*&gt; &gt; &gt;::resize (1 samples, 0.04%)</title><rect x="278.2" y="597" width="0.6" height="15.0" fill="rgb(217,20,32)" rx="2" ry="2" />
<text  x="281.23" y="607.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;c10::OperatorKernel&gt;::shared_ptr&lt;c10::OperatorKernel, std::default_delete&lt;c10::OperatorKernel&gt;, void&gt; (1 samples, 0.04%)</title><rect x="267.1" y="485" width="0.5" height="15.0" fill="rgb(251,126,38)" rx="2" ry="2" />
<text  x="270.10" y="495.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.04%)</title><rect x="169.6" y="437" width="0.5" height="15.0" fill="rgb(209,43,36)" rx="2" ry="2" />
<text  x="172.56" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;torch::jit::Token&gt; &gt;::destroy&lt;torch::jit::Token&gt; (1 samples, 0.04%)</title><rect x="240.1" y="373" width="0.5" height="15.0" fill="rgb(210,220,49)" rx="2" ry="2" />
<text  x="243.06" y="383.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.04%)</title><rect x="276.6" y="357" width="0.6" height="15.0" fill="rgb(214,14,33)" rx="2" ry="2" />
<text  x="279.64" y="367.5" ></text>
</g>
<g >
<title>__static_initialization_and_destruction_0 (3 samples, 0.13%)</title><rect x="255.4" y="613" width="1.6" height="15.0" fill="rgb(245,33,21)" rx="2" ry="2" />
<text  x="258.44" y="623.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::clear (1 samples, 0.04%)</title><rect x="217.8" y="341" width="0.5" height="15.0" fill="rgb(240,176,20)" rx="2" ry="2" />
<text  x="220.80" y="351.5" ></text>
</g>
<g >
<title>do_lookup_x (1 samples, 0.04%)</title><rect x="153.7" y="677" width="0.5" height="15.0" fill="rgb(219,62,5)" rx="2" ry="2" />
<text  x="156.66" y="687.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (1 samples, 0.04%)</title><rect x="222.0" y="453" width="0.6" height="15.0" fill="rgb(254,56,52)" rx="2" ry="2" />
<text  x="225.04" y="463.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::shared_ptr (1 samples, 0.04%)</title><rect x="522.1" y="485" width="0.5" height="15.0" fill="rgb(234,97,44)" rx="2" ry="2" />
<text  x="525.08" y="495.5" ></text>
</g>
<g >
<title>__page_set_anon_rmap (1 samples, 0.04%)</title><rect x="1154.5" y="405" width="0.5" height="15.0" fill="rgb(215,188,6)" rx="2" ry="2" />
<text  x="1157.48" y="415.5" ></text>
</g>
<g >
<title>c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (127 samples, 5.71%)</title><rect x="383.7" y="485" width="67.3" height="15.0" fill="rgb(253,60,47)" rx="2" ry="2" />
<text  x="386.72" y="495.5" >c10::im..</text>
</g>
<g >
<title>std::__shared_ptr&lt;torch::jit::Operator,  (1 samples, 0.04%)</title><rect x="297.3" y="357" width="0.5" height="15.0" fill="rgb(221,150,39)" rx="2" ry="2" />
<text  x="300.31" y="367.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseDeclaration (2 samples, 0.09%)</title><rect x="166.4" y="565" width="1.0" height="15.0" fill="rgb(229,186,49)" rx="2" ry="2" />
<text  x="169.38" y="575.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="193.9" y="453" width="0.6" height="15.0" fill="rgb(214,33,50)" rx="2" ry="2" />
<text  x="196.94" y="463.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;torch::jit::Source&gt;::shared_ptr (1 samples, 0.04%)</title><rect x="249.1" y="373" width="0.5" height="15.0" fill="rgb(224,177,25)" rx="2" ry="2" />
<text  x="252.07" y="383.5" ></text>
</g>
<g >
<title>at::getCPUAllocator (1 samples, 0.04%)</title><rect x="401.2" y="325" width="0.5" height="15.0" fill="rgb(232,129,51)" rx="2" ry="2" />
<text  x="404.21" y="335.5" ></text>
</g>
<g >
<title>__GI___default_morecore (1 samples, 0.04%)</title><rect x="186.0" y="325" width="0.5" height="15.0" fill="rgb(240,97,36)" rx="2" ry="2" />
<text  x="188.99" y="335.5" ></text>
</g>
<g >
<title>c10::VariableVersion::VersionCounter::VersionCounter (2 samples, 0.09%)</title><rect x="397.5" y="181" width="1.1" height="15.0" fill="rgb(239,224,47)" rx="2" ry="2" />
<text  x="400.50" y="191.5" ></text>
</g>
<g >
<title>std::unordered_set&lt;c10::Symbol, std::hash&lt;c10::Symbol&gt;, std::equal_to&lt;c10::Symbol&gt;, std::allocator&lt;c10::Symbol&gt; &gt;::~unordered_set (1 samples, 0.04%)</title><rect x="232.1" y="357" width="0.5" height="15.0" fill="rgb(213,23,31)" rx="2" ry="2" />
<text  x="235.11" y="367.5" ></text>
</g>
<g >
<title>read (1 samples, 0.04%)</title><rect x="197.7" y="453" width="0.5" height="15.0" fill="rgb(208,196,51)" rx="2" ry="2" />
<text  x="200.65" y="463.5" ></text>
</g>
<g >
<title>malloc_consolidate (10 samples, 0.45%)</title><rect x="1038.9" y="197" width="5.3" height="15.0" fill="rgb(225,188,3)" rx="2" ry="2" />
<text  x="1041.92" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back (1 samples, 0.04%)</title><rect x="188.1" y="325" width="0.5" height="15.0" fill="rgb(215,31,16)" rx="2" ry="2" />
<text  x="191.11" y="335.5" ></text>
</g>
<g >
<title>sysmalloc (1 samples, 0.04%)</title><rect x="186.0" y="341" width="0.5" height="15.0" fill="rgb(231,159,13)" rx="2" ry="2" />
<text  x="188.99" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.04%)</title><rect x="234.8" y="357" width="0.5" height="15.0" fill="rgb(221,217,2)" rx="2" ry="2" />
<text  x="237.76" y="367.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;c10::Type&gt;::shared_ptr (1 samples, 0.04%)</title><rect x="267.6" y="421" width="0.6" height="15.0" fill="rgb(238,151,15)" rx="2" ry="2" />
<text  x="270.63" y="431.5" ></text>
</g>
<g >
<title>_int_free (13 samples, 0.58%)</title><rect x="410.2" y="229" width="6.9" height="15.0" fill="rgb(238,29,27)" rx="2" ry="2" />
<text  x="413.22" y="239.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="191.8" y="245" width="0.6" height="15.0" fill="rgb(220,206,12)" rx="2" ry="2" />
<text  x="194.82" y="255.5" ></text>
</g>
<g >
<title>c10::inferFunctionSchemaFlattenedReturns&lt;std::tuple&lt;at::Tensor, at::Tensor&gt;  (1 samples, 0.04%)</title><rect x="179.6" y="517" width="0.6" height="15.0" fill="rgb(246,218,13)" rx="2" ry="2" />
<text  x="182.63" y="527.5" ></text>
</g>
<g >
<title>c10::make_intrusive&lt;c10::VariableVersion::VersionCounter, c10::detail::intrusive_target_default_null_type&lt;c10::VariableVersion::VersionCounter&gt;, unsigned int&amp;&gt; (2 samples, 0.09%)</title><rect x="736.8" y="197" width="1.0" height="15.0" fill="rgb(234,215,10)" rx="2" ry="2" />
<text  x="739.77" y="207.5" ></text>
</g>
<g >
<title>operator (4 samples, 0.18%)</title><rect x="229.5" y="421" width="2.1" height="15.0" fill="rgb(224,110,38)" rx="2" ry="2" />
<text  x="232.46" y="431.5" ></text>
</g>
<g >
<title>torch::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Tracer (2 samples, 0.09%)</title><rect x="206.1" y="581" width="1.1" height="15.0" fill="rgb(224,192,11)" rx="2" ry="2" />
<text  x="209.14" y="591.5" ></text>
</g>
<g >
<title>c10::Registerer&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unique_ptr&lt;caffe2::GradientMakerBase, std::default_delete&lt;caffe2::GradientMakerBase&gt; &gt;, caffe2::OperatorDef const&amp;, std::vector&lt;caffe2::GradientWrapper, std::allocator&lt;caffe2::GradientWrapper&gt; &gt; const&amp;&gt;::Registerer (1 samples, 0.04%)</title><rect x="273.5" y="613" width="0.5" height="15.0" fill="rgb(220,140,31)" rx="2" ry="2" />
<text  x="276.46" y="623.5" ></text>
</g>
<g >
<title>c10::constexpr_storage_t&lt;caffe2::TypeMeta&gt;::constexpr_storage_t&lt;caffe2::TypeMeta&gt; (1 samples, 0.04%)</title><rect x="494.5" y="581" width="0.5" height="15.0" fill="rgb(221,156,3)" rx="2" ry="2" />
<text  x="497.51" y="591.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (1 samples, 0.04%)</title><rect x="251.2" y="469" width="0.5" height="15.0" fill="rgb(245,175,26)" rx="2" ry="2" />
<text  x="254.19" y="479.5" ></text>
</g>
<g >
<title>c10::SmallVectorImpl&lt;long&gt;::resize (3 samples, 0.13%)</title><rect x="578.3" y="309" width="1.6" height="15.0" fill="rgb(224,143,25)" rx="2" ry="2" />
<text  x="581.27" y="319.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;c10::ThreadLocalDebugInfo&gt;::shared_ptr (2 samples, 0.09%)</title><rect x="406.5" y="261" width="1.1" height="15.0" fill="rgb(225,214,21)" rx="2" ry="2" />
<text  x="409.51" y="271.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::computeDispatchTableEntry (1 samples, 0.04%)</title><rect x="324.3" y="405" width="0.6" height="15.0" fill="rgb(240,87,11)" rx="2" ry="2" />
<text  x="327.35" y="415.5" ></text>
</g>
<g >
<title>load_elf_binary (9 samples, 0.40%)</title><rect x="1185.2" y="613" width="4.8" height="15.0" fill="rgb(230,174,17)" rx="2" ry="2" />
<text  x="1188.23" y="623.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="381.1" y="453" width="0.5" height="15.0" fill="rgb(236,214,17)" rx="2" ry="2" />
<text  x="384.07" y="463.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.04%)</title><rect x="1149.2" y="549" width="0.5" height="15.0" fill="rgb(234,90,39)" rx="2" ry="2" />
<text  x="1152.18" y="559.5" ></text>
</g>
<g >
<title>impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor (3 samples, 0.13%)</title><rect x="207.7" y="565" width="1.6" height="15.0" fill="rgb(216,131,43)" rx="2" ry="2" />
<text  x="210.73" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.04%)</title><rect x="260.7" y="533" width="0.6" height="15.0" fill="rgb(254,152,15)" rx="2" ry="2" />
<text  x="263.74" y="543.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (77 samples, 3.46%)</title><rect x="833.2" y="597" width="40.9" height="15.0" fill="rgb(250,126,33)" rx="2" ry="2" />
<text  x="836.24" y="607.5" >c10..</text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;c10::impl::CppSignature&gt;::constexpr_optional_base (1 samples, 0.04%)</title><rect x="180.2" y="533" width="0.5" height="15.0" fill="rgb(222,179,31)" rx="2" ry="2" />
<text  x="183.16" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;c10::Dispatcher::OperatorDef, std::allocator&lt;c10::Dispatcher::OperatorDef&gt; &gt;::_M_erase (1 samples, 0.04%)</title><rect x="321.7" y="389" width="0.5" height="15.0" fill="rgb(218,206,40)" rx="2" ry="2" />
<text  x="324.70" y="399.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (1 samples, 0.04%)</title><rect x="194.5" y="453" width="0.5" height="15.0" fill="rgb(208,62,29)" rx="2" ry="2" />
<text  x="197.47" y="463.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="216.7" y="405" width="0.6" height="15.0" fill="rgb(254,72,1)" rx="2" ry="2" />
<text  x="219.74" y="415.5" ></text>
</g>
<g >
<title>vtable for c10::StorageImpl (2 samples, 0.09%)</title><rect x="1184.2" y="693" width="1.0" height="15.0" fill="rgb(239,116,14)" rx="2" ry="2" />
<text  x="1187.17" y="703.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (1 samples, 0.04%)</title><rect x="254.9" y="453" width="0.5" height="15.0" fill="rgb(220,181,44)" rx="2" ry="2" />
<text  x="257.91" y="463.5" ></text>
</g>
<g >
<title>c10::ThreadLocalDebugInfo::get (6 samples, 0.27%)</title><rect x="1005.0" y="261" width="3.2" height="15.0" fill="rgb(232,32,14)" rx="2" ry="2" />
<text  x="1008.00" y="271.5" ></text>
</g>
<g >
<title>_dl_fini (44 samples, 1.98%)</title><rect x="303.1" y="629" width="23.4" height="15.0" fill="rgb(237,121,27)" rx="2" ry="2" />
<text  x="306.14" y="639.5" >_..</text>
</g>
<g >
<title>c10::impl::tls_local_dispatch_key_set (6 samples, 0.27%)</title><rect x="146.8" y="677" width="3.1" height="15.0" fill="rgb(242,158,1)" rx="2" ry="2" />
<text  x="149.77" y="687.5" ></text>
</g>
<g >
<title>at::hasCallbacks (3 samples, 0.13%)</title><rect x="700.2" y="485" width="1.6" height="15.0" fill="rgb(247,199,48)" rx="2" ry="2" />
<text  x="703.19" y="495.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.04%)</title><rect x="265.5" y="341" width="0.5" height="15.0" fill="rgb(226,222,51)" rx="2" ry="2" />
<text  x="268.51" y="351.5" ></text>
</g>
<g >
<title>c10::SmallVectorTemplateCommon&lt;long, void&gt;::size (1 samples, 0.04%)</title><rect x="435.7" y="245" width="0.5" height="15.0" fill="rgb(220,61,40)" rx="2" ry="2" />
<text  x="438.67" y="255.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.04%)</title><rect x="259.1" y="501" width="0.6" height="15.0" fill="rgb(242,78,14)" rx="2" ry="2" />
<text  x="262.15" y="511.5" ></text>
</g>
<g >
<title>at::StringView::StringView (1 samples, 0.04%)</title><rect x="522.1" y="517" width="0.5" height="15.0" fill="rgb(246,77,10)" rx="2" ry="2" />
<text  x="525.08" y="527.5" ></text>
</g>
<g >
<title>__static_initialization_and_destruction_0 (1 samples, 0.04%)</title><rect x="197.1" y="613" width="0.6" height="15.0" fill="rgb(239,71,49)" rx="2" ry="2" />
<text  x="200.12" y="623.5" ></text>
</g>
<g >
<title>c10::TensorOptions::device&lt;c10::DeviceType const&amp;, int&gt; (16 samples, 0.72%)</title><rect x="479.1" y="629" width="8.5" height="15.0" fill="rgb(238,74,50)" rx="2" ry="2" />
<text  x="482.14" y="639.5" ></text>
</g>
<g >
<title>torch::jit::parseName (1 samples, 0.04%)</title><rect x="205.6" y="533" width="0.5" height="15.0" fill="rgb(218,91,41)" rx="2" ry="2" />
<text  x="208.61" y="543.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;torch::jit::Source, std::allocator&lt;torch::jit::Source&gt;,  (1 samples, 0.04%)</title><rect x="252.8" y="405" width="0.5" height="15.0" fill="rgb(235,149,5)" rx="2" ry="2" />
<text  x="255.79" y="415.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, torch::CppFunction&gt; (1 samples, 0.04%)</title><rect x="197.1" y="565" width="0.6" height="15.0" fill="rgb(228,227,6)" rx="2" ry="2" />
<text  x="200.12" y="575.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="295.2" y="565" width="0.5" height="15.0" fill="rgb(217,132,10)" rx="2" ry="2" />
<text  x="298.19" y="575.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::nextIf (1 samples, 0.04%)</title><rect x="249.1" y="437" width="0.5" height="15.0" fill="rgb(231,194,17)" rx="2" ry="2" />
<text  x="252.07" y="447.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (5 samples, 0.22%)</title><rect x="292.5" y="565" width="2.7" height="15.0" fill="rgb(229,152,42)" rx="2" ry="2" />
<text  x="295.54" y="575.5" ></text>
</g>
<g >
<title>unlink_chunk (2 samples, 0.09%)</title><rect x="776.5" y="181" width="1.1" height="15.0" fill="rgb(239,139,31)" rx="2" ry="2" />
<text  x="779.52" y="191.5" ></text>
</g>
<g >
<title>c10::GetCPUAllocator (3 samples, 0.13%)</title><rect x="1045.3" y="309" width="1.6" height="15.0" fill="rgb(232,117,1)" rx="2" ry="2" />
<text  x="1048.28" y="319.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;::reset_ (7 samples, 0.31%)</title><rect x="334.4" y="501" width="3.7" height="15.0" fill="rgb(243,223,44)" rx="2" ry="2" />
<text  x="337.42" y="511.5" ></text>
</g>
<g >
<title>_int_memalign (43 samples, 1.93%)</title><rect x="755.3" y="229" width="22.8" height="15.0" fill="rgb(248,87,45)" rx="2" ry="2" />
<text  x="758.32" y="239.5" >_..</text>
</g>
<g >
<title>_int_malloc (4 samples, 0.18%)</title><rect x="229.5" y="293" width="2.1" height="15.0" fill="rgb(227,74,32)" rx="2" ry="2" />
<text  x="232.46" y="303.5" ></text>
</g>
<g >
<title>c10::TensorImpl::compute_contiguous (1 samples, 0.04%)</title><rect x="576.7" y="277" width="0.5" height="15.0" fill="rgb(253,164,34)" rx="2" ry="2" />
<text  x="579.68" y="287.5" ></text>
</g>
<g >
<title>_M_invoke (18 samples, 0.81%)</title><rect x="312.2" y="437" width="9.5" height="15.0" fill="rgb(248,3,17)" rx="2" ry="2" />
<text  x="315.16" y="447.5" ></text>
</g>
<g >
<title>TORCH_LIBRARY_IMPL_init_aten_CUDA (3 samples, 0.13%)</title><rect x="184.9" y="581" width="1.6" height="15.0" fill="rgb(218,49,27)" rx="2" ry="2" />
<text  x="187.93" y="591.5" ></text>
</g>
<g >
<title>c10::TensorImpl::~TensorImpl (8 samples, 0.36%)</title><rect x="474.4" y="565" width="4.2" height="15.0" fill="rgb(251,127,38)" rx="2" ry="2" />
<text  x="477.37" y="575.5" ></text>
</g>
<g >
<title>torch::Library::impl_UNBOXED&lt;char const*, at::Tensor&amp;  (1 samples, 0.04%)</title><rect x="259.1" y="565" width="0.6" height="15.0" fill="rgb(225,79,8)" rx="2" ry="2" />
<text  x="262.15" y="575.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.04%)</title><rect x="260.2" y="341" width="0.5" height="15.0" fill="rgb(238,169,47)" rx="2" ry="2" />
<text  x="263.21" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::substr (1 samples, 0.04%)</title><rect x="170.6" y="501" width="0.6" height="15.0" fill="rgb(248,179,25)" rx="2" ry="2" />
<text  x="173.62" y="511.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="276.1" y="421" width="0.5" height="15.0" fill="rgb(233,229,11)" rx="2" ry="2" />
<text  x="279.11" y="431.5" ></text>
</g>
<g >
<title>parseDeclarations (1 samples, 0.04%)</title><rect x="249.1" y="501" width="0.5" height="15.0" fill="rgb(228,69,50)" rx="2" ry="2" />
<text  x="252.07" y="511.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="284.6" y="421" width="0.5" height="15.0" fill="rgb(251,177,17)" rx="2" ry="2" />
<text  x="287.59" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_ostringstream (1 samples, 0.04%)</title><rect x="209.3" y="517" width="0.5" height="15.0" fill="rgb(223,221,38)" rx="2" ry="2" />
<text  x="212.32" y="527.5" ></text>
</g>
<g >
<title>c10::profiledCPUMemoryReporter (1 samples, 0.04%)</title><rect x="573.5" y="309" width="0.5" height="15.0" fill="rgb(218,58,44)" rx="2" ry="2" />
<text  x="576.50" y="319.5" ></text>
</g>
<g >
<title>torch::autograd::AutogradMeta::set_requires_grad (4 samples, 0.18%)</title><rect x="504.6" y="565" width="2.1" height="15.0" fill="rgb(250,7,52)" rx="2" ry="2" />
<text  x="507.58" y="575.5" ></text>
</g>
<g >
<title>std::accumulate&lt;long const*, long long, std::multiplies&lt;long&gt; &gt; (1 samples, 0.04%)</title><rect x="747.4" y="293" width="0.5" height="15.0" fill="rgb(248,52,33)" rx="2" ry="2" />
<text  x="750.37" y="303.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.04%)</title><rect x="173.3" y="565" width="0.5" height="15.0" fill="rgb(214,92,8)" rx="2" ry="2" />
<text  x="176.27" y="575.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, c10::Symbol, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::Symbol&gt; &gt; &gt;::operator[] (1 samples, 0.04%)</title><rect x="189.7" y="533" width="0.5" height="15.0" fill="rgb(227,141,39)" rx="2" ry="2" />
<text  x="192.70" y="543.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.04%)</title><rect x="201.4" y="437" width="0.5" height="15.0" fill="rgb(224,139,41)" rx="2" ry="2" />
<text  x="204.37" y="447.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.04%)</title><rect x="199.8" y="485" width="0.5" height="15.0" fill="rgb(214,121,23)" rx="2" ry="2" />
<text  x="202.78" y="495.5" ></text>
</g>
<g >
<title>c10::Device::validate (1 samples, 0.04%)</title><rect x="749.0" y="277" width="0.5" height="15.0" fill="rgb(210,131,17)" rx="2" ry="2" />
<text  x="751.96" y="287.5" ></text>
</g>
<g >
<title>__atomic_add_dispatch (1 samples, 0.04%)</title><rect x="249.1" y="309" width="0.5" height="15.0" fill="rgb(251,119,20)" rx="2" ry="2" />
<text  x="252.07" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::~vector (1 samples, 0.04%)</title><rect x="325.9" y="245" width="0.6" height="15.0" fill="rgb(232,220,44)" rx="2" ry="2" />
<text  x="328.94" y="255.5" ></text>
</g>
<g >
<title>__cxa_finalize (38 samples, 1.71%)</title><rect x="306.3" y="597" width="20.2" height="15.0" fill="rgb(249,87,7)" rx="2" ry="2" />
<text  x="309.33" y="607.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.04%)</title><rect x="852.3" y="293" width="0.6" height="15.0" fill="rgb(248,131,12)" rx="2" ry="2" />
<text  x="855.33" y="303.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;c10::FunctionSchema, std::default_delete&lt;c10::FunctionSchema&gt; &gt;::__uniq_ptr_impl&lt;std::default_delete&lt;c10::FunctionSchema&gt; &gt; (1 samples, 0.04%)</title><rect x="259.7" y="485" width="0.5" height="15.0" fill="rgb(207,119,22)" rx="2" ry="2" />
<text  x="262.68" y="495.5" ></text>
</g>
<g >
<title>c10::Registry&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unique_ptr&lt;caffe2::OperatorBase, std::default_delete&lt;caffe2::OperatorBase&gt; &gt;, caffe2::OperatorDef const&amp;, caffe2::Workspace*&gt;::Register (3 samples, 0.13%)</title><rect x="274.0" y="581" width="1.6" height="15.0" fill="rgb(244,63,14)" rx="2" ry="2" />
<text  x="276.99" y="591.5" ></text>
</g>
<g >
<title>[libc10.so] (3 samples, 0.13%)</title><rect x="128.7" y="661" width="1.6" height="15.0" fill="rgb(205,97,47)" rx="2" ry="2" />
<text  x="131.74" y="671.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="210.9" y="341" width="0.5" height="15.0" fill="rgb(241,212,31)" rx="2" ry="2" />
<text  x="213.91" y="351.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTable_ (1 samples, 0.04%)</title><rect x="270.8" y="517" width="0.5" height="15.0" fill="rgb(231,62,16)" rx="2" ry="2" />
<text  x="273.81" y="527.5" ></text>
</g>
<g >
<title>page_poisoning_enabled (1 samples, 0.04%)</title><rect x="256.5" y="245" width="0.5" height="15.0" fill="rgb(209,166,21)" rx="2" ry="2" />
<text  x="259.50" y="255.5" ></text>
</g>
<g >
<title>c10::FunctionSchema::checkSchema (1 samples, 0.04%)</title><rect x="195.5" y="405" width="0.6" height="15.0" fill="rgb(205,35,31)" rx="2" ry="2" />
<text  x="198.53" y="415.5" ></text>
</g>
<g >
<title>_int_free (12 samples, 0.54%)</title><rect x="614.3" y="565" width="6.4" height="15.0" fill="rgb(228,213,43)" rx="2" ry="2" />
<text  x="617.31" y="575.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;c10::OperatorKernel,  (2 samples, 0.09%)</title><rect x="315.3" y="229" width="1.1" height="15.0" fill="rgb(225,102,3)" rx="2" ry="2" />
<text  x="318.34" y="239.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTableFull_ (1 samples, 0.04%)</title><rect x="268.2" y="501" width="0.5" height="15.0" fill="rgb(215,163,2)" rx="2" ry="2" />
<text  x="271.16" y="511.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::load (1 samples, 0.04%)</title><rect x="363.0" y="549" width="0.6" height="15.0" fill="rgb(244,19,18)" rx="2" ry="2" />
<text  x="366.05" y="559.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.04%)</title><rect x="176.5" y="341" width="0.5" height="15.0" fill="rgb(245,151,53)" rx="2" ry="2" />
<text  x="179.45" y="351.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.04%)</title><rect x="324.9" y="277" width="0.5" height="15.0" fill="rgb(214,175,6)" rx="2" ry="2" />
<text  x="327.88" y="287.5" ></text>
</g>
<g >
<title>[microbenchmark] (1 samples, 0.04%)</title><rect x="918.6" y="485" width="0.5" height="15.0" fill="rgb(246,28,39)" rx="2" ry="2" />
<text  x="921.59" y="495.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="269.7" y="533" width="0.6" height="15.0" fill="rgb(241,48,49)" rx="2" ry="2" />
<text  x="272.75" y="543.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.04%)</title><rect x="258.6" y="517" width="0.5" height="15.0" fill="rgb(207,7,2)" rx="2" ry="2" />
<text  x="261.62" y="527.5" ></text>
</g>
<g >
<title>torch::jit::SourceRange::~SourceRange (1 samples, 0.04%)</title><rect x="214.1" y="373" width="0.5" height="15.0" fill="rgb(223,149,36)" rx="2" ry="2" />
<text  x="217.09" y="383.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.04%)</title><rect x="336.0" y="357" width="0.5" height="15.0" fill="rgb(227,54,25)" rx="2" ry="2" />
<text  x="339.01" y="367.5" ></text>
</g>
<g >
<title>parseDeclarations (4 samples, 0.18%)</title><rect x="111.2" y="613" width="2.2" height="15.0" fill="rgb(206,121,34)" rx="2" ry="2" />
<text  x="114.25" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (1 samples, 0.04%)</title><rect x="215.1" y="501" width="0.6" height="15.0" fill="rgb(249,64,36)" rx="2" ry="2" />
<text  x="218.15" y="511.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::expect (1 samples, 0.04%)</title><rect x="170.1" y="533" width="0.5" height="15.0" fill="rgb(215,110,14)" rx="2" ry="2" />
<text  x="173.09" y="543.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.04%)</title><rect x="181.2" y="69" width="0.6" height="15.0" fill="rgb(232,117,51)" rx="2" ry="2" />
<text  x="184.22" y="79.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="108.6" y="469" width="0.5" height="15.0" fill="rgb(206,21,15)" rx="2" ry="2" />
<text  x="111.60" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::emplace_back&lt;int&gt; (1 samples, 0.04%)</title><rect x="248.5" y="453" width="0.6" height="15.0" fill="rgb(208,163,31)" rx="2" ry="2" />
<text  x="251.54" y="463.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.04%)</title><rect x="224.7" y="469" width="0.5" height="15.0" fill="rgb(208,119,19)" rx="2" ry="2" />
<text  x="227.69" y="479.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="264.4" y="581" width="0.6" height="15.0" fill="rgb(207,114,35)" rx="2" ry="2" />
<text  x="267.45" y="591.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (1 samples, 0.04%)</title><rect x="216.2" y="357" width="0.5" height="15.0" fill="rgb(248,118,27)" rx="2" ry="2" />
<text  x="219.21" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (9 samples, 0.40%)</title><rect x="1185.2" y="677" width="4.8" height="15.0" fill="rgb(237,206,13)" rx="2" ry="2" />
<text  x="1188.23" y="687.5" ></text>
</g>
<g >
<title>TORCH_LIBRARY_IMPL_init_aten_Named (7 samples, 0.31%)</title><rect x="190.2" y="581" width="3.7" height="15.0" fill="rgb(215,155,24)" rx="2" ry="2" />
<text  x="193.23" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1 samples, 0.04%)</title><rect x="191.8" y="309" width="0.6" height="15.0" fill="rgb(209,177,2)" rx="2" ry="2" />
<text  x="194.82" y="319.5" ></text>
</g>
<g >
<title>parseDeclaration (1 samples, 0.04%)</title><rect x="195.5" y="469" width="0.6" height="15.0" fill="rgb(216,162,47)" rx="2" ry="2" />
<text  x="198.53" y="479.5" ></text>
</g>
<g >
<title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;, c10::DispatchKey, std::hash&lt;c10::DispatchKey&gt;, ska::detailv3::KeyOrValueHasher&lt;c10::DispatchKey, std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;, std::hash&lt;c10::DispatchKey&gt; &gt;, std::equal_to&lt;c10::DispatchKey&gt;, ska::detailv3::KeyOrValueEquality&lt;c10::DispatchKey, std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;, std::equal_to&lt;c10::DispatchKey&gt; &gt;, std::allocator&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt; &gt; &gt; &gt;::clear (2 samples, 0.09%)</title><rect x="313.7" y="245" width="1.1" height="15.0" fill="rgb(211,45,30)" rx="2" ry="2" />
<text  x="316.75" y="255.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="175.4" y="501" width="0.5" height="15.0" fill="rgb(247,229,8)" rx="2" ry="2" />
<text  x="178.39" y="511.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.04%)</title><rect x="174.9" y="597" width="0.5" height="15.0" fill="rgb(226,123,21)" rx="2" ry="2" />
<text  x="177.86" y="607.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.04%)</title><rect x="956.2" y="341" width="0.6" height="15.0" fill="rgb(226,82,46)" rx="2" ry="2" />
<text  x="959.23" y="351.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr_target::intrusive_ptr_target (1 samples, 0.04%)</title><rect x="737.8" y="213" width="0.6" height="15.0" fill="rgb(215,49,10)" rx="2" ry="2" />
<text  x="740.83" y="223.5" ></text>
</g>
<g >
<title>c10::TensorImpl::compute_numel (2 samples, 0.09%)</title><rect x="794.0" y="277" width="1.1" height="15.0" fill="rgb(253,103,1)" rx="2" ry="2" />
<text  x="797.02" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::~_Hashtable (1 samples, 0.04%)</title><rect x="190.2" y="357" width="0.6" height="15.0" fill="rgb(233,84,46)" rx="2" ry="2" />
<text  x="193.23" y="367.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (3 samples, 0.13%)</title><rect x="1164.6" y="693" width="1.5" height="15.0" fill="rgb(243,176,6)" rx="2" ry="2" />
<text  x="1167.56" y="703.5" ></text>
</g>
<g >
<title>std::ios_base::Init::Init (1 samples, 0.04%)</title><rect x="174.9" y="613" width="0.5" height="15.0" fill="rgb(250,224,3)" rx="2" ry="2" />
<text  x="177.86" y="623.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (1 samples, 0.04%)</title><rect x="904.3" y="581" width="0.5" height="15.0" fill="rgb(215,213,7)" rx="2" ry="2" />
<text  x="907.28" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.04%)</title><rect x="322.8" y="341" width="0.5" height="15.0" fill="rgb(209,98,51)" rx="2" ry="2" />
<text  x="325.76" y="351.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::MemoryFormat&gt;::optional (1 samples, 0.04%)</title><rect x="595.8" y="533" width="0.5" height="15.0" fill="rgb(234,1,13)" rx="2" ry="2" />
<text  x="598.76" y="543.5" ></text>
</g>
<g >
<title>[libcublas.so.11.1.0.229] (3 samples, 0.13%)</title><rect x="303.1" y="613" width="1.6" height="15.0" fill="rgb(226,174,6)" rx="2" ry="2" />
<text  x="306.14" y="623.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;c10::IValue, std::allocator&lt;c10::IValue&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.04%)</title><rect x="532.7" y="373" width="0.5" height="15.0" fill="rgb(217,165,45)" rx="2" ry="2" />
<text  x="535.68" y="383.5" ></text>
</g>
<g >
<title>std::unordered_set&lt;c10::Symbol, std::hash&lt;c10::Symbol&gt;, std::equal_to&lt;c10::Symbol&gt;, std::allocator&lt;c10::Symbol&gt; &gt;::unordered_set (1 samples, 0.04%)</title><rect x="242.2" y="389" width="0.5" height="15.0" fill="rgb(232,222,34)" rx="2" ry="2" />
<text  x="245.18" y="399.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.04%)</title><rect x="231.6" y="357" width="0.5" height="15.0" fill="rgb(244,9,52)" rx="2" ry="2" />
<text  x="234.58" y="367.5" ></text>
</g>
<g >
<title>__GI_____strtod_l_internal (1 samples, 0.04%)</title><rect x="198.2" y="357" width="0.5" height="15.0" fill="rgb(208,50,25)" rx="2" ry="2" />
<text  x="201.19" y="367.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="736.8" y="165" width="0.5" height="15.0" fill="rgb(227,222,5)" rx="2" ry="2" />
<text  x="739.77" y="175.5" ></text>
</g>
<g >
<title>registerOperator (1 samples, 0.04%)</title><rect x="297.3" y="549" width="0.5" height="15.0" fill="rgb(238,131,50)" rx="2" ry="2" />
<text  x="300.31" y="559.5" ></text>
</g>
<g >
<title>c10::TensorImpl::refresh_contiguous (2 samples, 0.09%)</title><rect x="434.1" y="293" width="1.0" height="15.0" fill="rgb(248,119,21)" rx="2" ry="2" />
<text  x="437.08" y="303.5" ></text>
</g>
<g >
<title>c10::ArrayRef&lt;long&gt;::ArrayRef&lt;void&gt; (1 samples, 0.04%)</title><rect x="435.7" y="261" width="0.5" height="15.0" fill="rgb(235,93,5)" rx="2" ry="2" />
<text  x="438.67" y="271.5" ></text>
</g>
<g >
<title>page_counter_try_charge (1 samples, 0.04%)</title><rect x="293.6" y="373" width="0.5" height="15.0" fill="rgb(244,199,30)" rx="2" ry="2" />
<text  x="296.60" y="383.5" ></text>
</g>
<g >
<title>link_path_walk.part.0 (1 samples, 0.04%)</title><rect x="1110.5" y="405" width="0.5" height="15.0" fill="rgb(245,158,15)" rx="2" ry="2" />
<text  x="1113.49" y="415.5" ></text>
</g>
<g >
<title>c10::guts::to_string&lt;unsigned long&gt; (1 samples, 0.04%)</title><rect x="196.6" y="453" width="0.5" height="15.0" fill="rgb(236,22,31)" rx="2" ry="2" />
<text  x="199.59" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, char&gt; (3 samples, 0.13%)</title><rect x="207.7" y="405" width="1.6" height="15.0" fill="rgb(237,89,3)" rx="2" ry="2" />
<text  x="210.73" y="415.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.04%)</title><rect x="198.2" y="549" width="0.5" height="15.0" fill="rgb(206,222,37)" rx="2" ry="2" />
<text  x="201.19" y="559.5" ></text>
</g>
<g >
<title>c10::detail::_str_wrapper&lt;char const*, char const* const&amp;, char const*, unsigned int const&amp;&gt;::call[abi:cxx11] (1 samples, 0.04%)</title><rect x="192.9" y="501" width="0.5" height="15.0" fill="rgb(207,80,48)" rx="2" ry="2" />
<text  x="195.88" y="511.5" ></text>
</g>
<g >
<title>c10::TensorOptions::memory_format (4 samples, 0.18%)</title><rect x="797.2" y="309" width="2.1" height="15.0" fill="rgb(216,34,22)" rx="2" ry="2" />
<text  x="800.20" y="319.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="305.3" y="565" width="0.5" height="15.0" fill="rgb(226,88,11)" rx="2" ry="2" />
<text  x="308.27" y="575.5" ></text>
</g>
<g >
<title>_int_free (28 samples, 1.26%)</title><rect x="1016.1" y="213" width="14.9" height="15.0" fill="rgb(213,163,27)" rx="2" ry="2" />
<text  x="1019.13" y="223.5" ></text>
</g>
<g >
<title>impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor (1 samples, 0.04%)</title><rect x="267.1" y="565" width="0.5" height="15.0" fill="rgb(223,11,41)" rx="2" ry="2" />
<text  x="270.10" y="575.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.04%)</title><rect x="290.4" y="469" width="0.6" height="15.0" fill="rgb(212,82,6)" rx="2" ry="2" />
<text  x="293.42" y="479.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (4 samples, 0.18%)</title><rect x="1094.6" y="261" width="2.1" height="15.0" fill="rgb(216,37,38)" rx="2" ry="2" />
<text  x="1097.58" y="271.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::createFunctionSchemaFromTraitsFlattenedReturns&lt;c10::guts::function_traits&lt;std::tuple&lt;at::Tensor, at::Tensor&gt;  (1 samples, 0.04%)</title><rect x="179.6" y="501" width="0.6" height="15.0" fill="rgb(249,190,39)" rx="2" ry="2" />
<text  x="182.63" y="511.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_SparseCUDAType.cpp (1 samples, 0.04%)</title><rect x="197.1" y="629" width="0.6" height="15.0" fill="rgb(238,56,29)" rx="2" ry="2" />
<text  x="200.12" y="639.5" ></text>
</g>
<g >
<title>c10::SmallVectorTemplateCommon&lt;long, void&gt;::capacity (1 samples, 0.04%)</title><rect x="1059.1" y="277" width="0.5" height="15.0" fill="rgb(244,65,44)" rx="2" ry="2" />
<text  x="1062.07" y="287.5" ></text>
</g>
<g >
<title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (1 samples, 0.04%)</title><rect x="222.6" y="485" width="0.5" height="15.0" fill="rgb(222,154,24)" rx="2" ry="2" />
<text  x="225.57" y="495.5" ></text>
</g>
<g >
<title>TORCH_LIBRARY_IMPL_init_aten_Autocast (1 samples, 0.04%)</title><rect x="260.2" y="581" width="0.5" height="15.0" fill="rgb(219,50,22)" rx="2" ry="2" />
<text  x="263.21" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::IValue, std::allocator&lt;c10::IValue&gt; &gt;::vector (1 samples, 0.04%)</title><rect x="532.7" y="405" width="0.5" height="15.0" fill="rgb(225,133,54)" rx="2" ry="2" />
<text  x="535.68" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Insert_base&lt;c10::Symbol, c10::Symbol, std::allocator&lt;c10::Symbol&gt;, std::__detail::_Identity, std::equal_to&lt;c10::Symbol&gt;, std::hash&lt;c10::Symbol&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::insert (1 samples, 0.04%)</title><rect x="212.5" y="261" width="0.5" height="15.0" fill="rgb(228,20,27)" rx="2" ry="2" />
<text  x="215.50" y="271.5" ></text>
</g>
<g >
<title>_int_malloc (21 samples, 0.94%)</title><rect x="766.5" y="213" width="11.1" height="15.0" fill="rgb(213,40,25)" rx="2" ry="2" />
<text  x="769.45" y="223.5" ></text>
</g>
<g >
<title>std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::unordered_set (1 samples, 0.04%)</title><rect x="181.2" y="373" width="0.6" height="15.0" fill="rgb(229,72,3)" rx="2" ry="2" />
<text  x="184.22" y="383.5" ></text>
</g>
<g >
<title>c10::Dispatcher::callWithDispatchKey&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::TensorOptions const&amp;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (6 samples, 0.27%)</title><rect x="1159.3" y="693" width="3.1" height="15.0" fill="rgb(251,87,33)" rx="2" ry="2" />
<text  x="1162.25" y="703.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt;  (1 samples, 0.04%)</title><rect x="251.7" y="533" width="0.6" height="15.0" fill="rgb(211,128,29)" rx="2" ry="2" />
<text  x="254.73" y="543.5" ></text>
</g>
<g >
<title>torch::class_&lt;ConvPackedParamsBase&lt;3&gt; &gt;::def&lt;c10::List&lt;long&gt;  (1 samples, 0.04%)</title><rect x="262.3" y="581" width="0.6" height="15.0" fill="rgb(238,134,8)" rx="2" ry="2" />
<text  x="265.33" y="591.5" ></text>
</g>
<g >
<title>c10::detail::RegistrationListenerList::callOnOperatorDeregistered (2 samples, 0.09%)</title><rect x="309.5" y="437" width="1.1" height="15.0" fill="rgb(229,215,23)" rx="2" ry="2" />
<text  x="312.51" y="447.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="186.0" y="373" width="0.5" height="15.0" fill="rgb(209,48,10)" rx="2" ry="2" />
<text  x="188.99" y="383.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="1106.2" y="453" width="0.6" height="15.0" fill="rgb(221,203,31)" rx="2" ry="2" />
<text  x="1109.24" y="463.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (1 samples, 0.04%)</title><rect x="179.1" y="533" width="0.5" height="15.0" fill="rgb(221,114,45)" rx="2" ry="2" />
<text  x="182.10" y="543.5" ></text>
</g>
<g >
<title>elf_dynamic_do_Rela (85 samples, 3.82%)</title><rect x="1112.6" y="597" width="45.1" height="15.0" fill="rgb(225,7,24)" rx="2" ry="2" />
<text  x="1115.61" y="607.5" >elf_..</text>
</g>
<g >
<title>c10::TensorImpl::~TensorImpl (30 samples, 1.35%)</title><rect x="632.9" y="565" width="15.9" height="15.0" fill="rgb(219,209,12)" rx="2" ry="2" />
<text  x="635.87" y="575.5" ></text>
</g>
<g >
<title>checked_request2size (2 samples, 0.09%)</title><rect x="572.4" y="229" width="1.1" height="15.0" fill="rgb(221,107,47)" rx="2" ry="2" />
<text  x="575.43" y="239.5" ></text>
</g>
<g >
<title>torch::Library::fallback&lt;torch::CppFunction&gt; (1 samples, 0.04%)</title><rect x="270.8" y="565" width="0.5" height="15.0" fill="rgb(217,164,41)" rx="2" ry="2" />
<text  x="273.81" y="575.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_autocast_mode.cpp (3 samples, 0.13%)</title><rect x="259.7" y="629" width="1.6" height="15.0" fill="rgb(227,229,21)" rx="2" ry="2" />
<text  x="262.68" y="639.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="278.2" y="501" width="0.6" height="15.0" fill="rgb(238,144,51)" rx="2" ry="2" />
<text  x="281.23" y="511.5" ></text>
</g>
<g >
<title>c10::DefaultCPUAllocator::allocate (57 samples, 2.56%)</title><rect x="747.9" y="309" width="30.2" height="15.0" fill="rgb(240,35,26)" rx="2" ry="2" />
<text  x="750.90" y="319.5" >c1..</text>
</g>
<g >
<title>torch::jit::Token::Token (1 samples, 0.04%)</title><rect x="166.9" y="469" width="0.5" height="15.0" fill="rgb(208,135,5)" rx="2" ry="2" />
<text  x="169.91" y="479.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (2 samples, 0.09%)</title><rect x="289.4" y="485" width="1.0" height="15.0" fill="rgb(254,144,36)" rx="2" ry="2" />
<text  x="292.36" y="495.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::VariableVersion::VersionCounter, c10::detail::intrusive_target_default_null_type&lt;c10::VariableVersion::VersionCounter&gt; &gt;::reset_ (9 samples, 0.40%)</title><rect x="140.9" y="613" width="4.8" height="15.0" fill="rgb(217,196,48)" rx="2" ry="2" />
<text  x="143.93" y="623.5" ></text>
</g>
<g >
<title>impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;std::vector&lt;at::Tensor&gt; (1 samples, 0.04%)</title><rect x="251.7" y="565" width="0.6" height="15.0" fill="rgb(222,175,45)" rx="2" ry="2" />
<text  x="254.73" y="575.5" ></text>
</g>
<g >
<title>_dl_map_object_deps (13 samples, 0.58%)</title><rect x="1105.7" y="613" width="6.9" height="15.0" fill="rgb(210,201,33)" rx="2" ry="2" />
<text  x="1108.71" y="623.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;::operator= (21 samples, 0.94%)</title><rect x="621.7" y="533" width="11.2" height="15.0" fill="rgb(220,193,8)" rx="2" ry="2" />
<text  x="624.73" y="543.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="198.7" y="341" width="0.5" height="15.0" fill="rgb(222,34,6)" rx="2" ry="2" />
<text  x="201.72" y="351.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.04%)</title><rect x="1156.6" y="581" width="0.5" height="15.0" fill="rgb(244,186,19)" rx="2" ry="2" />
<text  x="1159.60" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;c10::Dispatcher::OperatorDef, std::allocator&lt;c10::Dispatcher::OperatorDef&gt; &gt;::_M_put_node (2 samples, 0.09%)</title><rect x="312.7" y="341" width="1.0" height="15.0" fill="rgb(225,159,6)" rx="2" ry="2" />
<text  x="315.69" y="351.5" ></text>
</g>
<g >
<title>c10::TensorType::get@plt (1 samples, 0.04%)</title><rect x="199.8" y="437" width="0.5" height="15.0" fill="rgb(208,93,1)" rx="2" ry="2" />
<text  x="202.78" y="447.5" ></text>
</g>
<g >
<title>_M_bucket_index (1 samples, 0.04%)</title><rect x="131.9" y="629" width="0.6" height="15.0" fill="rgb(218,124,31)" rx="2" ry="2" />
<text  x="134.92" y="639.5" ></text>
</g>
<g >
<title>c10::TensorImpl::TensorImpl (4 samples, 0.18%)</title><rect x="397.0" y="261" width="2.1" height="15.0" fill="rgb(254,225,46)" rx="2" ry="2" />
<text  x="399.97" y="271.5" ></text>
</g>
<g >
<title>c10::FunctionSchema::FunctionSchema (1 samples, 0.04%)</title><rect x="195.5" y="421" width="0.6" height="15.0" fill="rgb(218,221,40)" rx="2" ry="2" />
<text  x="198.53" y="431.5" ></text>
</g>
<g >
<title>[libcusparse.so.11.1.0.218] (1 samples, 0.04%)</title><rect x="10.0" y="677" width="0.5" height="15.0" fill="rgb(219,214,14)" rx="2" ry="2" />
<text  x="13.00" y="687.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (2 samples, 0.09%)</title><rect x="248.5" y="517" width="1.1" height="15.0" fill="rgb(234,210,15)" rx="2" ry="2" />
<text  x="251.54" y="527.5" ></text>
</g>
<g >
<title>__cxa_finalize (1 samples, 0.04%)</title><rect x="305.3" y="597" width="0.5" height="15.0" fill="rgb(232,76,43)" rx="2" ry="2" />
<text  x="308.27" y="607.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseList (1 samples, 0.04%)</title><rect x="212.5" y="357" width="0.5" height="15.0" fill="rgb(233,50,33)" rx="2" ry="2" />
<text  x="215.50" y="367.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::Registerer::op (11 samples, 0.49%)</title><rect x="286.2" y="613" width="5.8" height="15.0" fill="rgb(227,199,52)" rx="2" ry="2" />
<text  x="289.18" y="623.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;torch::jit::Source,  (1 samples, 0.04%)</title><rect x="193.4" y="341" width="0.5" height="15.0" fill="rgb(219,47,11)" rx="2" ry="2" />
<text  x="196.41" y="351.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.04%)</title><rect x="106.5" y="597" width="0.5" height="15.0" fill="rgb(222,21,28)" rx="2" ry="2" />
<text  x="109.48" y="607.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;c10::Argument*&gt; (1 samples, 0.04%)</title><rect x="322.2" y="293" width="0.6" height="15.0" fill="rgb(207,140,37)" rx="2" ry="2" />
<text  x="325.23" y="303.5" ></text>
</g>
<g >
<title>c10::Type::isSubtypeOf (1 samples, 0.04%)</title><rect x="272.4" y="485" width="0.5" height="15.0" fill="rgb(229,113,33)" rx="2" ry="2" />
<text  x="275.40" y="495.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt;  (1 samples, 0.04%)</title><rect x="247.0" y="533" width="0.5" height="15.0" fill="rgb(208,165,52)" rx="2" ry="2" />
<text  x="249.95" y="543.5" ></text>
</g>
<g >
<title>c10::Dispatcher::findOrRegisterName_ (5 samples, 0.22%)</title><rect x="190.2" y="517" width="2.7" height="15.0" fill="rgb(223,7,29)" rx="2" ry="2" />
<text  x="193.23" y="527.5" ></text>
</g>
<g >
<title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (216 samples, 9.70%)</title><rect x="705.5" y="485" width="114.5" height="15.0" fill="rgb(245,88,37)" rx="2" ry="2" />
<text  x="708.49" y="495.5" >c10::impl::wra..</text>
</g>
<g >
<title>c10::detail::infer_schema::(anonymous namespace)::createArgumentVector (1 samples, 0.04%)</title><rect x="108.6" y="581" width="0.5" height="15.0" fill="rgb(230,55,8)" rx="2" ry="2" />
<text  x="111.60" y="591.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_RegisterOpContextClass.cpp (1 samples, 0.04%)</title><rect x="196.1" y="613" width="0.5" height="15.0" fill="rgb(224,24,39)" rx="2" ry="2" />
<text  x="199.06" y="623.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.04%)</title><rect x="210.9" y="293" width="0.5" height="15.0" fill="rgb(234,141,25)" rx="2" ry="2" />
<text  x="213.91" y="303.5" ></text>
</g>
<g >
<title>c10::inferFunctionSchemaFlattenedReturns&lt;at::Tensor  (1 samples, 0.04%)</title><rect x="260.2" y="517" width="0.5" height="15.0" fill="rgb(245,132,31)" rx="2" ry="2" />
<text  x="263.21" y="527.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="173.8" y="565" width="0.5" height="15.0" fill="rgb(215,2,41)" rx="2" ry="2" />
<text  x="176.80" y="575.5" ></text>
</g>
<g >
<title>c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (259 samples, 11.64%)</title><rect x="963.1" y="357" width="137.3" height="15.0" fill="rgb(240,77,18)" rx="2" ry="2" />
<text  x="966.12" y="367.5" >c10::impl::detail..</text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (1 samples, 0.04%)</title><rect x="861.9" y="469" width="0.5" height="15.0" fill="rgb(223,39,50)" rx="2" ry="2" />
<text  x="864.87" y="479.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;::make&lt;c10::StorageImpl::use_byte_size_t, long&amp;, c10::DataPtr, c10::Allocator*&amp;, bool&gt; (14 samples, 0.63%)</title><rect x="811.5" y="293" width="7.4" height="15.0" fill="rgb(250,183,17)" rx="2" ry="2" />
<text  x="814.51" y="303.5" ></text>
</g>
<g >
<title>c10::TensorImpl::unique_version (1 samples, 0.04%)</title><rect x="363.0" y="597" width="0.6" height="15.0" fill="rgb(249,206,19)" rx="2" ry="2" />
<text  x="366.05" y="607.5" ></text>
</g>
<g >
<title>elf_machine_rela_relative (13 samples, 0.58%)</title><rect x="1149.7" y="581" width="6.9" height="15.0" fill="rgb(242,209,29)" rx="2" ry="2" />
<text  x="1152.71" y="591.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;unsigned char&gt; (2 samples, 0.09%)</title><rect x="919.6" y="501" width="1.1" height="15.0" fill="rgb(254,175,17)" rx="2" ry="2" />
<text  x="922.65" y="511.5" ></text>
</g>
<g >
<title>torch::detail::TorchLibraryInit::TorchLibraryInit (4 samples, 0.18%)</title><rect x="203.0" y="597" width="2.1" height="15.0" fill="rgb(231,107,29)" rx="2" ry="2" />
<text  x="205.96" y="607.5" ></text>
</g>
<g >
<title>c10::TypedOperatorHandle&lt;at::Tensor  (210 samples, 9.43%)</title><rect x="708.7" y="437" width="111.3" height="15.0" fill="rgb(229,35,43)" rx="2" ry="2" />
<text  x="711.67" y="447.5" >c10::TypedOpe..</text>
</g>
<g >
<title>at::native::empty_cpu (188 samples, 8.45%)</title><rect x="719.3" y="325" width="99.6" height="15.0" fill="rgb(253,170,38)" rx="2" ry="2" />
<text  x="722.27" y="335.5" >at::native::..</text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.04%)</title><rect x="229.5" y="133" width="0.5" height="15.0" fill="rgb(225,52,4)" rx="2" ry="2" />
<text  x="232.46" y="143.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (3 samples, 0.13%)</title><rect x="912.8" y="549" width="1.5" height="15.0" fill="rgb(217,11,35)" rx="2" ry="2" />
<text  x="915.76" y="559.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, c10::NamedTensorMetaInterface*, false&gt;::_Head_base (1 samples, 0.04%)</title><rect x="738.4" y="149" width="0.5" height="15.0" fill="rgb(230,86,44)" rx="2" ry="2" />
<text  x="741.36" y="159.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="181.2" y="101" width="0.6" height="15.0" fill="rgb(236,90,28)" rx="2" ry="2" />
<text  x="184.22" y="111.5" ></text>
</g>
<g >
<title>parseDeclarations (1 samples, 0.04%)</title><rect x="281.9" y="549" width="0.6" height="15.0" fill="rgb(253,169,47)" rx="2" ry="2" />
<text  x="284.94" y="559.5" ></text>
</g>
<g >
<title>__x64_sys_execve (9 samples, 0.40%)</title><rect x="1185.2" y="661" width="4.8" height="15.0" fill="rgb(221,8,45)" rx="2" ry="2" />
<text  x="1188.23" y="671.5" ></text>
</g>
<g >
<title>parseDeclaration (3 samples, 0.13%)</title><rect x="265.5" y="469" width="1.6" height="15.0" fill="rgb(225,59,30)" rx="2" ry="2" />
<text  x="268.51" y="479.5" ></text>
</g>
<g >
<title>__static_initialization_and_destruction_0 (4 samples, 0.18%)</title><rect x="205.1" y="613" width="2.1" height="15.0" fill="rgb(211,121,23)" rx="2" ry="2" />
<text  x="208.08" y="623.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;c10::FunctionSchema, std::default_delete&lt;c10::FunctionSchema&gt; &gt;::_M_ptr (1 samples, 0.04%)</title><rect x="207.2" y="469" width="0.5" height="15.0" fill="rgb(227,88,8)" rx="2" ry="2" />
<text  x="210.20" y="479.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (4 samples, 0.18%)</title><rect x="111.2" y="533" width="2.2" height="15.0" fill="rgb(226,105,2)" rx="2" ry="2" />
<text  x="114.25" y="543.5" ></text>
</g>
<g >
<title>parseDeclaration (1 samples, 0.04%)</title><rect x="169.0" y="629" width="0.6" height="15.0" fill="rgb(253,43,13)" rx="2" ry="2" />
<text  x="172.03" y="639.5" ></text>
</g>
<g >
<title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (260 samples, 11.68%)</title><rect x="962.6" y="373" width="137.8" height="15.0" fill="rgb(251,180,44)" rx="2" ry="2" />
<text  x="965.59" y="383.5" >c10::impl::wrap_k..</text>
</g>
<g >
<title>c10::impl::tls_local_dispatch_key_set@plt (1 samples, 0.04%)</title><rect x="520.0" y="501" width="0.5" height="15.0" fill="rgb(238,90,5)" rx="2" ry="2" />
<text  x="522.96" y="511.5" ></text>
</g>
<g >
<title>c10::SmallVectorBase::SmallVectorBase (3 samples, 0.13%)</title><rect x="734.6" y="149" width="1.6" height="15.0" fill="rgb(208,186,46)" rx="2" ry="2" />
<text  x="737.65" y="159.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;c10::RegistrationHandleRAII*&gt; (2 samples, 0.09%)</title><rect x="309.5" y="533" width="1.1" height="15.0" fill="rgb(235,132,24)" rx="2" ry="2" />
<text  x="312.51" y="543.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::_M_allocate (1 samples, 0.04%)</title><rect x="260.2" y="437" width="0.5" height="15.0" fill="rgb(207,95,46)" rx="2" ry="2" />
<text  x="263.21" y="447.5" ></text>
</g>
<g >
<title>tcache_put (1 samples, 0.04%)</title><rect x="346.6" y="485" width="0.5" height="15.0" fill="rgb(240,199,10)" rx="2" ry="2" />
<text  x="349.61" y="495.5" ></text>
</g>
<g >
<title>_dl_setup_hash (1 samples, 0.04%)</title><rect x="1108.9" y="533" width="0.5" height="15.0" fill="rgb(251,40,25)" rx="2" ry="2" />
<text  x="1111.89" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;torch::jit::Token, std::allocator&lt;torch::jit::Token&gt; &gt;::~vector (1 samples, 0.04%)</title><rect x="193.4" y="469" width="0.5" height="15.0" fill="rgb(252,173,19)" rx="2" ry="2" />
<text  x="196.41" y="479.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="180.7" y="293" width="0.5" height="15.0" fill="rgb(229,167,54)" rx="2" ry="2" />
<text  x="183.69" y="303.5" ></text>
</g>
<g >
<title>__posix_memalign (64 samples, 2.88%)</title><rect x="1010.8" y="261" width="34.0" height="15.0" fill="rgb(233,188,31)" rx="2" ry="2" />
<text  x="1013.83" y="271.5" >__..</text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="274.5" y="485" width="0.5" height="15.0" fill="rgb(221,221,13)" rx="2" ry="2" />
<text  x="277.52" y="495.5" ></text>
</g>
<g >
<title>_write&lt;c10::Dispatcher::findOrRegisterName_ (1 samples, 0.04%)</title><rect x="218.9" y="485" width="0.5" height="15.0" fill="rgb(221,128,50)" rx="2" ry="2" />
<text  x="221.86" y="495.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseBaseType (1 samples, 0.04%)</title><rect x="153.1" y="517" width="0.6" height="15.0" fill="rgb(235,209,46)" rx="2" ry="2" />
<text  x="156.13" y="527.5" ></text>
</g>
<g >
<title>c10::KernelFunction::call&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::TensorOptions const&amp;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (193 samples, 8.67%)</title><rect x="717.2" y="405" width="102.3" height="15.0" fill="rgb(214,105,54)" rx="2" ry="2" />
<text  x="720.15" y="415.5" >c10::KernelF..</text>
</g>
<g >
<title>unlink_chunk (1 samples, 0.04%)</title><rect x="311.1" y="373" width="0.5" height="15.0" fill="rgb(229,154,51)" rx="2" ry="2" />
<text  x="314.10" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;char const*, char const*&gt; &gt; &gt;::deallocate (1 samples, 0.04%)</title><rect x="311.6" y="309" width="0.6" height="15.0" fill="rgb(247,149,33)" rx="2" ry="2" />
<text  x="314.63" y="319.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.04%)</title><rect x="180.7" y="229" width="0.5" height="15.0" fill="rgb(209,73,47)" rx="2" ry="2" />
<text  x="183.69" y="239.5" ></text>
</g>
<g >
<title>parseDeclaration (3 samples, 0.13%)</title><rect x="169.6" y="645" width="1.6" height="15.0" fill="rgb(226,150,5)" rx="2" ry="2" />
<text  x="172.56" y="655.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_TraceType_4.cpp (6 samples, 0.27%)</title><rect x="207.2" y="629" width="3.2" height="15.0" fill="rgb(251,152,13)" rx="2" ry="2" />
<text  x="210.20" y="639.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="277.2" y="549" width="0.5" height="15.0" fill="rgb(232,219,6)" rx="2" ry="2" />
<text  x="280.17" y="559.5" ></text>
</g>
<g >
<title>c10::demangle[abi:cxx11] (1 samples, 0.04%)</title><rect x="109.1" y="645" width="0.6" height="15.0" fill="rgb(221,221,15)" rx="2" ry="2" />
<text  x="112.13" y="655.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.04%)</title><rect x="252.8" y="549" width="0.5" height="15.0" fill="rgb(237,16,52)" rx="2" ry="2" />
<text  x="255.79" y="559.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.09%)</title><rect x="1007.1" y="213" width="1.1" height="15.0" fill="rgb(244,72,34)" rx="2" ry="2" />
<text  x="1010.12" y="223.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;c10::Type,  (1 samples, 0.04%)</title><rect x="195.5" y="357" width="0.6" height="15.0" fill="rgb(243,30,1)" rx="2" ry="2" />
<text  x="198.53" y="367.5" ></text>
</g>
<g >
<title>c10::Argument::type (1 samples, 0.04%)</title><rect x="250.7" y="469" width="0.5" height="15.0" fill="rgb(234,81,0)" rx="2" ry="2" />
<text  x="253.66" y="479.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (5 samples, 0.22%)</title><rect x="190.2" y="533" width="2.7" height="15.0" fill="rgb(223,21,1)" rx="2" ry="2" />
<text  x="193.23" y="543.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;short&gt;@plt (2 samples, 0.09%)</title><rect x="528.4" y="389" width="1.1" height="15.0" fill="rgb(231,226,16)" rx="2" ry="2" />
<text  x="531.44" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::RegistrationHandleRAII, std::allocator&lt;c10::RegistrationHandleRAII&gt; &gt;::~vector (2 samples, 0.09%)</title><rect x="309.5" y="565" width="1.1" height="15.0" fill="rgb(206,218,7)" rx="2" ry="2" />
<text  x="312.51" y="575.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (1 samples, 0.04%)</title><rect x="253.3" y="405" width="0.5" height="15.0" fill="rgb(254,158,20)" rx="2" ry="2" />
<text  x="256.32" y="415.5" ></text>
</g>
<g >
<title>free_perturb (1 samples, 0.04%)</title><rect x="468.0" y="389" width="0.5" height="15.0" fill="rgb(251,184,24)" rx="2" ry="2" />
<text  x="471.01" y="399.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1 samples, 0.04%)</title><rect x="244.3" y="485" width="0.5" height="15.0" fill="rgb(219,67,49)" rx="2" ry="2" />
<text  x="247.30" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str (1 samples, 0.04%)</title><rect x="183.3" y="517" width="0.6" height="15.0" fill="rgb(245,219,46)" rx="2" ry="2" />
<text  x="186.34" y="527.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor&amp;  (1 samples, 0.04%)</title><rect x="198.7" y="549" width="0.5" height="15.0" fill="rgb(245,194,25)" rx="2" ry="2" />
<text  x="201.72" y="559.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_library.cpp (3 samples, 0.13%)</title><rect x="265.5" y="613" width="1.6" height="15.0" fill="rgb(217,177,6)" rx="2" ry="2" />
<text  x="268.51" y="623.5" ></text>
</g>
<g >
<title>torch::jit::Operator::schema (3 samples, 0.13%)</title><rect x="113.4" y="597" width="1.6" height="15.0" fill="rgb(210,71,47)" rx="2" ry="2" />
<text  x="116.37" y="607.5" ></text>
</g>
<g >
<title>do_mmap (1 samples, 0.04%)</title><rect x="1168.8" y="549" width="0.5" height="15.0" fill="rgb(233,125,38)" rx="2" ry="2" />
<text  x="1171.80" y="559.5" ></text>
</g>
<g >
<title>at::CPUType::empty_memory_format (4 samples, 0.18%)</title><rect x="36.5" y="677" width="2.1" height="15.0" fill="rgb(215,105,32)" rx="2" ry="2" />
<text  x="39.50" y="687.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;torch::jit::Token*&gt; (1 samples, 0.04%)</title><rect x="193.4" y="421" width="0.5" height="15.0" fill="rgb(211,112,21)" rx="2" ry="2" />
<text  x="196.41" y="431.5" ></text>
</g>
<g >
<title>torch::jit::parseSchema (33 samples, 1.48%)</title><rect x="225.8" y="517" width="17.4" height="15.0" fill="rgb(210,123,20)" rx="2" ry="2" />
<text  x="228.75" y="527.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.04%)</title><rect x="261.8" y="517" width="0.5" height="15.0" fill="rgb(207,204,37)" rx="2" ry="2" />
<text  x="264.80" y="527.5" ></text>
</g>
<g >
<title>__tls_get_addr@plt (1 samples, 0.04%)</title><rect x="713.4" y="325" width="0.6" height="15.0" fill="rgb(208,100,39)" rx="2" ry="2" />
<text  x="716.44" y="335.5" ></text>
</g>
<g >
<title>torch::CppFunction::CppFunction&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor&amp;  (1 samples, 0.04%)</title><rect x="185.5" y="549" width="0.5" height="15.0" fill="rgb(211,170,5)" rx="2" ry="2" />
<text  x="188.46" y="559.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::_M_deallocate (1 samples, 0.04%)</title><rect x="325.9" y="213" width="0.6" height="15.0" fill="rgb(240,208,13)" rx="2" ry="2" />
<text  x="328.94" y="223.5" ></text>
</g>
<g >
<title>c10::Registry&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unique_ptr&lt;caffe2::OperatorBase, std::default_delete&lt;caffe2::OperatorBase&gt; &gt;, caffe2::OperatorDef const&amp;, caffe2::Workspace*&gt;::Register (1 samples, 0.04%)</title><rect x="270.3" y="565" width="0.5" height="15.0" fill="rgb(205,51,5)" rx="2" ry="2" />
<text  x="273.28" y="575.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::registerSchema (4 samples, 0.18%)</title><rect x="219.4" y="517" width="2.1" height="15.0" fill="rgb(237,180,4)" rx="2" ry="2" />
<text  x="222.39" y="527.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::nextIf (1 samples, 0.04%)</title><rect x="290.4" y="501" width="0.6" height="15.0" fill="rgb(224,44,13)" rx="2" ry="2" />
<text  x="293.42" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (1 samples, 0.04%)</title><rect x="248.5" y="469" width="0.6" height="15.0" fill="rgb(215,91,24)" rx="2" ry="2" />
<text  x="251.54" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;torch::jit::Token, std::allocator&lt;torch::jit::Token&gt; &gt;::_M_erase (1 samples, 0.04%)</title><rect x="70.4" y="677" width="0.6" height="15.0" fill="rgb(219,191,44)" rx="2" ry="2" />
<text  x="73.43" y="687.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;c10::RegistrationHandleRAII&gt; (2 samples, 0.09%)</title><rect x="309.5" y="501" width="1.1" height="15.0" fill="rgb(222,158,21)" rx="2" ry="2" />
<text  x="312.51" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;c10::Argument&gt;::allocate (1 samples, 0.04%)</title><rect x="210.9" y="357" width="0.5" height="15.0" fill="rgb(252,15,23)" rx="2" ry="2" />
<text  x="213.91" y="367.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.04%)</title><rect x="623.3" y="389" width="0.6" height="15.0" fill="rgb(234,185,42)" rx="2" ry="2" />
<text  x="626.32" y="399.5" ></text>
</g>
<g >
<title>__x64_sys_mprotect (1 samples, 0.04%)</title><rect x="1108.4" y="469" width="0.5" height="15.0" fill="rgb(234,103,32)" rx="2" ry="2" />
<text  x="1111.36" y="479.5" ></text>
</g>
<g >
<title>__pthread_once_slow (1 samples, 0.04%)</title><rect x="197.7" y="517" width="0.5" height="15.0" fill="rgb(206,1,42)" rx="2" ry="2" />
<text  x="200.65" y="527.5" ></text>
</g>
<g >
<title>torch::autograd::AutogradMeta::~AutogradMeta (6 samples, 0.27%)</title><rect x="471.2" y="533" width="3.2" height="15.0" fill="rgb(241,133,8)" rx="2" ry="2" />
<text  x="474.19" y="543.5" ></text>
</g>
<g >
<title>c10::dtype (1 samples, 0.04%)</title><rect x="156.3" y="661" width="0.5" height="15.0" fill="rgb(254,33,17)" rx="2" ry="2" />
<text  x="159.31" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str (1 samples, 0.04%)</title><rect x="201.9" y="469" width="0.5" height="15.0" fill="rgb(235,13,27)" rx="2" ry="2" />
<text  x="204.90" y="479.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_qlinear_prepack.cpp (1 samples, 0.04%)</title><rect x="267.6" y="613" width="0.6" height="15.0" fill="rgb(221,208,11)" rx="2" ry="2" />
<text  x="270.63" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt; &gt;::_M_drop_node (1 samples, 0.04%)</title><rect x="311.6" y="453" width="0.6" height="15.0" fill="rgb(250,80,50)" rx="2" ry="2" />
<text  x="314.63" y="463.5" ></text>
</g>
<g >
<title>c10::make_intrusive&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt;, c10::StorageImpl::use_byte_size_t, long&amp;, c10::DataPtr, c10::Allocator*&amp;, bool&gt; (4 samples, 0.18%)</title><rect x="448.4" y="325" width="2.1" height="15.0" fill="rgb(253,105,53)" rx="2" ry="2" />
<text  x="451.39" y="335.5" ></text>
</g>
<g >
<title>c10::Dispatcher::findOp (1 samples, 0.04%)</title><rect x="250.1" y="501" width="0.6" height="15.0" fill="rgb(207,172,31)" rx="2" ry="2" />
<text  x="253.13" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1 samples, 0.04%)</title><rect x="322.8" y="357" width="0.5" height="15.0" fill="rgb(227,21,9)" rx="2" ry="2" />
<text  x="325.76" y="367.5" ></text>
</g>
<g >
<title>c10::inferFunctionSchemaFlattenedReturns&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;  (1 samples, 0.04%)</title><rect x="108.6" y="629" width="0.5" height="15.0" fill="rgb(212,128,37)" rx="2" ry="2" />
<text  x="111.60" y="639.5" ></text>
</g>
<g >
<title>_int_free (4 samples, 0.18%)</title><rect x="870.4" y="485" width="2.1" height="15.0" fill="rgb(251,204,31)" rx="2" ry="2" />
<text  x="873.35" y="495.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.04%)</title><rect x="548.1" y="293" width="0.5" height="15.0" fill="rgb(252,58,51)" rx="2" ry="2" />
<text  x="551.05" y="303.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (2 samples, 0.09%)</title><rect x="986.4" y="213" width="1.1" height="15.0" fill="rgb(228,138,44)" rx="2" ry="2" />
<text  x="989.44" y="223.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (1 samples, 0.04%)</title><rect x="1169.9" y="565" width="0.5" height="15.0" fill="rgb(227,195,45)" rx="2" ry="2" />
<text  x="1172.86" y="575.5" ></text>
</g>
<g >
<title>c10::TensorOptions::TensorOptions (1 samples, 0.04%)</title><rect x="582.0" y="325" width="0.5" height="15.0" fill="rgb(222,211,37)" rx="2" ry="2" />
<text  x="584.98" y="335.5" ></text>
</g>
<g >
<title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (114 samples, 5.12%)</title><rect x="390.1" y="389" width="60.4" height="15.0" fill="rgb(214,17,43)" rx="2" ry="2" />
<text  x="393.08" y="399.5" >c10::i..</text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::optional (1 samples, 0.04%)</title><rect x="985.9" y="213" width="0.5" height="15.0" fill="rgb(246,146,6)" rx="2" ry="2" />
<text  x="988.91" y="223.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;float&gt; (1 samples, 0.04%)</title><rect x="796.7" y="293" width="0.5" height="15.0" fill="rgb(228,219,44)" rx="2" ry="2" />
<text  x="799.67" y="303.5" ></text>
</g>
<g >
<title>impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;c10::Scalar (1 samples, 0.04%)</title><rect x="249.6" y="565" width="0.5" height="15.0" fill="rgb(238,168,4)" rx="2" ry="2" />
<text  x="252.60" y="575.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="285.1" y="533" width="0.6" height="15.0" fill="rgb(227,19,17)" rx="2" ry="2" />
<text  x="288.12" y="543.5" ></text>
</g>
<g >
<title>page_fault (2 samples, 0.09%)</title><rect x="1137.0" y="533" width="1.1" height="15.0" fill="rgb(214,158,30)" rx="2" ry="2" />
<text  x="1139.99" y="543.5" ></text>
</g>
<g >
<title>c10::guts::to_string&lt;unsigned long&gt; (3 samples, 0.13%)</title><rect x="207.7" y="453" width="1.6" height="15.0" fill="rgb(216,140,30)" rx="2" ry="2" />
<text  x="210.73" y="463.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.04%)</title><rect x="187.6" y="453" width="0.5" height="15.0" fill="rgb(253,71,43)" rx="2" ry="2" />
<text  x="190.58" y="463.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;c10::Argument*, c10::Argument*, std::allocator&lt;c10::Argument&gt; &gt; (1 samples, 0.04%)</title><rect x="288.8" y="405" width="0.6" height="15.0" fill="rgb(247,189,52)" rx="2" ry="2" />
<text  x="291.83" y="415.5" ></text>
</g>
<g >
<title>c10::AliasInfo::AliasInfo (1 samples, 0.04%)</title><rect x="236.9" y="309" width="0.5" height="15.0" fill="rgb(231,114,13)" rx="2" ry="2" />
<text  x="239.88" y="319.5" ></text>
</g>
<g >
<title>torch::detail::TorchLibraryInit::TorchLibraryInit (3 samples, 0.13%)</title><rect x="198.2" y="597" width="1.6" height="15.0" fill="rgb(239,82,33)" rx="2" ry="2" />
<text  x="201.19" y="607.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::validIdent (1 samples, 0.04%)</title><rect x="235.8" y="309" width="0.6" height="15.0" fill="rgb(242,16,17)" rx="2" ry="2" />
<text  x="238.82" y="319.5" ></text>
</g>
<g >
<title>c10::RegistrationHandleRAII::RegistrationHandleRAII (1 samples, 0.04%)</title><rect x="187.6" y="485" width="0.5" height="15.0" fill="rgb(229,97,10)" rx="2" ry="2" />
<text  x="190.58" y="495.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="185.5" y="389" width="0.5" height="15.0" fill="rgb(213,34,36)" rx="2" ry="2" />
<text  x="188.46" y="399.5" ></text>
</g>
<g >
<title>all (2,226 samples, 100%)</title><rect x="10.0" y="725" width="1180.0" height="15.0" fill="rgb(216,46,27)" rx="2" ry="2" />
<text  x="13.00" y="735.5" ></text>
</g>
<g >
<title>at::(anonymous namespace)::empty_memory_format (1 samples, 0.04%)</title><rect x="383.7" y="469" width="0.5" height="15.0" fill="rgb(226,43,22)" rx="2" ry="2" />
<text  x="386.72" y="479.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.04%)</title><rect x="209.3" y="549" width="0.5" height="15.0" fill="rgb(213,50,9)" rx="2" ry="2" />
<text  x="212.32" y="559.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="276.6" y="405" width="0.6" height="15.0" fill="rgb(224,156,48)" rx="2" ry="2" />
<text  x="279.64" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1 samples, 0.04%)</title><rect x="221.0" y="501" width="0.5" height="15.0" fill="rgb(209,154,50)" rx="2" ry="2" />
<text  x="223.98" y="511.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::nextIf (1 samples, 0.04%)</title><rect x="237.4" y="341" width="0.5" height="15.0" fill="rgb(226,200,1)" rx="2" ry="2" />
<text  x="240.41" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;c10::AutogradMetaInterface, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::release (1 samples, 0.04%)</title><rect x="906.9" y="549" width="0.6" height="15.0" fill="rgb(248,226,38)" rx="2" ry="2" />
<text  x="909.93" y="559.5" ></text>
</g>
<g >
<title>c10::optional_base&lt;c10::AliasInfo&gt;::~optional_base (1 samples, 0.04%)</title><rect x="322.2" y="229" width="0.6" height="15.0" fill="rgb(240,216,46)" rx="2" ry="2" />
<text  x="325.23" y="239.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.04%)</title><rect x="285.1" y="485" width="0.6" height="15.0" fill="rgb(224,102,48)" rx="2" ry="2" />
<text  x="288.12" y="495.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="221.5" y="453" width="0.5" height="15.0" fill="rgb(228,54,11)" rx="2" ry="2" />
<text  x="224.51" y="463.5" ></text>
</g>
<g >
<title>TORCH_LIBRARY_init_quantized (3 samples, 0.13%)</title><rect x="265.5" y="581" width="1.6" height="15.0" fill="rgb(231,227,38)" rx="2" ry="2" />
<text  x="268.51" y="591.5" ></text>
</g>
<g >
<title>_M_manager (1 samples, 0.04%)</title><rect x="324.9" y="421" width="0.5" height="15.0" fill="rgb(247,117,21)" rx="2" ry="2" />
<text  x="327.88" y="431.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (1 samples, 0.04%)</title><rect x="182.8" y="485" width="0.5" height="15.0" fill="rgb(208,21,44)" rx="2" ry="2" />
<text  x="185.81" y="495.5" ></text>
</g>
<g >
<title>tryTypeMetaToScalarType (7 samples, 0.31%)</title><rect x="917.0" y="517" width="3.7" height="15.0" fill="rgb(248,140,4)" rx="2" ry="2" />
<text  x="920.00" y="527.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.04%)</title><rect x="1045.3" y="293" width="0.5" height="15.0" fill="rgb(253,9,9)" rx="2" ry="2" />
<text  x="1048.28" y="303.5" ></text>
</g>
<g >
<title>at::AutoNonVariableTypeMode::AutoNonVariableTypeMode (5 samples, 0.22%)</title><rect x="369.9" y="597" width="2.7" height="15.0" fill="rgb(217,199,21)" rx="2" ry="2" />
<text  x="372.94" y="607.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.04%)</title><rect x="199.2" y="469" width="0.6" height="15.0" fill="rgb(212,133,49)" rx="2" ry="2" />
<text  x="202.25" y="479.5" ></text>
</g>
<g >
<title>at::CPUType::empty_memory_format (3 samples, 0.13%)</title><rect x="128.7" y="677" width="1.6" height="15.0" fill="rgb(212,50,3)" rx="2" ry="2" />
<text  x="131.74" y="687.5" ></text>
</g>
<g >
<title>prepend_path.isra.0 (1 samples, 0.04%)</title><rect x="1168.8" y="469" width="0.5" height="15.0" fill="rgb(210,195,37)" rx="2" ry="2" />
<text  x="1171.80" y="479.5" ></text>
</g>
<g >
<title>c10::SmallVectorImpl&lt;unsigned long&gt;::SmallVectorImpl (1 samples, 0.04%)</title><rect x="957.3" y="373" width="0.5" height="15.0" fill="rgb(241,100,10)" rx="2" ry="2" />
<text  x="960.29" y="383.5" ></text>
</g>
<g >
<title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, c10::OperatorName, std::hash&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueHasher&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::hash&lt;c10::OperatorName&gt; &gt;, std::equal_to&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueEquality&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::equal_to&lt;c10::OperatorName&gt; &gt;, std::allocator&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt; &gt; &gt;::find (1 samples, 0.04%)</title><rect x="286.2" y="501" width="0.5" height="15.0" fill="rgb(237,154,51)" rx="2" ry="2" />
<text  x="289.18" y="511.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="269.2" y="405" width="0.5" height="15.0" fill="rgb(239,9,6)" rx="2" ry="2" />
<text  x="272.22" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt; &gt; &gt; &gt;::deallocate (1 samples, 0.04%)</title><rect x="314.8" y="229" width="0.5" height="15.0" fill="rgb(225,177,43)" rx="2" ry="2" />
<text  x="317.81" y="239.5" ></text>
</g>
<g >
<title>dispatchTypeId (2 samples, 0.09%)</title><rect x="941.4" y="501" width="1.0" height="15.0" fill="rgb(206,87,9)" rx="2" ry="2" />
<text  x="944.38" y="511.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.04%)</title><rect x="189.2" y="277" width="0.5" height="15.0" fill="rgb(243,16,3)" rx="2" ry="2" />
<text  x="192.17" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (1 samples, 0.04%)</title><rect x="110.2" y="613" width="0.5" height="15.0" fill="rgb(232,134,7)" rx="2" ry="2" />
<text  x="113.19" y="623.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::_M_allocate (1 samples, 0.04%)</title><rect x="243.8" y="437" width="0.5" height="15.0" fill="rgb(227,33,28)" rx="2" ry="2" />
<text  x="246.77" y="447.5" ></text>
</g>
<g >
<title>torch::jit::parseSchema (1 samples, 0.04%)</title><rect x="281.4" y="581" width="0.5" height="15.0" fill="rgb(219,129,31)" rx="2" ry="2" />
<text  x="284.41" y="591.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (1 samples, 0.04%)</title><rect x="244.3" y="501" width="0.5" height="15.0" fill="rgb(210,169,29)" rx="2" ry="2" />
<text  x="247.30" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (1 samples, 0.04%)</title><rect x="273.5" y="469" width="0.5" height="15.0" fill="rgb(220,144,45)" rx="2" ry="2" />
<text  x="276.46" y="479.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (1 samples, 0.04%)</title><rect x="209.8" y="373" width="0.6" height="15.0" fill="rgb(243,58,19)" rx="2" ry="2" />
<text  x="212.85" y="383.5" ></text>
</g>
<g >
<title>at::detail::make_tensor&lt;c10::TensorImpl, c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;, c10::DispatchKey, caffe2::TypeMeta&amp;&gt; (5 samples, 0.22%)</title><rect x="80.5" y="677" width="2.7" height="15.0" fill="rgb(237,65,26)" rx="2" ry="2" />
<text  x="83.50" y="687.5" ></text>
</g>
<g >
<title>c10::inferFunctionSchemaFlattenedReturns&lt;at::Tensor  (1 samples, 0.04%)</title><rect x="203.5" y="517" width="0.5" height="15.0" fill="rgb(217,58,47)" rx="2" ry="2" />
<text  x="206.49" y="527.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.04%)</title><rect x="321.7" y="229" width="0.5" height="15.0" fill="rgb(245,92,24)" rx="2" ry="2" />
<text  x="324.70" y="239.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="77.9" y="677" width="0.5" height="15.0" fill="rgb(219,226,40)" rx="2" ry="2" />
<text  x="80.85" y="687.5" ></text>
</g>
<g >
<title>c10::OperatorName::setNamespaceIfNotSet (1 samples, 0.04%)</title><rect x="203.0" y="533" width="0.5" height="15.0" fill="rgb(213,88,42)" rx="2" ry="2" />
<text  x="205.96" y="543.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::operator++ (2 samples, 0.09%)</title><rect x="592.6" y="293" width="1.0" height="15.0" fill="rgb(251,163,20)" rx="2" ry="2" />
<text  x="595.58" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="182.3" y="373" width="0.5" height="15.0" fill="rgb(232,134,18)" rx="2" ry="2" />
<text  x="185.28" y="383.5" ></text>
</g>
<g >
<title>c10::either&lt;torch::jit::Operator::C10Operator, torch::jit::Operator::JitOnlyOperator&gt;::_destruct (1 samples, 0.04%)</title><rect x="325.9" y="325" width="0.6" height="15.0" fill="rgb(241,98,49)" rx="2" ry="2" />
<text  x="328.94" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.04%)</title><rect x="461.6" y="581" width="0.6" height="15.0" fill="rgb(245,202,40)" rx="2" ry="2" />
<text  x="464.64" y="591.5" ></text>
</g>
<g >
<title>std::swap&lt;std::_Any_data&gt; (1 samples, 0.04%)</title><rect x="224.7" y="437" width="0.5" height="15.0" fill="rgb(213,152,3)" rx="2" ry="2" />
<text  x="227.69" y="447.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_CUDAType.cpp (8 samples, 0.36%)</title><rect x="184.9" y="629" width="4.3" height="15.0" fill="rgb(248,83,8)" rx="2" ry="2" />
<text  x="187.93" y="639.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="276.1" y="533" width="0.5" height="15.0" fill="rgb(245,80,14)" rx="2" ry="2" />
<text  x="279.11" y="543.5" ></text>
</g>
<g >
<title>at::AutoNonVariableTypeMode::~AutoNonVariableTypeMode (1 samples, 0.04%)</title><rect x="159.0" y="629" width="0.5" height="15.0" fill="rgb(252,51,32)" rx="2" ry="2" />
<text  x="161.96" y="639.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.04%)</title><rect x="211.4" y="341" width="0.6" height="15.0" fill="rgb(239,23,24)" rx="2" ry="2" />
<text  x="214.44" y="351.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="189.2" y="341" width="0.5" height="15.0" fill="rgb(251,187,29)" rx="2" ry="2" />
<text  x="192.17" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::vector (2 samples, 0.09%)</title><rect x="287.2" y="565" width="1.1" height="15.0" fill="rgb(247,48,41)" rx="2" ry="2" />
<text  x="290.24" y="575.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.04%)</title><rect x="214.1" y="325" width="0.5" height="15.0" fill="rgb(207,46,33)" rx="2" ry="2" />
<text  x="217.09" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="175.4" y="581" width="0.5" height="15.0" fill="rgb(207,216,25)" rx="2" ry="2" />
<text  x="178.39" y="591.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;char const*, char const*&gt;, std::allocator&lt;std::pair&lt;char const*, char const*&gt; &gt; &gt;::_M_deallocate (1 samples, 0.04%)</title><rect x="311.6" y="325" width="0.6" height="15.0" fill="rgb(247,132,45)" rx="2" ry="2" />
<text  x="314.63" y="335.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.04%)</title><rect x="194.5" y="437" width="0.5" height="15.0" fill="rgb(240,63,16)" rx="2" ry="2" />
<text  x="197.47" y="447.5" ></text>
</g>
<g >
<title>c10::impl::ExcludeDispatchKeyGuard::ExcludeDispatchKeyGuard (1 samples, 0.04%)</title><rect x="145.7" y="677" width="0.5" height="15.0" fill="rgb(225,72,2)" rx="2" ry="2" />
<text  x="148.71" y="687.5" ></text>
</g>
<g >
<title>c10::inferFunctionSchemaFlattenedReturns&lt;std::tuple&lt;at::Tensor, at::Tensor&gt;  (1 samples, 0.04%)</title><rect x="186.0" y="517" width="0.5" height="15.0" fill="rgb(238,106,23)" rx="2" ry="2" />
<text  x="188.99" y="527.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="173.3" y="581" width="0.5" height="15.0" fill="rgb(250,189,0)" rx="2" ry="2" />
<text  x="176.27" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_List_node&lt;c10::Dispatcher::OperatorDef&gt; &gt;::construct&lt;c10::Dispatcher::OperatorDef, c10::OperatorName&gt; (3 samples, 0.13%)</title><rect x="217.3" y="437" width="1.6" height="15.0" fill="rgb(207,179,51)" rx="2" ry="2" />
<text  x="220.27" y="447.5" ></text>
</g>
<g >
<title>unlink_chunk (1 samples, 0.04%)</title><rect x="1044.2" y="197" width="0.6" height="15.0" fill="rgb(234,186,11)" rx="2" ry="2" />
<text  x="1047.22" y="207.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;::~intrusive_ptr (1 samples, 0.04%)</title><rect x="541.2" y="261" width="0.5" height="15.0" fill="rgb(229,144,43)" rx="2" ry="2" />
<text  x="544.16" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::_M_allocate (4 samples, 0.18%)</title><rect x="229.5" y="373" width="2.1" height="15.0" fill="rgb(212,156,43)" rx="2" ry="2" />
<text  x="232.46" y="383.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;c10::Type,  (1 samples, 0.04%)</title><rect x="253.3" y="453" width="0.5" height="15.0" fill="rgb(251,146,52)" rx="2" ry="2" />
<text  x="256.32" y="463.5" ></text>
</g>
<g >
<title>c10::TensorImpl::refresh_contiguous (1 samples, 0.04%)</title><rect x="580.9" y="293" width="0.5" height="15.0" fill="rgb(235,206,27)" rx="2" ry="2" />
<text  x="583.92" y="303.5" ></text>
</g>
<g >
<title>c10::FunctionSchema::~FunctionSchema (1 samples, 0.04%)</title><rect x="226.8" y="469" width="0.5" height="15.0" fill="rgb(230,94,34)" rx="2" ry="2" />
<text  x="229.81" y="479.5" ></text>
</g>
<g >
<title>at::hasCallbacks (1 samples, 0.04%)</title><rect x="387.4" y="373" width="0.6" height="15.0" fill="rgb(237,189,49)" rx="2" ry="2" />
<text  x="390.43" y="383.5" ></text>
</g>
<g >
<title>c10::ProfiledCPUMemoryReporter::Delete (9 samples, 0.40%)</title><rect x="849.7" y="373" width="4.7" height="15.0" fill="rgb(234,47,10)" rx="2" ry="2" />
<text  x="852.68" y="383.5" ></text>
</g>
</g>
</svg>
