<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="582" onload="init(evt)" viewBox="0 0 1200 582" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="582.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="565" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="565" > </text>
<g id="frames">
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; (1 samples, 0.02%)</title><rect x="135.4" y="325" width="0.2" height="15.0" fill="rgb(240,92,20)" rx="2" ry="2" />
<text  x="138.37" y="335.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (20 samples, 0.47%)</title><rect x="257.4" y="373" width="5.6" height="15.0" fill="rgb(205,34,37)" rx="2" ry="2" />
<text  x="260.40" y="383.5" ></text>
</g>
<g >
<title>[libc10.so] (2 samples, 0.05%)</title><rect x="12.5" y="469" width="0.6" height="15.0" fill="rgb(249,58,17)" rx="2" ry="2" />
<text  x="15.50" y="479.5" ></text>
</g>
<g >
<title>[microbenchmark] (1 samples, 0.02%)</title><rect x="585.4" y="373" width="0.3" height="15.0" fill="rgb(237,91,45)" rx="2" ry="2" />
<text  x="588.41" y="383.5" ></text>
</g>
<g >
<title>at::RecordFunction::RecordFunction (6 samples, 0.14%)</title><rect x="1035.4" y="357" width="1.7" height="15.0" fill="rgb(226,47,38)" rx="2" ry="2" />
<text  x="1038.45" y="367.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::Registerer::op (9 samples, 0.21%)</title><rect x="197.4" y="437" width="2.5" height="15.0" fill="rgb(209,129,49)" rx="2" ry="2" />
<text  x="200.35" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;torch::autograd::AutogradMeta, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::_M_ptr (5 samples, 0.12%)</title><rect x="1007.9" y="357" width="1.4" height="15.0" fill="rgb(208,105,17)" rx="2" ry="2" />
<text  x="1010.93" y="367.5" ></text>
</g>
<g >
<title>c10::impl::tls_local_dispatch_key_set (4 samples, 0.09%)</title><rect x="241.6" y="485" width="1.1" height="15.0" fill="rgb(254,10,11)" rx="2" ry="2" />
<text  x="244.55" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="193.2" y="277" width="0.3" height="15.0" fill="rgb(251,197,10)" rx="2" ry="2" />
<text  x="196.18" y="287.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;unsigned char&gt; (3 samples, 0.07%)</title><rect x="208.2" y="485" width="0.8" height="15.0" fill="rgb(232,34,42)" rx="2" ry="2" />
<text  x="211.20" y="495.5" ></text>
</g>
<g >
<title>c10::Device::validate (8 samples, 0.19%)</title><rect x="408.1" y="357" width="2.2" height="15.0" fill="rgb(253,134,12)" rx="2" ry="2" />
<text  x="411.06" y="367.5" ></text>
</g>
<g >
<title>c10::VariableVersion::VersionCounter::~VersionCounter (13 samples, 0.31%)</title><rect x="843.1" y="357" width="3.6" height="15.0" fill="rgb(245,200,9)" rx="2" ry="2" />
<text  x="846.09" y="367.5" ></text>
</g>
<g >
<title>c10::tryTypeMetaToScalarType (71 samples, 1.67%)</title><rect x="969.6" y="325" width="19.7" height="15.0" fill="rgb(211,112,43)" rx="2" ry="2" />
<text  x="972.57" y="335.5" ></text>
</g>
<g >
<title>c10::findSchemaDifferences[abi:cxx11] (1 samples, 0.02%)</title><rect x="155.1" y="341" width="0.3" height="15.0" fill="rgb(232,197,15)" rx="2" ry="2" />
<text  x="158.10" y="351.5" ></text>
</g>
<g >
<title>c10::constexpr_storage_t&lt;bool&gt;::constexpr_storage_t (1 samples, 0.02%)</title><rect x="807.5" y="357" width="0.3" height="15.0" fill="rgb(207,94,43)" rx="2" ry="2" />
<text  x="810.51" y="367.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.02%)</title><rect x="196.2" y="421" width="0.3" height="15.0" fill="rgb(210,29,29)" rx="2" ry="2" />
<text  x="199.24" y="431.5" ></text>
</g>
<g >
<title>perf_iterate_sb (1 samples, 0.02%)</title><rect x="151.5" y="165" width="0.3" height="15.0" fill="rgb(231,219,2)" rx="2" ry="2" />
<text  x="154.49" y="175.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="190.7" y="229" width="0.3" height="15.0" fill="rgb(220,5,54)" rx="2" ry="2" />
<text  x="193.68" y="239.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor  (1 samples, 0.02%)</title><rect x="153.2" y="421" width="0.2" height="15.0" fill="rgb(207,131,35)" rx="2" ry="2" />
<text  x="156.16" y="431.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;c10::Device&gt;::constexpr_optional_base&lt;c10::DeviceType const&amp;, int&gt; (8 samples, 0.19%)</title><rect x="277.4" y="405" width="2.2" height="15.0" fill="rgb(247,9,28)" rx="2" ry="2" />
<text  x="280.41" y="415.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (1 samples, 0.02%)</title><rect x="155.7" y="293" width="0.2" height="15.0" fill="rgb(242,126,52)" rx="2" ry="2" />
<text  x="158.66" y="303.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.02%)</title><rect x="225.7" y="357" width="0.3" height="15.0" fill="rgb(234,82,48)" rx="2" ry="2" />
<text  x="228.71" y="367.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (3 samples, 0.07%)</title><rect x="169.0" y="325" width="0.8" height="15.0" fill="rgb(223,169,54)" rx="2" ry="2" />
<text  x="172.00" y="335.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.02%)</title><rect x="155.7" y="405" width="0.2" height="15.0" fill="rgb(209,184,14)" rx="2" ry="2" />
<text  x="158.66" y="415.5" ></text>
</g>
<g >
<title>caffe2::OpSchemaRegistry::NewSchema (2 samples, 0.05%)</title><rect x="193.7" y="437" width="0.6" height="15.0" fill="rgb(228,72,16)" rx="2" ry="2" />
<text  x="196.74" y="447.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="256.6" y="325" width="0.2" height="15.0" fill="rgb(237,121,41)" rx="2" ry="2" />
<text  x="259.56" y="335.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (1 samples, 0.02%)</title><rect x="148.4" y="389" width="0.3" height="15.0" fill="rgb(238,51,52)" rx="2" ry="2" />
<text  x="151.43" y="399.5" ></text>
</g>
<g >
<title>torch::Library::_impl (3 samples, 0.07%)</title><rect x="149.5" y="405" width="0.9" height="15.0" fill="rgb(218,97,40)" rx="2" ry="2" />
<text  x="152.54" y="415.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;long&gt;::size (3 samples, 0.07%)</title><rect x="272.7" y="421" width="0.8" height="15.0" fill="rgb(209,59,1)" rx="2" ry="2" />
<text  x="275.69" y="431.5" ></text>
</g>
<g >
<title>c10::TensorImpl::unique_version (1 samples, 0.02%)</title><rect x="643.8" y="405" width="0.3" height="15.0" fill="rgb(211,76,34)" rx="2" ry="2" />
<text  x="646.78" y="415.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="179.3" y="261" width="0.3" height="15.0" fill="rgb(211,84,52)" rx="2" ry="2" />
<text  x="182.29" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt; &gt;::_M_erase (2 samples, 0.05%)</title><rect x="254.9" y="341" width="0.6" height="15.0" fill="rgb(232,172,40)" rx="2" ry="2" />
<text  x="257.90" y="351.5" ></text>
</g>
<g >
<title>at::RecordFunction::~RecordFunction (16 samples, 0.38%)</title><rect x="27.5" y="485" width="4.5" height="15.0" fill="rgb(223,66,38)" rx="2" ry="2" />
<text  x="30.51" y="495.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.02%)</title><rect x="146.2" y="341" width="0.3" height="15.0" fill="rgb(232,133,51)" rx="2" ry="2" />
<text  x="149.21" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;torch::jit::Token, std::allocator&lt;torch::jit::Token&gt; &gt;::_M_erase (1 samples, 0.02%)</title><rect x="222.9" y="357" width="0.3" height="15.0" fill="rgb(211,152,33)" rx="2" ry="2" />
<text  x="225.93" y="367.5" ></text>
</g>
<g >
<title>c10::Dispatcher::callWithDispatchKey&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (1 samples, 0.02%)</title><rect x="1169.4" y="389" width="0.3" height="15.0" fill="rgb(231,23,35)" rx="2" ry="2" />
<text  x="1172.43" y="399.5" ></text>
</g>
<g >
<title>c10::TupleType::operator== (1 samples, 0.02%)</title><rect x="197.1" y="421" width="0.3" height="15.0" fill="rgb(218,53,18)" rx="2" ry="2" />
<text  x="200.08" y="431.5" ></text>
</g>
<g >
<title>std::move&lt;c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;&amp;&gt; (3 samples, 0.07%)</title><rect x="95.6" y="485" width="0.8" height="15.0" fill="rgb(205,212,0)" rx="2" ry="2" />
<text  x="98.62" y="495.5" ></text>
</g>
<g >
<title>torch::Library::_impl (11 samples, 0.26%)</title><rect x="135.1" y="405" width="3.0" height="15.0" fill="rgb(245,176,11)" rx="2" ry="2" />
<text  x="138.09" y="415.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::_Tuple_impl&lt;std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (3 samples, 0.07%)</title><rect x="482.0" y="341" width="0.8" height="15.0" fill="rgb(214,34,53)" rx="2" ry="2" />
<text  x="485.00" y="351.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;*&gt; (1 samples, 0.02%)</title><rect x="837.0" y="309" width="0.3" height="15.0" fill="rgb(226,85,51)" rx="2" ry="2" />
<text  x="839.97" y="319.5" ></text>
</g>
<g >
<title>[microbenchmark] (2 samples, 0.05%)</title><rect x="896.2" y="373" width="0.5" height="15.0" fill="rgb(238,203,16)" rx="2" ry="2" />
<text  x="899.18" y="383.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.02%)</title><rect x="148.4" y="405" width="0.3" height="15.0" fill="rgb(218,147,53)" rx="2" ry="2" />
<text  x="151.43" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::_M_realloc_insert&lt;c10::Argument&gt; (1 samples, 0.02%)</title><rect x="198.5" y="389" width="0.2" height="15.0" fill="rgb(215,56,46)" rx="2" ry="2" />
<text  x="201.47" y="399.5" ></text>
</g>
<g >
<title>c10::UndefinedTensorImpl::singleton (1 samples, 0.02%)</title><rect x="296.9" y="389" width="0.2" height="15.0" fill="rgb(227,142,46)" rx="2" ry="2" />
<text  x="299.87" y="399.5" ></text>
</g>
<g >
<title>search_binary_handler (2 samples, 0.05%)</title><rect x="1179.4" y="437" width="0.6" height="15.0" fill="rgb(206,164,45)" rx="2" ry="2" />
<text  x="1182.44" y="447.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.02%)</title><rect x="155.1" y="309" width="0.3" height="15.0" fill="rgb(221,203,17)" rx="2" ry="2" />
<text  x="158.10" y="319.5" ></text>
</g>
<g >
<title>__call_rcu (1 samples, 0.02%)</title><rect x="1183.1" y="357" width="0.2" height="15.0" fill="rgb(230,164,2)" rx="2" ry="2" />
<text  x="1186.05" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect x="194.6" y="357" width="0.3" height="15.0" fill="rgb(250,186,18)" rx="2" ry="2" />
<text  x="197.57" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;torch::autograd::AutogradMeta, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::_M_ptr (2 samples, 0.05%)</title><rect x="91.2" y="485" width="0.5" height="15.0" fill="rgb(215,137,6)" rx="2" ry="2" />
<text  x="94.17" y="495.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.05%)</title><rect x="14.4" y="485" width="0.6" height="15.0" fill="rgb(229,92,16)" rx="2" ry="2" />
<text  x="17.45" y="495.5" ></text>
</g>
<g >
<title>torch::Library::def&lt;char const  (1 samples, 0.02%)</title><rect x="248.2" y="485" width="0.3" height="15.0" fill="rgb(230,27,26)" rx="2" ry="2" />
<text  x="251.22" y="495.5" ></text>
</g>
<g >
<title>c10::ThreadLocalDebugInfo::get (10 samples, 0.24%)</title><rect x="42.5" y="485" width="2.8" height="15.0" fill="rgb(237,146,49)" rx="2" ry="2" />
<text  x="45.52" y="495.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.02%)</title><rect x="248.8" y="341" width="0.3" height="15.0" fill="rgb(219,76,43)" rx="2" ry="2" />
<text  x="251.78" y="351.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.02%)</title><rect x="151.5" y="389" width="0.3" height="15.0" fill="rgb(243,61,16)" rx="2" ry="2" />
<text  x="154.49" y="399.5" ></text>
</g>
<g >
<title>c10::TensorImpl::empty_tensor_restride (11 samples, 0.26%)</title><rect x="780.8" y="245" width="3.1" height="15.0" fill="rgb(206,15,26)" rx="2" ry="2" />
<text  x="783.82" y="255.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;torch::autograd::Node,  (7 samples, 0.16%)</title><rect x="959.8" y="341" width="2.0" height="15.0" fill="rgb(236,10,54)" rx="2" ry="2" />
<text  x="962.84" y="351.5" ></text>
</g>
<g >
<title>at::native::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_quantized_QuantizedCPU (1 samples, 0.02%)</title><rect x="186.8" y="421" width="0.3" height="15.0" fill="rgb(245,177,28)" rx="2" ry="2" />
<text  x="189.79" y="431.5" ></text>
</g>
<g >
<title>c10::TensorImpl::~TensorImpl (4 samples, 0.09%)</title><rect x="242.9" y="453" width="1.2" height="15.0" fill="rgb(227,218,21)" rx="2" ry="2" />
<text  x="245.94" y="463.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::VariableVersion::VersionCounter, c10::detail::intrusive_target_default_null_type&lt;c10::VariableVersion::VersionCounter&gt; &gt;::use_count (7 samples, 0.16%)</title><rect x="917.3" y="357" width="2.0" height="15.0" fill="rgb(227,45,41)" rx="2" ry="2" />
<text  x="920.31" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;, std::allocator&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt; &gt;::_Vector_impl::~_Vector_impl (5 samples, 0.12%)</title><rect x="838.9" y="293" width="1.4" height="15.0" fill="rgb(210,116,30)" rx="2" ry="2" />
<text  x="841.92" y="303.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (1 samples, 0.02%)</title><rect x="147.6" y="389" width="0.3" height="15.0" fill="rgb(233,179,23)" rx="2" ry="2" />
<text  x="150.60" y="399.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.02%)</title><rect x="152.3" y="389" width="0.3" height="15.0" fill="rgb(217,217,16)" rx="2" ry="2" />
<text  x="155.32" y="399.5" ></text>
</g>
<g >
<title>google::protobuf::internal::InitSCCImpl (2 samples, 0.05%)</title><rect x="202.4" y="437" width="0.5" height="15.0" fill="rgb(249,122,42)" rx="2" ry="2" />
<text  x="205.36" y="447.5" ></text>
</g>
<g >
<title>c10::TensorOptions::set_requires_grad (7 samples, 0.16%)</title><rect x="801.1" y="373" width="2.0" height="15.0" fill="rgb(227,87,52)" rx="2" ry="2" />
<text  x="804.11" y="383.5" ></text>
</g>
<g >
<title>c10::Dispatcher::singleton (1 samples, 0.02%)</title><rect x="572.6" y="389" width="0.3" height="15.0" fill="rgb(225,80,47)" rx="2" ry="2" />
<text  x="575.62" y="399.5" ></text>
</g>
<g >
<title>std::tuple&lt;c10::AutogradMetaInterface*, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::tuple&lt;c10::AutogradMetaInterface*, std::default_delete&lt;c10::AutogradMetaInterface&gt;, true&gt; (1 samples, 0.02%)</title><rect x="304.1" y="373" width="0.3" height="15.0" fill="rgb(245,100,15)" rx="2" ry="2" />
<text  x="307.10" y="383.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="561.2" y="245" width="0.3" height="15.0" fill="rgb(209,211,33)" rx="2" ry="2" />
<text  x="564.22" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;, std::allocator&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt; &gt;::~_Vector_base (7 samples, 0.16%)</title><rect x="391.1" y="325" width="1.9" height="15.0" fill="rgb(211,123,52)" rx="2" ry="2" />
<text  x="394.10" y="335.5" ></text>
</g>
<g >
<title>c10::Dispatcher::callWithDispatchKey&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (6 samples, 0.14%)</title><rect x="1176.1" y="501" width="1.7" height="15.0" fill="rgb(219,201,15)" rx="2" ry="2" />
<text  x="1179.10" y="511.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (19 samples, 0.45%)</title><rect x="1127.7" y="181" width="5.3" height="15.0" fill="rgb(247,200,8)" rx="2" ry="2" />
<text  x="1130.73" y="191.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="270.5" y="357" width="0.2" height="15.0" fill="rgb(210,171,40)" rx="2" ry="2" />
<text  x="273.46" y="367.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::MemoryFormat&gt;::initialized (1 samples, 0.02%)</title><rect x="1175.8" y="373" width="0.3" height="15.0" fill="rgb(210,84,48)" rx="2" ry="2" />
<text  x="1178.82" y="383.5" ></text>
</g>
<g >
<title>unmap_single_vma (11 samples, 0.26%)</title><rect x="1180.0" y="373" width="3.1" height="15.0" fill="rgb(212,66,32)" rx="2" ry="2" />
<text  x="1182.99" y="383.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.05%)</title><rect x="193.2" y="405" width="0.5" height="15.0" fill="rgb(209,28,25)" rx="2" ry="2" />
<text  x="196.18" y="415.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (7 samples, 0.16%)</title><rect x="139.3" y="389" width="1.9" height="15.0" fill="rgb(207,182,34)" rx="2" ry="2" />
<text  x="142.26" y="399.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::OperatorEntry (1 samples, 0.02%)</title><rect x="133.1" y="341" width="0.3" height="15.0" fill="rgb(210,76,37)" rx="2" ry="2" />
<text  x="136.14" y="351.5" ></text>
</g>
<g >
<title>page_fault (2 samples, 0.05%)</title><rect x="160.4" y="373" width="0.5" height="15.0" fill="rgb(229,25,18)" rx="2" ry="2" />
<text  x="163.38" y="383.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.02%)</title><rect x="137.0" y="325" width="0.3" height="15.0" fill="rgb(249,110,36)" rx="2" ry="2" />
<text  x="140.03" y="335.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::nextIf (1 samples, 0.02%)</title><rect x="195.1" y="341" width="0.3" height="15.0" fill="rgb(242,101,50)" rx="2" ry="2" />
<text  x="198.13" y="351.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="135.9" y="261" width="0.3" height="15.0" fill="rgb(211,148,28)" rx="2" ry="2" />
<text  x="138.92" y="271.5" ></text>
</g>
<g >
<title>at::Tensor::~Tensor (64 samples, 1.51%)</title><rect x="579.8" y="421" width="17.8" height="15.0" fill="rgb(241,144,2)" rx="2" ry="2" />
<text  x="582.85" y="431.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::operator bool (2 samples, 0.05%)</title><rect x="1170.8" y="357" width="0.6" height="15.0" fill="rgb(207,159,49)" rx="2" ry="2" />
<text  x="1173.82" y="367.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (2 samples, 0.05%)</title><rect x="248.8" y="421" width="0.5" height="15.0" fill="rgb(250,89,45)" rx="2" ry="2" />
<text  x="251.78" y="431.5" ></text>
</g>
<g >
<title>c10::TensorOptions::requires_grad (3 samples, 0.07%)</title><rect x="906.5" y="405" width="0.8" height="15.0" fill="rgb(212,147,19)" rx="2" ry="2" />
<text  x="909.47" y="415.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="156.5" y="341" width="0.3" height="15.0" fill="rgb(209,51,15)" rx="2" ry="2" />
<text  x="159.49" y="351.5" ></text>
</g>
<g >
<title>c10::TensorOptions::dtype (13 samples, 0.31%)</title><rect x="283.8" y="421" width="3.6" height="15.0" fill="rgb(219,214,32)" rx="2" ry="2" />
<text  x="286.80" y="431.5" ></text>
</g>
<g >
<title>c10::typeMetaToScalarType (3 samples, 0.07%)</title><rect x="71.7" y="485" width="0.8" height="15.0" fill="rgb(207,191,16)" rx="2" ry="2" />
<text  x="74.71" y="495.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;float&gt; (4 samples, 0.09%)</title><rect x="77.8" y="485" width="1.1" height="15.0" fill="rgb(248,65,43)" rx="2" ry="2" />
<text  x="80.83" y="495.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="199.9" y="373" width="0.2" height="15.0" fill="rgb(253,73,20)" rx="2" ry="2" />
<text  x="202.86" y="383.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="136.5" y="245" width="0.3" height="15.0" fill="rgb(206,120,5)" rx="2" ry="2" />
<text  x="139.48" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::either&lt;c10::OperatorName, c10::FunctionSchema&gt;, std::allocator&lt;c10::either&lt;c10::OperatorName, c10::FunctionSchema&gt; &gt; &gt;::_M_realloc_insert&lt;c10::either&lt;c10::OperatorName, c10::FunctionSchema&gt; &gt; (1 samples, 0.02%)</title><rect x="150.1" y="357" width="0.3" height="15.0" fill="rgb(206,93,50)" rx="2" ry="2" />
<text  x="153.10" y="367.5" ></text>
</g>
<g >
<title>brk (1 samples, 0.02%)</title><rect x="193.2" y="309" width="0.3" height="15.0" fill="rgb(237,204,6)" rx="2" ry="2" />
<text  x="196.18" y="319.5" ></text>
</g>
<g >
<title>at::TORCH_LIBRARY_IMPL_init_aten_CUDA (12 samples, 0.28%)</title><rect x="138.4" y="437" width="3.4" height="15.0" fill="rgb(240,194,52)" rx="2" ry="2" />
<text  x="141.42" y="447.5" ></text>
</g>
<g >
<title>do_mmap (4 samples, 0.09%)</title><rect x="123.7" y="261" width="1.1" height="15.0" fill="rgb(213,142,44)" rx="2" ry="2" />
<text  x="126.69" y="271.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="176.2" y="357" width="0.3" height="15.0" fill="rgb(244,135,20)" rx="2" ry="2" />
<text  x="179.23" y="367.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="263.5" y="421" width="0.3" height="15.0" fill="rgb(212,131,29)" rx="2" ry="2" />
<text  x="266.51" y="431.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (15 samples, 0.35%)</title><rect x="767.2" y="181" width="4.2" height="15.0" fill="rgb(212,209,6)" rx="2" ry="2" />
<text  x="770.20" y="191.5" ></text>
</g>
<g >
<title>at::AutoNonVariableTypeMode::~AutoNonVariableTypeMode (3 samples, 0.07%)</title><rect x="673.0" y="389" width="0.8" height="15.0" fill="rgb(245,187,32)" rx="2" ry="2" />
<text  x="675.97" y="399.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="153.4" y="325" width="0.3" height="15.0" fill="rgb(232,139,22)" rx="2" ry="2" />
<text  x="156.43" y="335.5" ></text>
</g>
<g >
<title>c10::TensorOptions::dtype (1 samples, 0.02%)</title><rect x="790.8" y="325" width="0.3" height="15.0" fill="rgb(225,141,49)" rx="2" ry="2" />
<text  x="793.83" y="335.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="203.2" y="261" width="0.3" height="15.0" fill="rgb(212,162,33)" rx="2" ry="2" />
<text  x="206.19" y="271.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor&amp;  (1 samples, 0.02%)</title><rect x="153.4" y="421" width="0.3" height="15.0" fill="rgb(238,34,28)" rx="2" ry="2" />
<text  x="156.43" y="431.5" ></text>
</g>
<g >
<title>[[stack]] (313 samples, 7.37%)</title><rect x="16.7" y="501" width="87.0" height="15.0" fill="rgb(215,36,34)" rx="2" ry="2" />
<text  x="19.67" y="511.5" >[[stack]]</text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseType (2 samples, 0.05%)</title><rect x="248.8" y="405" width="0.5" height="15.0" fill="rgb(211,212,40)" rx="2" ry="2" />
<text  x="251.78" y="415.5" ></text>
</g>
<g >
<title>zap_pte_range.isra.0 (11 samples, 0.26%)</title><rect x="1180.0" y="341" width="3.1" height="15.0" fill="rgb(242,135,15)" rx="2" ry="2" />
<text  x="1182.99" y="351.5" ></text>
</g>
<g >
<title>at::RecordFunction::end (1 samples, 0.02%)</title><rect x="501.5" y="357" width="0.2" height="15.0" fill="rgb(239,14,51)" rx="2" ry="2" />
<text  x="504.46" y="367.5" ></text>
</g>
<g >
<title>at::RecordFunction::~RecordFunction (3 samples, 0.07%)</title><rect x="314.1" y="373" width="0.8" height="15.0" fill="rgb(206,181,16)" rx="2" ry="2" />
<text  x="317.10" y="383.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.02%)</title><rect x="184.3" y="373" width="0.3" height="15.0" fill="rgb(207,192,13)" rx="2" ry="2" />
<text  x="187.29" y="383.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="145.1" y="373" width="0.3" height="15.0" fill="rgb(233,51,3)" rx="2" ry="2" />
<text  x="148.10" y="383.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="256.8" y="341" width="0.3" height="15.0" fill="rgb(224,24,4)" rx="2" ry="2" />
<text  x="259.84" y="351.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.02%)</title><rect x="145.4" y="405" width="0.3" height="15.0" fill="rgb(221,108,52)" rx="2" ry="2" />
<text  x="148.37" y="415.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::retain_ (2 samples, 0.05%)</title><rect x="922.6" y="389" width="0.5" height="15.0" fill="rgb(207,175,40)" rx="2" ry="2" />
<text  x="925.59" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="186.0" y="325" width="0.2" height="15.0" fill="rgb(253,103,14)" rx="2" ry="2" />
<text  x="188.96" y="335.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (2 samples, 0.05%)</title><rect x="62.5" y="485" width="0.6" height="15.0" fill="rgb(213,182,29)" rx="2" ry="2" />
<text  x="65.54" y="495.5" ></text>
</g>
<g >
<title>c10::dtype (1 samples, 0.02%)</title><rect x="263.8" y="453" width="0.3" height="15.0" fill="rgb(219,44,9)" rx="2" ry="2" />
<text  x="266.79" y="463.5" ></text>
</g>
<g >
<title>[libcudart.so.11.0.194] (2 samples, 0.05%)</title><rect x="252.9" y="389" width="0.6" height="15.0" fill="rgb(231,13,8)" rx="2" ry="2" />
<text  x="255.95" y="399.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="133.4" y="229" width="0.3" height="15.0" fill="rgb(221,128,25)" rx="2" ry="2" />
<text  x="136.42" y="239.5" ></text>
</g>
<g >
<title>std::begin&lt;long&gt; (1 samples, 0.02%)</title><rect x="271.9" y="421" width="0.2" height="15.0" fill="rgb(221,126,21)" rx="2" ry="2" />
<text  x="274.85" y="431.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::computeDispatchTableEntryWithDebug (2 samples, 0.05%)</title><rect x="261.3" y="277" width="0.5" height="15.0" fill="rgb(243,118,39)" rx="2" ry="2" />
<text  x="264.29" y="287.5" ></text>
</g>
<g >
<title>c10::TensorOptions::device (29 samples, 0.68%)</title><rect x="854.2" y="405" width="8.1" height="15.0" fill="rgb(242,123,47)" rx="2" ry="2" />
<text  x="857.21" y="415.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;c10::Half&gt; (2 samples, 0.05%)</title><rect x="77.3" y="485" width="0.5" height="15.0" fill="rgb(230,73,8)" rx="2" ry="2" />
<text  x="80.27" y="495.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="133.4" y="309" width="0.3" height="15.0" fill="rgb(222,205,26)" rx="2" ry="2" />
<text  x="136.42" y="319.5" ></text>
</g>
<g >
<title>uncharge_batch (1 samples, 0.02%)</title><rect x="1182.8" y="261" width="0.3" height="15.0" fill="rgb(244,188,39)" rx="2" ry="2" />
<text  x="1185.77" y="271.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;torch::autograd::Node&gt;::~shared_ptr (3 samples, 0.07%)</title><rect x="827.5" y="341" width="0.9" height="15.0" fill="rgb(241,200,21)" rx="2" ry="2" />
<text  x="830.52" y="351.5" ></text>
</g>
<g >
<title>torch::autograd::isDifferentiableType (2 samples, 0.05%)</title><rect x="477.8" y="357" width="0.6" height="15.0" fill="rgb(238,178,31)" rx="2" ry="2" />
<text  x="480.83" y="367.5" ></text>
</g>
<g >
<title>c10::Device::validate (3 samples, 0.07%)</title><rect x="565.4" y="293" width="0.8" height="15.0" fill="rgb(236,6,5)" rx="2" ry="2" />
<text  x="568.39" y="303.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.02%)</title><rect x="186.2" y="437" width="0.3" height="15.0" fill="rgb(226,43,15)" rx="2" ry="2" />
<text  x="189.24" y="447.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="151.2" y="293" width="0.3" height="15.0" fill="rgb(249,144,18)" rx="2" ry="2" />
<text  x="154.21" y="303.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::vector&lt;std::function&lt;at::Tensor  (1 samples, 0.02%)</title><rect x="940.7" y="357" width="0.2" height="15.0" fill="rgb(233,66,27)" rx="2" ry="2" />
<text  x="943.66" y="367.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseList (1 samples, 0.02%)</title><rect x="218.2" y="389" width="0.3" height="15.0" fill="rgb(250,50,36)" rx="2" ry="2" />
<text  x="221.20" y="399.5" ></text>
</g>
<g >
<title>c10::detail::_str_wrapper&lt;char const*, char const* const&amp;, char const*, unsigned int const&amp;&gt;::call[abi:cxx11] (2 samples, 0.05%)</title><rect x="160.9" y="373" width="0.6" height="15.0" fill="rgb(223,14,35)" rx="2" ry="2" />
<text  x="163.94" y="383.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.02%)</title><rect x="123.4" y="325" width="0.3" height="15.0" fill="rgb(247,48,21)" rx="2" ry="2" />
<text  x="126.41" y="335.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="202.9" y="341" width="0.3" height="15.0" fill="rgb(232,32,40)" rx="2" ry="2" />
<text  x="205.91" y="351.5" ></text>
</g>
<g >
<title>at::Tensor::getIntrusivePtr (1 samples, 0.02%)</title><rect x="915.9" y="389" width="0.3" height="15.0" fill="rgb(217,144,48)" rx="2" ry="2" />
<text  x="918.92" y="399.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;c10::Half&gt; (4 samples, 0.09%)</title><rect x="980.1" y="309" width="1.1" height="15.0" fill="rgb(237,20,23)" rx="2" ry="2" />
<text  x="983.13" y="319.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.02%)</title><rect x="217.6" y="389" width="0.3" height="15.0" fill="rgb(220,144,5)" rx="2" ry="2" />
<text  x="220.65" y="399.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="202.6" y="357" width="0.3" height="15.0" fill="rgb(232,132,10)" rx="2" ry="2" />
<text  x="205.64" y="367.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="666.6" y="325" width="0.3" height="15.0" fill="rgb(254,149,5)" rx="2" ry="2" />
<text  x="669.57" y="335.5" ></text>
</g>
<g >
<title>[libcublas.so.11.1.0.229] (1 samples, 0.02%)</title><rect x="251.8" y="421" width="0.3" height="15.0" fill="rgb(214,190,6)" rx="2" ry="2" />
<text  x="254.84" y="431.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="489.5" y="341" width="0.3" height="15.0" fill="rgb(206,223,4)" rx="2" ry="2" />
<text  x="492.51" y="351.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="139.0" y="405" width="0.3" height="15.0" fill="rgb(215,94,35)" rx="2" ry="2" />
<text  x="141.98" y="415.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (32 samples, 0.75%)</title><rect x="547.3" y="213" width="8.9" height="15.0" fill="rgb(215,76,42)" rx="2" ry="2" />
<text  x="550.32" y="223.5" ></text>
</g>
<g >
<title>at::RecordFunction::end (3 samples, 0.07%)</title><rect x="26.7" y="485" width="0.8" height="15.0" fill="rgb(206,77,44)" rx="2" ry="2" />
<text  x="29.68" y="495.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.02%)</title><rect x="220.1" y="357" width="0.3" height="15.0" fill="rgb(237,108,13)" rx="2" ry="2" />
<text  x="223.15" y="367.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::OperatorEntry (2 samples, 0.05%)</title><rect x="135.4" y="357" width="0.5" height="15.0" fill="rgb(218,77,37)" rx="2" ry="2" />
<text  x="138.37" y="367.5" ></text>
</g>
<g >
<title>c10::VariableVersion::VersionCounter::~VersionCounter (5 samples, 0.12%)</title><rect x="844.5" y="341" width="1.4" height="15.0" fill="rgb(229,196,33)" rx="2" ry="2" />
<text  x="847.48" y="351.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (1 samples, 0.02%)</title><rect x="180.4" y="341" width="0.3" height="15.0" fill="rgb(213,213,4)" rx="2" ry="2" />
<text  x="183.40" y="351.5" ></text>
</g>
<g >
<title>__libc_malloc (2 samples, 0.05%)</title><rect x="366.1" y="261" width="0.5" height="15.0" fill="rgb(233,82,54)" rx="2" ry="2" />
<text  x="369.08" y="271.5" ></text>
</g>
<g >
<title>c10::scalarTypeToTypeMeta (9 samples, 0.21%)</title><rect x="894.2" y="405" width="2.5" height="15.0" fill="rgb(240,108,12)" rx="2" ry="2" />
<text  x="897.24" y="415.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.02%)</title><rect x="153.4" y="389" width="0.3" height="15.0" fill="rgb(205,136,18)" rx="2" ry="2" />
<text  x="156.43" y="399.5" ></text>
</g>
<g >
<title>c10::detail::_str_wrapper&lt;char const*, char const* const&amp;, char const*, unsigned int const&amp;&gt;::call[abi:cxx11] (1 samples, 0.02%)</title><rect x="156.5" y="389" width="0.3" height="15.0" fill="rgb(209,137,44)" rx="2" ry="2" />
<text  x="159.49" y="399.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor&amp;  (1 samples, 0.02%)</title><rect x="150.4" y="421" width="0.3" height="15.0" fill="rgb(240,31,7)" rx="2" ry="2" />
<text  x="153.38" y="431.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::operator bool (1 samples, 0.02%)</title><rect x="915.6" y="373" width="0.3" height="15.0" fill="rgb(205,178,14)" rx="2" ry="2" />
<text  x="918.64" y="383.5" ></text>
</g>
<g >
<title>c10::TensorOptions::TensorOptions (15 samples, 0.35%)</title><rect x="416.7" y="421" width="4.1" height="15.0" fill="rgb(206,142,41)" rx="2" ry="2" />
<text  x="419.68" y="431.5" ></text>
</g>
<g >
<title>c10::Dispatcher::callWithDispatchKey&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (474 samples, 11.17%)</title><rect x="1031.3" y="373" width="131.7" height="15.0" fill="rgb(229,219,13)" rx="2" ry="2" />
<text  x="1034.28" y="383.5" >c10::Dispatcher:..</text>
</g>
<g >
<title>std::addressof&lt;caffe2::TypeMeta&gt; (1 samples, 0.02%)</title><rect x="286.6" y="373" width="0.3" height="15.0" fill="rgb(210,61,36)" rx="2" ry="2" />
<text  x="289.58" y="383.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="151.2" y="325" width="0.3" height="15.0" fill="rgb(230,172,34)" rx="2" ry="2" />
<text  x="154.21" y="335.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (3 samples, 0.07%)</title><rect x="485.9" y="357" width="0.8" height="15.0" fill="rgb(243,158,18)" rx="2" ry="2" />
<text  x="488.89" y="367.5" ></text>
</g>
<g >
<title>torch::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Tracer (7 samples, 0.16%)</title><rect x="152.6" y="437" width="1.9" height="15.0" fill="rgb(244,143,36)" rx="2" ry="2" />
<text  x="155.60" y="447.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (1 samples, 0.02%)</title><rect x="16.1" y="485" width="0.3" height="15.0" fill="rgb(222,3,12)" rx="2" ry="2" />
<text  x="19.12" y="495.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseAliasAnnotation (1 samples, 0.02%)</title><rect x="225.7" y="373" width="0.3" height="15.0" fill="rgb(244,26,49)" rx="2" ry="2" />
<text  x="228.71" y="383.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::operator (1 samples, 0.02%)</title><rect x="661.6" y="389" width="0.2" height="15.0" fill="rgb(233,125,0)" rx="2" ry="2" />
<text  x="664.57" y="399.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="152.9" y="405" width="0.3" height="15.0" fill="rgb(228,47,5)" rx="2" ry="2" />
<text  x="155.88" y="415.5" ></text>
</g>
<g >
<title>torch::empty (568 samples, 13.38%)</title><rect x="1018.2" y="405" width="157.9" height="15.0" fill="rgb(226,44,28)" rx="2" ry="2" />
<text  x="1021.21" y="415.5" >torch::empty</text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.02%)</title><rect x="170.4" y="325" width="0.3" height="15.0" fill="rgb(249,121,50)" rx="2" ry="2" />
<text  x="173.39" y="335.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="186.2" y="357" width="0.3" height="15.0" fill="rgb(213,22,42)" rx="2" ry="2" />
<text  x="189.24" y="367.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;long&gt;::end (1 samples, 0.02%)</title><rect x="272.4" y="405" width="0.3" height="15.0" fill="rgb(231,48,13)" rx="2" ry="2" />
<text  x="275.41" y="415.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::contained_val (1 samples, 0.02%)</title><rect x="857.0" y="357" width="0.3" height="15.0" fill="rgb(235,164,15)" rx="2" ry="2" />
<text  x="859.99" y="367.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.02%)</title><rect x="1142.7" y="229" width="0.3" height="15.0" fill="rgb(248,183,45)" rx="2" ry="2" />
<text  x="1145.74" y="239.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseDeclaration (1 samples, 0.02%)</title><rect x="199.3" y="389" width="0.3" height="15.0" fill="rgb(250,101,6)" rx="2" ry="2" />
<text  x="202.30" y="399.5" ></text>
</g>
<g >
<title>c10::ProfiledCPUMemoryReporter::Delete (4 samples, 0.09%)</title><rect x="266.8" y="357" width="1.2" height="15.0" fill="rgb(237,71,54)" rx="2" ry="2" />
<text  x="269.85" y="367.5" ></text>
</g>
<g >
<title>__tls_get_addr (6 samples, 0.14%)</title><rect x="752.5" y="197" width="1.6" height="15.0" fill="rgb(223,119,32)" rx="2" ry="2" />
<text  x="755.47" y="207.5" ></text>
</g>
<g >
<title>c10::typeMetaToScalarType (4 samples, 0.09%)</title><rect x="574.3" y="389" width="1.1" height="15.0" fill="rgb(254,93,19)" rx="2" ry="2" />
<text  x="577.29" y="399.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (1 samples, 0.02%)</title><rect x="138.4" y="293" width="0.3" height="15.0" fill="rgb(241,150,18)" rx="2" ry="2" />
<text  x="141.42" y="303.5" ></text>
</g>
<g >
<title>c10::Registry&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unique_ptr&lt;caffe2::OperatorBase, std::default_delete&lt;caffe2::OperatorBase&gt; &gt;, caffe2::OperatorDef const&amp;, caffe2::Workspace*&gt;::Register (1 samples, 0.02%)</title><rect x="187.9" y="421" width="0.3" height="15.0" fill="rgb(243,119,12)" rx="2" ry="2" />
<text  x="190.90" y="431.5" ></text>
</g>
<g >
<title>at::RecordFunction::RecordFunction (1 samples, 0.02%)</title><rect x="703.8" y="309" width="0.3" height="15.0" fill="rgb(247,226,42)" rx="2" ry="2" />
<text  x="706.82" y="319.5" ></text>
</g>
<g >
<title>c10::TensorImpl::compute_contiguous (2 samples, 0.05%)</title><rect x="561.5" y="245" width="0.6" height="15.0" fill="rgb(245,178,54)" rx="2" ry="2" />
<text  x="564.50" y="255.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::operator bool (3 samples, 0.07%)</title><rect x="653.0" y="373" width="0.8" height="15.0" fill="rgb(210,152,21)" rx="2" ry="2" />
<text  x="655.95" y="383.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.02%)</title><rect x="155.7" y="325" width="0.2" height="15.0" fill="rgb(230,46,8)" rx="2" ry="2" />
<text  x="158.66" y="335.5" ></text>
</g>
<g >
<title>[ld-2.31.so] (1 samples, 0.02%)</title><rect x="121.7" y="373" width="0.3" height="15.0" fill="rgb(249,146,47)" rx="2" ry="2" />
<text  x="124.75" y="383.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;long&gt;::end (5 samples, 0.12%)</title><rect x="852.0" y="389" width="1.4" height="15.0" fill="rgb(215,57,33)" rx="2" ry="2" />
<text  x="854.98" y="399.5" ></text>
</g>
<g >
<title>[libcublasLt.so.11.1.0.229] (2 samples, 0.05%)</title><rect x="130.9" y="453" width="0.6" height="15.0" fill="rgb(223,200,18)" rx="2" ry="2" />
<text  x="133.92" y="463.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.02%)</title><rect x="843.9" y="341" width="0.3" height="15.0" fill="rgb(220,189,25)" rx="2" ry="2" />
<text  x="846.92" y="351.5" ></text>
</g>
<g >
<title>torch::jit::parseSchema (1 samples, 0.02%)</title><rect x="194.9" y="405" width="0.2" height="15.0" fill="rgb(249,84,30)" rx="2" ry="2" />
<text  x="197.85" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, char&gt; (1 samples, 0.02%)</title><rect x="177.9" y="357" width="0.3" height="15.0" fill="rgb(251,159,36)" rx="2" ry="2" />
<text  x="180.90" y="367.5" ></text>
</g>
<g >
<title>at::Tensor::Tensor (1 samples, 0.02%)</title><rect x="430.9" y="421" width="0.2" height="15.0" fill="rgb(208,28,13)" rx="2" ry="2" />
<text  x="433.85" y="431.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.02%)</title><rect x="179.0" y="405" width="0.3" height="15.0" fill="rgb(215,224,22)" rx="2" ry="2" />
<text  x="182.01" y="415.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge_list (1 samples, 0.02%)</title><rect x="1182.8" y="277" width="0.3" height="15.0" fill="rgb(209,49,51)" rx="2" ry="2" />
<text  x="1185.77" y="287.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;signed char&gt; (3 samples, 0.07%)</title><rect x="985.7" y="309" width="0.8" height="15.0" fill="rgb(253,29,26)" rx="2" ry="2" />
<text  x="988.69" y="319.5" ></text>
</g>
<g >
<title>c10::Dispatcher::setManuallyBoxedKernelFor_ (1 samples, 0.02%)</title><rect x="197.4" y="421" width="0.2" height="15.0" fill="rgb(214,65,43)" rx="2" ry="2" />
<text  x="200.35" y="431.5" ></text>
</g>
<g >
<title>c10::TensorImpl::unique_version (5 samples, 0.12%)</title><rect x="298.3" y="405" width="1.3" height="15.0" fill="rgb(213,125,6)" rx="2" ry="2" />
<text  x="301.26" y="415.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTable_ (1 samples, 0.02%)</title><rect x="257.1" y="357" width="0.3" height="15.0" fill="rgb(208,167,6)" rx="2" ry="2" />
<text  x="260.12" y="367.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTableFull_ (1 samples, 0.02%)</title><rect x="173.4" y="357" width="0.3" height="15.0" fill="rgb(246,112,44)" rx="2" ry="2" />
<text  x="176.45" y="367.5" ></text>
</g>
<g >
<title>torch::jit::parseSchema (1 samples, 0.02%)</title><rect x="195.4" y="405" width="0.3" height="15.0" fill="rgb(231,112,19)" rx="2" ry="2" />
<text  x="198.41" y="415.5" ></text>
</g>
<g >
<title>policy_nodemask (1 samples, 0.02%)</title><rect x="125.4" y="213" width="0.2" height="15.0" fill="rgb(236,167,20)" rx="2" ry="2" />
<text  x="128.36" y="223.5" ></text>
</g>
<g >
<title>c10::constexpr_forward&lt;c10::ScalarType&gt; (4 samples, 0.09%)</title><rect x="49.2" y="485" width="1.1" height="15.0" fill="rgb(254,195,36)" rx="2" ry="2" />
<text  x="52.19" y="495.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::operator* (2 samples, 0.05%)</title><rect x="71.2" y="485" width="0.5" height="15.0" fill="rgb(238,23,46)" rx="2" ry="2" />
<text  x="74.15" y="495.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (1 samples, 0.02%)</title><rect x="147.6" y="373" width="0.3" height="15.0" fill="rgb(243,40,27)" rx="2" ry="2" />
<text  x="150.60" y="383.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.02%)</title><rect x="1104.1" y="197" width="0.3" height="15.0" fill="rgb(219,67,18)" rx="2" ry="2" />
<text  x="1107.11" y="207.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (2 samples, 0.05%)</title><rect x="164.3" y="373" width="0.5" height="15.0" fill="rgb(205,18,19)" rx="2" ry="2" />
<text  x="167.28" y="383.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="1179.4" y="357" width="0.3" height="15.0" fill="rgb(214,7,41)" rx="2" ry="2" />
<text  x="1182.44" y="367.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="142.0" y="341" width="0.3" height="15.0" fill="rgb(213,122,46)" rx="2" ry="2" />
<text  x="145.04" y="351.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, torch::CppFunction&gt; (2 samples, 0.05%)</title><rect x="174.6" y="421" width="0.5" height="15.0" fill="rgb(248,22,37)" rx="2" ry="2" />
<text  x="177.56" y="431.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;c10::MemoryFormat&gt;::constexpr_optional_base (1 samples, 0.02%)</title><rect x="416.1" y="437" width="0.3" height="15.0" fill="rgb(222,172,19)" rx="2" ry="2" />
<text  x="419.12" y="447.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseDeclaration (1 samples, 0.02%)</title><rect x="194.9" y="373" width="0.2" height="15.0" fill="rgb(244,220,23)" rx="2" ry="2" />
<text  x="197.85" y="383.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (3 samples, 0.07%)</title><rect x="586.2" y="357" width="0.9" height="15.0" fill="rgb(222,139,39)" rx="2" ry="2" />
<text  x="589.24" y="367.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::contained_val (2 samples, 0.05%)</title><rect x="891.7" y="373" width="0.6" height="15.0" fill="rgb(228,222,37)" rx="2" ry="2" />
<text  x="894.73" y="383.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (1 samples, 0.02%)</title><rect x="1008.2" y="341" width="0.3" height="15.0" fill="rgb(207,11,39)" rx="2" ry="2" />
<text  x="1011.20" y="351.5" ></text>
</g>
<g >
<title>c10::detail::_str_wrapper&lt;char const*, char const* const&amp;, char const*, unsigned int const&amp;&gt;::call[abi:cxx11] (1 samples, 0.02%)</title><rect x="180.4" y="373" width="0.3" height="15.0" fill="rgb(219,78,29)" rx="2" ry="2" />
<text  x="183.40" y="383.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="201.8" y="229" width="0.3" height="15.0" fill="rgb(214,84,9)" rx="2" ry="2" />
<text  x="204.80" y="239.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseType (1 samples, 0.02%)</title><rect x="222.9" y="389" width="0.3" height="15.0" fill="rgb(237,122,8)" rx="2" ry="2" />
<text  x="225.93" y="399.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::contained_val (1 samples, 0.02%)</title><rect x="608.8" y="357" width="0.2" height="15.0" fill="rgb(245,100,36)" rx="2" ry="2" />
<text  x="611.76" y="367.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::expect (3 samples, 0.07%)</title><rect x="165.7" y="341" width="0.8" height="15.0" fill="rgb(251,158,53)" rx="2" ry="2" />
<text  x="168.67" y="351.5" ></text>
</g>
<g >
<title>__libc_malloc (9 samples, 0.21%)</title><rect x="1146.9" y="245" width="2.5" height="15.0" fill="rgb(231,214,28)" rx="2" ry="2" />
<text  x="1149.91" y="255.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.07%)</title><rect x="450.0" y="389" width="0.9" height="15.0" fill="rgb(219,149,17)" rx="2" ry="2" />
<text  x="453.03" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;, std::allocator&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="100.9" y="485" width="0.3" height="15.0" fill="rgb(210,46,14)" rx="2" ry="2" />
<text  x="103.90" y="495.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;unsigned char&gt;@plt (1 samples, 0.02%)</title><rect x="799.7" y="357" width="0.3" height="15.0" fill="rgb(244,51,17)" rx="2" ry="2" />
<text  x="802.72" y="367.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="145.1" y="341" width="0.3" height="15.0" fill="rgb(242,147,54)" rx="2" ry="2" />
<text  x="148.10" y="351.5" ></text>
</g>
<g >
<title>c10::KernelFunction::makeFromUnboxedRuntimeFunction&lt;false, at::Tensor  (1 samples, 0.02%)</title><rect x="133.7" y="421" width="0.3" height="15.0" fill="rgb(246,124,15)" rx="2" ry="2" />
<text  x="136.70" y="431.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="132.3" y="437" width="0.3" height="15.0" fill="rgb(221,52,31)" rx="2" ry="2" />
<text  x="135.31" y="447.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseDeclaration (20 samples, 0.47%)</title><rect x="164.8" y="373" width="5.6" height="15.0" fill="rgb(225,195,8)" rx="2" ry="2" />
<text  x="167.83" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;torch::autograd::AutogradMeta, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::_M_ptr (2 samples, 0.05%)</title><rect x="489.2" y="389" width="0.6" height="15.0" fill="rgb(254,128,36)" rx="2" ry="2" />
<text  x="492.23" y="399.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.02%)</title><rect x="183.5" y="373" width="0.2" height="15.0" fill="rgb(220,6,34)" rx="2" ry="2" />
<text  x="186.46" y="383.5" ></text>
</g>
<g >
<title>at::Tensor::defined (5 samples, 0.12%)</title><rect x="652.4" y="389" width="1.4" height="15.0" fill="rgb(232,146,17)" rx="2" ry="2" />
<text  x="655.40" y="399.5" ></text>
</g>
<g >
<title>shift_arg_pages (1 samples, 0.02%)</title><rect x="1179.7" y="389" width="0.3" height="15.0" fill="rgb(239,59,20)" rx="2" ry="2" />
<text  x="1182.71" y="399.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;torch::autograd::Node&gt;::shared_ptr (3 samples, 0.07%)</title><rect x="954.0" y="357" width="0.8" height="15.0" fill="rgb(223,107,32)" rx="2" ry="2" />
<text  x="957.00" y="367.5" ></text>
</g>
<g >
<title>c10::findSchemaDifferences[abi:cxx11] (2 samples, 0.05%)</title><rect x="139.8" y="341" width="0.6" height="15.0" fill="rgb(218,38,30)" rx="2" ry="2" />
<text  x="142.81" y="351.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (1 samples, 0.02%)</title><rect x="186.2" y="389" width="0.3" height="15.0" fill="rgb(209,24,38)" rx="2" ry="2" />
<text  x="189.24" y="399.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;float&gt;@plt (1 samples, 0.02%)</title><rect x="569.6" y="325" width="0.2" height="15.0" fill="rgb(244,183,14)" rx="2" ry="2" />
<text  x="572.56" y="335.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.02%)</title><rect x="186.8" y="405" width="0.3" height="15.0" fill="rgb(251,220,35)" rx="2" ry="2" />
<text  x="189.79" y="415.5" ></text>
</g>
<g >
<title>c10::TensorImpl::release_resources (6 samples, 0.14%)</title><rect x="35.9" y="485" width="1.6" height="15.0" fill="rgb(205,92,49)" rx="2" ry="2" />
<text  x="38.85" y="495.5" ></text>
</g>
<g >
<title>onnx_torch::OpSchema::TypeConstraint (1 samples, 0.02%)</title><rect x="187.6" y="373" width="0.3" height="15.0" fill="rgb(240,146,47)" rx="2" ry="2" />
<text  x="190.63" y="383.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.02%)</title><rect x="138.7" y="405" width="0.3" height="15.0" fill="rgb(253,116,47)" rx="2" ry="2" />
<text  x="141.70" y="415.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="130.6" y="341" width="0.3" height="15.0" fill="rgb(209,35,47)" rx="2" ry="2" />
<text  x="133.64" y="351.5" ></text>
</g>
<g >
<title>setup_arg_pages (1 samples, 0.02%)</title><rect x="1179.7" y="405" width="0.3" height="15.0" fill="rgb(237,218,52)" rx="2" ry="2" />
<text  x="1182.71" y="415.5" ></text>
</g>
<g >
<title>[libcufft.so.10.2.0.218] (1 samples, 0.02%)</title><rect x="131.5" y="437" width="0.3" height="15.0" fill="rgb(233,189,34)" rx="2" ry="2" />
<text  x="134.47" y="447.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;torch::autograd::Node&gt;::shared_ptr (2 samples, 0.05%)</title><rect x="462.8" y="373" width="0.6" height="15.0" fill="rgb(220,89,4)" rx="2" ry="2" />
<text  x="465.82" y="383.5" ></text>
</g>
<g >
<title>c10::TensorOptions::set_requires_grad (15 samples, 0.35%)</title><rect x="869.2" y="405" width="4.2" height="15.0" fill="rgb(207,80,13)" rx="2" ry="2" />
<text  x="872.22" y="415.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (7 samples, 0.16%)</title><rect x="432.0" y="389" width="1.9" height="15.0" fill="rgb(230,2,33)" rx="2" ry="2" />
<text  x="434.96" y="399.5" ></text>
</g>
<g >
<title>c10::ObservedOperators::isObserved (1 samples, 0.02%)</title><rect x="142.3" y="341" width="0.3" height="15.0" fill="rgb(231,196,3)" rx="2" ry="2" />
<text  x="145.32" y="351.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;bool&gt;::constexpr_optional_base (1 samples, 0.02%)</title><rect x="373.6" y="373" width="0.3" height="15.0" fill="rgb(207,164,10)" rx="2" ry="2" />
<text  x="376.59" y="383.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::vector&lt;std::function&lt;at::Tensor  (3 samples, 0.07%)</title><rect x="944.3" y="341" width="0.8" height="15.0" fill="rgb(226,110,37)" rx="2" ry="2" />
<text  x="947.27" y="351.5" ></text>
</g>
<g >
<title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, c10::OperatorName, std::hash&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueHasher&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::hash&lt;c10::OperatorName&gt; &gt;, std::equal_to&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueEquality&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::equal_to&lt;c10::OperatorName&gt; &gt;, std::allocator&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt; &gt; &gt;::rehash (2 samples, 0.05%)</title><rect x="136.2" y="341" width="0.6" height="15.0" fill="rgb(220,44,47)" rx="2" ry="2" />
<text  x="139.20" y="351.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="154.5" y="357" width="0.3" height="15.0" fill="rgb(211,56,30)" rx="2" ry="2" />
<text  x="157.55" y="367.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="263.0" y="357" width="0.2" height="15.0" fill="rgb(206,174,54)" rx="2" ry="2" />
<text  x="265.96" y="367.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="179.3" y="245" width="0.3" height="15.0" fill="rgb(247,172,30)" rx="2" ry="2" />
<text  x="182.29" y="255.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::optional&lt;c10::DeviceType const&amp;, int&gt; (17 samples, 0.40%)</title><rect x="406.1" y="421" width="4.7" height="15.0" fill="rgb(205,117,14)" rx="2" ry="2" />
<text  x="409.11" y="431.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (2 samples, 0.05%)</title><rect x="102.0" y="485" width="0.6" height="15.0" fill="rgb(205,42,0)" rx="2" ry="2" />
<text  x="105.01" y="495.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="155.4" y="405" width="0.3" height="15.0" fill="rgb(216,76,23)" rx="2" ry="2" />
<text  x="158.38" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;torch::autograd::AutogradMeta, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::get (11 samples, 0.26%)</title><rect x="1009.3" y="357" width="3.1" height="15.0" fill="rgb(216,84,36)" rx="2" ry="2" />
<text  x="1012.32" y="367.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (1 samples, 0.02%)</title><rect x="160.7" y="261" width="0.2" height="15.0" fill="rgb(253,31,50)" rx="2" ry="2" />
<text  x="163.66" y="271.5" ></text>
</g>
<g >
<title>[libc10.so] (2 samples, 0.05%)</title><rect x="562.9" y="261" width="0.5" height="15.0" fill="rgb(242,179,3)" rx="2" ry="2" />
<text  x="565.89" y="271.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;float&gt; (2 samples, 0.05%)</title><rect x="981.2" y="309" width="0.6" height="15.0" fill="rgb(223,125,26)" rx="2" ry="2" />
<text  x="984.24" y="319.5" ></text>
</g>
<g >
<title>__default_morecore (1 samples, 0.02%)</title><rect x="193.2" y="341" width="0.3" height="15.0" fill="rgb(240,85,32)" rx="2" ry="2" />
<text  x="196.18" y="351.5" ></text>
</g>
<g >
<title>perf_event_mmap (1 samples, 0.02%)</title><rect x="193.2" y="229" width="0.3" height="15.0" fill="rgb(206,166,53)" rx="2" ry="2" />
<text  x="196.18" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="137.0" y="357" width="0.3" height="15.0" fill="rgb(206,177,31)" rx="2" ry="2" />
<text  x="140.03" y="367.5" ></text>
</g>
<g >
<title>c10::globalStrings (1 samples, 0.02%)</title><rect x="142.0" y="405" width="0.3" height="15.0" fill="rgb(254,34,4)" rx="2" ry="2" />
<text  x="145.04" y="415.5" ></text>
</g>
<g >
<title>std::operator&amp; (2 samples, 0.05%)</title><rect x="924.8" y="357" width="0.6" height="15.0" fill="rgb(244,143,51)" rx="2" ry="2" />
<text  x="927.81" y="367.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.05%)</title><rect x="90.3" y="485" width="0.6" height="15.0" fill="rgb(218,197,6)" rx="2" ry="2" />
<text  x="93.33" y="495.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (1 samples, 0.02%)</title><rect x="174.6" y="389" width="0.2" height="15.0" fill="rgb(234,44,42)" rx="2" ry="2" />
<text  x="177.56" y="399.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::initialized (1 samples, 0.02%)</title><rect x="628.5" y="373" width="0.3" height="15.0" fill="rgb(235,34,43)" rx="2" ry="2" />
<text  x="631.49" y="383.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="178.7" y="229" width="0.3" height="15.0" fill="rgb(246,142,33)" rx="2" ry="2" />
<text  x="181.73" y="239.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (1 samples, 0.02%)</title><rect x="225.7" y="309" width="0.3" height="15.0" fill="rgb(234,133,10)" rx="2" ry="2" />
<text  x="228.71" y="319.5" ></text>
</g>
<g >
<title>c10::constexpr_move&lt;caffe2::TypeMeta&amp;&gt; (1 samples, 0.02%)</title><rect x="51.4" y="485" width="0.3" height="15.0" fill="rgb(245,128,21)" rx="2" ry="2" />
<text  x="54.42" y="495.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;*, std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt; (4 samples, 0.09%)</title><rect x="390.0" y="325" width="1.1" height="15.0" fill="rgb(217,86,35)" rx="2" ry="2" />
<text  x="392.99" y="335.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.02%)</title><rect x="150.1" y="325" width="0.3" height="15.0" fill="rgb(253,61,49)" rx="2" ry="2" />
<text  x="153.10" y="335.5" ></text>
</g>
<g >
<title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, c10::OperatorName, std::hash&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueHasher&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::hash&lt;c10::OperatorName&gt; &gt;, std::equal_to&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueEquality&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::equal_to&lt;c10::OperatorName&gt; &gt;, std::allocator&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt; &gt; &gt;::emplace_new_key&lt;c10::OperatorName const&amp;, c10::OperatorHandle&amp;&gt; (2 samples, 0.05%)</title><rect x="136.2" y="357" width="0.6" height="15.0" fill="rgb(233,32,53)" rx="2" ry="2" />
<text  x="139.20" y="367.5" ></text>
</g>
<g >
<title>torch::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Tracer (7 samples, 0.16%)</title><rect x="146.8" y="437" width="1.9" height="15.0" fill="rgb(210,103,28)" rx="2" ry="2" />
<text  x="149.76" y="447.5" ></text>
</g>
<g >
<title>std::forward&lt;c10::AutogradMetaInterface*&amp;&gt; (2 samples, 0.05%)</title><rect x="1005.4" y="341" width="0.6" height="15.0" fill="rgb(207,143,34)" rx="2" ry="2" />
<text  x="1008.43" y="351.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, c10::AutogradMetaInterface*, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt; (2 samples, 0.05%)</title><rect x="487.8" y="373" width="0.6" height="15.0" fill="rgb(250,17,6)" rx="2" ry="2" />
<text  x="490.84" y="383.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, torch::CppFunction&gt; (1 samples, 0.02%)</title><rect x="181.5" y="405" width="0.3" height="15.0" fill="rgb(209,44,45)" rx="2" ry="2" />
<text  x="184.51" y="415.5" ></text>
</g>
<g >
<title>at::native::get_cpu_capability (1 samples, 0.02%)</title><rect x="146.5" y="421" width="0.3" height="15.0" fill="rgb(225,142,47)" rx="2" ry="2" />
<text  x="149.49" y="431.5" ></text>
</g>
<g >
<title>at::TORCH_LIBRARY_IMPL_init_aten_Batched (2 samples, 0.05%)</title><rect x="133.1" y="421" width="0.6" height="15.0" fill="rgb(224,80,45)" rx="2" ry="2" />
<text  x="136.14" y="431.5" ></text>
</g>
<g >
<title>__libc_malloc (10 samples, 0.24%)</title><rect x="930.1" y="357" width="2.8" height="15.0" fill="rgb(253,172,5)" rx="2" ry="2" />
<text  x="933.09" y="367.5" ></text>
</g>
<g >
<title>torch::autograd::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Autograd (5 samples, 0.12%)</title><rect x="182.1" y="437" width="1.4" height="15.0" fill="rgb(238,143,5)" rx="2" ry="2" />
<text  x="185.07" y="447.5" ></text>
</g>
<g >
<title>caffe2::_c10_ops::schema_GatherRanges (1 samples, 0.02%)</title><rect x="194.9" y="437" width="0.2" height="15.0" fill="rgb(220,40,18)" rx="2" ry="2" />
<text  x="197.85" y="447.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (3 samples, 0.07%)</title><rect x="770.5" y="165" width="0.9" height="15.0" fill="rgb(227,20,18)" rx="2" ry="2" />
<text  x="773.54" y="175.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="153.4" y="341" width="0.3" height="15.0" fill="rgb(210,44,53)" rx="2" ry="2" />
<text  x="156.43" y="351.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.02%)</title><rect x="130.1" y="245" width="0.3" height="15.0" fill="rgb(253,82,49)" rx="2" ry="2" />
<text  x="133.08" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::vector (1 samples, 0.02%)</title><rect x="184.6" y="389" width="0.2" height="15.0" fill="rgb(224,206,33)" rx="2" ry="2" />
<text  x="187.57" y="399.5" ></text>
</g>
<g >
<title>c10::FunctionSchema::~FunctionSchema (1 samples, 0.02%)</title><rect x="197.6" y="421" width="0.3" height="15.0" fill="rgb(227,102,17)" rx="2" ry="2" />
<text  x="200.63" y="431.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::get (2 samples, 0.05%)</title><rect x="651.3" y="373" width="0.5" height="15.0" fill="rgb(222,78,40)" rx="2" ry="2" />
<text  x="654.29" y="383.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.02%)</title><rect x="179.8" y="357" width="0.3" height="15.0" fill="rgb(221,90,2)" rx="2" ry="2" />
<text  x="182.84" y="367.5" ></text>
</g>
<g >
<title>[libcublas.so.11.1.0.229] (1 samples, 0.02%)</title><rect x="251.8" y="389" width="0.3" height="15.0" fill="rgb(237,219,11)" rx="2" ry="2" />
<text  x="254.84" y="399.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (1 samples, 0.02%)</title><rect x="225.7" y="405" width="0.3" height="15.0" fill="rgb(212,191,4)" rx="2" ry="2" />
<text  x="228.71" y="415.5" ></text>
</g>
<g >
<title>std::forward&lt;std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (1 samples, 0.02%)</title><rect x="483.7" y="389" width="0.2" height="15.0" fill="rgb(212,95,25)" rx="2" ry="2" />
<text  x="486.67" y="399.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;long&gt;::size (1 samples, 0.02%)</title><rect x="600.7" y="405" width="0.3" height="15.0" fill="rgb(225,164,7)" rx="2" ry="2" />
<text  x="603.69" y="415.5" ></text>
</g>
<g >
<title>__libc_malloc (5 samples, 0.12%)</title><rect x="344.1" y="245" width="1.4" height="15.0" fill="rgb(230,32,21)" rx="2" ry="2" />
<text  x="347.12" y="255.5" ></text>
</g>
<g >
<title>__libc_malloc (2 samples, 0.05%)</title><rect x="130.9" y="405" width="0.6" height="15.0" fill="rgb(215,69,44)" rx="2" ry="2" />
<text  x="133.92" y="415.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, torch::CppFunction&gt; (1 samples, 0.02%)</title><rect x="181.8" y="405" width="0.3" height="15.0" fill="rgb(250,99,16)" rx="2" ry="2" />
<text  x="184.79" y="415.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (82 samples, 1.93%)</title><rect x="376.9" y="405" width="22.8" height="15.0" fill="rgb(221,45,43)" rx="2" ry="2" />
<text  x="379.93" y="415.5" >c..</text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::optional (10 samples, 0.24%)</title><rect x="422.8" y="405" width="2.8" height="15.0" fill="rgb(225,45,42)" rx="2" ry="2" />
<text  x="425.79" y="415.5" ></text>
</g>
<g >
<title>std::forward&lt;std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (1 samples, 0.02%)</title><rect x="1006.0" y="373" width="0.3" height="15.0" fill="rgb(234,170,33)" rx="2" ry="2" />
<text  x="1008.98" y="383.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.02%)</title><rect x="184.3" y="389" width="0.3" height="15.0" fill="rgb(214,137,50)" rx="2" ry="2" />
<text  x="187.29" y="399.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="142.0" y="309" width="0.3" height="15.0" fill="rgb(247,142,18)" rx="2" ry="2" />
<text  x="145.04" y="319.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.02%)</title><rect x="217.6" y="357" width="0.3" height="15.0" fill="rgb(219,196,3)" rx="2" ry="2" />
<text  x="220.65" y="367.5" ></text>
</g>
<g >
<title>vmacache_find (1 samples, 0.02%)</title><rect x="180.1" y="245" width="0.3" height="15.0" fill="rgb(222,214,24)" rx="2" ry="2" />
<text  x="183.12" y="255.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="149.3" y="357" width="0.2" height="15.0" fill="rgb(222,130,54)" rx="2" ry="2" />
<text  x="152.27" y="367.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="162.6" y="341" width="0.3" height="15.0" fill="rgb(222,188,21)" rx="2" ry="2" />
<text  x="165.61" y="351.5" ></text>
</g>
<g >
<title>std::__mutex_base::__mutex_base (1 samples, 0.02%)</title><rect x="15.0" y="485" width="0.3" height="15.0" fill="rgb(233,88,35)" rx="2" ry="2" />
<text  x="18.00" y="495.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.02%)</title><rect x="1107.2" y="245" width="0.2" height="15.0" fill="rgb(250,32,10)" rx="2" ry="2" />
<text  x="1110.16" y="255.5" ></text>
</g>
<g >
<title>torch::autograd::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Autograd (7 samples, 0.16%)</title><rect x="178.7" y="437" width="2.0" height="15.0" fill="rgb(249,197,49)" rx="2" ry="2" />
<text  x="181.73" y="447.5" ></text>
</g>
<g >
<title>c10::DefaultCPUAllocator::allocate (56 samples, 1.32%)</title><rect x="540.7" y="277" width="15.5" height="15.0" fill="rgb(232,114,39)" rx="2" ry="2" />
<text  x="543.65" y="287.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="572.3" y="373" width="0.3" height="15.0" fill="rgb(240,107,43)" rx="2" ry="2" />
<text  x="575.34" y="383.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseDeclaration (1 samples, 0.02%)</title><rect x="195.4" y="373" width="0.3" height="15.0" fill="rgb(215,47,43)" rx="2" ry="2" />
<text  x="198.41" y="383.5" ></text>
</g>
<g >
<title>__cxa_finalize (1 samples, 0.02%)</title><rect x="252.7" y="405" width="0.2" height="15.0" fill="rgb(207,81,21)" rx="2" ry="2" />
<text  x="255.67" y="415.5" ></text>
</g>
<g >
<title>std::begin&lt;long&gt; (5 samples, 0.12%)</title><rect x="849.5" y="405" width="1.4" height="15.0" fill="rgb(221,216,16)" rx="2" ry="2" />
<text  x="852.48" y="415.5" ></text>
</g>
<g >
<title>mark_page_accessed (1 samples, 0.02%)</title><rect x="1181.1" y="325" width="0.3" height="15.0" fill="rgb(236,71,38)" rx="2" ry="2" />
<text  x="1184.10" y="335.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (2 samples, 0.05%)</title><rect x="222.7" y="405" width="0.5" height="15.0" fill="rgb(247,175,2)" rx="2" ry="2" />
<text  x="225.65" y="415.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (3 samples, 0.07%)</title><rect x="645.4" y="405" width="0.9" height="15.0" fill="rgb(249,174,37)" rx="2" ry="2" />
<text  x="648.45" y="415.5" ></text>
</g>
<g >
<title>c10::typeMetaToScalarType (1 samples, 0.02%)</title><rect x="371.9" y="389" width="0.3" height="15.0" fill="rgb(218,227,46)" rx="2" ry="2" />
<text  x="374.92" y="399.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="203.2" y="309" width="0.3" height="15.0" fill="rgb(229,122,27)" rx="2" ry="2" />
<text  x="206.19" y="319.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (1 samples, 0.02%)</title><rect x="452.8" y="341" width="0.3" height="15.0" fill="rgb(238,147,3)" rx="2" ry="2" />
<text  x="455.81" y="351.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::intrusive_ptr (1 samples, 0.02%)</title><rect x="455.6" y="373" width="0.3" height="15.0" fill="rgb(225,113,7)" rx="2" ry="2" />
<text  x="458.59" y="383.5" ></text>
</g>
<g >
<title>std::addressof&lt;bool&gt; (4 samples, 0.09%)</title><rect x="874.2" y="373" width="1.1" height="15.0" fill="rgb(221,195,30)" rx="2" ry="2" />
<text  x="877.22" y="383.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="132.0" y="389" width="0.3" height="15.0" fill="rgb(237,142,19)" rx="2" ry="2" />
<text  x="135.03" y="399.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, torch::CppFunction&gt; (4 samples, 0.09%)</title><rect x="176.2" y="405" width="1.1" height="15.0" fill="rgb(206,72,36)" rx="2" ry="2" />
<text  x="179.23" y="415.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.02%)</title><rect x="195.1" y="325" width="0.3" height="15.0" fill="rgb(214,4,1)" rx="2" ry="2" />
<text  x="198.13" y="335.5" ></text>
</g>
<g >
<title>[libcublas.so.11.1.0.229] (1 samples, 0.02%)</title><rect x="130.6" y="421" width="0.3" height="15.0" fill="rgb(237,122,5)" rx="2" ry="2" />
<text  x="133.64" y="431.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::TypeMeta (1 samples, 0.02%)</title><rect x="475.3" y="309" width="0.3" height="15.0" fill="rgb(234,118,54)" rx="2" ry="2" />
<text  x="478.33" y="319.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.02%)</title><rect x="816.4" y="373" width="0.3" height="15.0" fill="rgb(218,151,36)" rx="2" ry="2" />
<text  x="819.40" y="383.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="686.9" y="325" width="0.2" height="15.0" fill="rgb(217,80,44)" rx="2" ry="2" />
<text  x="689.87" y="335.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::nextIf (1 samples, 0.02%)</title><rect x="169.8" y="325" width="0.3" height="15.0" fill="rgb(219,181,48)" rx="2" ry="2" />
<text  x="172.84" y="335.5" ></text>
</g>
<g >
<title>c10::impl::tls_local_dispatch_key_set (5 samples, 0.12%)</title><rect x="783.9" y="261" width="1.4" height="15.0" fill="rgb(205,19,26)" rx="2" ry="2" />
<text  x="786.88" y="271.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;*&gt; (2 samples, 0.05%)</title><rect x="390.5" y="293" width="0.6" height="15.0" fill="rgb(252,170,17)" rx="2" ry="2" />
<text  x="393.55" y="303.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="143.4" y="293" width="0.3" height="15.0" fill="rgb(243,173,30)" rx="2" ry="2" />
<text  x="146.43" y="303.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseDeclaration (4 samples, 0.09%)</title><rect x="249.9" y="469" width="1.1" height="15.0" fill="rgb(241,73,38)" rx="2" ry="2" />
<text  x="252.89" y="479.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;c10::Half&gt; (1 samples, 0.02%)</title><rect x="206.8" y="485" width="0.3" height="15.0" fill="rgb(232,194,44)" rx="2" ry="2" />
<text  x="209.81" y="495.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.02%)</title><rect x="137.6" y="341" width="0.3" height="15.0" fill="rgb(222,24,19)" rx="2" ry="2" />
<text  x="140.59" y="351.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (1 samples, 0.02%)</title><rect x="487.3" y="325" width="0.3" height="15.0" fill="rgb(243,111,3)" rx="2" ry="2" />
<text  x="490.28" y="335.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::contained_val (3 samples, 0.07%)</title><rect x="624.9" y="357" width="0.8" height="15.0" fill="rgb(230,134,45)" rx="2" ry="2" />
<text  x="627.88" y="367.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (1 samples, 0.02%)</title><rect x="1017.9" y="373" width="0.3" height="15.0" fill="rgb(241,43,23)" rx="2" ry="2" />
<text  x="1020.93" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;torch::autograd::AutogradMeta, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::unique_ptr&lt;std::default_delete&lt;torch::autograd::AutogradMeta&gt;, void&gt; (5 samples, 0.12%)</title><rect x="452.3" y="389" width="1.3" height="15.0" fill="rgb(222,85,29)" rx="2" ry="2" />
<text  x="455.26" y="399.5" ></text>
</g>
<g >
<title>at::AutoNonVariableTypeMode::~AutoNonVariableTypeMode (2 samples, 0.05%)</title><rect x="307.2" y="405" width="0.5" height="15.0" fill="rgb(243,85,25)" rx="2" ry="2" />
<text  x="310.15" y="415.5" ></text>
</g>
<g >
<title>torch::empty (623 samples, 14.68%)</title><rect x="635.7" y="421" width="173.2" height="15.0" fill="rgb(213,116,36)" rx="2" ry="2" />
<text  x="638.72" y="431.5" >torch::empty</text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="221.8" y="405" width="0.3" height="15.0" fill="rgb(245,4,49)" rx="2" ry="2" />
<text  x="224.82" y="415.5" ></text>
</g>
<g >
<title>torch::autograd::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Autograd (5 samples, 0.12%)</title><rect x="180.7" y="437" width="1.4" height="15.0" fill="rgb(249,44,1)" rx="2" ry="2" />
<text  x="183.68" y="447.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr_target::~intrusive_ptr_target (1 samples, 0.02%)</title><rect x="845.9" y="341" width="0.2" height="15.0" fill="rgb(212,208,8)" rx="2" ry="2" />
<text  x="848.87" y="351.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="181.8" y="293" width="0.3" height="15.0" fill="rgb(222,19,20)" rx="2" ry="2" />
<text  x="184.79" y="303.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.05%)</title><rect x="162.9" y="245" width="0.5" height="15.0" fill="rgb(250,53,17)" rx="2" ry="2" />
<text  x="165.89" y="255.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, at::Tensor  (1 samples, 0.02%)</title><rect x="184.0" y="405" width="0.3" height="15.0" fill="rgb(216,219,40)" rx="2" ry="2" />
<text  x="187.01" y="415.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::TypeMeta (2 samples, 0.05%)</title><rect x="206.2" y="485" width="0.6" height="15.0" fill="rgb(245,11,25)" rx="2" ry="2" />
<text  x="209.25" y="495.5" ></text>
</g>
<g >
<title>[ld-2.31.so] (2 samples, 0.05%)</title><rect x="123.1" y="341" width="0.6" height="15.0" fill="rgb(224,147,41)" rx="2" ry="2" />
<text  x="126.14" y="351.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="142.0" y="373" width="0.3" height="15.0" fill="rgb(241,28,20)" rx="2" ry="2" />
<text  x="145.04" y="383.5" ></text>
</g>
<g >
<title>c10::impl::ExcludeDispatchKeyGuard::ExcludeDispatchKeyGuard (2 samples, 0.05%)</title><rect x="672.4" y="373" width="0.6" height="15.0" fill="rgb(241,182,35)" rx="2" ry="2" />
<text  x="675.41" y="383.5" ></text>
</g>
<g >
<title>torch::Library::impl_UNBOXED&lt;char const*, at::Tensor&amp;  (1 samples, 0.02%)</title><rect x="152.3" y="421" width="0.3" height="15.0" fill="rgb(244,101,52)" rx="2" ry="2" />
<text  x="155.32" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;c10::Type&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;c10::Type&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="249.6" y="389" width="0.3" height="15.0" fill="rgb(217,163,41)" rx="2" ry="2" />
<text  x="252.61" y="399.5" ></text>
</g>
<g >
<title>c10::impl::ExcludeDispatchKeyGuard::ExcludeDispatchKeyGuard (2 samples, 0.05%)</title><rect x="235.2" y="485" width="0.5" height="15.0" fill="rgb(206,160,15)" rx="2" ry="2" />
<text  x="238.16" y="495.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.02%)</title><rect x="184.3" y="325" width="0.3" height="15.0" fill="rgb(237,174,13)" rx="2" ry="2" />
<text  x="187.29" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;c10::Symbol, c10::Symbol, std::allocator&lt;c10::Symbol&gt;, std::__detail::_Identity, std::equal_to&lt;c10::Symbol&gt;, std::hash&lt;c10::Symbol&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_Hashtable (1 samples, 0.02%)</title><rect x="222.7" y="389" width="0.2" height="15.0" fill="rgb(227,156,35)" rx="2" ry="2" />
<text  x="225.65" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (14 samples, 0.33%)</title><rect x="1179.4" y="485" width="3.9" height="15.0" fill="rgb(220,185,37)" rx="2" ry="2" />
<text  x="1182.44" y="495.5" ></text>
</g>
<g >
<title>torch::jit::parseName (1 samples, 0.02%)</title><rect x="183.5" y="357" width="0.2" height="15.0" fill="rgb(231,162,30)" rx="2" ry="2" />
<text  x="186.46" y="367.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="202.9" y="357" width="0.3" height="15.0" fill="rgb(250,171,10)" rx="2" ry="2" />
<text  x="205.91" y="367.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.02%)</title><rect x="167.9" y="325" width="0.3" height="15.0" fill="rgb(245,13,29)" rx="2" ry="2" />
<text  x="170.89" y="335.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.02%)</title><rect x="217.6" y="325" width="0.3" height="15.0" fill="rgb(252,213,20)" rx="2" ry="2" />
<text  x="220.65" y="335.5" ></text>
</g>
<g >
<title>do_page_fault (2 samples, 0.05%)</title><rect x="162.9" y="293" width="0.5" height="15.0" fill="rgb(254,143,24)" rx="2" ry="2" />
<text  x="165.89" y="303.5" ></text>
</g>
<g >
<title>std::move&lt;c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;&amp;&gt; (2 samples, 0.05%)</title><rect x="651.8" y="373" width="0.6" height="15.0" fill="rgb(239,222,22)" rx="2" ry="2" />
<text  x="654.84" y="383.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (1 samples, 0.02%)</title><rect x="195.1" y="357" width="0.3" height="15.0" fill="rgb(215,18,48)" rx="2" ry="2" />
<text  x="198.13" y="367.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="179.3" y="181" width="0.3" height="15.0" fill="rgb(217,186,48)" rx="2" ry="2" />
<text  x="182.29" y="191.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.02%)</title><rect x="821.4" y="309" width="0.3" height="15.0" fill="rgb(210,225,24)" rx="2" ry="2" />
<text  x="824.41" y="319.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (2 samples, 0.05%)</title><rect x="143.1" y="309" width="0.6" height="15.0" fill="rgb(229,157,26)" rx="2" ry="2" />
<text  x="146.15" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.26%)</title><rect x="1186.9" y="501" width="3.1" height="15.0" fill="rgb(234,145,7)" rx="2" ry="2" />
<text  x="1189.94" y="511.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (4 samples, 0.09%)</title><rect x="137.0" y="373" width="1.1" height="15.0" fill="rgb(251,180,51)" rx="2" ry="2" />
<text  x="140.03" y="383.5" ></text>
</g>
<g >
<title>std::mutex::mutex (1 samples, 0.02%)</title><rect x="96.4" y="485" width="0.3" height="15.0" fill="rgb(226,191,44)" rx="2" ry="2" />
<text  x="99.45" y="495.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="184.8" y="405" width="0.3" height="15.0" fill="rgb(222,10,25)" rx="2" ry="2" />
<text  x="187.85" y="415.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;torch::autograd::Node&gt;::shared_ptr (3 samples, 0.07%)</title><rect x="478.7" y="373" width="0.8" height="15.0" fill="rgb(214,6,6)" rx="2" ry="2" />
<text  x="481.66" y="383.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;bool&gt;::constexpr_optional_base (2 samples, 0.05%)</title><rect x="1174.2" y="373" width="0.5" height="15.0" fill="rgb(215,220,2)" rx="2" ry="2" />
<text  x="1177.16" y="383.5" ></text>
</g>
<g >
<title>torch::Library::impl_UNBOXED&lt;char const*, at::Tensor&amp;  (1 samples, 0.02%)</title><rect x="181.5" y="421" width="0.3" height="15.0" fill="rgb(207,51,37)" rx="2" ry="2" />
<text  x="184.51" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::vector (2 samples, 0.05%)</title><rect x="175.1" y="389" width="0.6" height="15.0" fill="rgb(233,154,7)" rx="2" ry="2" />
<text  x="178.12" y="399.5" ></text>
</g>
<g >
<title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (449 samples, 10.58%)</title><rect x="1038.2" y="357" width="124.8" height="15.0" fill="rgb(246,191,48)" rx="2" ry="2" />
<text  x="1041.23" y="367.5" >c10::impl::wrap..</text>
</g>
<g >
<title>c10::typeMetaToScalarType (90 samples, 2.12%)</title><rect x="964.8" y="341" width="25.1" height="15.0" fill="rgb(219,229,52)" rx="2" ry="2" />
<text  x="967.84" y="351.5" >c..</text>
</g>
<g >
<title>c10::TensorImpl::unique_version (8 samples, 0.19%)</title><rect x="655.7" y="389" width="2.3" height="15.0" fill="rgb(208,53,53)" rx="2" ry="2" />
<text  x="658.73" y="399.5" ></text>
</g>
<g >
<title>____fput (1 samples, 0.02%)</title><rect x="123.1" y="261" width="0.3" height="15.0" fill="rgb(246,194,25)" rx="2" ry="2" />
<text  x="126.14" y="271.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;int&gt; (1 samples, 0.02%)</title><rect x="207.4" y="485" width="0.2" height="15.0" fill="rgb(208,128,49)" rx="2" ry="2" />
<text  x="210.36" y="495.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (2 samples, 0.05%)</title><rect x="164.8" y="309" width="0.6" height="15.0" fill="rgb(231,91,18)" rx="2" ry="2" />
<text  x="167.83" y="319.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.05%)</title><rect x="539.8" y="261" width="0.6" height="15.0" fill="rgb(218,190,51)" rx="2" ry="2" />
<text  x="542.82" y="271.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;unsigned char&gt; (1 samples, 0.02%)</title><rect x="475.6" y="325" width="0.3" height="15.0" fill="rgb(205,59,52)" rx="2" ry="2" />
<text  x="478.61" y="335.5" ></text>
</g>
<g >
<title>std::__mutex_base::__mutex_base (2 samples, 0.05%)</title><rect x="457.0" y="357" width="0.5" height="15.0" fill="rgb(241,105,42)" rx="2" ry="2" />
<text  x="459.98" y="367.5" ></text>
</g>
<g >
<title>at::empty (303 samples, 7.14%)</title><rect x="491.2" y="405" width="84.2" height="15.0" fill="rgb(235,16,13)" rx="2" ry="2" />
<text  x="494.17" y="415.5" >at::empty</text>
</g>
<g >
<title>std::weak_ptr&lt;torch::autograd::Node&gt;::weak_ptr (9 samples, 0.21%)</title><rect x="959.3" y="357" width="2.5" height="15.0" fill="rgb(246,213,53)" rx="2" ry="2" />
<text  x="962.28" y="367.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="179.3" y="325" width="0.3" height="15.0" fill="rgb(246,220,41)" rx="2" ry="2" />
<text  x="182.29" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="193.2" y="293" width="0.3" height="15.0" fill="rgb(207,153,51)" rx="2" ry="2" />
<text  x="196.18" y="303.5" ></text>
</g>
<g >
<title>c10::Device::Device (17 samples, 0.40%)</title><rect x="611.0" y="357" width="4.7" height="15.0" fill="rgb(220,20,41)" rx="2" ry="2" />
<text  x="613.98" y="367.5" ></text>
</g>
<g >
<title>posix_memalign (38 samples, 0.90%)</title><rect x="545.7" y="245" width="10.5" height="15.0" fill="rgb(210,189,8)" rx="2" ry="2" />
<text  x="548.66" y="255.5" ></text>
</g>
<g >
<title>c10::impl::ExcludeDispatchKeyGuard::~ExcludeDispatchKeyGuard (1 samples, 0.02%)</title><rect x="673.5" y="373" width="0.3" height="15.0" fill="rgb(224,81,14)" rx="2" ry="2" />
<text  x="676.52" y="383.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (133 samples, 3.13%)</title><rect x="812.0" y="389" width="36.9" height="15.0" fill="rgb(243,190,23)" rx="2" ry="2" />
<text  x="814.96" y="399.5" >c10..</text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="203.2" y="229" width="0.3" height="15.0" fill="rgb(252,207,28)" rx="2" ry="2" />
<text  x="206.19" y="239.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="188.2" y="373" width="0.3" height="15.0" fill="rgb(236,166,14)" rx="2" ry="2" />
<text  x="191.18" y="383.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::registerSchema (4 samples, 0.09%)</title><rect x="158.7" y="373" width="1.1" height="15.0" fill="rgb(237,15,13)" rx="2" ry="2" />
<text  x="161.72" y="383.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="133.4" y="277" width="0.3" height="15.0" fill="rgb(208,92,49)" rx="2" ry="2" />
<text  x="136.42" y="287.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="187.6" y="213" width="0.3" height="15.0" fill="rgb(231,94,7)" rx="2" ry="2" />
<text  x="190.63" y="223.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (21 samples, 0.49%)</title><rect x="209.9" y="485" width="5.8" height="15.0" fill="rgb(252,116,43)" rx="2" ry="2" />
<text  x="212.86" y="495.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (1 samples, 0.02%)</title><rect x="157.6" y="341" width="0.3" height="15.0" fill="rgb(233,184,36)" rx="2" ry="2" />
<text  x="160.60" y="351.5" ></text>
</g>
<g >
<title>c10::typeMetaToScalarType (40 samples, 0.94%)</title><rect x="466.7" y="357" width="11.1" height="15.0" fill="rgb(213,47,4)" rx="2" ry="2" />
<text  x="469.71" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect x="188.5" y="437" width="0.2" height="15.0" fill="rgb(245,9,53)" rx="2" ry="2" />
<text  x="191.46" y="447.5" ></text>
</g>
<g >
<title>c10::TensorImpl::compute_contiguous (3 samples, 0.07%)</title><rect x="1136.6" y="245" width="0.9" height="15.0" fill="rgb(249,128,28)" rx="2" ry="2" />
<text  x="1139.63" y="255.5" ></text>
</g>
<g >
<title>do_user_addr_fault (2 samples, 0.05%)</title><rect x="160.4" y="325" width="0.5" height="15.0" fill="rgb(233,221,26)" rx="2" ry="2" />
<text  x="163.38" y="335.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseBaseType (1 samples, 0.02%)</title><rect x="249.1" y="389" width="0.2" height="15.0" fill="rgb(208,223,0)" rx="2" ry="2" />
<text  x="252.06" y="399.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;c10::Device&gt;::constexpr_optional_base&lt;c10::DeviceType const&amp;, int&gt; (15 samples, 0.35%)</title><rect x="406.7" y="405" width="4.1" height="15.0" fill="rgb(219,47,31)" rx="2" ry="2" />
<text  x="409.67" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;, std::allocator&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt; &gt;::_M_deallocate (1 samples, 0.02%)</title><rect x="837.3" y="309" width="0.2" height="15.0" fill="rgb(237,212,20)" rx="2" ry="2" />
<text  x="840.25" y="319.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;c10::Device&gt;::constexpr_optional_base (1 samples, 0.02%)</title><rect x="858.9" y="373" width="0.3" height="15.0" fill="rgb(233,145,4)" rx="2" ry="2" />
<text  x="861.93" y="383.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.02%)</title><rect x="122.0" y="293" width="0.3" height="15.0" fill="rgb(214,123,37)" rx="2" ry="2" />
<text  x="125.02" y="303.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.02%)</title><rect x="145.1" y="357" width="0.3" height="15.0" fill="rgb(215,108,10)" rx="2" ry="2" />
<text  x="148.10" y="367.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="193.5" y="293" width="0.2" height="15.0" fill="rgb(213,156,30)" rx="2" ry="2" />
<text  x="196.46" y="303.5" ></text>
</g>
<g >
<title>at::RecordFunction::~RecordFunction (4 samples, 0.09%)</title><rect x="500.9" y="373" width="1.1" height="15.0" fill="rgb(241,88,18)" rx="2" ry="2" />
<text  x="503.90" y="383.5" ></text>
</g>
<g >
<title>cfree (3 samples, 0.07%)</title><rect x="823.9" y="357" width="0.8" height="15.0" fill="rgb(238,46,4)" rx="2" ry="2" />
<text  x="826.91" y="367.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.02%)</title><rect x="266.6" y="357" width="0.2" height="15.0" fill="rgb(248,201,2)" rx="2" ry="2" />
<text  x="269.57" y="367.5" ></text>
</g>
<g >
<title>c10::demangle[abi:cxx11] (1 samples, 0.02%)</title><rect x="234.9" y="485" width="0.3" height="15.0" fill="rgb(253,205,42)" rx="2" ry="2" />
<text  x="237.88" y="495.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::initialized (1 samples, 0.02%)</title><rect x="403.9" y="373" width="0.3" height="15.0" fill="rgb(223,127,14)" rx="2" ry="2" />
<text  x="406.89" y="383.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (1 samples, 0.02%)</title><rect x="218.5" y="309" width="0.3" height="15.0" fill="rgb(205,42,1)" rx="2" ry="2" />
<text  x="221.48" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (1 samples, 0.02%)</title><rect x="156.5" y="357" width="0.3" height="15.0" fill="rgb(207,27,48)" rx="2" ry="2" />
<text  x="159.49" y="367.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.02%)</title><rect x="147.9" y="357" width="0.3" height="15.0" fill="rgb(220,169,1)" rx="2" ry="2" />
<text  x="150.88" y="367.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (7 samples, 0.16%)</title><rect x="379.7" y="373" width="2.0" height="15.0" fill="rgb(235,187,21)" rx="2" ry="2" />
<text  x="382.71" y="383.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="262.7" y="325" width="0.3" height="15.0" fill="rgb(253,69,27)" rx="2" ry="2" />
<text  x="265.68" y="335.5" ></text>
</g>
<g >
<title>std::ostream::sentry::~sentry (1 samples, 0.02%)</title><rect x="173.7" y="373" width="0.3" height="15.0" fill="rgb(223,83,24)" rx="2" ry="2" />
<text  x="176.73" y="383.5" ></text>
</g>
<g >
<title>cpuinfo_linux_parse_multiline_file (1 samples, 0.02%)</title><rect x="146.5" y="325" width="0.3" height="15.0" fill="rgb(245,6,53)" rx="2" ry="2" />
<text  x="149.49" y="335.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;torch::autograd::Node,  (1 samples, 0.02%)</title><rect x="941.5" y="357" width="0.3" height="15.0" fill="rgb(248,122,16)" rx="2" ry="2" />
<text  x="944.49" y="367.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;caffe2::TypeMeta&gt;::constexpr_optional_base (1 samples, 0.02%)</title><rect x="426.1" y="405" width="0.3" height="15.0" fill="rgb(217,95,27)" rx="2" ry="2" />
<text  x="429.13" y="415.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.02%)</title><rect x="164.3" y="341" width="0.3" height="15.0" fill="rgb(207,157,12)" rx="2" ry="2" />
<text  x="167.28" y="351.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.02%)</title><rect x="202.9" y="277" width="0.3" height="15.0" fill="rgb(223,169,46)" rx="2" ry="2" />
<text  x="205.91" y="287.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseDeclaration (1 samples, 0.02%)</title><rect x="248.2" y="437" width="0.3" height="15.0" fill="rgb(208,50,26)" rx="2" ry="2" />
<text  x="251.22" y="447.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.02%)</title><rect x="132.3" y="453" width="0.3" height="15.0" fill="rgb(218,141,46)" rx="2" ry="2" />
<text  x="135.31" y="463.5" ></text>
</g>
<g >
<title>std::__weak_count&lt; (5 samples, 0.12%)</title><rect x="840.6" y="293" width="1.4" height="15.0" fill="rgb(238,112,35)" rx="2" ry="2" />
<text  x="843.59" y="303.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.02%)</title><rect x="178.7" y="197" width="0.3" height="15.0" fill="rgb(206,124,21)" rx="2" ry="2" />
<text  x="181.73" y="207.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (1 samples, 0.02%)</title><rect x="147.3" y="389" width="0.3" height="15.0" fill="rgb(212,42,26)" rx="2" ry="2" />
<text  x="150.32" y="399.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.02%)</title><rect x="135.9" y="149" width="0.3" height="15.0" fill="rgb(217,188,2)" rx="2" ry="2" />
<text  x="138.92" y="159.5" ></text>
</g>
<g >
<title>__cxa_demangle (1 samples, 0.02%)</title><rect x="192.9" y="421" width="0.3" height="15.0" fill="rgb(231,111,51)" rx="2" ry="2" />
<text  x="195.91" y="431.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;c10::AutogradMetaInterface&gt;, true&gt;::_Head_base&lt;std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (1 samples, 0.02%)</title><rect x="482.6" y="325" width="0.2" height="15.0" fill="rgb(208,132,51)" rx="2" ry="2" />
<text  x="485.56" y="335.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::expect (1 samples, 0.02%)</title><rect x="219.9" y="373" width="0.2" height="15.0" fill="rgb(234,166,44)" rx="2" ry="2" />
<text  x="222.87" y="383.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::MemoryFormat&gt;::optional (4 samples, 0.09%)</title><rect x="807.8" y="389" width="1.1" height="15.0" fill="rgb(252,116,36)" rx="2" ry="2" />
<text  x="810.79" y="399.5" ></text>
</g>
<g >
<title>c10::TensorImpl::TensorImpl (11 samples, 0.26%)</title><rect x="536.8" y="245" width="3.0" height="15.0" fill="rgb(212,24,16)" rx="2" ry="2" />
<text  x="539.76" y="255.5" ></text>
</g>
<g >
<title>c10::constexpr_forward&lt;c10::DeviceType const&amp;&gt; (1 samples, 0.02%)</title><rect x="48.9" y="485" width="0.3" height="15.0" fill="rgb(253,154,14)" rx="2" ry="2" />
<text  x="51.92" y="495.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::ScalarType&gt;::operator bool (3 samples, 0.07%)</title><rect x="69.8" y="485" width="0.8" height="15.0" fill="rgb(214,225,44)" rx="2" ry="2" />
<text  x="72.76" y="495.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.02%)</title><rect x="222.9" y="373" width="0.3" height="15.0" fill="rgb(247,214,21)" rx="2" ry="2" />
<text  x="225.93" y="383.5" ></text>
</g>
<g >
<title>torch::empty (994 samples, 23.42%)</title><rect x="899.8" y="421" width="276.3" height="15.0" fill="rgb(242,5,39)" rx="2" ry="2" />
<text  x="902.80" y="431.5" >torch::empty</text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (1 samples, 0.02%)</title><rect x="217.4" y="405" width="0.2" height="15.0" fill="rgb(223,19,43)" rx="2" ry="2" />
<text  x="220.37" y="415.5" ></text>
</g>
<g >
<title>[microbenchmark] (1 samples, 0.02%)</title><rect x="163.4" y="341" width="0.3" height="15.0" fill="rgb(235,80,51)" rx="2" ry="2" />
<text  x="166.44" y="351.5" ></text>
</g>
<g >
<title>[libcublasLt.so.11.1.0.229] (1 samples, 0.02%)</title><rect x="252.1" y="421" width="0.3" height="15.0" fill="rgb(213,27,38)" rx="2" ry="2" />
<text  x="255.12" y="431.5" ></text>
</g>
<g >
<title>at::RecordFunction::~RecordFunction@plt (1 samples, 0.02%)</title><rect x="314.9" y="373" width="0.3" height="15.0" fill="rgb(220,155,40)" rx="2" ry="2" />
<text  x="317.94" y="383.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, c10::AutogradMetaInterface*, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt; (2 samples, 0.05%)</title><rect x="88.9" y="485" width="0.6" height="15.0" fill="rgb(221,150,17)" rx="2" ry="2" />
<text  x="91.94" y="495.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::TypeMeta (3 samples, 0.07%)</title><rect x="981.8" y="293" width="0.8" height="15.0" fill="rgb(214,121,39)" rx="2" ry="2" />
<text  x="984.80" y="303.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;torch::autograd::Node,  (4 samples, 0.09%)</title><rect x="994.9" y="341" width="1.1" height="15.0" fill="rgb(233,116,51)" rx="2" ry="2" />
<text  x="997.86" y="351.5" ></text>
</g>
<g >
<title>[libcusparse.so.11.1.0.218] (2 samples, 0.05%)</title><rect x="131.8" y="437" width="0.5" height="15.0" fill="rgb(232,181,7)" rx="2" ry="2" />
<text  x="134.75" y="447.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::operator* (2 samples, 0.05%)</title><rect x="403.6" y="389" width="0.6" height="15.0" fill="rgb(219,141,1)" rx="2" ry="2" />
<text  x="406.61" y="399.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.02%)</title><rect x="140.6" y="357" width="0.3" height="15.0" fill="rgb(250,19,23)" rx="2" ry="2" />
<text  x="143.65" y="367.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::computeDispatchTableEntry (3 samples, 0.07%)</title><rect x="261.3" y="293" width="0.8" height="15.0" fill="rgb(244,88,32)" rx="2" ry="2" />
<text  x="264.29" y="303.5" ></text>
</g>
<g >
<title>filemap_map_pages (3 samples, 0.07%)</title><rect x="128.7" y="309" width="0.8" height="15.0" fill="rgb(211,151,44)" rx="2" ry="2" />
<text  x="131.69" y="319.5" ></text>
</g>
<g >
<title>c10::impl::detail::with_scattered_tensor_options_impl_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor  (179 samples, 4.22%)</title><rect x="517.0" y="309" width="49.8" height="15.0" fill="rgb(238,67,8)" rx="2" ry="2" />
<text  x="520.02" y="319.5" >c10::..</text>
</g>
<g >
<title>torch::jit::parseName (1 samples, 0.02%)</title><rect x="146.2" y="389" width="0.3" height="15.0" fill="rgb(213,127,23)" rx="2" ry="2" />
<text  x="149.21" y="399.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (1 samples, 0.02%)</title><rect x="164.0" y="357" width="0.3" height="15.0" fill="rgb(240,11,53)" rx="2" ry="2" />
<text  x="167.00" y="367.5" ></text>
</g>
<g >
<title>at::RecordFunction::RecordFunction (7 samples, 0.16%)</title><rect x="499.0" y="373" width="1.9" height="15.0" fill="rgb(233,105,53)" rx="2" ry="2" />
<text  x="501.96" y="383.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.02%)</title><rect x="122.0" y="309" width="0.3" height="15.0" fill="rgb(209,31,7)" rx="2" ry="2" />
<text  x="125.02" y="319.5" ></text>
</g>
<g >
<title>get_page_from_freelist (3 samples, 0.07%)</title><rect x="129.5" y="261" width="0.9" height="15.0" fill="rgb(205,216,53)" rx="2" ry="2" />
<text  x="132.53" y="271.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (3 samples, 0.07%)</title><rect x="127.9" y="293" width="0.8" height="15.0" fill="rgb(243,219,9)" rx="2" ry="2" />
<text  x="130.86" y="303.5" ></text>
</g>
<g >
<title>torch::autograd::AutogradMeta::~AutogradMeta (29 samples, 0.68%)</title><rect x="385.3" y="357" width="8.0" height="15.0" fill="rgb(239,210,4)" rx="2" ry="2" />
<text  x="388.27" y="367.5" ></text>
</g>
<g >
<title>pthread_once@plt (1 samples, 0.02%)</title><rect x="200.4" y="389" width="0.3" height="15.0" fill="rgb(222,218,16)" rx="2" ry="2" />
<text  x="203.41" y="399.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (9 samples, 0.21%)</title><rect x="445.6" y="405" width="2.5" height="15.0" fill="rgb(239,148,1)" rx="2" ry="2" />
<text  x="448.59" y="415.5" ></text>
</g>
<g >
<title>caffe2::_c10_ops::schema_RoIAlign2 (1 samples, 0.02%)</title><rect x="195.7" y="437" width="0.3" height="15.0" fill="rgb(233,83,12)" rx="2" ry="2" />
<text  x="198.69" y="447.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::(anonymous namespace)::createArgumentVector (1 samples, 0.02%)</title><rect x="151.5" y="373" width="0.3" height="15.0" fill="rgb(246,55,3)" rx="2" ry="2" />
<text  x="154.49" y="383.5" ></text>
</g>
<g >
<title>torch::jit::parseSchema (1 samples, 0.02%)</title><rect x="218.5" y="437" width="0.3" height="15.0" fill="rgb(246,9,25)" rx="2" ry="2" />
<text  x="221.48" y="447.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::MemoryFormat&gt;::optional (1 samples, 0.02%)</title><rect x="289.1" y="437" width="0.3" height="15.0" fill="rgb(221,205,46)" rx="2" ry="2" />
<text  x="292.09" y="447.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="178.7" y="325" width="0.3" height="15.0" fill="rgb(238,89,1)" rx="2" ry="2" />
<text  x="181.73" y="335.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, torch::CppFunction&gt; (1 samples, 0.02%)</title><rect x="154.3" y="405" width="0.2" height="15.0" fill="rgb(236,183,43)" rx="2" ry="2" />
<text  x="157.27" y="415.5" ></text>
</g>
<g >
<title>c10::TensorOptions::computeDispatchKey (6 samples, 0.14%)</title><rect x="39.2" y="485" width="1.7" height="15.0" fill="rgb(252,65,32)" rx="2" ry="2" />
<text  x="42.19" y="495.5" ></text>
</g>
<g >
<title>c10::AutogradMetaInterface::AutogradMetaInterface (1 samples, 0.02%)</title><rect x="455.3" y="373" width="0.3" height="15.0" fill="rgb(241,104,35)" rx="2" ry="2" />
<text  x="458.31" y="383.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.02%)</title><rect x="132.6" y="405" width="0.3" height="15.0" fill="rgb(238,184,12)" rx="2" ry="2" />
<text  x="135.59" y="415.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;torch::autograd::Node,  (1 samples, 0.02%)</title><rect x="456.1" y="373" width="0.3" height="15.0" fill="rgb(210,98,11)" rx="2" ry="2" />
<text  x="459.15" y="383.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.02%)</title><rect x="179.3" y="405" width="0.3" height="15.0" fill="rgb(231,71,14)" rx="2" ry="2" />
<text  x="182.29" y="415.5" ></text>
</g>
<g >
<title>torch::autograd::AutogradMeta::set_requires_grad (106 samples, 2.50%)</title><rect x="961.8" y="357" width="29.4" height="15.0" fill="rgb(226,54,21)" rx="2" ry="2" />
<text  x="964.78" y="367.5" >to..</text>
</g>
<g >
<title>c10::constexpr_storage_t&lt;bool&gt;::constexpr_storage_t (1 samples, 0.02%)</title><rect x="374.7" y="373" width="0.3" height="15.0" fill="rgb(252,60,4)" rx="2" ry="2" />
<text  x="377.70" y="383.5" ></text>
</g>
<g >
<title>seq_vprintf (1 samples, 0.02%)</title><rect x="146.5" y="133" width="0.3" height="15.0" fill="rgb(208,31,3)" rx="2" ry="2" />
<text  x="149.49" y="143.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (5 samples, 0.12%)</title><rect x="200.7" y="389" width="1.4" height="15.0" fill="rgb(240,50,42)" rx="2" ry="2" />
<text  x="203.69" y="399.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.02%)</title><rect x="248.8" y="325" width="0.3" height="15.0" fill="rgb(250,129,0)" rx="2" ry="2" />
<text  x="251.78" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;torch::autograd::AutogradMeta, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::release (4 samples, 0.09%)</title><rect x="99.5" y="485" width="1.1" height="15.0" fill="rgb(217,41,27)" rx="2" ry="2" />
<text  x="102.51" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;, std::allocator&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt; &gt;::vector (16 samples, 0.38%)</title><rect x="954.8" y="357" width="4.5" height="15.0" fill="rgb(250,93,30)" rx="2" ry="2" />
<text  x="957.83" y="367.5" ></text>
</g>
<g >
<title>std::tuple&lt;torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::tuple&lt;torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt;, true&gt; (1 samples, 0.02%)</title><rect x="936.2" y="357" width="0.3" height="15.0" fill="rgb(240,133,29)" rx="2" ry="2" />
<text  x="939.21" y="367.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="135.1" y="389" width="0.3" height="15.0" fill="rgb(215,74,49)" rx="2" ry="2" />
<text  x="138.09" y="399.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="194.0" y="277" width="0.3" height="15.0" fill="rgb(246,60,50)" rx="2" ry="2" />
<text  x="197.02" y="287.5" ></text>
</g>
<g >
<title>page_fault (2 samples, 0.05%)</title><rect x="162.9" y="309" width="0.5" height="15.0" fill="rgb(236,87,26)" rx="2" ry="2" />
<text  x="165.89" y="319.5" ></text>
</g>
<g >
<title>at::Tensor::~Tensor (136 samples, 3.20%)</title><rect x="811.1" y="421" width="37.8" height="15.0" fill="rgb(225,138,48)" rx="2" ry="2" />
<text  x="814.12" y="431.5" >at:..</text>
</g>
<g >
<title>std::ostream::sentry::sentry (1 samples, 0.02%)</title><rect x="161.2" y="341" width="0.3" height="15.0" fill="rgb(218,40,38)" rx="2" ry="2" />
<text  x="164.22" y="351.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="152.3" y="181" width="0.3" height="15.0" fill="rgb(233,8,53)" rx="2" ry="2" />
<text  x="155.32" y="191.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (1 samples, 0.02%)</title><rect x="489.5" y="357" width="0.3" height="15.0" fill="rgb(212,107,27)" rx="2" ry="2" />
<text  x="492.51" y="367.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::contained_val (1 samples, 0.02%)</title><rect x="405.3" y="389" width="0.3" height="15.0" fill="rgb(242,41,31)" rx="2" ry="2" />
<text  x="408.28" y="399.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.02%)</title><rect x="194.6" y="389" width="0.3" height="15.0" fill="rgb(224,97,14)" rx="2" ry="2" />
<text  x="197.57" y="399.5" ></text>
</g>
<g >
<title>c10::Registerer&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unique_ptr&lt;caffe2::GradientMakerBase, std::default_delete&lt;caffe2::GradientMakerBase&gt; &gt;, caffe2::OperatorDef const&amp;, std::vector&lt;caffe2::GradientWrapper, std::allocator&lt;caffe2::GradientWrapper&gt; &gt; const&amp;&gt;::Registerer (1 samples, 0.02%)</title><rect x="191.0" y="437" width="0.2" height="15.0" fill="rgb(237,170,0)" rx="2" ry="2" />
<text  x="193.96" y="447.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.02%)</title><rect x="151.8" y="405" width="0.2" height="15.0" fill="rgb(214,113,52)" rx="2" ry="2" />
<text  x="154.77" y="415.5" ></text>
</g>
<g >
<title>c10::DefaultCPUAllocator::ReportAndDelete (11 samples, 0.26%)</title><rect x="587.4" y="357" width="3.0" height="15.0" fill="rgb(222,149,24)" rx="2" ry="2" />
<text  x="590.35" y="367.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::OperatorRegistry::~OperatorRegistry (2 samples, 0.05%)</title><rect x="263.0" y="389" width="0.5" height="15.0" fill="rgb(240,77,33)" rx="2" ry="2" />
<text  x="265.96" y="399.5" ></text>
</g>
<g >
<title>c10::dtype (61 samples, 1.44%)</title><rect x="880.1" y="421" width="16.9" height="15.0" fill="rgb(235,51,26)" rx="2" ry="2" />
<text  x="883.06" y="431.5" ></text>
</g>
<g >
<title>at::RecordFunction::~RecordFunction (9 samples, 0.21%)</title><rect x="1061.6" y="309" width="2.5" height="15.0" fill="rgb(251,139,5)" rx="2" ry="2" />
<text  x="1064.58" y="319.5" ></text>
</g>
<g >
<title>std::swap&lt;torch::autograd::Node*&gt; (1 samples, 0.02%)</title><rect x="952.9" y="325" width="0.3" height="15.0" fill="rgb(251,189,22)" rx="2" ry="2" />
<text  x="955.89" y="335.5" ></text>
</g>
<g >
<title>c10::ThreadLocalDebugInfo::get (2 samples, 0.05%)</title><rect x="346.9" y="229" width="0.6" height="15.0" fill="rgb(222,22,51)" rx="2" ry="2" />
<text  x="349.90" y="239.5" ></text>
</g>
<g >
<title>c10::ThreadLocalDebugInfo::get (3 samples, 0.07%)</title><rect x="267.1" y="325" width="0.9" height="15.0" fill="rgb(216,125,27)" rx="2" ry="2" />
<text  x="270.13" y="335.5" ></text>
</g>
<g >
<title>c10::TensorImpl::compute_contiguous (1 samples, 0.02%)</title><rect x="11.9" y="485" width="0.3" height="15.0" fill="rgb(251,211,1)" rx="2" ry="2" />
<text  x="14.95" y="495.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::~OperatorEntry (3 samples, 0.07%)</title><rect x="259.1" y="325" width="0.8" height="15.0" fill="rgb(245,142,12)" rx="2" ry="2" />
<text  x="262.06" y="335.5" ></text>
</g>
<g >
<title>[[heap]] (24 samples, 0.57%)</title><rect x="10.0" y="501" width="6.7" height="15.0" fill="rgb(250,152,26)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::operator++ (1 samples, 0.02%)</title><rect x="921.5" y="357" width="0.3" height="15.0" fill="rgb(205,104,42)" rx="2" ry="2" />
<text  x="924.48" y="367.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="165.1" y="277" width="0.3" height="15.0" fill="rgb(213,72,11)" rx="2" ry="2" />
<text  x="168.11" y="287.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (5 samples, 0.12%)</title><rect x="446.7" y="389" width="1.4" height="15.0" fill="rgb(232,118,50)" rx="2" ry="2" />
<text  x="449.70" y="399.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::operator-- (2 samples, 0.05%)</title><rect x="905.9" y="357" width="0.6" height="15.0" fill="rgb(205,106,13)" rx="2" ry="2" />
<text  x="908.91" y="367.5" ></text>
</g>
<g >
<title>c10::Registry&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unique_ptr&lt;caffe2::GradientMakerBase, std::default_delete&lt;caffe2::GradientMakerBase&gt; &gt;, caffe2::OperatorDef const&amp;, std::vector&lt;caffe2::GradientWrapper, std::allocator&lt;caffe2::GradientWrapper&gt; &gt; const&amp;&gt;::Register (1 samples, 0.02%)</title><rect x="191.0" y="421" width="0.2" height="15.0" fill="rgb(207,53,34)" rx="2" ry="2" />
<text  x="193.96" y="431.5" ></text>
</g>
<g >
<title>torch::class_&lt;at::native::(anonymous namespace)::CellParamsBase&gt;::def_pickle&lt;at::native::(anonymous namespace)::{lambda (1 samples, 0.02%)</title><rect x="197.1" y="437" width="0.3" height="15.0" fill="rgb(245,202,38)" rx="2" ry="2" />
<text  x="200.08" y="447.5" ></text>
</g>
<g >
<title>c10::UndefinedTensorImpl::_singleton (1 samples, 0.02%)</title><rect x="1178.3" y="501" width="0.3" height="15.0" fill="rgb(229,52,24)" rx="2" ry="2" />
<text  x="1181.33" y="511.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::contained_val (1 samples, 0.02%)</title><rect x="286.9" y="373" width="0.2" height="15.0" fill="rgb(215,56,12)" rx="2" ry="2" />
<text  x="289.86" y="383.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::load (6 samples, 0.14%)</title><rect x="593.7" y="309" width="1.7" height="15.0" fill="rgb(226,144,1)" rx="2" ry="2" />
<text  x="596.75" y="319.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="183.2" y="277" width="0.3" height="15.0" fill="rgb(248,188,36)" rx="2" ry="2" />
<text  x="186.18" y="287.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="137.3" y="293" width="0.3" height="15.0" fill="rgb(215,36,1)" rx="2" ry="2" />
<text  x="140.31" y="303.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.02%)</title><rect x="218.5" y="357" width="0.3" height="15.0" fill="rgb(246,124,34)" rx="2" ry="2" />
<text  x="221.48" y="367.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.02%)</title><rect x="128.4" y="261" width="0.3" height="15.0" fill="rgb(242,7,10)" rx="2" ry="2" />
<text  x="131.42" y="271.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="132.0" y="373" width="0.3" height="15.0" fill="rgb(235,175,36)" rx="2" ry="2" />
<text  x="135.03" y="383.5" ></text>
</g>
<g >
<title>c10::TensorImpl::compute_contiguous (3 samples, 0.07%)</title><rect x="556.8" y="261" width="0.8" height="15.0" fill="rgb(226,45,18)" rx="2" ry="2" />
<text  x="559.78" y="271.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.05%)</title><rect x="160.4" y="309" width="0.5" height="15.0" fill="rgb(210,190,18)" rx="2" ry="2" />
<text  x="163.38" y="319.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="179.3" y="341" width="0.3" height="15.0" fill="rgb(215,94,3)" rx="2" ry="2" />
<text  x="182.29" y="351.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.02%)</title><rect x="172.3" y="341" width="0.3" height="15.0" fill="rgb(239,171,53)" rx="2" ry="2" />
<text  x="175.34" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (1 samples, 0.02%)</title><rect x="88.7" y="485" width="0.2" height="15.0" fill="rgb(227,214,8)" rx="2" ry="2" />
<text  x="91.67" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect x="138.4" y="341" width="0.3" height="15.0" fill="rgb(248,223,20)" rx="2" ry="2" />
<text  x="141.42" y="351.5" ></text>
</g>
<g >
<title>at::Tensor::defined (3 samples, 0.07%)</title><rect x="438.9" y="405" width="0.8" height="15.0" fill="rgb(216,44,42)" rx="2" ry="2" />
<text  x="441.91" y="415.5" ></text>
</g>
<g >
<title>c10::TensorOptions::device&lt;c10::DeviceType const&amp;, int&gt; (54 samples, 1.27%)</title><rect x="601.0" y="421" width="15.0" height="15.0" fill="rgb(218,220,25)" rx="2" ry="2" />
<text  x="603.97" y="431.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::nextIf (1 samples, 0.02%)</title><rect x="220.4" y="373" width="0.3" height="15.0" fill="rgb(241,169,12)" rx="2" ry="2" />
<text  x="223.43" y="383.5" ></text>
</g>
<g >
<title>c10::Device::validate (2 samples, 0.05%)</title><rect x="33.6" y="485" width="0.6" height="15.0" fill="rgb(237,57,20)" rx="2" ry="2" />
<text  x="36.63" y="495.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.02%)</title><rect x="188.7" y="389" width="0.3" height="15.0" fill="rgb(249,130,10)" rx="2" ry="2" />
<text  x="191.74" y="399.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="149.3" y="325" width="0.2" height="15.0" fill="rgb(250,106,47)" rx="2" ry="2" />
<text  x="152.27" y="335.5" ></text>
</g>
<g >
<title>std::ios_base::ios_base (1 samples, 0.02%)</title><rect x="141.2" y="389" width="0.3" height="15.0" fill="rgb(246,144,23)" rx="2" ry="2" />
<text  x="144.20" y="399.5" ></text>
</g>
<g >
<title>proc_reg_read (1 samples, 0.02%)</title><rect x="146.5" y="197" width="0.3" height="15.0" fill="rgb(231,133,21)" rx="2" ry="2" />
<text  x="149.49" y="207.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.02%)</title><rect x="222.4" y="373" width="0.3" height="15.0" fill="rgb(239,149,21)" rx="2" ry="2" />
<text  x="225.37" y="383.5" ></text>
</g>
<g >
<title>do_wp_page (3 samples, 0.07%)</title><rect x="129.5" y="325" width="0.9" height="15.0" fill="rgb(227,157,31)" rx="2" ry="2" />
<text  x="132.53" y="335.5" ></text>
</g>
<g >
<title>torch::autograd::AutogradMeta::set_requires_grad (47 samples, 1.11%)</title><rect x="465.3" y="373" width="13.1" height="15.0" fill="rgb(211,23,4)" rx="2" ry="2" />
<text  x="468.32" y="383.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.02%)</title><rect x="152.3" y="309" width="0.3" height="15.0" fill="rgb(225,180,40)" rx="2" ry="2" />
<text  x="155.32" y="319.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;signed char&gt;@plt (1 samples, 0.02%)</title><rect x="793.9" y="309" width="0.3" height="15.0" fill="rgb(231,60,26)" rx="2" ry="2" />
<text  x="796.89" y="319.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseAliasAnnotation (1 samples, 0.02%)</title><rect x="170.1" y="325" width="0.3" height="15.0" fill="rgb(226,85,22)" rx="2" ry="2" />
<text  x="173.11" y="335.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;int&gt; (1 samples, 0.02%)</title><rect x="472.3" y="325" width="0.2" height="15.0" fill="rgb(215,43,44)" rx="2" ry="2" />
<text  x="475.27" y="335.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="150.1" y="309" width="0.3" height="15.0" fill="rgb(238,86,0)" rx="2" ry="2" />
<text  x="153.10" y="319.5" ></text>
</g>
<g >
<title>[microbenchmark] (2 samples, 0.05%)</title><rect x="929.5" y="373" width="0.6" height="15.0" fill="rgb(235,205,50)" rx="2" ry="2" />
<text  x="932.54" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.05%)</title><rect x="163.4" y="357" width="0.6" height="15.0" fill="rgb(234,141,29)" rx="2" ry="2" />
<text  x="166.44" y="367.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, c10::AutogradMetaInterface*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="488.1" y="325" width="0.3" height="15.0" fill="rgb(237,53,45)" rx="2" ry="2" />
<text  x="491.12" y="335.5" ></text>
</g>
<g >
<title>__do_execve_file.isra.0 (2 samples, 0.05%)</title><rect x="1179.4" y="453" width="0.6" height="15.0" fill="rgb(247,16,54)" rx="2" ry="2" />
<text  x="1182.44" y="463.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, c10::AutogradMetaInterface*, false&gt;::_Head_base&lt;c10::AutogradMetaInterface*&amp;&gt; (3 samples, 0.07%)</title><rect x="480.9" y="341" width="0.8" height="15.0" fill="rgb(237,109,47)" rx="2" ry="2" />
<text  x="483.89" y="351.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="151.2" y="309" width="0.3" height="15.0" fill="rgb(221,105,1)" rx="2" ry="2" />
<text  x="154.21" y="319.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (4 samples, 0.09%)</title><rect x="934.8" y="309" width="1.1" height="15.0" fill="rgb(242,100,22)" rx="2" ry="2" />
<text  x="937.82" y="319.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::MemoryFormat&gt;::optional (1 samples, 0.02%)</title><rect x="578.2" y="437" width="0.3" height="15.0" fill="rgb(220,0,0)" rx="2" ry="2" />
<text  x="581.18" y="447.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="152.3" y="325" width="0.3" height="15.0" fill="rgb(234,88,0)" rx="2" ry="2" />
<text  x="155.32" y="335.5" ></text>
</g>
<g >
<title>c10::DispatchKeyExtractor::makeBitsetForDispatchArgs (1 samples, 0.02%)</title><rect x="189.8" y="373" width="0.3" height="15.0" fill="rgb(214,229,15)" rx="2" ry="2" />
<text  x="192.85" y="383.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.02%)</title><rect x="249.6" y="469" width="0.3" height="15.0" fill="rgb(254,60,34)" rx="2" ry="2" />
<text  x="252.61" y="479.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseBaseType (1 samples, 0.02%)</title><rect x="249.6" y="405" width="0.3" height="15.0" fill="rgb(214,37,10)" rx="2" ry="2" />
<text  x="252.61" y="415.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_CUDAType.cpp (12 samples, 0.28%)</title><rect x="138.4" y="453" width="3.4" height="15.0" fill="rgb(224,37,14)" rx="2" ry="2" />
<text  x="141.42" y="463.5" ></text>
</g>
<g >
<title>c10::DispatchKeyExtractor::makeBitsetForDispatchArgs (2 samples, 0.05%)</title><rect x="158.7" y="357" width="0.6" height="15.0" fill="rgb(237,42,51)" rx="2" ry="2" />
<text  x="161.72" y="367.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;c10::Half&gt;@plt (1 samples, 0.02%)</title><rect x="799.4" y="357" width="0.3" height="15.0" fill="rgb(253,63,11)" rx="2" ry="2" />
<text  x="802.45" y="367.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="145.1" y="213" width="0.3" height="15.0" fill="rgb(219,224,16)" rx="2" ry="2" />
<text  x="148.10" y="223.5" ></text>
</g>
<g >
<title>c10::RegisterOperators::checkSchemaAndRegisterOp_ (3 samples, 0.07%)</title><rect x="189.6" y="437" width="0.8" height="15.0" fill="rgb(252,171,27)" rx="2" ry="2" />
<text  x="192.57" y="447.5" ></text>
</g>
<g >
<title>seq_printf (1 samples, 0.02%)</title><rect x="146.5" y="149" width="0.3" height="15.0" fill="rgb(208,1,53)" rx="2" ry="2" />
<text  x="149.49" y="159.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.12%)</title><rect x="1104.1" y="213" width="1.4" height="15.0" fill="rgb(233,224,30)" rx="2" ry="2" />
<text  x="1107.11" y="223.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, torch::CppFunction&gt; (1 samples, 0.02%)</title><rect x="177.3" y="405" width="0.3" height="15.0" fill="rgb(246,108,53)" rx="2" ry="2" />
<text  x="180.34" y="415.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.02%)</title><rect x="138.4" y="405" width="0.3" height="15.0" fill="rgb(210,223,2)" rx="2" ry="2" />
<text  x="141.42" y="415.5" ></text>
</g>
<g >
<title>c10::detail::_str_wrapper&lt;char const*, char const* const&amp;, char const*, unsigned int const&amp;&gt;::call[abi:cxx11] (2 samples, 0.05%)</title><rect x="143.7" y="357" width="0.6" height="15.0" fill="rgb(215,96,23)" rx="2" ry="2" />
<text  x="146.71" y="367.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (2 samples, 0.05%)</title><rect x="159.8" y="389" width="0.6" height="15.0" fill="rgb(220,194,22)" rx="2" ry="2" />
<text  x="162.83" y="399.5" ></text>
</g>
<g >
<title>c10::GetAllocator (1 samples, 0.02%)</title><rect x="771.9" y="245" width="0.3" height="15.0" fill="rgb(236,158,10)" rx="2" ry="2" />
<text  x="774.93" y="255.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (136 samples, 3.20%)</title><rect x="811.1" y="405" width="37.8" height="15.0" fill="rgb(227,29,27)" rx="2" ry="2" />
<text  x="814.12" y="415.5" >c10..</text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (1 samples, 0.02%)</title><rect x="136.8" y="357" width="0.2" height="15.0" fill="rgb(232,101,19)" rx="2" ry="2" />
<text  x="139.76" y="367.5" ></text>
</g>
<g >
<title>__vma_adjust (1 samples, 0.02%)</title><rect x="124.0" y="197" width="0.2" height="15.0" fill="rgb(207,112,11)" rx="2" ry="2" />
<text  x="126.97" y="207.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (2 samples, 0.05%)</title><rect x="139.8" y="309" width="0.6" height="15.0" fill="rgb(246,80,11)" rx="2" ry="2" />
<text  x="142.81" y="319.5" ></text>
</g>
<g >
<title>_nv030298rm (1 samples, 0.02%)</title><rect x="698.5" y="325" width="0.3" height="15.0" fill="rgb(246,117,29)" rx="2" ry="2" />
<text  x="701.54" y="335.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseDeclaration (1 samples, 0.02%)</title><rect x="249.6" y="453" width="0.3" height="15.0" fill="rgb(215,147,17)" rx="2" ry="2" />
<text  x="252.61" y="463.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="194.6" y="341" width="0.3" height="15.0" fill="rgb(209,218,29)" rx="2" ry="2" />
<text  x="197.57" y="351.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;torch::autograd::Node,  (1 samples, 0.02%)</title><rect x="463.1" y="357" width="0.3" height="15.0" fill="rgb(247,136,27)" rx="2" ry="2" />
<text  x="466.10" y="367.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTableFull_ (5 samples, 0.12%)</title><rect x="260.7" y="325" width="1.4" height="15.0" fill="rgb(242,59,28)" rx="2" ry="2" />
<text  x="263.73" y="335.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;c10::Device&gt;::constexpr_optional_base (2 samples, 0.05%)</title><rect x="404.2" y="405" width="0.5" height="15.0" fill="rgb(228,174,24)" rx="2" ry="2" />
<text  x="407.17" y="415.5" ></text>
</g>
<g >
<title>c10::DispatchKeyExtractor::setOperatorHasFallthroughForKey (1 samples, 0.02%)</title><rect x="157.0" y="357" width="0.3" height="15.0" fill="rgb(216,44,1)" rx="2" ry="2" />
<text  x="160.05" y="367.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="251.8" y="325" width="0.3" height="15.0" fill="rgb(219,145,31)" rx="2" ry="2" />
<text  x="254.84" y="335.5" ></text>
</g>
<g >
<title>__clear_user (1 samples, 0.02%)</title><rect x="1179.4" y="389" width="0.3" height="15.0" fill="rgb(219,59,26)" rx="2" ry="2" />
<text  x="1182.44" y="399.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.02%)</title><rect x="179.3" y="229" width="0.3" height="15.0" fill="rgb(211,212,34)" rx="2" ry="2" />
<text  x="182.29" y="239.5" ></text>
</g>
<g >
<title>c10::VariableVersion::VersionCounter::~VersionCounter (6 samples, 0.14%)</title><rect x="268.8" y="357" width="1.7" height="15.0" fill="rgb(224,154,35)" rx="2" ry="2" />
<text  x="271.79" y="367.5" ></text>
</g>
<g >
<title>std::forward&lt;caffe2::TypeMeta&gt; (1 samples, 0.02%)</title><rect x="633.8" y="405" width="0.3" height="15.0" fill="rgb(230,178,19)" rx="2" ry="2" />
<text  x="636.77" y="415.5" ></text>
</g>
<g >
<title>c10::typeMetaToScalarType (7 samples, 0.16%)</title><rect x="1161.1" y="325" width="1.9" height="15.0" fill="rgb(212,146,24)" rx="2" ry="2" />
<text  x="1164.09" y="335.5" ></text>
</g>
<g >
<title>mem_cgroup_throttle_swaprate (1 samples, 0.02%)</title><rect x="163.2" y="181" width="0.2" height="15.0" fill="rgb(218,121,20)" rx="2" ry="2" />
<text  x="166.16" y="191.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="180.7" y="341" width="0.3" height="15.0" fill="rgb(216,146,37)" rx="2" ry="2" />
<text  x="183.68" y="351.5" ></text>
</g>
<g >
<title>[microbenchmark] (3 samples, 0.07%)</title><rect x="20.6" y="485" width="0.8" height="15.0" fill="rgb(225,114,48)" rx="2" ry="2" />
<text  x="23.56" y="495.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::registerKernel (1 samples, 0.02%)</title><rect x="181.2" y="389" width="0.3" height="15.0" fill="rgb(250,135,51)" rx="2" ry="2" />
<text  x="184.23" y="399.5" ></text>
</g>
<g >
<title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (253 samples, 5.96%)</title><rect x="502.0" y="373" width="70.3" height="15.0" fill="rgb(226,101,44)" rx="2" ry="2" />
<text  x="505.01" y="383.5" >c10::im..</text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;bool&gt;::constexpr_optional_base (1 samples, 0.02%)</title><rect x="86.4" y="469" width="0.3" height="15.0" fill="rgb(248,68,45)" rx="2" ry="2" />
<text  x="89.44" y="479.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.02%)</title><rect x="142.3" y="405" width="0.3" height="15.0" fill="rgb(207,224,46)" rx="2" ry="2" />
<text  x="145.32" y="415.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::initialized (1 samples, 0.02%)</title><rect x="625.7" y="357" width="0.3" height="15.0" fill="rgb(206,82,10)" rx="2" ry="2" />
<text  x="628.71" y="367.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.02%)</title><rect x="220.4" y="357" width="0.3" height="15.0" fill="rgb(229,195,51)" rx="2" ry="2" />
<text  x="223.43" y="367.5" ></text>
</g>
<g >
<title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (299 samples, 7.04%)</title><rect x="705.2" y="309" width="83.1" height="15.0" fill="rgb(254,40,3)" rx="2" ry="2" />
<text  x="708.21" y="319.5" >c10::impl..</text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="194.0" y="325" width="0.3" height="15.0" fill="rgb(216,160,50)" rx="2" ry="2" />
<text  x="197.02" y="335.5" ></text>
</g>
<g >
<title>at::native::(anonymous namespace)::TORCH_LIBRARY_IMPL_init__quantized_QuantizedCPU (1 samples, 0.02%)</title><rect x="186.5" y="421" width="0.3" height="15.0" fill="rgb(243,27,5)" rx="2" ry="2" />
<text  x="189.51" y="431.5" ></text>
</g>
<g >
<title>c10::TensorOptions::dtype (5 samples, 0.12%)</title><rect x="568.4" y="341" width="1.4" height="15.0" fill="rgb(214,38,44)" rx="2" ry="2" />
<text  x="571.45" y="351.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="179.3" y="197" width="0.3" height="15.0" fill="rgb(251,172,10)" rx="2" ry="2" />
<text  x="182.29" y="207.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::deregisterSchema (1 samples, 0.02%)</title><rect x="256.8" y="357" width="0.3" height="15.0" fill="rgb(208,185,35)" rx="2" ry="2" />
<text  x="259.84" y="367.5" ></text>
</g>
<g >
<title>c10::UndefinedTensorImpl::singleton (1 samples, 0.02%)</title><rect x="580.7" y="389" width="0.3" height="15.0" fill="rgb(227,5,8)" rx="2" ry="2" />
<text  x="583.68" y="399.5" ></text>
</g>
<g >
<title>c10::impl::detail::with_scattered_tensor_options_impl_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor  (247 samples, 5.82%)</title><rect x="503.7" y="357" width="68.6" height="15.0" fill="rgb(253,14,39)" rx="2" ry="2" />
<text  x="506.68" y="367.5" >c10::im..</text>
</g>
<g >
<title>c10::VariableVersion::unique (8 samples, 0.19%)</title><rect x="655.7" y="373" width="2.3" height="15.0" fill="rgb(249,84,31)" rx="2" ry="2" />
<text  x="658.73" y="383.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::operator bool (1 samples, 0.02%)</title><rect x="624.3" y="373" width="0.3" height="15.0" fill="rgb(249,158,30)" rx="2" ry="2" />
<text  x="627.32" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__is_null_pointer&lt;char&gt; (1 samples, 0.02%)</title><rect x="161.5" y="357" width="0.3" height="15.0" fill="rgb(225,10,18)" rx="2" ry="2" />
<text  x="164.50" y="367.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="1181.7" y="309" width="0.2" height="15.0" fill="rgb(231,97,13)" rx="2" ry="2" />
<text  x="1184.66" y="319.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::operator* (5 samples, 0.12%)</title><rect x="872.0" y="389" width="1.4" height="15.0" fill="rgb(248,104,42)" rx="2" ry="2" />
<text  x="875.00" y="399.5" ></text>
</g>
<g >
<title>c10::TensorOptions::set_device (6 samples, 0.14%)</title><rect x="402.5" y="405" width="1.7" height="15.0" fill="rgb(235,31,52)" rx="2" ry="2" />
<text  x="405.50" y="415.5" ></text>
</g>
<g >
<title>c10::constexpr_storage_t&lt;bool&gt;::constexpr_storage_t&lt;bool&gt; (1 samples, 0.02%)</title><rect x="897.6" y="389" width="0.2" height="15.0" fill="rgb(211,34,23)" rx="2" ry="2" />
<text  x="900.57" y="399.5" ></text>
</g>
<g >
<title>torch::autograd::Edge::~Edge (2 samples, 0.05%)</title><rect x="479.5" y="389" width="0.6" height="15.0" fill="rgb(243,73,13)" rx="2" ry="2" />
<text  x="482.50" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;torch::autograd::AutogradMeta, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::_M_deleter (4 samples, 0.09%)</title><rect x="483.9" y="373" width="1.2" height="15.0" fill="rgb(214,133,6)" rx="2" ry="2" />
<text  x="486.95" y="383.5" ></text>
</g>
<g >
<title>torch::empty (317 samples, 7.47%)</title><rect x="489.8" y="421" width="88.1" height="15.0" fill="rgb(245,192,22)" rx="2" ry="2" />
<text  x="492.78" y="431.5" >torch::empty</text>
</g>
<g >
<title>torch::empty (311 samples, 7.33%)</title><rect x="289.6" y="437" width="86.5" height="15.0" fill="rgb(211,201,45)" rx="2" ry="2" />
<text  x="292.64" y="447.5" >torch::empty</text>
</g>
<g >
<title>caffe2::_c10_ops::schema_DistributeFpnProposals (1 samples, 0.02%)</title><rect x="194.6" y="437" width="0.3" height="15.0" fill="rgb(212,113,28)" rx="2" ry="2" />
<text  x="197.57" y="447.5" ></text>
</g>
<g >
<title>perf_output_begin (1 samples, 0.02%)</title><rect x="151.5" y="117" width="0.3" height="15.0" fill="rgb(211,212,37)" rx="2" ry="2" />
<text  x="154.49" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (1 samples, 0.02%)</title><rect x="162.6" y="357" width="0.3" height="15.0" fill="rgb(236,100,53)" rx="2" ry="2" />
<text  x="165.61" y="367.5" ></text>
</g>
<g >
<title>torch::autograd::Edge::Edge (8 samples, 0.19%)</title><rect x="991.2" y="373" width="2.3" height="15.0" fill="rgb(252,78,47)" rx="2" ry="2" />
<text  x="994.25" y="383.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="179.6" y="373" width="0.2" height="15.0" fill="rgb(217,226,32)" rx="2" ry="2" />
<text  x="182.56" y="383.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.02%)</title><rect x="182.1" y="373" width="0.2" height="15.0" fill="rgb(220,224,9)" rx="2" ry="2" />
<text  x="185.07" y="383.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="267.7" y="309" width="0.3" height="15.0" fill="rgb(241,138,27)" rx="2" ry="2" />
<text  x="270.68" y="319.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (1 samples, 0.02%)</title><rect x="180.4" y="293" width="0.3" height="15.0" fill="rgb(245,43,15)" rx="2" ry="2" />
<text  x="183.40" y="303.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;torch::autograd::Node,  (1 samples, 0.02%)</title><rect x="90.9" y="485" width="0.3" height="15.0" fill="rgb(218,41,9)" rx="2" ry="2" />
<text  x="93.89" y="495.5" ></text>
</g>
<g >
<title>c10::impl::detail::with_scattered_tensor_options_impl_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor  (289 samples, 6.81%)</title><rect x="708.0" y="293" width="80.3" height="15.0" fill="rgb(242,144,50)" rx="2" ry="2" />
<text  x="710.99" y="303.5" >c10::impl..</text>
</g>
<g >
<title>caffe2::detail::make_function_schema_for_c10 (1 samples, 0.02%)</title><rect x="194.9" y="421" width="0.2" height="15.0" fill="rgb(253,62,54)" rx="2" ry="2" />
<text  x="197.85" y="431.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.02%)</title><rect x="203.2" y="373" width="0.3" height="15.0" fill="rgb(245,88,43)" rx="2" ry="2" />
<text  x="206.19" y="383.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="143.4" y="181" width="0.3" height="15.0" fill="rgb(240,186,36)" rx="2" ry="2" />
<text  x="146.43" y="191.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::initialized (1 samples, 0.02%)</title><rect x="857.3" y="357" width="0.2" height="15.0" fill="rgb(211,209,50)" rx="2" ry="2" />
<text  x="860.27" y="367.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (5 samples, 0.12%)</title><rect x="817.5" y="357" width="1.4" height="15.0" fill="rgb(216,114,9)" rx="2" ry="2" />
<text  x="820.51" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;torch::autograd::AutogradMeta, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::_M_ptr (4 samples, 0.09%)</title><rect x="485.6" y="373" width="1.1" height="15.0" fill="rgb(205,196,29)" rx="2" ry="2" />
<text  x="488.61" y="383.5" ></text>
</g>
<g >
<title>c10::Dispatcher::cleanup (5 samples, 0.12%)</title><rect x="258.5" y="341" width="1.4" height="15.0" fill="rgb(247,127,12)" rx="2" ry="2" />
<text  x="261.51" y="351.5" ></text>
</g>
<g >
<title>torch::Library::impl_UNBOXED&lt;char const*, at::Tensor  (1 samples, 0.02%)</title><rect x="148.2" y="421" width="0.2" height="15.0" fill="rgb(229,114,18)" rx="2" ry="2" />
<text  x="151.15" y="431.5" ></text>
</g>
<g >
<title>[ld-2.31.so] (13 samples, 0.31%)</title><rect x="122.6" y="373" width="3.6" height="15.0" fill="rgb(239,49,42)" rx="2" ry="2" />
<text  x="125.58" y="383.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::intrusive_ptr (6 samples, 0.14%)</title><rect x="60.6" y="485" width="1.7" height="15.0" fill="rgb(247,67,12)" rx="2" ry="2" />
<text  x="63.59" y="495.5" ></text>
</g>
<g >
<title>onnx_torch::OpSet_PyTorch_ver1::ForEachSchema (1 samples, 0.02%)</title><rect x="187.6" y="421" width="0.3" height="15.0" fill="rgb(224,188,8)" rx="2" ry="2" />
<text  x="190.63" y="431.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (83 samples, 1.96%)</title><rect x="376.6" y="421" width="23.1" height="15.0" fill="rgb(250,207,41)" rx="2" ry="2" />
<text  x="379.65" y="431.5" >c..</text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseAliasAnnotation (1 samples, 0.02%)</title><rect x="248.2" y="389" width="0.3" height="15.0" fill="rgb(250,112,45)" rx="2" ry="2" />
<text  x="251.22" y="399.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;float&gt; (4 samples, 0.09%)</title><rect x="72.5" y="485" width="1.2" height="15.0" fill="rgb(231,75,4)" rx="2" ry="2" />
<text  x="75.54" y="495.5" ></text>
</g>
<g >
<title>__sbrk (1 samples, 0.02%)</title><rect x="193.2" y="325" width="0.3" height="15.0" fill="rgb(220,63,50)" rx="2" ry="2" />
<text  x="196.18" y="335.5" ></text>
</g>
<g >
<title>c10::memoryProfilingEnabled (4 samples, 0.09%)</title><rect x="266.8" y="341" width="1.2" height="15.0" fill="rgb(227,2,26)" rx="2" ry="2" />
<text  x="269.85" y="351.5" ></text>
</g>
<g >
<title>torch::schema (3 samples, 0.07%)</title><rect x="185.4" y="405" width="0.8" height="15.0" fill="rgb(215,213,40)" rx="2" ry="2" />
<text  x="188.40" y="415.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.02%)</title><rect x="195.4" y="325" width="0.3" height="15.0" fill="rgb(250,27,50)" rx="2" ry="2" />
<text  x="198.41" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::RegistrationHandleRAII, std::allocator&lt;c10::RegistrationHandleRAII&gt; &gt;::_M_realloc_insert&lt;c10::RegistrationHandleRAII&gt; (2 samples, 0.05%)</title><rect x="160.4" y="389" width="0.5" height="15.0" fill="rgb(206,132,2)" rx="2" ry="2" />
<text  x="163.38" y="399.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (1 samples, 0.02%)</title><rect x="153.7" y="293" width="0.3" height="15.0" fill="rgb(208,138,43)" rx="2" ry="2" />
<text  x="156.71" y="303.5" ></text>
</g>
<g >
<title>c10::Device::Device (9 samples, 0.21%)</title><rect x="865.0" y="357" width="2.6" height="15.0" fill="rgb(223,136,30)" rx="2" ry="2" />
<text  x="868.05" y="367.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;unsigned char&gt;@plt (1 samples, 0.02%)</title><rect x="370.8" y="325" width="0.3" height="15.0" fill="rgb(205,51,5)" rx="2" ry="2" />
<text  x="373.81" y="335.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;torch::autograd::AutogradMeta, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="933.4" y="357" width="0.3" height="15.0" fill="rgb(244,32,38)" rx="2" ry="2" />
<text  x="936.43" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;c10::AutogradMetaInterface, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="247.4" y="485" width="0.3" height="15.0" fill="rgb(246,59,41)" rx="2" ry="2" />
<text  x="250.39" y="495.5" ></text>
</g>
<g >
<title>__do_global_dtors_aux (38 samples, 0.90%)</title><rect x="252.9" y="421" width="10.6" height="15.0" fill="rgb(249,108,32)" rx="2" ry="2" />
<text  x="255.95" y="431.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.02%)</title><rect x="195.4" y="309" width="0.3" height="15.0" fill="rgb(225,21,30)" rx="2" ry="2" />
<text  x="198.41" y="319.5" ></text>
</g>
<g >
<title>c10::Dispatcher::findOrRegisterName_ (1 samples, 0.02%)</title><rect x="139.3" y="373" width="0.2" height="15.0" fill="rgb(239,70,2)" rx="2" ry="2" />
<text  x="142.26" y="383.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::~OperatorEntry (1 samples, 0.02%)</title><rect x="256.6" y="341" width="0.2" height="15.0" fill="rgb(230,217,15)" rx="2" ry="2" />
<text  x="259.56" y="351.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (1 samples, 0.02%)</title><rect x="155.1" y="389" width="0.3" height="15.0" fill="rgb(211,95,46)" rx="2" ry="2" />
<text  x="158.10" y="399.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_QuantizedCPUType.cpp (1 samples, 0.02%)</title><rect x="145.1" y="453" width="0.3" height="15.0" fill="rgb(243,148,32)" rx="2" ry="2" />
<text  x="148.10" y="463.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (1 samples, 0.02%)</title><rect x="218.5" y="389" width="0.3" height="15.0" fill="rgb(209,50,25)" rx="2" ry="2" />
<text  x="221.48" y="399.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;bool&gt;::constexpr_optional_base (4 samples, 0.09%)</title><rect x="1172.8" y="357" width="1.1" height="15.0" fill="rgb(224,50,52)" rx="2" ry="2" />
<text  x="1175.77" y="367.5" ></text>
</g>
<g >
<title>c10::impl::check_tensor_options_and_extract_memory_format (7 samples, 0.16%)</title><rect x="1159.1" y="325" width="2.0" height="15.0" fill="rgb(210,142,40)" rx="2" ry="2" />
<text  x="1162.14" y="335.5" ></text>
</g>
<g >
<title>search_binary_handler (11 samples, 0.26%)</title><rect x="1186.9" y="437" width="3.1" height="15.0" fill="rgb(215,100,25)" rx="2" ry="2" />
<text  x="1189.94" y="447.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseAliasAnnotation (3 samples, 0.07%)</title><rect x="220.7" y="373" width="0.8" height="15.0" fill="rgb(241,107,17)" rx="2" ry="2" />
<text  x="223.70" y="383.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="135.9" y="357" width="0.3" height="15.0" fill="rgb(231,27,36)" rx="2" ry="2" />
<text  x="138.92" y="367.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.02%)</title><rect x="175.7" y="293" width="0.3" height="15.0" fill="rgb(211,192,20)" rx="2" ry="2" />
<text  x="178.67" y="303.5" ></text>
</g>
<g >
<title>c10::TensorImpl::empty_tensor_restride (12 samples, 0.28%)</title><rect x="772.2" y="261" width="3.3" height="15.0" fill="rgb(238,63,51)" rx="2" ry="2" />
<text  x="775.20" y="271.5" ></text>
</g>
<g >
<title>c10::findSchemaDifferences[abi:cxx11] (1 samples, 0.02%)</title><rect x="173.2" y="341" width="0.2" height="15.0" fill="rgb(242,207,41)" rx="2" ry="2" />
<text  x="176.17" y="351.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.02%)</title><rect x="132.0" y="277" width="0.3" height="15.0" fill="rgb(252,91,50)" rx="2" ry="2" />
<text  x="135.03" y="287.5" ></text>
</g>
<g >
<title>torch::(anonymous namespace)::debugString (1 samples, 0.02%)</title><rect x="186.2" y="421" width="0.3" height="15.0" fill="rgb(245,95,41)" rx="2" ry="2" />
<text  x="189.24" y="431.5" ></text>
</g>
<g >
<title>c10::profiledCPUMemoryReporter (1 samples, 0.02%)</title><rect x="268.0" y="357" width="0.2" height="15.0" fill="rgb(231,223,36)" rx="2" ry="2" />
<text  x="270.96" y="367.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="563.4" y="261" width="0.3" height="15.0" fill="rgb(221,22,13)" rx="2" ry="2" />
<text  x="566.45" y="271.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;c10::OperatorKernel,  (1 samples, 0.02%)</title><rect x="145.4" y="421" width="0.3" height="15.0" fill="rgb(228,68,0)" rx="2" ry="2" />
<text  x="148.37" y="431.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;signed char&gt; (1 samples, 0.02%)</title><rect x="989.6" y="325" width="0.3" height="15.0" fill="rgb(231,228,28)" rx="2" ry="2" />
<text  x="992.58" y="335.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (3 samples, 0.07%)</title><rect x="165.7" y="277" width="0.8" height="15.0" fill="rgb(226,57,16)" rx="2" ry="2" />
<text  x="168.67" y="287.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.02%)</title><rect x="218.2" y="453" width="0.3" height="15.0" fill="rgb(222,137,5)" rx="2" ry="2" />
<text  x="221.20" y="463.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;float&gt;@plt (1 samples, 0.02%)</title><rect x="1151.1" y="261" width="0.3" height="15.0" fill="rgb(248,86,17)" rx="2" ry="2" />
<text  x="1154.08" y="271.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (1 samples, 0.02%)</title><rect x="186.8" y="389" width="0.3" height="15.0" fill="rgb(233,8,51)" rx="2" ry="2" />
<text  x="189.79" y="399.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::(anonymous namespace)::createArgumentVector (1 samples, 0.02%)</title><rect x="132.6" y="389" width="0.3" height="15.0" fill="rgb(228,31,23)" rx="2" ry="2" />
<text  x="135.59" y="399.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.02%)</title><rect x="160.4" y="213" width="0.3" height="15.0" fill="rgb(242,8,49)" rx="2" ry="2" />
<text  x="163.38" y="223.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;torch::autograd::Node,  (1 samples, 0.02%)</title><rect x="833.1" y="325" width="0.3" height="15.0" fill="rgb(217,8,46)" rx="2" ry="2" />
<text  x="836.08" y="335.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::expect (1 samples, 0.02%)</title><rect x="248.8" y="373" width="0.3" height="15.0" fill="rgb(211,119,30)" rx="2" ry="2" />
<text  x="251.78" y="383.5" ></text>
</g>
<g >
<title>c10::Registry&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unique_ptr&lt;caffe2::OperatorBase, std::default_delete&lt;caffe2::OperatorBase&gt; &gt;, caffe2::OperatorDef const&amp;, caffe2::Workspace*&gt;::Register (2 samples, 0.05%)</title><rect x="191.2" y="421" width="0.6" height="15.0" fill="rgb(227,123,36)" rx="2" ry="2" />
<text  x="194.24" y="431.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="188.5" y="421" width="0.2" height="15.0" fill="rgb(244,117,16)" rx="2" ry="2" />
<text  x="191.46" y="431.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="277.1" y="389" width="0.3" height="15.0" fill="rgb(214,2,48)" rx="2" ry="2" />
<text  x="280.13" y="399.5" ></text>
</g>
<g >
<title>c10::memoryProfilingEnabled (7 samples, 0.16%)</title><rect x="1109.1" y="229" width="2.0" height="15.0" fill="rgb(224,200,41)" rx="2" ry="2" />
<text  x="1112.11" y="239.5" ></text>
</g>
<g >
<title>torch::empty (503 samples, 11.85%)</title><rect x="669.1" y="405" width="139.8" height="15.0" fill="rgb(238,217,31)" rx="2" ry="2" />
<text  x="672.08" y="415.5" >torch::empty</text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::retain_ (2 samples, 0.05%)</title><rect x="661.8" y="389" width="0.6" height="15.0" fill="rgb(209,111,15)" rx="2" ry="2" />
<text  x="664.85" y="399.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, c10::AutogradMetaInterface*, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::_Tuple_impl&lt;c10::AutogradMetaInterface*&amp;, std::default_delete&lt;torch::autograd::AutogradMeta&gt;, void&gt; (14 samples, 0.33%)</title><rect x="1001.5" y="341" width="3.9" height="15.0" fill="rgb(231,198,36)" rx="2" ry="2" />
<text  x="1004.53" y="351.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;std::tuple&lt;at::Tensor, at::Tensor&gt;  (1 samples, 0.02%)</title><rect x="134.8" y="421" width="0.3" height="15.0" fill="rgb(219,23,6)" rx="2" ry="2" />
<text  x="137.81" y="431.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (3 samples, 0.07%)</title><rect x="20.6" y="469" width="0.8" height="15.0" fill="rgb(252,97,5)" rx="2" ry="2" />
<text  x="23.56" y="479.5" ></text>
</g>
<g >
<title>c10::TensorOptions::dtype (23 samples, 0.54%)</title><rect x="623.2" y="405" width="6.4" height="15.0" fill="rgb(246,218,31)" rx="2" ry="2" />
<text  x="626.21" y="415.5" ></text>
</g>
<g >
<title>std::forward&lt;std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (1 samples, 0.02%)</title><rect x="1005.1" y="325" width="0.3" height="15.0" fill="rgb(254,228,21)" rx="2" ry="2" />
<text  x="1008.15" y="335.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::use_count (1 samples, 0.02%)</title><rect x="63.1" y="485" width="0.3" height="15.0" fill="rgb(207,111,27)" rx="2" ry="2" />
<text  x="66.09" y="495.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::computeDispatchTableEntry (1 samples, 0.02%)</title><rect x="190.4" y="325" width="0.3" height="15.0" fill="rgb(234,180,11)" rx="2" ry="2" />
<text  x="193.41" y="335.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;*, std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt; (1 samples, 0.02%)</title><rect x="832.5" y="325" width="0.3" height="15.0" fill="rgb(242,184,50)" rx="2" ry="2" />
<text  x="835.53" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::vector (1 samples, 0.02%)</title><rect x="198.7" y="389" width="0.3" height="15.0" fill="rgb(244,8,44)" rx="2" ry="2" />
<text  x="201.74" y="399.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::optional (7 samples, 0.16%)</title><rect x="1171.9" y="373" width="2.0" height="15.0" fill="rgb(247,79,9)" rx="2" ry="2" />
<text  x="1174.93" y="383.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;long&gt; (5 samples, 0.12%)</title><rect x="472.5" y="325" width="1.4" height="15.0" fill="rgb(226,51,15)" rx="2" ry="2" />
<text  x="475.55" y="335.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="202.9" y="389" width="0.3" height="15.0" fill="rgb(250,3,33)" rx="2" ry="2" />
<text  x="205.91" y="399.5" ></text>
</g>
<g >
<title>c10::constexpr_forward&lt;bool&gt; (1 samples, 0.02%)</title><rect x="897.6" y="373" width="0.2" height="15.0" fill="rgb(233,2,25)" rx="2" ry="2" />
<text  x="900.57" y="383.5" ></text>
</g>
<g >
<title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (201 samples, 4.73%)</title><rect x="315.2" y="373" width="55.9" height="15.0" fill="rgb(210,85,2)" rx="2" ry="2" />
<text  x="318.22" y="383.5" >c10::..</text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; (1 samples, 0.02%)</title><rect x="158.2" y="325" width="0.2" height="15.0" fill="rgb(213,169,5)" rx="2" ry="2" />
<text  x="161.16" y="335.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (1 samples, 0.02%)</title><rect x="184.0" y="373" width="0.3" height="15.0" fill="rgb(224,135,17)" rx="2" ry="2" />
<text  x="187.01" y="383.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::optional (13 samples, 0.31%)</title><rect x="626.0" y="389" width="3.6" height="15.0" fill="rgb(215,123,27)" rx="2" ry="2" />
<text  x="628.99" y="399.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.02%)</title><rect x="785.5" y="245" width="0.3" height="15.0" fill="rgb(247,71,39)" rx="2" ry="2" />
<text  x="788.55" y="255.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.02%)</title><rect x="157.6" y="389" width="0.3" height="15.0" fill="rgb(222,70,11)" rx="2" ry="2" />
<text  x="160.60" y="399.5" ></text>
</g>
<g >
<title>c10::VariableVersion::VersionCounter::~VersionCounter (12 samples, 0.28%)</title><rect x="592.1" y="341" width="3.3" height="15.0" fill="rgb(226,75,1)" rx="2" ry="2" />
<text  x="595.08" y="351.5" ></text>
</g>
<g >
<title>micro_requires_grad_true (1,321 samples, 31.12%)</title><rect x="808.9" y="437" width="367.2" height="15.0" fill="rgb(244,45,35)" rx="2" ry="2" />
<text  x="811.90" y="447.5" >micro_requires_grad_true</text>
</g>
<g >
<title>c10::TensorOptions::computeDispatchKey (6 samples, 0.14%)</title><rect x="566.8" y="341" width="1.6" height="15.0" fill="rgb(242,71,34)" rx="2" ry="2" />
<text  x="569.78" y="351.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::intrusive_ptr (1 samples, 0.02%)</title><rect x="434.2" y="421" width="0.3" height="15.0" fill="rgb(226,128,34)" rx="2" ry="2" />
<text  x="437.19" y="431.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_CUDAHooksInterface.cpp (1 samples, 0.02%)</title><rect x="138.1" y="453" width="0.3" height="15.0" fill="rgb(237,44,48)" rx="2" ry="2" />
<text  x="141.15" y="463.5" ></text>
</g>
<g >
<title>show_cpuinfo (1 samples, 0.02%)</title><rect x="146.5" y="165" width="0.3" height="15.0" fill="rgb(250,42,2)" rx="2" ry="2" />
<text  x="149.49" y="175.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.02%)</title><rect x="129.8" y="245" width="0.3" height="15.0" fill="rgb(237,40,12)" rx="2" ry="2" />
<text  x="132.81" y="255.5" ></text>
</g>
<g >
<title>_nv032779rm (1 samples, 0.02%)</title><rect x="126.2" y="421" width="0.3" height="15.0" fill="rgb(210,219,29)" rx="2" ry="2" />
<text  x="129.19" y="431.5" ></text>
</g>
<g >
<title>c10::TensorImpl::~TensorImpl (1 samples, 0.02%)</title><rect x="585.4" y="357" width="0.3" height="15.0" fill="rgb(231,84,3)" rx="2" ry="2" />
<text  x="588.41" y="367.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="193.5" y="341" width="0.2" height="15.0" fill="rgb(244,132,37)" rx="2" ry="2" />
<text  x="196.46" y="351.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseList (1 samples, 0.02%)</title><rect x="248.2" y="373" width="0.3" height="15.0" fill="rgb(226,98,25)" rx="2" ry="2" />
<text  x="251.22" y="383.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, torch::autograd::AutogradMeta*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="1009.0" y="293" width="0.3" height="15.0" fill="rgb(238,3,20)" rx="2" ry="2" />
<text  x="1012.04" y="303.5" ></text>
</g>
<g >
<title>torch::autograd::Edge::Edge (4 samples, 0.09%)</title><rect x="478.4" y="389" width="1.1" height="15.0" fill="rgb(239,117,25)" rx="2" ry="2" />
<text  x="481.39" y="399.5" ></text>
</g>
<g >
<title>torch::Library::impl_UNBOXED&lt;char const*, at::Tensor&amp;  (1 samples, 0.02%)</title><rect x="183.2" y="421" width="0.3" height="15.0" fill="rgb(226,83,5)" rx="2" ry="2" />
<text  x="186.18" y="431.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::(anonymous namespace)::createArgumentVector (1 samples, 0.02%)</title><rect x="156.2" y="389" width="0.3" height="15.0" fill="rgb(237,229,24)" rx="2" ry="2" />
<text  x="159.21" y="399.5" ></text>
</g>
<g >
<title>c10::VariableVersion::unique (1 samples, 0.02%)</title><rect x="919.3" y="389" width="0.2" height="15.0" fill="rgb(217,89,31)" rx="2" ry="2" />
<text  x="922.25" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt;::~new_allocator (1 samples, 0.02%)</title><rect x="840.0" y="261" width="0.3" height="15.0" fill="rgb(253,148,49)" rx="2" ry="2" />
<text  x="843.03" y="271.5" ></text>
</g>
<g >
<title>[libc10.so] (2 samples, 0.05%)</title><rect x="365.0" y="261" width="0.5" height="15.0" fill="rgb(208,228,35)" rx="2" ry="2" />
<text  x="367.97" y="271.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseDeclaration (1 samples, 0.02%)</title><rect x="186.0" y="357" width="0.2" height="15.0" fill="rgb(217,81,47)" rx="2" ry="2" />
<text  x="188.96" y="367.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.02%)</title><rect x="184.8" y="341" width="0.3" height="15.0" fill="rgb(243,172,49)" rx="2" ry="2" />
<text  x="187.85" y="351.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (11 samples, 0.26%)</title><rect x="582.3" y="373" width="3.1" height="15.0" fill="rgb(240,208,24)" rx="2" ry="2" />
<text  x="585.35" y="383.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_CatchAll (1 samples, 0.02%)</title><rect x="199.9" y="437" width="0.2" height="15.0" fill="rgb(251,9,17)" rx="2" ry="2" />
<text  x="202.86" y="447.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="151.5" y="357" width="0.3" height="15.0" fill="rgb(212,193,22)" rx="2" ry="2" />
<text  x="154.49" y="367.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (7 samples, 0.16%)</title><rect x="641.8" y="373" width="2.0" height="15.0" fill="rgb(230,175,7)" rx="2" ry="2" />
<text  x="644.84" y="383.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.02%)</title><rect x="193.5" y="213" width="0.2" height="15.0" fill="rgb(207,102,50)" rx="2" ry="2" />
<text  x="196.46" y="223.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;torch::autograd::Node,  (1 samples, 0.02%)</title><rect x="15.3" y="485" width="0.3" height="15.0" fill="rgb(235,122,44)" rx="2" ry="2" />
<text  x="18.28" y="495.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.02%)</title><rect x="202.6" y="309" width="0.3" height="15.0" fill="rgb(250,53,25)" rx="2" ry="2" />
<text  x="205.64" y="319.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;bool&gt;::constexpr_optional_base (1 samples, 0.02%)</title><rect x="1171.4" y="373" width="0.3" height="15.0" fill="rgb(211,86,42)" rx="2" ry="2" />
<text  x="1174.38" y="383.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.02%)</title><rect x="379.4" y="389" width="0.3" height="15.0" fill="rgb(248,77,17)" rx="2" ry="2" />
<text  x="382.43" y="399.5" ></text>
</g>
<g >
<title>__static_initialization_and_destruction_0 (21 samples, 0.49%)</title><rect x="217.9" y="485" width="5.9" height="15.0" fill="rgb(252,186,46)" rx="2" ry="2" />
<text  x="220.92" y="495.5" ></text>
</g>
<g >
<title>c10::either&lt;torch::jit::Operator::C10Operator, torch::jit::Operator::JitOnlyOperator&gt;::fold&lt;c10::FunctionSchema const&amp;, torch::jit::Operator::schema (7 samples, 0.16%)</title><rect x="221.5" y="453" width="2.0" height="15.0" fill="rgb(238,85,38)" rx="2" ry="2" />
<text  x="224.54" y="463.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;c10::Device&gt;::constexpr_optional_base&lt;c10::DeviceType const&amp;, int&gt; (13 samples, 0.31%)</title><rect x="863.9" y="389" width="3.7" height="15.0" fill="rgb(208,144,6)" rx="2" ry="2" />
<text  x="866.94" y="399.5" ></text>
</g>
<g >
<title>x86_pmu_enable (10 samples, 0.24%)</title><rect x="1186.9" y="341" width="2.8" height="15.0" fill="rgb(224,52,48)" rx="2" ry="2" />
<text  x="1189.94" y="351.5" ></text>
</g>
<g >
<title>at::TORCH_LIBRARY_IMPL_init_aten_CPU (16 samples, 0.38%)</title><rect x="133.7" y="437" width="4.4" height="15.0" fill="rgb(238,151,42)" rx="2" ry="2" />
<text  x="136.70" y="447.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="125.4" y="293" width="0.2" height="15.0" fill="rgb(227,175,50)" rx="2" ry="2" />
<text  x="128.36" y="303.5" ></text>
</g>
<g >
<title>[libtorch_cpu.so] (1 samples, 0.02%)</title><rect x="189.0" y="437" width="0.3" height="15.0" fill="rgb(227,197,25)" rx="2" ry="2" />
<text  x="192.02" y="447.5" ></text>
</g>
<g >
<title>c10::Dispatcher::callWithDispatchKey&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (216 samples, 5.09%)</title><rect x="311.0" y="389" width="60.1" height="15.0" fill="rgb(245,122,15)" rx="2" ry="2" />
<text  x="314.05" y="399.5" >c10::D..</text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseType (1 samples, 0.02%)</title><rect x="225.7" y="389" width="0.3" height="15.0" fill="rgb(226,95,48)" rx="2" ry="2" />
<text  x="228.71" y="399.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.02%)</title><rect x="145.1" y="405" width="0.3" height="15.0" fill="rgb(238,60,52)" rx="2" ry="2" />
<text  x="148.10" y="415.5" ></text>
</g>
<g >
<title>at::native::empty_cpu (146 samples, 3.44%)</title><rect x="524.5" y="293" width="40.6" height="15.0" fill="rgb(232,178,48)" rx="2" ry="2" />
<text  x="527.53" y="303.5" >at:..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="151.5" y="245" width="0.3" height="15.0" fill="rgb(234,4,53)" rx="2" ry="2" />
<text  x="154.49" y="255.5" ></text>
</g>
<g >
<title>posix_memalign (1 samples, 0.02%)</title><rect x="83.9" y="485" width="0.3" height="15.0" fill="rgb(221,59,27)" rx="2" ry="2" />
<text  x="86.94" y="495.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (6 samples, 0.14%)</title><rect x="825.0" y="341" width="1.7" height="15.0" fill="rgb(208,43,41)" rx="2" ry="2" />
<text  x="828.02" y="351.5" ></text>
</g>
<g >
<title>torch::jit::registerOperator (8 samples, 0.19%)</title><rect x="221.5" y="469" width="2.3" height="15.0" fill="rgb(244,155,33)" rx="2" ry="2" />
<text  x="224.54" y="479.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, c10::AutogradMetaInterface*, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt; (3 samples, 0.07%)</title><rect x="93.7" y="485" width="0.8" height="15.0" fill="rgb(226,221,41)" rx="2" ry="2" />
<text  x="96.67" y="495.5" ></text>
</g>
<g >
<title>c10::DefaultCPUAllocator::allocate (92 samples, 2.17%)</title><rect x="1107.4" y="261" width="25.6" height="15.0" fill="rgb(209,118,21)" rx="2" ry="2" />
<text  x="1110.44" y="271.5" >c..</text>
</g>
<g >
<title>__static_initialization_and_destruction_0 (40 samples, 0.94%)</title><rect x="189.0" y="453" width="11.1" height="15.0" fill="rgb(212,214,26)" rx="2" ry="2" />
<text  x="192.02" y="463.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;c10::AutogradMetaInterface&gt;, true&gt;::_Head_base&lt;std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (1 samples, 0.02%)</title><rect x="481.7" y="341" width="0.3" height="15.0" fill="rgb(240,16,32)" rx="2" ry="2" />
<text  x="484.72" y="351.5" ></text>
</g>
<g >
<title>do_page_fault (2 samples, 0.05%)</title><rect x="125.6" y="341" width="0.6" height="15.0" fill="rgb(215,31,9)" rx="2" ry="2" />
<text  x="128.64" y="351.5" ></text>
</g>
<g >
<title>c10::TensorImpl::~TensorImpl (10 samples, 0.24%)</title><rect x="268.2" y="389" width="2.8" height="15.0" fill="rgb(238,90,54)" rx="2" ry="2" />
<text  x="271.24" y="399.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.02%)</title><rect x="266.0" y="373" width="0.3" height="15.0" fill="rgb(239,143,0)" rx="2" ry="2" />
<text  x="269.01" y="383.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="1179.4" y="213" width="0.3" height="15.0" fill="rgb(232,149,41)" rx="2" ry="2" />
<text  x="1182.44" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;, std::allocator&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt; &gt;::vector (1 samples, 0.02%)</title><rect x="453.6" y="389" width="0.3" height="15.0" fill="rgb(227,168,1)" rx="2" ry="2" />
<text  x="456.65" y="399.5" ></text>
</g>
<g >
<title>c10::Device::validate (8 samples, 0.19%)</title><rect x="865.3" y="341" width="2.3" height="15.0" fill="rgb(244,185,46)" rx="2" ry="2" />
<text  x="868.33" y="351.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_TraceType_1.cpp (7 samples, 0.16%)</title><rect x="148.7" y="453" width="2.0" height="15.0" fill="rgb(214,143,15)" rx="2" ry="2" />
<text  x="151.71" y="463.5" ></text>
</g>
<g >
<title>at::hasCallbacks (6 samples, 0.14%)</title><rect x="1059.9" y="293" width="1.7" height="15.0" fill="rgb(220,27,52)" rx="2" ry="2" />
<text  x="1062.91" y="303.5" ></text>
</g>
<g >
<title>__do_page_fault (2 samples, 0.05%)</title><rect x="160.4" y="341" width="0.5" height="15.0" fill="rgb(237,106,0)" rx="2" ry="2" />
<text  x="163.38" y="351.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::intrusive_ptr (4 samples, 0.09%)</title><rect x="299.9" y="405" width="1.1" height="15.0" fill="rgb(210,228,0)" rx="2" ry="2" />
<text  x="302.93" y="415.5" ></text>
</g>
<g >
<title>c10::TensorImpl::set_sizes_contiguous (21 samples, 0.49%)</title><rect x="1137.5" y="261" width="5.8" height="15.0" fill="rgb(214,212,8)" rx="2" ry="2" />
<text  x="1140.46" y="271.5" ></text>
</g>
<g >
<title>c10::constexpr_forward&lt;c10::ScalarType&gt; (3 samples, 0.07%)</title><rect x="470.6" y="277" width="0.8" height="15.0" fill="rgb(244,148,39)" rx="2" ry="2" />
<text  x="473.60" y="287.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_qmul.cpp (1 samples, 0.02%)</title><rect x="187.1" y="453" width="0.2" height="15.0" fill="rgb(229,52,19)" rx="2" ry="2" />
<text  x="190.07" y="463.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_tmpxft_0000e3f7_00000000_6_half_float_ops.compute_70.cudafe1.cpp (1 samples, 0.02%)</title><rect x="188.2" y="453" width="0.3" height="15.0" fill="rgb(221,54,37)" rx="2" ry="2" />
<text  x="191.18" y="463.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="157.3" y="373" width="0.3" height="15.0" fill="rgb(216,2,39)" rx="2" ry="2" />
<text  x="160.33" y="383.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_VariableType_3.cpp (5 samples, 0.12%)</title><rect x="180.7" y="453" width="1.4" height="15.0" fill="rgb(209,67,44)" rx="2" ry="2" />
<text  x="183.68" y="463.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::TypeMeta (2 samples, 0.05%)</title><rect x="986.0" y="293" width="0.5" height="15.0" fill="rgb(213,63,52)" rx="2" ry="2" />
<text  x="988.97" y="303.5" ></text>
</g>
<g >
<title>std::make_unique&lt;torch::autograd::AutogradMeta, c10::TensorImpl*, bool&amp;&gt; (3 samples, 0.07%)</title><rect x="94.8" y="485" width="0.8" height="15.0" fill="rgb(252,185,43)" rx="2" ry="2" />
<text  x="97.78" y="495.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.02%)</title><rect x="192.9" y="373" width="0.3" height="15.0" fill="rgb(224,73,33)" rx="2" ry="2" />
<text  x="195.91" y="383.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.02%)</title><rect x="178.7" y="389" width="0.3" height="15.0" fill="rgb(223,145,35)" rx="2" ry="2" />
<text  x="181.73" y="399.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="251.8" y="341" width="0.3" height="15.0" fill="rgb(220,86,21)" rx="2" ry="2" />
<text  x="254.84" y="351.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.02%)</title><rect x="190.7" y="389" width="0.3" height="15.0" fill="rgb(245,196,26)" rx="2" ry="2" />
<text  x="193.68" y="399.5" ></text>
</g>
<g >
<title>cfree (2 samples, 0.05%)</title><rect x="82.6" y="485" width="0.5" height="15.0" fill="rgb(237,78,42)" rx="2" ry="2" />
<text  x="85.55" y="495.5" ></text>
</g>
<g >
<title>c10::TensorImpl::unique_version (8 samples, 0.19%)</title><rect x="917.0" y="389" width="2.3" height="15.0" fill="rgb(237,214,6)" rx="2" ry="2" />
<text  x="920.03" y="399.5" ></text>
</g>
<g >
<title>at::TORCH_LIBRARY_IMPL_init___Batched (1 samples, 0.02%)</title><rect x="132.9" y="421" width="0.2" height="15.0" fill="rgb(246,48,20)" rx="2" ry="2" />
<text  x="135.86" y="431.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.02%)</title><rect x="133.4" y="101" width="0.3" height="15.0" fill="rgb(245,158,39)" rx="2" ry="2" />
<text  x="136.42" y="111.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.02%)</title><rect x="135.9" y="213" width="0.3" height="15.0" fill="rgb(212,154,37)" rx="2" ry="2" />
<text  x="138.92" y="223.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="180.7" y="325" width="0.3" height="15.0" fill="rgb(239,216,45)" rx="2" ry="2" />
<text  x="183.68" y="335.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::ScalarType&gt;::initialized (3 samples, 0.07%)</title><rect x="966.5" y="309" width="0.8" height="15.0" fill="rgb(246,170,54)" rx="2" ry="2" />
<text  x="969.51" y="319.5" ></text>
</g>
<g >
<title>__do_page_fault (2 samples, 0.05%)</title><rect x="136.2" y="293" width="0.6" height="15.0" fill="rgb(213,219,1)" rx="2" ry="2" />
<text  x="139.20" y="303.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (9 samples, 0.21%)</title><rect x="431.4" y="405" width="2.5" height="15.0" fill="rgb(223,105,8)" rx="2" ry="2" />
<text  x="434.41" y="415.5" ></text>
</g>
<g >
<title>c10::TensorOptions::dtype (27 samples, 0.64%)</title><rect x="886.2" y="405" width="7.5" height="15.0" fill="rgb(236,224,32)" rx="2" ry="2" />
<text  x="889.17" y="415.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::initialized (2 samples, 0.05%)</title><rect x="805.3" y="357" width="0.5" height="15.0" fill="rgb(232,63,40)" rx="2" ry="2" />
<text  x="808.28" y="367.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (1 samples, 0.02%)</title><rect x="142.3" y="389" width="0.3" height="15.0" fill="rgb(216,222,37)" rx="2" ry="2" />
<text  x="145.32" y="399.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;c10::Device&gt;::constexpr_optional_base (2 samples, 0.05%)</title><rect x="52.5" y="485" width="0.6" height="15.0" fill="rgb(237,126,23)" rx="2" ry="2" />
<text  x="55.53" y="495.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="177.1" y="309" width="0.2" height="15.0" fill="rgb(220,171,1)" rx="2" ry="2" />
<text  x="180.06" y="319.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseDeclaration (1 samples, 0.02%)</title><rect x="175.7" y="373" width="0.3" height="15.0" fill="rgb(210,80,13)" rx="2" ry="2" />
<text  x="178.67" y="383.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;*&gt; (2 samples, 0.05%)</title><rect x="836.4" y="293" width="0.6" height="15.0" fill="rgb(209,83,2)" rx="2" ry="2" />
<text  x="839.42" y="303.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::use_count (8 samples, 0.19%)</title><rect x="923.1" y="389" width="2.3" height="15.0" fill="rgb(236,229,16)" rx="2" ry="2" />
<text  x="926.14" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;, std::allocator&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (3 samples, 0.07%)</title><rect x="957.3" y="309" width="0.9" height="15.0" fill="rgb(228,124,20)" rx="2" ry="2" />
<text  x="960.34" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;c10::AutogradMetaInterface, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::~unique_ptr (3 samples, 0.07%)</title><rect x="487.6" y="405" width="0.8" height="15.0" fill="rgb(230,53,10)" rx="2" ry="2" />
<text  x="490.56" y="415.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="187.6" y="229" width="0.3" height="15.0" fill="rgb(213,169,17)" rx="2" ry="2" />
<text  x="190.63" y="239.5" ></text>
</g>
<g >
<title>__run_timers.part.0 (1 samples, 0.02%)</title><rect x="1132.7" y="85" width="0.3" height="15.0" fill="rgb(214,63,19)" rx="2" ry="2" />
<text  x="1135.74" y="95.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (1 samples, 0.02%)</title><rect x="150.9" y="357" width="0.3" height="15.0" fill="rgb(243,2,14)" rx="2" ry="2" />
<text  x="153.93" y="367.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseDeclaration (1 samples, 0.02%)</title><rect x="223.2" y="405" width="0.3" height="15.0" fill="rgb(241,87,26)" rx="2" ry="2" />
<text  x="226.21" y="415.5" ></text>
</g>
<g >
<title>at::empty (232 samples, 5.47%)</title><rect x="307.7" y="405" width="64.5" height="15.0" fill="rgb(211,60,39)" rx="2" ry="2" />
<text  x="310.71" y="415.5" >at::empty</text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (1 samples, 0.02%)</title><rect x="150.9" y="373" width="0.3" height="15.0" fill="rgb(253,153,14)" rx="2" ry="2" />
<text  x="153.93" y="383.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;torch::autograd::Node&gt;::operator= (2 samples, 0.05%)</title><rect x="98.7" y="485" width="0.5" height="15.0" fill="rgb(225,118,36)" rx="2" ry="2" />
<text  x="101.67" y="495.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="158.4" y="325" width="0.3" height="15.0" fill="rgb(249,149,51)" rx="2" ry="2" />
<text  x="161.44" y="335.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (2 samples, 0.05%)</title><rect x="182.3" y="389" width="0.6" height="15.0" fill="rgb(225,0,31)" rx="2" ry="2" />
<text  x="185.34" y="399.5" ></text>
</g>
<g >
<title>c10::constexpr_storage_t&lt;bool&gt;::constexpr_storage_t (1 samples, 0.02%)</title><rect x="54.8" y="485" width="0.2" height="15.0" fill="rgb(237,85,44)" rx="2" ry="2" />
<text  x="57.75" y="495.5" ></text>
</g>
<g >
<title>c10::Dispatcher::callWithDispatchKey&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (161 samples, 3.79%)</title><rect x="322.4" y="341" width="44.8" height="15.0" fill="rgb(212,82,44)" rx="2" ry="2" />
<text  x="325.44" y="351.5" >c10:..</text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor  (7 samples, 0.16%)</title><rect x="172.6" y="421" width="2.0" height="15.0" fill="rgb(247,224,26)" rx="2" ry="2" />
<text  x="175.61" y="431.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::optional (8 samples, 0.19%)</title><rect x="275.2" y="405" width="2.2" height="15.0" fill="rgb(217,154,35)" rx="2" ry="2" />
<text  x="278.19" y="415.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="183.2" y="213" width="0.3" height="15.0" fill="rgb(246,131,54)" rx="2" ry="2" />
<text  x="186.18" y="223.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.05%)</title><rect x="127.9" y="261" width="0.5" height="15.0" fill="rgb(217,37,7)" rx="2" ry="2" />
<text  x="130.86" y="271.5" ></text>
</g>
<g >
<title>c10::TensorOptions::device&lt;c10::DeviceType const&amp;, int&gt; (1 samples, 0.02%)</title><rect x="40.9" y="485" width="0.2" height="15.0" fill="rgb(237,229,3)" rx="2" ry="2" />
<text  x="43.86" y="495.5" ></text>
</g>
<g >
<title>caffe2::operator== (5 samples, 0.12%)</title><rect x="476.2" y="325" width="1.4" height="15.0" fill="rgb(248,58,29)" rx="2" ry="2" />
<text  x="479.16" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;torch::jit::Token, std::allocator&lt;torch::jit::Token&gt; &gt;::_M_erase (1 samples, 0.02%)</title><rect x="175.7" y="309" width="0.3" height="15.0" fill="rgb(230,39,53)" rx="2" ry="2" />
<text  x="178.67" y="319.5" ></text>
</g>
<g >
<title>c10::findSchemaDifferences[abi:cxx11] (1 samples, 0.02%)</title><rect x="146.8" y="357" width="0.2" height="15.0" fill="rgb(252,106,17)" rx="2" ry="2" />
<text  x="149.76" y="367.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="179.3" y="373" width="0.3" height="15.0" fill="rgb(209,109,21)" rx="2" ry="2" />
<text  x="182.29" y="383.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (1 samples, 0.02%)</title><rect x="487.3" y="341" width="0.3" height="15.0" fill="rgb(235,116,51)" rx="2" ry="2" />
<text  x="490.28" y="351.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (1 samples, 0.02%)</title><rect x="190.4" y="389" width="0.3" height="15.0" fill="rgb(221,93,18)" rx="2" ry="2" />
<text  x="193.41" y="399.5" ></text>
</g>
<g >
<title>do_anonymous_page (2 samples, 0.05%)</title><rect x="162.9" y="213" width="0.5" height="15.0" fill="rgb(240,107,21)" rx="2" ry="2" />
<text  x="165.89" y="223.5" ></text>
</g>
<g >
<title>c10::TensorOptions::device (26 samples, 0.61%)</title><rect x="601.8" y="405" width="7.2" height="15.0" fill="rgb(234,185,45)" rx="2" ry="2" />
<text  x="604.81" y="415.5" ></text>
</g>
<g >
<title>c10::typeMetaToScalarType (2 samples, 0.05%)</title><rect x="13.1" y="485" width="0.5" height="15.0" fill="rgb(238,110,12)" rx="2" ry="2" />
<text  x="16.06" y="495.5" ></text>
</g>
<g >
<title>torch::Library::_impl (4 samples, 0.09%)</title><rect x="156.8" y="421" width="1.1" height="15.0" fill="rgb(248,178,15)" rx="2" ry="2" />
<text  x="159.77" y="431.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::operator-- (1 samples, 0.02%)</title><rect x="292.7" y="373" width="0.3" height="15.0" fill="rgb(212,161,14)" rx="2" ry="2" />
<text  x="295.70" y="383.5" ></text>
</g>
<g >
<title>page_counter_try_charge (1 samples, 0.02%)</title><rect x="1179.4" y="165" width="0.3" height="15.0" fill="rgb(218,59,19)" rx="2" ry="2" />
<text  x="1182.44" y="175.5" ></text>
</g>
<g >
<title>c10::constexpr_forward&lt;caffe2::TypeMeta&gt; (2 samples, 0.05%)</title><rect x="893.7" y="357" width="0.5" height="15.0" fill="rgb(240,112,19)" rx="2" ry="2" />
<text  x="896.68" y="367.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;torch::autograd::Node&gt;::shared_ptr (8 samples, 0.19%)</title><rect x="991.2" y="357" width="2.3" height="15.0" fill="rgb(249,130,24)" rx="2" ry="2" />
<text  x="994.25" y="367.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="135.9" y="293" width="0.3" height="15.0" fill="rgb(205,154,29)" rx="2" ry="2" />
<text  x="138.92" y="303.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::expect (4 samples, 0.09%)</title><rect x="249.9" y="405" width="1.1" height="15.0" fill="rgb(213,172,6)" rx="2" ry="2" />
<text  x="252.89" y="415.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (1 samples, 0.02%)</title><rect x="153.7" y="357" width="0.3" height="15.0" fill="rgb(226,165,11)" rx="2" ry="2" />
<text  x="156.71" y="367.5" ></text>
</g>
<g >
<title>__libc_malloc (2 samples, 0.05%)</title><rect x="564.6" y="261" width="0.5" height="15.0" fill="rgb(233,1,54)" rx="2" ry="2" />
<text  x="567.56" y="271.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.02%)</title><rect x="184.8" y="325" width="0.3" height="15.0" fill="rgb(243,184,30)" rx="2" ry="2" />
<text  x="187.85" y="335.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;c10::MemoryFormat&gt;::constexpr_optional_base (1 samples, 0.02%)</title><rect x="806.4" y="389" width="0.3" height="15.0" fill="rgb(214,217,11)" rx="2" ry="2" />
<text  x="809.40" y="399.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (3 samples, 0.07%)</title><rect x="165.7" y="325" width="0.8" height="15.0" fill="rgb(234,82,43)" rx="2" ry="2" />
<text  x="168.67" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_newstat (1 samples, 0.02%)</title><rect x="124.8" y="309" width="0.3" height="15.0" fill="rgb(250,51,20)" rx="2" ry="2" />
<text  x="127.80" y="319.5" ></text>
</g>
<g >
<title>torch::jit::parseName (1 samples, 0.02%)</title><rect x="182.1" y="405" width="0.2" height="15.0" fill="rgb(254,32,54)" rx="2" ry="2" />
<text  x="185.07" y="415.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;c10::AutogradMetaInterface&gt;, true&gt;::_Head_base (1 samples, 0.02%)</title><rect x="666.6" y="309" width="0.3" height="15.0" fill="rgb(254,184,48)" rx="2" ry="2" />
<text  x="669.57" y="319.5" ></text>
</g>
<g >
<title>c10::dtype (40 samples, 0.94%)</title><rect x="416.4" y="437" width="11.1" height="15.0" fill="rgb(246,28,27)" rx="2" ry="2" />
<text  x="419.40" y="447.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::vector&lt;std::function&lt;at::Tensor  (1 samples, 0.02%)</title><rect x="98.4" y="485" width="0.3" height="15.0" fill="rgb(214,143,3)" rx="2" ry="2" />
<text  x="101.40" y="495.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="179.8" y="373" width="0.3" height="15.0" fill="rgb(208,104,18)" rx="2" ry="2" />
<text  x="182.84" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;std::unique_ptr&lt;caffe2::GradientMakerBase, std::default_delete&lt;caffe2::GradientMakerBase&gt; &gt;  (1 samples, 0.02%)</title><rect x="191.0" y="405" width="0.2" height="15.0" fill="rgb(236,89,3)" rx="2" ry="2" />
<text  x="193.96" y="415.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="134.8" y="357" width="0.3" height="15.0" fill="rgb(251,106,1)" rx="2" ry="2" />
<text  x="137.81" y="367.5" ></text>
</g>
<g >
<title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="173.7" y="389" width="0.3" height="15.0" fill="rgb(216,212,35)" rx="2" ry="2" />
<text  x="176.73" y="399.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.02%)</title><rect x="225.7" y="325" width="0.3" height="15.0" fill="rgb(234,90,50)" rx="2" ry="2" />
<text  x="228.71" y="335.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (2 samples, 0.05%)</title><rect x="259.3" y="309" width="0.6" height="15.0" fill="rgb(248,16,52)" rx="2" ry="2" />
<text  x="262.34" y="319.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="453.4" y="341" width="0.2" height="15.0" fill="rgb(215,31,46)" rx="2" ry="2" />
<text  x="456.37" y="351.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;long&gt;::begin (1 samples, 0.02%)</title><rect x="271.9" y="405" width="0.2" height="15.0" fill="rgb(243,197,15)" rx="2" ry="2" />
<text  x="274.85" y="415.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::vector&lt;std::function&lt;at::Tensor  (5 samples, 0.12%)</title><rect x="943.7" y="357" width="1.4" height="15.0" fill="rgb(242,161,35)" rx="2" ry="2" />
<text  x="946.71" y="367.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="122.0" y="389" width="0.3" height="15.0" fill="rgb(210,24,38)" rx="2" ry="2" />
<text  x="125.02" y="399.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (4 samples, 0.09%)</title><rect x="291.9" y="389" width="1.1" height="15.0" fill="rgb(237,174,8)" rx="2" ry="2" />
<text  x="294.87" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;c10::AutogradMetaInterface, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::__uniq_ptr_impl (7 samples, 0.16%)</title><rect x="664.9" y="373" width="2.0" height="15.0" fill="rgb(238,84,37)" rx="2" ry="2" />
<text  x="667.91" y="383.5" ></text>
</g>
<g >
<title>[microbenchmark] (2 samples, 0.05%)</title><rect x="983.2" y="293" width="0.5" height="15.0" fill="rgb(242,177,39)" rx="2" ry="2" />
<text  x="986.19" y="303.5" ></text>
</g>
<g >
<title>[ld-2.31.so] (355 samples, 8.36%)</title><rect x="104.8" y="469" width="98.7" height="15.0" fill="rgb(248,7,1)" rx="2" ry="2" />
<text  x="107.79" y="479.5" >[ld-2.31.so]</text>
</g>
<g >
<title>torch::jit::SharedParserData::match (1 samples, 0.02%)</title><rect x="172.3" y="325" width="0.3" height="15.0" fill="rgb(210,117,51)" rx="2" ry="2" />
<text  x="175.34" y="335.5" ></text>
</g>
<g >
<title>at::native::xnnpack::TORCH_LIBRARY_init_prepacked (1 samples, 0.02%)</title><rect x="145.7" y="421" width="0.2" height="15.0" fill="rgb(242,210,5)" rx="2" ry="2" />
<text  x="148.65" y="431.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="154.5" y="293" width="0.3" height="15.0" fill="rgb(207,17,42)" rx="2" ry="2" />
<text  x="157.55" y="303.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="193.2" y="357" width="0.3" height="15.0" fill="rgb(215,51,51)" rx="2" ry="2" />
<text  x="196.18" y="367.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::RegistrationListener::onOperatorRegistered (2 samples, 0.05%)</title><rect x="202.9" y="421" width="0.6" height="15.0" fill="rgb(228,1,6)" rx="2" ry="2" />
<text  x="205.91" y="431.5" ></text>
</g>
<g >
<title>[microbenchmark] (2 samples, 0.05%)</title><rect x="984.6" y="293" width="0.5" height="15.0" fill="rgb(215,177,47)" rx="2" ry="2" />
<text  x="987.58" y="303.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::load (2 samples, 0.05%)</title><rect x="299.1" y="357" width="0.5" height="15.0" fill="rgb(252,189,37)" rx="2" ry="2" />
<text  x="302.09" y="367.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="130.6" y="405" width="0.3" height="15.0" fill="rgb(230,223,32)" rx="2" ry="2" />
<text  x="133.64" y="415.5" ></text>
</g>
<g >
<title>c10::constexpr_storage_t&lt;c10::MemoryFormat&gt;::constexpr_storage_t (1 samples, 0.02%)</title><rect x="375.5" y="373" width="0.3" height="15.0" fill="rgb(208,22,19)" rx="2" ry="2" />
<text  x="378.54" y="383.5" ></text>
</g>
<g >
<title>at::TORCH_LIBRARY_IMPL_init_aten_QuantizedCPU (1 samples, 0.02%)</title><rect x="145.1" y="437" width="0.3" height="15.0" fill="rgb(207,45,18)" rx="2" ry="2" />
<text  x="148.10" y="447.5" ></text>
</g>
<g >
<title>c10::ThreadLocalDebugInfo::get (5 samples, 0.12%)</title><rect x="1109.7" y="213" width="1.4" height="15.0" fill="rgb(207,56,36)" rx="2" ry="2" />
<text  x="1112.67" y="223.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="185.7" y="341" width="0.3" height="15.0" fill="rgb(232,186,6)" rx="2" ry="2" />
<text  x="188.68" y="351.5" ></text>
</g>
<g >
<title>__do_sys_newstat (1 samples, 0.02%)</title><rect x="124.8" y="293" width="0.3" height="15.0" fill="rgb(218,92,15)" rx="2" ry="2" />
<text  x="127.80" y="303.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;unsigned char&gt;@plt (1 samples, 0.02%)</title><rect x="794.2" y="309" width="0.2" height="15.0" fill="rgb(249,109,25)" rx="2" ry="2" />
<text  x="797.16" y="319.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="151.5" y="325" width="0.3" height="15.0" fill="rgb(235,226,2)" rx="2" ry="2" />
<text  x="154.49" y="335.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::intrusive_ptr (10 samples, 0.24%)</title><rect x="658.8" y="389" width="2.8" height="15.0" fill="rgb(215,33,13)" rx="2" ry="2" />
<text  x="661.79" y="399.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.02%)</title><rect x="150.1" y="373" width="0.3" height="15.0" fill="rgb(246,202,13)" rx="2" ry="2" />
<text  x="153.10" y="383.5" ></text>
</g>
<g >
<title>c10::memoryProfilingEnabled (13 samples, 0.31%)</title><rect x="750.5" y="229" width="3.6" height="15.0" fill="rgb(254,181,22)" rx="2" ry="2" />
<text  x="753.52" y="239.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.02%)</title><rect x="826.7" y="341" width="0.3" height="15.0" fill="rgb(243,17,42)" rx="2" ry="2" />
<text  x="829.69" y="351.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.02%)</title><rect x="146.2" y="357" width="0.3" height="15.0" fill="rgb(223,152,35)" rx="2" ry="2" />
<text  x="149.21" y="367.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (43 samples, 1.01%)</title><rect x="251.8" y="453" width="12.0" height="15.0" fill="rgb(247,67,12)" rx="2" ry="2" />
<text  x="254.84" y="463.5" ></text>
</g>
<g >
<title>c10::typeMetaToScalarType (6 samples, 0.14%)</title><rect x="570.7" y="341" width="1.6" height="15.0" fill="rgb(248,96,28)" rx="2" ry="2" />
<text  x="573.67" y="351.5" ></text>
</g>
<g >
<title>c10::GetCPUAllocator (2 samples, 0.05%)</title><rect x="358.3" y="277" width="0.6" height="15.0" fill="rgb(254,191,22)" rx="2" ry="2" />
<text  x="361.30" y="287.5" ></text>
</g>
<g >
<title>std::addressof&lt;caffe2::TypeMeta&gt; (1 samples, 0.02%)</title><rect x="424.2" y="373" width="0.3" height="15.0" fill="rgb(240,21,42)" rx="2" ry="2" />
<text  x="427.18" y="383.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;c10::Half&gt;@plt (1 samples, 0.02%)</title><rect x="575.1" y="373" width="0.3" height="15.0" fill="rgb(209,76,26)" rx="2" ry="2" />
<text  x="578.12" y="383.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="935.9" y="325" width="0.3" height="15.0" fill="rgb(213,228,11)" rx="2" ry="2" />
<text  x="938.93" y="335.5" ></text>
</g>
<g >
<title>c10::impl::check_tensor_options_and_extract_memory_format (3 samples, 0.07%)</title><rect x="569.8" y="341" width="0.9" height="15.0" fill="rgb(216,165,38)" rx="2" ry="2" />
<text  x="572.84" y="351.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::registerKernel (1 samples, 0.02%)</title><rect x="147.3" y="373" width="0.3" height="15.0" fill="rgb(242,24,17)" rx="2" ry="2" />
<text  x="150.32" y="383.5" ></text>
</g>
<g >
<title>torch::Library::impl_UNBOXED&lt;char const*, at::Tensor&amp;  (1 samples, 0.02%)</title><rect x="183.5" y="405" width="0.2" height="15.0" fill="rgb(218,43,29)" rx="2" ry="2" />
<text  x="186.46" y="415.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="188.2" y="421" width="0.3" height="15.0" fill="rgb(235,120,24)" rx="2" ry="2" />
<text  x="191.18" y="431.5" ></text>
</g>
<g >
<title>std::forward&lt;c10::AutogradMetaInterface*&amp;&gt; (1 samples, 0.02%)</title><rect x="481.4" y="325" width="0.3" height="15.0" fill="rgb(235,122,3)" rx="2" ry="2" />
<text  x="484.44" y="335.5" ></text>
</g>
<g >
<title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="90.1" y="485" width="0.2" height="15.0" fill="rgb(251,206,44)" rx="2" ry="2" />
<text  x="93.06" y="495.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;torch::autograd::AutogradMeta, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::_M_ptr (2 samples, 0.05%)</title><rect x="487.0" y="357" width="0.6" height="15.0" fill="rgb(253,38,20)" rx="2" ry="2" />
<text  x="490.00" y="367.5" ></text>
</g>
<g >
<title>at::native::empty_cpu (257 samples, 6.05%)</title><rect x="1078.0" y="277" width="71.4" height="15.0" fill="rgb(254,158,11)" rx="2" ry="2" />
<text  x="1080.98" y="287.5" >at::nati..</text>
</g>
<g >
<title>std::unique_ptr&lt;torch::autograd::AutogradMeta, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::get_deleter (4 samples, 0.09%)</title><rect x="483.9" y="389" width="1.2" height="15.0" fill="rgb(236,79,35)" rx="2" ry="2" />
<text  x="486.95" y="399.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="178.7" y="309" width="0.3" height="15.0" fill="rgb(247,37,10)" rx="2" ry="2" />
<text  x="181.73" y="319.5" ></text>
</g>
<g >
<title>std::end&lt;long&gt; (4 samples, 0.09%)</title><rect x="400.0" y="421" width="1.1" height="15.0" fill="rgb(217,86,3)" rx="2" ry="2" />
<text  x="403.00" y="431.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="133.4" y="261" width="0.3" height="15.0" fill="rgb(237,42,48)" rx="2" ry="2" />
<text  x="136.42" y="271.5" ></text>
</g>
<g >
<title>at::Tensor::Tensor (6 samples, 0.14%)</title><rect x="638.2" y="405" width="1.7" height="15.0" fill="rgb(248,171,26)" rx="2" ry="2" />
<text  x="641.22" y="415.5" ></text>
</g>
<g >
<title>c10::TensorImpl::dtype (1 samples, 0.02%)</title><rect x="466.4" y="357" width="0.3" height="15.0" fill="rgb(233,157,54)" rx="2" ry="2" />
<text  x="469.43" y="367.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::deregisterKernel_ (11 samples, 0.26%)</title><rect x="259.9" y="341" width="3.1" height="15.0" fill="rgb(247,145,44)" rx="2" ry="2" />
<text  x="262.90" y="351.5" ></text>
</g>
<g >
<title>c10::impl::tls_local_dispatch_key_set@plt (1 samples, 0.02%)</title><rect x="563.7" y="277" width="0.3" height="15.0" fill="rgb(206,159,13)" rx="2" ry="2" />
<text  x="566.72" y="287.5" ></text>
</g>
<g >
<title>__mod_memcg_state (1 samples, 0.02%)</title><rect x="1182.8" y="245" width="0.3" height="15.0" fill="rgb(232,210,36)" rx="2" ry="2" />
<text  x="1185.77" y="255.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (4 samples, 0.09%)</title><rect x="249.9" y="357" width="1.1" height="15.0" fill="rgb(232,165,17)" rx="2" ry="2" />
<text  x="252.89" y="367.5" ></text>
</g>
<g >
<title>c10::ThreadLocalDebugInfo::get (8 samples, 0.19%)</title><rect x="821.7" y="309" width="2.2" height="15.0" fill="rgb(245,81,34)" rx="2" ry="2" />
<text  x="824.68" y="319.5" ></text>
</g>
<g >
<title>c10::impl::ExcludeDispatchKeyGuard::ExcludeDispatchKeyGuard (2 samples, 0.05%)</title><rect x="55.6" y="485" width="0.5" height="15.0" fill="rgb(236,166,19)" rx="2" ry="2" />
<text  x="58.59" y="495.5" ></text>
</g>
<g >
<title>c10::ProfiledCPUMemoryReporter::New (9 samples, 0.21%)</title><rect x="541.5" y="261" width="2.5" height="15.0" fill="rgb(241,115,12)" rx="2" ry="2" />
<text  x="544.49" y="271.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_fbgemm_utils.cpp (1 samples, 0.02%)</title><rect x="184.6" y="453" width="0.2" height="15.0" fill="rgb(246,190,37)" rx="2" ry="2" />
<text  x="187.57" y="463.5" ></text>
</g>
<g >
<title>do_user_addr_fault (2 samples, 0.05%)</title><rect x="162.9" y="261" width="0.5" height="15.0" fill="rgb(245,194,19)" rx="2" ry="2" />
<text  x="165.89" y="271.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;unsigned char&gt;@plt (1 samples, 0.02%)</title><rect x="572.1" y="325" width="0.2" height="15.0" fill="rgb(232,132,53)" rx="2" ry="2" />
<text  x="575.06" y="335.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;float&gt;@plt (1 samples, 0.02%)</title><rect x="788.0" y="261" width="0.3" height="15.0" fill="rgb(233,47,44)" rx="2" ry="2" />
<text  x="791.05" y="271.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::optional&lt;c10::DeviceType const&amp;, int&gt; (8 samples, 0.19%)</title><rect x="277.4" y="421" width="2.2" height="15.0" fill="rgb(238,182,35)" rx="2" ry="2" />
<text  x="280.41" y="431.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (5 samples, 0.12%)</title><rect x="663.0" y="389" width="1.4" height="15.0" fill="rgb(245,183,12)" rx="2" ry="2" />
<text  x="665.96" y="399.5" ></text>
</g>
<g >
<title>at::RecordFunction::end@plt (1 samples, 0.02%)</title><rect x="1037.7" y="341" width="0.2" height="15.0" fill="rgb(212,201,50)" rx="2" ry="2" />
<text  x="1040.67" y="351.5" ></text>
</g>
<g >
<title>torch::jit::parseSchema (7 samples, 0.16%)</title><rect x="221.5" y="437" width="2.0" height="15.0" fill="rgb(212,62,49)" rx="2" ry="2" />
<text  x="224.54" y="447.5" ></text>
</g>
<g >
<title>c10::GetCurrentNUMANode (1 samples, 0.02%)</title><rect x="1112.4" y="229" width="0.3" height="15.0" fill="rgb(229,107,10)" rx="2" ry="2" />
<text  x="1115.45" y="239.5" ></text>
</g>
<g >
<title>at::Tensor::~Tensor (7 samples, 0.16%)</title><rect x="291.0" y="421" width="2.0" height="15.0" fill="rgb(244,65,43)" rx="2" ry="2" />
<text  x="294.03" y="431.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (2 samples, 0.05%)</title><rect x="259.3" y="293" width="0.6" height="15.0" fill="rgb(211,203,31)" rx="2" ry="2" />
<text  x="262.34" y="303.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::ScalarType&gt;::operator bool (4 samples, 0.09%)</title><rect x="466.7" y="341" width="1.1" height="15.0" fill="rgb(210,24,10)" rx="2" ry="2" />
<text  x="469.71" y="351.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::operator bool (2 samples, 0.05%)</title><rect x="802.5" y="357" width="0.6" height="15.0" fill="rgb(252,199,43)" rx="2" ry="2" />
<text  x="805.50" y="367.5" ></text>
</g>
<g >
<title>at::AutoNonVariableTypeMode::AutoNonVariableTypeMode (6 samples, 0.14%)</title><rect x="671.3" y="389" width="1.7" height="15.0" fill="rgb(223,47,15)" rx="2" ry="2" />
<text  x="674.30" y="399.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.02%)</title><rect x="194.0" y="389" width="0.3" height="15.0" fill="rgb(209,88,15)" rx="2" ry="2" />
<text  x="197.02" y="399.5" ></text>
</g>
<g >
<title>[libcudart.so.11.0.194] (2 samples, 0.05%)</title><rect x="252.9" y="373" width="0.6" height="15.0" fill="rgb(242,106,33)" rx="2" ry="2" />
<text  x="255.95" y="383.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (2 samples, 0.05%)</title><rect x="254.9" y="277" width="0.6" height="15.0" fill="rgb(206,191,19)" rx="2" ry="2" />
<text  x="257.90" y="287.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::contained_val (1 samples, 0.02%)</title><rect x="412.5" y="405" width="0.3" height="15.0" fill="rgb(235,64,14)" rx="2" ry="2" />
<text  x="415.51" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="145.7" y="389" width="0.2" height="15.0" fill="rgb(212,37,17)" rx="2" ry="2" />
<text  x="148.65" y="399.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::registerKernel (1 samples, 0.02%)</title><rect x="154.0" y="373" width="0.3" height="15.0" fill="rgb(252,206,51)" rx="2" ry="2" />
<text  x="156.99" y="383.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;torch::autograd::Node&gt;::~shared_ptr (4 samples, 0.09%)</title><rect x="834.2" y="325" width="1.1" height="15.0" fill="rgb(252,128,38)" rx="2" ry="2" />
<text  x="837.19" y="335.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="252.4" y="341" width="0.3" height="15.0" fill="rgb(234,52,53)" rx="2" ry="2" />
<text  x="255.39" y="351.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;torch::autograd::Node,  (2 samples, 0.05%)</title><rect x="940.9" y="357" width="0.6" height="15.0" fill="rgb(249,19,35)" rx="2" ry="2" />
<text  x="943.94" y="367.5" ></text>
</g>
<g >
<title>torch::Library::_impl (9 samples, 0.21%)</title><rect x="139.3" y="405" width="2.5" height="15.0" fill="rgb(252,76,46)" rx="2" ry="2" />
<text  x="142.26" y="415.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::initialized (1 samples, 0.02%)</title><rect x="405.8" y="373" width="0.3" height="15.0" fill="rgb(225,132,3)" rx="2" ry="2" />
<text  x="408.84" y="383.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="143.4" y="245" width="0.3" height="15.0" fill="rgb(248,84,53)" rx="2" ry="2" />
<text  x="146.43" y="255.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="463.1" y="341" width="0.3" height="15.0" fill="rgb(218,218,27)" rx="2" ry="2" />
<text  x="466.10" y="351.5" ></text>
</g>
<g >
<title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (377 samples, 8.88%)</title><rect x="690.2" y="357" width="104.8" height="15.0" fill="rgb(247,7,9)" rx="2" ry="2" />
<text  x="693.20" y="367.5" >c10::impl::w..</text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="194.0" y="341" width="0.3" height="15.0" fill="rgb(234,74,4)" rx="2" ry="2" />
<text  x="197.02" y="351.5" ></text>
</g>
<g >
<title>torch::jit::parseName (1 samples, 0.02%)</title><rect x="147.0" y="405" width="0.3" height="15.0" fill="rgb(225,140,11)" rx="2" ry="2" />
<text  x="150.04" y="415.5" ></text>
</g>
<g >
<title>string (1 samples, 0.02%)</title><rect x="146.5" y="101" width="0.3" height="15.0" fill="rgb(228,227,34)" rx="2" ry="2" />
<text  x="149.49" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt; &gt;::_M_erase (2 samples, 0.05%)</title><rect x="254.9" y="293" width="0.6" height="15.0" fill="rgb(229,64,54)" rx="2" ry="2" />
<text  x="257.90" y="303.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::TypeMeta (1 samples, 0.02%)</title><rect x="475.9" y="325" width="0.3" height="15.0" fill="rgb(233,24,44)" rx="2" ry="2" />
<text  x="478.88" y="335.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::initialized (1 samples, 0.02%)</title><rect x="893.1" y="357" width="0.3" height="15.0" fill="rgb(223,144,45)" rx="2" ry="2" />
<text  x="896.12" y="367.5" ></text>
</g>
<g >
<title>c10::scalarTypeToTypeMeta (9 samples, 0.21%)</title><rect x="631.3" y="405" width="2.5" height="15.0" fill="rgb(205,117,29)" rx="2" ry="2" />
<text  x="634.27" y="415.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="848.1" y="373" width="0.3" height="15.0" fill="rgb(235,114,7)" rx="2" ry="2" />
<text  x="851.09" y="383.5" ></text>
</g>
<g >
<title>torch::jit::parseSchema (1 samples, 0.02%)</title><rect x="248.2" y="469" width="0.3" height="15.0" fill="rgb(222,219,41)" rx="2" ry="2" />
<text  x="251.22" y="479.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="179.3" y="309" width="0.3" height="15.0" fill="rgb(240,216,39)" rx="2" ry="2" />
<text  x="182.29" y="319.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="143.4" y="213" width="0.3" height="15.0" fill="rgb(225,143,53)" rx="2" ry="2" />
<text  x="146.43" y="223.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor  (2 samples, 0.05%)</title><rect x="154.5" y="421" width="0.6" height="15.0" fill="rgb(251,18,21)" rx="2" ry="2" />
<text  x="157.55" y="431.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.02%)</title><rect x="220.1" y="341" width="0.3" height="15.0" fill="rgb(221,24,6)" rx="2" ry="2" />
<text  x="223.15" y="351.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (4 samples, 0.09%)</title><rect x="123.7" y="293" width="1.1" height="15.0" fill="rgb(229,121,21)" rx="2" ry="2" />
<text  x="126.69" y="303.5" ></text>
</g>
<g >
<title>caffe2::detail::make_function_schema_for_c10 (1 samples, 0.02%)</title><rect x="194.6" y="421" width="0.3" height="15.0" fill="rgb(242,228,41)" rx="2" ry="2" />
<text  x="197.57" y="431.5" ></text>
</g>
<g >
<title>c10::impl::check_tensor_options_and_extract_memory_format (1 samples, 0.02%)</title><rect x="1163.3" y="373" width="0.3" height="15.0" fill="rgb(252,138,30)" rx="2" ry="2" />
<text  x="1166.31" y="383.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::dataptr (1 samples, 0.02%)</title><rect x="415.3" y="405" width="0.3" height="15.0" fill="rgb(210,170,22)" rx="2" ry="2" />
<text  x="418.29" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.05%)</title><rect x="87.0" y="485" width="0.6" height="15.0" fill="rgb(213,169,39)" rx="2" ry="2" />
<text  x="90.00" y="495.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (3 samples, 0.07%)</title><rect x="831.4" y="293" width="0.8" height="15.0" fill="rgb(248,201,21)" rx="2" ry="2" />
<text  x="834.41" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (1 samples, 0.02%)</title><rect x="218.2" y="325" width="0.3" height="15.0" fill="rgb(238,127,28)" rx="2" ry="2" />
<text  x="221.20" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;, std::allocator&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (3 samples, 0.07%)</title><rect x="463.7" y="325" width="0.8" height="15.0" fill="rgb(241,2,20)" rx="2" ry="2" />
<text  x="466.65" y="335.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.02%)</title><rect x="143.4" y="197" width="0.3" height="15.0" fill="rgb(215,109,19)" rx="2" ry="2" />
<text  x="146.43" y="207.5" ></text>
</g>
<g >
<title>[microbenchmark] (1 samples, 0.02%)</title><rect x="1022.9" y="373" width="0.3" height="15.0" fill="rgb(243,119,51)" rx="2" ry="2" />
<text  x="1025.94" y="383.5" ></text>
</g>
<g >
<title>c10::constexpr_storage_t&lt;caffe2::TypeMeta&gt;::constexpr_storage_t&lt;caffe2::TypeMeta&gt; (2 samples, 0.05%)</title><rect x="893.7" y="373" width="0.5" height="15.0" fill="rgb(247,142,28)" rx="2" ry="2" />
<text  x="896.68" y="383.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="150.4" y="325" width="0.3" height="15.0" fill="rgb(205,205,54)" rx="2" ry="2" />
<text  x="153.38" y="335.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt;  (1 samples, 0.02%)</title><rect x="155.1" y="421" width="0.3" height="15.0" fill="rgb(227,46,2)" rx="2" ry="2" />
<text  x="158.10" y="431.5" ></text>
</g>
<g >
<title>TORCH_LIBRARY_init_quantized (3 samples, 0.07%)</title><rect x="185.4" y="421" width="0.8" height="15.0" fill="rgb(216,164,46)" rx="2" ry="2" />
<text  x="188.40" y="431.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="139.0" y="389" width="0.3" height="15.0" fill="rgb(211,184,15)" rx="2" ry="2" />
<text  x="141.98" y="399.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor&amp;  (1 samples, 0.02%)</title><rect x="181.0" y="421" width="0.2" height="15.0" fill="rgb(210,14,23)" rx="2" ry="2" />
<text  x="183.95" y="431.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (1 samples, 0.02%)</title><rect x="218.2" y="437" width="0.3" height="15.0" fill="rgb(220,31,45)" rx="2" ry="2" />
<text  x="221.20" y="447.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="195.7" y="325" width="0.3" height="15.0" fill="rgb(241,187,46)" rx="2" ry="2" />
<text  x="198.69" y="335.5" ></text>
</g>
<g >
<title>c10::impl::tls_local_dispatch_key_set (4 samples, 0.09%)</title><rect x="562.6" y="277" width="1.1" height="15.0" fill="rgb(231,50,52)" rx="2" ry="2" />
<text  x="565.61" y="287.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_THVector.cpp (1 samples, 0.02%)</title><rect x="146.5" y="453" width="0.3" height="15.0" fill="rgb(220,136,1)" rx="2" ry="2" />
<text  x="149.49" y="463.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.02%)</title><rect x="174.6" y="357" width="0.2" height="15.0" fill="rgb(210,150,20)" rx="2" ry="2" />
<text  x="177.56" y="367.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="190.7" y="341" width="0.3" height="15.0" fill="rgb(253,87,12)" rx="2" ry="2" />
<text  x="193.68" y="351.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (1 samples, 0.02%)</title><rect x="157.3" y="341" width="0.3" height="15.0" fill="rgb(244,202,50)" rx="2" ry="2" />
<text  x="160.33" y="351.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.02%)</title><rect x="180.1" y="357" width="0.3" height="15.0" fill="rgb(248,189,48)" rx="2" ry="2" />
<text  x="183.12" y="367.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="388.3" y="309" width="0.3" height="15.0" fill="rgb(233,174,26)" rx="2" ry="2" />
<text  x="391.32" y="319.5" ></text>
</g>
<g >
<title>c10::TensorOptions::set_requires_grad (1 samples, 0.02%)</title><rect x="879.5" y="421" width="0.3" height="15.0" fill="rgb(232,14,33)" rx="2" ry="2" />
<text  x="882.50" y="431.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseType (1 samples, 0.02%)</title><rect x="218.5" y="373" width="0.3" height="15.0" fill="rgb(217,88,30)" rx="2" ry="2" />
<text  x="221.48" y="383.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (3 samples, 0.07%)</title><rect x="1182.2" y="325" width="0.9" height="15.0" fill="rgb(215,123,34)" rx="2" ry="2" />
<text  x="1185.22" y="335.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.02%)</title><rect x="144.3" y="341" width="0.2" height="15.0" fill="rgb(241,197,36)" rx="2" ry="2" />
<text  x="147.26" y="351.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;int&gt; (3 samples, 0.07%)</title><rect x="981.8" y="309" width="0.8" height="15.0" fill="rgb(235,176,48)" rx="2" ry="2" />
<text  x="984.80" y="319.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::_M_head (4 samples, 0.09%)</title><rect x="1011.3" y="293" width="1.1" height="15.0" fill="rgb(234,97,33)" rx="2" ry="2" />
<text  x="1014.26" y="303.5" ></text>
</g>
<g >
<title>c10::TensorOptions::set_requires_grad (4 samples, 0.09%)</title><rect x="575.7" y="389" width="1.1" height="15.0" fill="rgb(236,150,16)" rx="2" ry="2" />
<text  x="578.68" y="399.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;c10::ScalarType&gt;::constexpr_optional_base (2 samples, 0.05%)</title><rect x="54.2" y="485" width="0.6" height="15.0" fill="rgb(240,206,15)" rx="2" ry="2" />
<text  x="57.20" y="495.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="180.4" y="325" width="0.3" height="15.0" fill="rgb(252,177,13)" rx="2" ry="2" />
<text  x="183.40" y="335.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="135.9" y="309" width="0.3" height="15.0" fill="rgb(228,187,36)" rx="2" ry="2" />
<text  x="138.92" y="319.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::load (6 samples, 0.14%)</title><rect x="396.1" y="325" width="1.7" height="15.0" fill="rgb(224,61,9)" rx="2" ry="2" />
<text  x="399.11" y="335.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (3 samples, 0.07%)</title><rect x="1182.2" y="309" width="0.9" height="15.0" fill="rgb(228,179,38)" rx="2" ry="2" />
<text  x="1185.22" y="319.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="135.9" y="165" width="0.3" height="15.0" fill="rgb(243,71,13)" rx="2" ry="2" />
<text  x="138.92" y="175.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="190.7" y="373" width="0.3" height="15.0" fill="rgb(220,95,9)" rx="2" ry="2" />
<text  x="193.68" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, char&gt; (1 samples, 0.02%)</title><rect x="134.8" y="373" width="0.3" height="15.0" fill="rgb(213,100,11)" rx="2" ry="2" />
<text  x="137.81" y="383.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.02%)</title><rect x="179.3" y="165" width="0.3" height="15.0" fill="rgb(227,160,29)" rx="2" ry="2" />
<text  x="182.29" y="175.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;c10::Device&gt;::constexpr_optional_base&lt;c10::DeviceType const&amp;, int&gt; (1 samples, 0.02%)</title><rect x="205.1" y="485" width="0.3" height="15.0" fill="rgb(226,208,53)" rx="2" ry="2" />
<text  x="208.14" y="495.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::operator* (4 samples, 0.09%)</title><rect x="603.8" y="373" width="1.1" height="15.0" fill="rgb(220,99,51)" rx="2" ry="2" />
<text  x="606.75" y="383.5" ></text>
</g>
<g >
<title>pagecache_get_page (1 samples, 0.02%)</title><rect x="127.6" y="261" width="0.3" height="15.0" fill="rgb(215,148,20)" rx="2" ry="2" />
<text  x="130.58" y="271.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="178.5" y="325" width="0.2" height="15.0" fill="rgb(245,157,9)" rx="2" ry="2" />
<text  x="181.45" y="335.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.02%)</title><rect x="587.1" y="357" width="0.3" height="15.0" fill="rgb(210,203,17)" rx="2" ry="2" />
<text  x="590.07" y="367.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;signed char&gt; (2 samples, 0.05%)</title><rect x="80.3" y="485" width="0.6" height="15.0" fill="rgb(231,187,51)" rx="2" ry="2" />
<text  x="83.33" y="495.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, c10::AutogradMetaInterface*, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::_Tuple_impl&lt;c10::AutogradMetaInterface*&amp;, std::default_delete&lt;torch::autograd::AutogradMeta&gt;, void&gt; (8 samples, 0.19%)</title><rect x="480.9" y="357" width="2.2" height="15.0" fill="rgb(205,68,22)" rx="2" ry="2" />
<text  x="483.89" y="367.5" ></text>
</g>
<g >
<title>vma_interval_tree_insert (1 samples, 0.02%)</title><rect x="124.5" y="197" width="0.3" height="15.0" fill="rgb(237,81,3)" rx="2" ry="2" />
<text  x="127.53" y="207.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::registerKernel (1 samples, 0.02%)</title><rect x="155.1" y="373" width="0.3" height="15.0" fill="rgb(226,174,1)" rx="2" ry="2" />
<text  x="158.10" y="383.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (6 samples, 0.14%)</title><rect x="830.6" y="309" width="1.6" height="15.0" fill="rgb(235,22,52)" rx="2" ry="2" />
<text  x="833.58" y="319.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;float&gt; (3 samples, 0.07%)</title><rect x="288.3" y="405" width="0.8" height="15.0" fill="rgb(250,43,41)" rx="2" ry="2" />
<text  x="291.25" y="415.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.02%)</title><rect x="183.2" y="389" width="0.3" height="15.0" fill="rgb(243,87,35)" rx="2" ry="2" />
<text  x="186.18" y="399.5" ></text>
</g>
<g >
<title>c10::TensorImpl::TensorImpl (19 samples, 0.45%)</title><rect x="741.6" y="229" width="5.3" height="15.0" fill="rgb(220,13,27)" rx="2" ry="2" />
<text  x="744.63" y="239.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.02%)</title><rect x="199.9" y="421" width="0.2" height="15.0" fill="rgb(233,111,27)" rx="2" ry="2" />
<text  x="202.86" y="431.5" ></text>
</g>
<g >
<title>c10::Dispatcher::deregisterImpl_ (19 samples, 0.45%)</title><rect x="257.7" y="357" width="5.3" height="15.0" fill="rgb(248,109,15)" rx="2" ry="2" />
<text  x="260.67" y="367.5" ></text>
</g>
<g >
<title>c10::TensorOptions::set_requires_grad (1 samples, 0.02%)</title><rect x="805.8" y="389" width="0.3" height="15.0" fill="rgb(238,165,25)" rx="2" ry="2" />
<text  x="808.84" y="399.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.02%)</title><rect x="147.6" y="405" width="0.3" height="15.0" fill="rgb(229,135,25)" rx="2" ry="2" />
<text  x="150.60" y="415.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="133.4" y="133" width="0.3" height="15.0" fill="rgb(222,229,2)" rx="2" ry="2" />
<text  x="136.42" y="143.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseAliasAnnotation (1 samples, 0.02%)</title><rect x="164.6" y="341" width="0.2" height="15.0" fill="rgb(240,107,41)" rx="2" ry="2" />
<text  x="167.55" y="351.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_register_prim_ops_c10.cpp (1 samples, 0.02%)</title><rect x="187.3" y="453" width="0.3" height="15.0" fill="rgb(249,75,47)" rx="2" ry="2" />
<text  x="190.35" y="463.5" ></text>
</g>
<g >
<title>filename_lookup (1 samples, 0.02%)</title><rect x="124.8" y="245" width="0.3" height="15.0" fill="rgb(217,99,28)" rx="2" ry="2" />
<text  x="127.80" y="255.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.02%)</title><rect x="155.7" y="309" width="0.2" height="15.0" fill="rgb(226,39,6)" rx="2" ry="2" />
<text  x="158.66" y="319.5" ></text>
</g>
<g >
<title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (314 samples, 7.40%)</title><rect x="1064.1" y="309" width="87.3" height="15.0" fill="rgb(228,160,10)" rx="2" ry="2" />
<text  x="1067.08" y="319.5" >c10::impl:..</text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.02%)</title><rect x="187.6" y="309" width="0.3" height="15.0" fill="rgb(224,183,14)" rx="2" ry="2" />
<text  x="190.63" y="319.5" ></text>
</g>
<g >
<title>c10::Device::is_cpu (1 samples, 0.02%)</title><rect x="410.0" y="341" width="0.3" height="15.0" fill="rgb(249,152,6)" rx="2" ry="2" />
<text  x="413.00" y="351.5" ></text>
</g>
<g >
<title>at::getCPUAllocator@plt (1 samples, 0.02%)</title><rect x="749.4" y="261" width="0.3" height="15.0" fill="rgb(247,133,36)" rx="2" ry="2" />
<text  x="752.41" y="271.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::initialized (1 samples, 0.02%)</title><rect x="624.3" y="357" width="0.3" height="15.0" fill="rgb(215,2,35)" rx="2" ry="2" />
<text  x="627.32" y="367.5" ></text>
</g>
<g >
<title>wp_page_copy (3 samples, 0.07%)</title><rect x="129.5" y="309" width="0.9" height="15.0" fill="rgb(210,100,16)" rx="2" ry="2" />
<text  x="132.53" y="319.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseDeclaration (2 samples, 0.05%)</title><rect x="248.8" y="437" width="0.5" height="15.0" fill="rgb(241,177,45)" rx="2" ry="2" />
<text  x="251.78" y="447.5" ></text>
</g>
<g >
<title>at::Tensor::~Tensor (8 samples, 0.19%)</title><rect x="830.0" y="325" width="2.2" height="15.0" fill="rgb(221,30,44)" rx="2" ry="2" />
<text  x="833.02" y="335.5" ></text>
</g>
<g >
<title>cpuinfo_x86_linux_parse_proc_cpuinfo (1 samples, 0.02%)</title><rect x="146.5" y="341" width="0.3" height="15.0" fill="rgb(207,85,48)" rx="2" ry="2" />
<text  x="149.49" y="351.5" ></text>
</g>
<g >
<title>std::mutex::mutex (1 samples, 0.02%)</title><rect x="933.2" y="373" width="0.2" height="15.0" fill="rgb(219,150,1)" rx="2" ry="2" />
<text  x="936.15" y="383.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="147.9" y="373" width="0.3" height="15.0" fill="rgb(217,201,3)" rx="2" ry="2" />
<text  x="150.88" y="383.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;caffe2::TypeMeta&gt;::constexpr_optional_base (1 samples, 0.02%)</title><rect x="286.0" y="405" width="0.3" height="15.0" fill="rgb(226,89,2)" rx="2" ry="2" />
<text  x="289.03" y="415.5" ></text>
</g>
<g >
<title>wp_page_copy (1 samples, 0.02%)</title><rect x="125.9" y="245" width="0.3" height="15.0" fill="rgb(217,69,41)" rx="2" ry="2" />
<text  x="128.92" y="255.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="154.5" y="245" width="0.3" height="15.0" fill="rgb(208,200,52)" rx="2" ry="2" />
<text  x="157.55" y="255.5" ></text>
</g>
<g >
<title>c10::Symbol::fromQualString (1 samples, 0.02%)</title><rect x="142.0" y="421" width="0.3" height="15.0" fill="rgb(250,60,34)" rx="2" ry="2" />
<text  x="145.04" y="431.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="203.2" y="389" width="0.3" height="15.0" fill="rgb(211,15,4)" rx="2" ry="2" />
<text  x="206.19" y="399.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseType (1 samples, 0.02%)</title><rect x="217.4" y="389" width="0.2" height="15.0" fill="rgb(245,216,31)" rx="2" ry="2" />
<text  x="220.37" y="399.5" ></text>
</g>
<g >
<title>c10::TensorOptions::set_dtype (6 samples, 0.14%)</title><rect x="420.8" y="405" width="1.7" height="15.0" fill="rgb(218,140,20)" rx="2" ry="2" />
<text  x="423.85" y="415.5" ></text>
</g>
<g >
<title>at::Tensor::Tensor (5 samples, 0.12%)</title><rect x="901.5" y="405" width="1.4" height="15.0" fill="rgb(229,6,29)" rx="2" ry="2" />
<text  x="904.46" y="415.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (1 samples, 0.02%)</title><rect x="180.1" y="389" width="0.3" height="15.0" fill="rgb(211,73,25)" rx="2" ry="2" />
<text  x="183.12" y="399.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.02%)</title><rect x="175.4" y="341" width="0.3" height="15.0" fill="rgb(220,48,0)" rx="2" ry="2" />
<text  x="178.39" y="351.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;torch::autograd::Node&gt;&amp;&gt; (2 samples, 0.05%)</title><rect x="941.8" y="357" width="0.5" height="15.0" fill="rgb(252,168,11)" rx="2" ry="2" />
<text  x="944.77" y="367.5" ></text>
</g>
<g >
<title>_IO_setb (1 samples, 0.02%)</title><rect x="152.0" y="309" width="0.3" height="15.0" fill="rgb(224,83,18)" rx="2" ry="2" />
<text  x="155.04" y="319.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::intrusive_ptr (1 samples, 0.02%)</title><rect x="293.3" y="421" width="0.2" height="15.0" fill="rgb(207,209,4)" rx="2" ry="2" />
<text  x="296.26" y="431.5" ></text>
</g>
<g >
<title>__pud_alloc (1 samples, 0.02%)</title><rect x="1179.4" y="277" width="0.3" height="15.0" fill="rgb(235,88,54)" rx="2" ry="2" />
<text  x="1182.44" y="287.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;torch::autograd::Node&gt;&amp;&gt; (3 samples, 0.07%)</title><rect x="953.2" y="341" width="0.8" height="15.0" fill="rgb(205,153,16)" rx="2" ry="2" />
<text  x="956.17" y="351.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::_M_head (2 samples, 0.05%)</title><rect x="1008.8" y="309" width="0.5" height="15.0" fill="rgb(237,136,35)" rx="2" ry="2" />
<text  x="1011.76" y="319.5" ></text>
</g>
<g >
<title>google::protobuf::DescriptorPool::InternalAddGeneratedFile (1 samples, 0.02%)</title><rect x="202.1" y="437" width="0.3" height="15.0" fill="rgb(242,67,16)" rx="2" ry="2" />
<text  x="205.08" y="447.5" ></text>
</g>
<g >
<title>c10::TensorImpl::empty_tensor_restride (12 samples, 0.28%)</title><rect x="1134.1" y="261" width="3.4" height="15.0" fill="rgb(213,64,53)" rx="2" ry="2" />
<text  x="1137.13" y="271.5" ></text>
</g>
<g >
<title>torch::Library::_impl (9 samples, 0.21%)</title><rect x="142.6" y="389" width="2.5" height="15.0" fill="rgb(232,80,39)" rx="2" ry="2" />
<text  x="145.59" y="399.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (1 samples, 0.02%)</title><rect x="147.9" y="389" width="0.3" height="15.0" fill="rgb(218,116,54)" rx="2" ry="2" />
<text  x="150.88" y="399.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::ScalarType&gt;::initialized (1 samples, 0.02%)</title><rect x="468.1" y="325" width="0.3" height="15.0" fill="rgb(213,10,48)" rx="2" ry="2" />
<text  x="471.10" y="335.5" ></text>
</g>
<g >
<title>c10::demangle[abi:cxx11] (1 samples, 0.02%)</title><rect x="192.9" y="437" width="0.3" height="15.0" fill="rgb(247,101,8)" rx="2" ry="2" />
<text  x="195.91" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_openat (1 samples, 0.02%)</title><rect x="125.1" y="309" width="0.3" height="15.0" fill="rgb(235,227,28)" rx="2" ry="2" />
<text  x="128.08" y="319.5" ></text>
</g>
<g >
<title>torch::jit::parseSchema (7 samples, 0.16%)</title><rect x="219.6" y="453" width="1.9" height="15.0" fill="rgb(238,182,49)" rx="2" ry="2" />
<text  x="222.59" y="463.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor&amp;  (1 samples, 0.02%)</title><rect x="150.4" y="405" width="0.3" height="15.0" fill="rgb(245,119,33)" rx="2" ry="2" />
<text  x="153.38" y="415.5" ></text>
</g>
<g >
<title>torch::Library::_impl (2 samples, 0.05%)</title><rect x="133.1" y="389" width="0.6" height="15.0" fill="rgb(236,145,22)" rx="2" ry="2" />
<text  x="136.14" y="399.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.02%)</title><rect x="181.8" y="357" width="0.3" height="15.0" fill="rgb(215,217,12)" rx="2" ry="2" />
<text  x="184.79" y="367.5" ></text>
</g>
<g >
<title>__tls_get_addr@plt (2 samples, 0.05%)</title><rect x="687.1" y="325" width="0.6" height="15.0" fill="rgb(213,74,34)" rx="2" ry="2" />
<text  x="690.14" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (2 samples, 0.05%)</title><rect x="192.4" y="421" width="0.5" height="15.0" fill="rgb(206,63,14)" rx="2" ry="2" />
<text  x="195.35" y="431.5" ></text>
</g>
<g >
<title>__lru_cache_add (1 samples, 0.02%)</title><rect x="193.5" y="229" width="0.2" height="15.0" fill="rgb(230,139,31)" rx="2" ry="2" />
<text  x="196.46" y="239.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="203.2" y="293" width="0.3" height="15.0" fill="rgb(228,158,48)" rx="2" ry="2" />
<text  x="206.19" y="303.5" ></text>
</g>
<g >
<title>c10::DefaultCPUAllocator::allocate (1 samples, 0.02%)</title><rect x="204.9" y="485" width="0.2" height="15.0" fill="rgb(226,191,11)" rx="2" ry="2" />
<text  x="207.86" y="495.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (26 samples, 0.61%)</title><rect x="264.3" y="421" width="7.3" height="15.0" fill="rgb(223,180,37)" rx="2" ry="2" />
<text  x="267.35" y="431.5" ></text>
</g>
<g >
<title>std::forward&lt;c10::DeviceType const&amp;&gt; (1 samples, 0.02%)</title><rect x="635.4" y="421" width="0.3" height="15.0" fill="rgb(216,210,30)" rx="2" ry="2" />
<text  x="638.44" y="431.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="172.6" y="389" width="0.3" height="15.0" fill="rgb(225,172,40)" rx="2" ry="2" />
<text  x="175.61" y="399.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="152.3" y="133" width="0.3" height="15.0" fill="rgb(221,217,22)" rx="2" ry="2" />
<text  x="155.32" y="143.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, torch::CppFunction&gt; (11 samples, 0.26%)</title><rect x="135.1" y="421" width="3.0" height="15.0" fill="rgb(238,189,11)" rx="2" ry="2" />
<text  x="138.09" y="431.5" ></text>
</g>
<g >
<title>std::end&lt;long&gt; (9 samples, 0.21%)</title><rect x="850.9" y="405" width="2.5" height="15.0" fill="rgb(214,30,32)" rx="2" ry="2" />
<text  x="853.87" y="415.5" ></text>
</g>
<g >
<title>c10::TensorType::operator== (2 samples, 0.05%)</title><rect x="182.3" y="325" width="0.6" height="15.0" fill="rgb(220,131,30)" rx="2" ry="2" />
<text  x="185.34" y="335.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::intrusive_ptr (3 samples, 0.07%)</title><rect x="914.2" y="373" width="0.9" height="15.0" fill="rgb(218,65,24)" rx="2" ry="2" />
<text  x="917.25" y="383.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="193.5" y="325" width="0.2" height="15.0" fill="rgb(206,101,33)" rx="2" ry="2" />
<text  x="196.46" y="335.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="1181.7" y="293" width="0.2" height="15.0" fill="rgb(206,202,9)" rx="2" ry="2" />
<text  x="1184.66" y="303.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;torch::autograd::Node,  (1 samples, 0.02%)</title><rect x="455.9" y="373" width="0.2" height="15.0" fill="rgb(224,4,38)" rx="2" ry="2" />
<text  x="458.87" y="383.5" ></text>
</g>
<g >
<title>[libcublas.so.11.1.0.229] (1 samples, 0.02%)</title><rect x="251.8" y="373" width="0.3" height="15.0" fill="rgb(247,124,46)" rx="2" ry="2" />
<text  x="254.84" y="383.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::_M_head (2 samples, 0.05%)</title><rect x="935.4" y="293" width="0.5" height="15.0" fill="rgb(217,98,34)" rx="2" ry="2" />
<text  x="938.38" y="303.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::operator* (5 samples, 0.12%)</title><rect x="624.6" y="373" width="1.4" height="15.0" fill="rgb(205,102,49)" rx="2" ry="2" />
<text  x="627.60" y="383.5" ></text>
</g>
<g >
<title>c10::constexpr_storage_t&lt;c10::ScalarType&gt;::constexpr_storage_t&lt;c10::ScalarType&gt; (11 samples, 0.26%)</title><rect x="976.8" y="277" width="3.1" height="15.0" fill="rgb(208,76,15)" rx="2" ry="2" />
<text  x="979.79" y="287.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="143.4" y="149" width="0.3" height="15.0" fill="rgb(219,190,29)" rx="2" ry="2" />
<text  x="146.43" y="159.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::initialized (2 samples, 0.05%)</title><rect x="603.2" y="357" width="0.6" height="15.0" fill="rgb(235,228,50)" rx="2" ry="2" />
<text  x="606.20" y="367.5" ></text>
</g>
<g >
<title>c10::constexpr_storage_t&lt;c10::Device&gt;::constexpr_storage_t (1 samples, 0.02%)</title><rect x="276.0" y="373" width="0.3" height="15.0" fill="rgb(245,122,50)" rx="2" ry="2" />
<text  x="279.02" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;, std::allocator&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt; &gt;::_Vector_impl::~_Vector_impl (3 samples, 0.07%)</title><rect x="392.2" y="309" width="0.8" height="15.0" fill="rgb(217,78,51)" rx="2" ry="2" />
<text  x="395.21" y="319.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;torch::autograd::Node&gt;::weak_ptr (1 samples, 0.02%)</title><rect x="936.8" y="373" width="0.2" height="15.0" fill="rgb(225,94,33)" rx="2" ry="2" />
<text  x="939.77" y="383.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_Dimname.cpp (2 samples, 0.05%)</title><rect x="141.8" y="453" width="0.5" height="15.0" fill="rgb(229,99,54)" rx="2" ry="2" />
<text  x="144.76" y="463.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="203.2" y="325" width="0.3" height="15.0" fill="rgb(205,79,41)" rx="2" ry="2" />
<text  x="206.19" y="335.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="190.7" y="357" width="0.3" height="15.0" fill="rgb(239,108,38)" rx="2" ry="2" />
<text  x="193.68" y="367.5" ></text>
</g>
<g >
<title>std::tuple&lt;c10::AutogradMetaInterface*, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::tuple&lt;c10::AutogradMetaInterface*, std::default_delete&lt;c10::AutogradMetaInterface&gt;, true&gt; (1 samples, 0.02%)</title><rect x="247.9" y="485" width="0.3" height="15.0" fill="rgb(224,205,9)" rx="2" ry="2" />
<text  x="250.95" y="495.5" ></text>
</g>
<g >
<title>std::tuple&lt;c10::AutogradMetaInterface*, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::tuple&lt;c10::AutogradMetaInterface*&amp;, std::default_delete&lt;torch::autograd::AutogradMeta&gt;, true&gt; (24 samples, 0.57%)</title><rect x="999.3" y="357" width="6.7" height="15.0" fill="rgb(236,40,21)" rx="2" ry="2" />
<text  x="1002.31" y="367.5" ></text>
</g>
<g >
<title>torch::Library::_impl (2 samples, 0.05%)</title><rect x="180.1" y="405" width="0.6" height="15.0" fill="rgb(207,123,25)" rx="2" ry="2" />
<text  x="183.12" y="415.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="165.1" y="261" width="0.3" height="15.0" fill="rgb(239,48,24)" rx="2" ry="2" />
<text  x="168.11" y="271.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.02%)</title><rect x="184.3" y="309" width="0.3" height="15.0" fill="rgb(216,148,45)" rx="2" ry="2" />
<text  x="187.29" y="319.5" ></text>
</g>
<g >
<title>[microbenchmark] (1 samples, 0.02%)</title><rect x="176.5" y="341" width="0.3" height="15.0" fill="rgb(225,98,51)" rx="2" ry="2" />
<text  x="179.51" y="351.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::operator bool (1 samples, 0.02%)</title><rect x="1171.7" y="373" width="0.2" height="15.0" fill="rgb(235,22,49)" rx="2" ry="2" />
<text  x="1174.65" y="383.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="160.1" y="357" width="0.3" height="15.0" fill="rgb(221,129,24)" rx="2" ry="2" />
<text  x="163.11" y="367.5" ></text>
</g>
<g >
<title>c10::impl::detail::with_scattered_tensor_options_impl_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor  (5 samples, 0.12%)</title><rect x="57.3" y="485" width="1.3" height="15.0" fill="rgb(213,26,2)" rx="2" ry="2" />
<text  x="60.26" y="495.5" ></text>
</g>
<g >
<title>__libc_malloc (2 samples, 0.05%)</title><rect x="164.8" y="325" width="0.6" height="15.0" fill="rgb(252,176,54)" rx="2" ry="2" />
<text  x="167.83" y="335.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="1142.5" y="229" width="0.2" height="15.0" fill="rgb(219,155,39)" rx="2" ry="2" />
<text  x="1145.47" y="239.5" ></text>
</g>
<g >
<title>c10::Device::is_cpu (1 samples, 0.02%)</title><rect x="282.7" y="373" width="0.3" height="15.0" fill="rgb(214,86,17)" rx="2" ry="2" />
<text  x="285.69" y="383.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (1 samples, 0.02%)</title><rect x="934.5" y="325" width="0.3" height="15.0" fill="rgb(206,176,51)" rx="2" ry="2" />
<text  x="937.54" y="335.5" ></text>
</g>
<g >
<title>c10::impl::detail::with_scattered_tensor_options_impl_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor  (193 samples, 4.55%)</title><rect x="317.4" y="357" width="53.7" height="15.0" fill="rgb(241,211,40)" rx="2" ry="2" />
<text  x="320.44" y="367.5" >c10::..</text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;*&gt; (1 samples, 0.02%)</title><rect x="836.7" y="277" width="0.3" height="15.0" fill="rgb(211,39,45)" rx="2" ry="2" />
<text  x="839.69" y="287.5" ></text>
</g>
<g >
<title>__cudaUnregisterBinaryUtil (2 samples, 0.05%)</title><rect x="253.5" y="389" width="0.6" height="15.0" fill="rgb(245,156,52)" rx="2" ry="2" />
<text  x="256.51" y="399.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (5 samples, 0.12%)</title><rect x="170.9" y="325" width="1.4" height="15.0" fill="rgb(227,27,43)" rx="2" ry="2" />
<text  x="173.95" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;torch::autograd::AutogradMeta, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::unique_ptr&lt;std::default_delete&lt;torch::autograd::AutogradMeta&gt;, void&gt; (11 samples, 0.26%)</title><rect x="933.4" y="373" width="3.1" height="15.0" fill="rgb(207,63,0)" rx="2" ry="2" />
<text  x="936.43" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, char&gt; (1 samples, 0.02%)</title><rect x="153.4" y="357" width="0.3" height="15.0" fill="rgb(211,141,15)" rx="2" ry="2" />
<text  x="156.43" y="367.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (3 samples, 0.07%)</title><rect x="169.0" y="277" width="0.8" height="15.0" fill="rgb(228,113,51)" rx="2" ry="2" />
<text  x="172.00" y="287.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="133.1" y="309" width="0.3" height="15.0" fill="rgb(239,139,4)" rx="2" ry="2" />
<text  x="136.14" y="319.5" ></text>
</g>
<g >
<title>c10::ThreadLocalDebugInfo::get (5 samples, 0.12%)</title><rect x="542.6" y="229" width="1.4" height="15.0" fill="rgb(230,211,24)" rx="2" ry="2" />
<text  x="545.60" y="239.5" ></text>
</g>
<g >
<title>torch::Library::_impl (4 samples, 0.09%)</title><rect x="176.2" y="389" width="1.1" height="15.0" fill="rgb(211,3,0)" rx="2" ry="2" />
<text  x="179.23" y="399.5" ></text>
</g>
<g >
<title>c10::Dispatcher::singleton (2 samples, 0.05%)</title><rect x="1151.4" y="325" width="0.5" height="15.0" fill="rgb(238,133,21)" rx="2" ry="2" />
<text  x="1154.36" y="335.5" ></text>
</g>
<g >
<title>at::detail::make_tensor&lt;c10::TensorImpl, c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;, c10::DispatchKey, caffe2::TypeMeta&amp;&gt; (43 samples, 1.01%)</title><rect x="737.5" y="261" width="11.9" height="15.0" fill="rgb(232,151,20)" rx="2" ry="2" />
<text  x="740.46" y="271.5" ></text>
</g>
<g >
<title>c10::Device::validate (2 samples, 0.05%)</title><rect x="345.5" y="261" width="0.6" height="15.0" fill="rgb(208,181,12)" rx="2" ry="2" />
<text  x="348.51" y="271.5" ></text>
</g>
<g >
<title>torch::Library::_impl (2 samples, 0.05%)</title><rect x="146.8" y="421" width="0.5" height="15.0" fill="rgb(219,219,9)" rx="2" ry="2" />
<text  x="149.76" y="431.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="135.9" y="277" width="0.3" height="15.0" fill="rgb(232,101,31)" rx="2" ry="2" />
<text  x="138.92" y="287.5" ></text>
</g>
<g >
<title>torch::Library::_impl@plt (1 samples, 0.02%)</title><rect x="154.8" y="405" width="0.3" height="15.0" fill="rgb(221,77,46)" rx="2" ry="2" />
<text  x="157.82" y="415.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="196.8" y="421" width="0.3" height="15.0" fill="rgb(224,96,48)" rx="2" ry="2" />
<text  x="199.80" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::~_Hashtable (1 samples, 0.02%)</title><rect x="135.6" y="325" width="0.3" height="15.0" fill="rgb(215,63,30)" rx="2" ry="2" />
<text  x="138.64" y="335.5" ></text>
</g>
<g >
<title>c10::typeMetaToScalarType (4 samples, 0.09%)</title><rect x="370.0" y="341" width="1.1" height="15.0" fill="rgb(211,203,0)" rx="2" ry="2" />
<text  x="372.98" y="351.5" ></text>
</g>
<g >
<title>std::forward&lt;c10::AutogradMetaInterface*&amp;&gt; (2 samples, 0.05%)</title><rect x="483.1" y="357" width="0.6" height="15.0" fill="rgb(237,195,39)" rx="2" ry="2" />
<text  x="486.11" y="367.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;c10::Device&gt;::constexpr_optional_base (4 samples, 0.09%)</title><rect x="275.2" y="389" width="1.1" height="15.0" fill="rgb(223,79,24)" rx="2" ry="2" />
<text  x="278.19" y="399.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.02%)</title><rect x="169.8" y="309" width="0.3" height="15.0" fill="rgb(238,172,47)" rx="2" ry="2" />
<text  x="172.84" y="319.5" ></text>
</g>
<g >
<title>unmap_page_range (11 samples, 0.26%)</title><rect x="1180.0" y="357" width="3.1" height="15.0" fill="rgb(233,66,26)" rx="2" ry="2" />
<text  x="1182.99" y="367.5" ></text>
</g>
<g >
<title>c10::GetCPUAllocator (2 samples, 0.05%)</title><rect x="1133.6" y="261" width="0.5" height="15.0" fill="rgb(206,119,21)" rx="2" ry="2" />
<text  x="1136.57" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::vector (1 samples, 0.02%)</title><rect x="185.7" y="357" width="0.3" height="15.0" fill="rgb(252,193,47)" rx="2" ry="2" />
<text  x="188.68" y="367.5" ></text>
</g>
<g >
<title>at::hasCallbacks (9 samples, 0.21%)</title><rect x="686.0" y="341" width="2.5" height="15.0" fill="rgb(241,99,39)" rx="2" ry="2" />
<text  x="689.03" y="351.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="122.0" y="373" width="0.3" height="15.0" fill="rgb(212,158,13)" rx="2" ry="2" />
<text  x="125.02" y="383.5" ></text>
</g>
<g >
<title>c10::Device::validate (7 samples, 0.16%)</title><rect x="620.7" y="373" width="2.0" height="15.0" fill="rgb(240,21,27)" rx="2" ry="2" />
<text  x="623.71" y="383.5" ></text>
</g>
<g >
<title>at::Tensor::~Tensor (3 samples, 0.07%)</title><rect x="386.1" y="341" width="0.8" height="15.0" fill="rgb(218,0,47)" rx="2" ry="2" />
<text  x="389.10" y="351.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (1 samples, 0.02%)</title><rect x="249.6" y="437" width="0.3" height="15.0" fill="rgb(226,14,46)" rx="2" ry="2" />
<text  x="252.61" y="447.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (1 samples, 0.02%)</title><rect x="248.2" y="421" width="0.3" height="15.0" fill="rgb(248,18,38)" rx="2" ry="2" />
<text  x="251.22" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;c10::AutogradMetaInterface, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::~unique_ptr (3 samples, 0.07%)</title><rect x="304.4" y="405" width="0.8" height="15.0" fill="rgb(242,205,11)" rx="2" ry="2" />
<text  x="307.37" y="415.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::ScalarType&gt;::operator* (8 samples, 0.19%)</title><rect x="967.3" y="325" width="2.3" height="15.0" fill="rgb(215,163,8)" rx="2" ry="2" />
<text  x="970.34" y="335.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (1 samples, 0.02%)</title><rect x="452.8" y="325" width="0.3" height="15.0" fill="rgb(244,108,12)" rx="2" ry="2" />
<text  x="455.81" y="335.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.02%)</title><rect x="162.9" y="149" width="0.3" height="15.0" fill="rgb(224,32,35)" rx="2" ry="2" />
<text  x="165.89" y="159.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="178.7" y="293" width="0.3" height="15.0" fill="rgb(230,18,10)" rx="2" ry="2" />
<text  x="181.73" y="303.5" ></text>
</g>
<g >
<title>__get_vma_policy (1 samples, 0.02%)</title><rect x="154.5" y="197" width="0.3" height="15.0" fill="rgb(250,7,46)" rx="2" ry="2" />
<text  x="157.55" y="207.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (2 samples, 0.05%)</title><rect x="357.2" y="181" width="0.5" height="15.0" fill="rgb(236,4,27)" rx="2" ry="2" />
<text  x="360.19" y="191.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseType (1 samples, 0.02%)</title><rect x="194.3" y="341" width="0.3" height="15.0" fill="rgb(212,151,18)" rx="2" ry="2" />
<text  x="197.30" y="351.5" ></text>
</g>
<g >
<title>torch::autograd::isDifferentiableType (5 samples, 0.12%)</title><rect x="989.9" y="341" width="1.3" height="15.0" fill="rgb(249,198,16)" rx="2" ry="2" />
<text  x="992.86" y="351.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="150.1" y="165" width="0.3" height="15.0" fill="rgb(215,202,43)" rx="2" ry="2" />
<text  x="153.10" y="175.5" ></text>
</g>
<g >
<title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (148 samples, 3.49%)</title><rect x="326.1" y="325" width="41.1" height="15.0" fill="rgb(213,82,33)" rx="2" ry="2" />
<text  x="329.06" y="335.5" >c10..</text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::operator-- (1 samples, 0.02%)</title><rect x="643.5" y="357" width="0.3" height="15.0" fill="rgb(234,36,24)" rx="2" ry="2" />
<text  x="646.50" y="367.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="203.2" y="357" width="0.3" height="15.0" fill="rgb(220,67,10)" rx="2" ry="2" />
<text  x="206.19" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;, std::allocator&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt; &gt;::~_Vector_base (10 samples, 0.24%)</title><rect x="837.5" y="309" width="2.8" height="15.0" fill="rgb(238,68,42)" rx="2" ry="2" />
<text  x="840.53" y="319.5" ></text>
</g>
<g >
<title>[libcufft.so.10.2.0.218] (1 samples, 0.02%)</title><rect x="131.5" y="421" width="0.3" height="15.0" fill="rgb(216,207,24)" rx="2" ry="2" />
<text  x="134.47" y="431.5" ></text>
</g>
<g >
<title>at::hasCallbacks (2 samples, 0.05%)</title><rect x="313.3" y="357" width="0.5" height="15.0" fill="rgb(210,99,46)" rx="2" ry="2" />
<text  x="316.27" y="367.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.02%)</title><rect x="164.3" y="325" width="0.3" height="15.0" fill="rgb(224,124,34)" rx="2" ry="2" />
<text  x="167.28" y="335.5" ></text>
</g>
<g >
<title>google::protobuf::internal::OnShutdownRun (1 samples, 0.02%)</title><rect x="202.6" y="421" width="0.3" height="15.0" fill="rgb(240,129,42)" rx="2" ry="2" />
<text  x="205.64" y="431.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.02%)</title><rect x="145.9" y="357" width="0.3" height="15.0" fill="rgb(249,130,54)" rx="2" ry="2" />
<text  x="148.93" y="367.5" ></text>
</g>
<g >
<title>c10::UndefinedTensorImpl::singleton (1 samples, 0.02%)</title><rect x="643.2" y="357" width="0.3" height="15.0" fill="rgb(250,221,46)" rx="2" ry="2" />
<text  x="646.22" y="367.5" ></text>
</g>
<g >
<title>at::TORCH_LIBRARY_IMPL_init_aten_QuantizedCUDA (1 samples, 0.02%)</title><rect x="145.4" y="437" width="0.3" height="15.0" fill="rgb(221,115,21)" rx="2" ry="2" />
<text  x="148.37" y="447.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.02%)</title><rect x="266.8" y="325" width="0.3" height="15.0" fill="rgb(231,3,30)" rx="2" ry="2" />
<text  x="269.85" y="335.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="180.1" y="373" width="0.3" height="15.0" fill="rgb(223,94,36)" rx="2" ry="2" />
<text  x="183.12" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int&gt; (1 samples, 0.02%)</title><rect x="181.8" y="341" width="0.3" height="15.0" fill="rgb(228,95,5)" rx="2" ry="2" />
<text  x="184.79" y="351.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="134.3" y="357" width="0.2" height="15.0" fill="rgb(207,161,27)" rx="2" ry="2" />
<text  x="137.25" y="367.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;torch::autograd::Node,  (5 samples, 0.12%)</title><rect x="840.6" y="309" width="1.4" height="15.0" fill="rgb(217,147,7)" rx="2" ry="2" />
<text  x="843.59" y="319.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::vector&lt;std::function&lt;at::Tensor  (1 samples, 0.02%)</title><rect x="451.1" y="389" width="0.3" height="15.0" fill="rgb(228,153,37)" rx="2" ry="2" />
<text  x="454.14" y="399.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;short&gt;@plt (1 samples, 0.02%)</title><rect x="571.8" y="325" width="0.3" height="15.0" fill="rgb(251,61,36)" rx="2" ry="2" />
<text  x="574.79" y="335.5" ></text>
</g>
<g >
<title>c10::TensorImpl::release_resources (91 samples, 2.14%)</title><rect x="816.7" y="373" width="25.3" height="15.0" fill="rgb(235,198,0)" rx="2" ry="2" />
<text  x="819.68" y="383.5" >c..</text>
</g>
<g >
<title>std::shared_ptr&lt;torch::autograd::Node&gt;::shared_ptr (2 samples, 0.05%)</title><rect x="451.7" y="389" width="0.6" height="15.0" fill="rgb(240,187,2)" rx="2" ry="2" />
<text  x="454.70" y="399.5" ></text>
</g>
<g >
<title>at::Tensor::Tensor (7 samples, 0.16%)</title><rect x="913.1" y="389" width="2.0" height="15.0" fill="rgb(205,225,14)" rx="2" ry="2" />
<text  x="916.14" y="399.5" ></text>
</g>
<g >
<title>at::Tensor::Tensor (10 samples, 0.24%)</title><rect x="649.6" y="389" width="2.8" height="15.0" fill="rgb(218,228,22)" rx="2" ry="2" />
<text  x="652.62" y="399.5" ></text>
</g>
<g >
<title>c10::impl::ExcludeDispatchKeyGuard::ExcludeDispatchKeyGuard (3 samples, 0.07%)</title><rect x="1021.8" y="373" width="0.9" height="15.0" fill="rgb(247,31,23)" rx="2" ry="2" />
<text  x="1024.83" y="383.5" ></text>
</g>
<g >
<title>at::native::empty_cpu (123 samples, 2.90%)</title><rect x="332.4" y="293" width="34.2" height="15.0" fill="rgb(249,115,53)" rx="2" ry="2" />
<text  x="335.45" y="303.5" >at..</text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;long&gt; (1 samples, 0.02%)</title><rect x="207.6" y="485" width="0.3" height="15.0" fill="rgb(208,39,51)" rx="2" ry="2" />
<text  x="210.64" y="495.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::optional (1 samples, 0.02%)</title><rect x="646.3" y="405" width="0.3" height="15.0" fill="rgb(252,170,49)" rx="2" ry="2" />
<text  x="649.28" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;c10::AutogradMetaInterface, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::~unique_ptr (7 samples, 0.16%)</title><rect x="1012.4" y="389" width="1.9" height="15.0" fill="rgb(251,133,52)" rx="2" ry="2" />
<text  x="1015.37" y="399.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (2 samples, 0.05%)</title><rect x="486.2" y="341" width="0.5" height="15.0" fill="rgb(239,219,54)" rx="2" ry="2" />
<text  x="489.17" y="351.5" ></text>
</g>
<g >
<title>__tls_get_addr (3 samples, 0.07%)</title><rect x="1059.9" y="277" width="0.8" height="15.0" fill="rgb(207,66,5)" rx="2" ry="2" />
<text  x="1062.91" y="287.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;c10::AutogradMetaInterface, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::_M_ptr (6 samples, 0.14%)</title><rect x="667.4" y="373" width="1.7" height="15.0" fill="rgb(207,193,53)" rx="2" ry="2" />
<text  x="670.41" y="383.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="302.2" y="373" width="0.2" height="15.0" fill="rgb(234,116,17)" rx="2" ry="2" />
<text  x="305.15" y="383.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_VmapModeRegistrations.cpp (1 samples, 0.02%)</title><rect x="183.5" y="453" width="0.2" height="15.0" fill="rgb(227,166,33)" rx="2" ry="2" />
<text  x="186.46" y="463.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.02%)</title><rect x="341.3" y="245" width="0.3" height="15.0" fill="rgb(238,47,11)" rx="2" ry="2" />
<text  x="344.35" y="255.5" ></text>
</g>
<g >
<title>c10::TensorOptions::set_requires_grad (3 samples, 0.07%)</title><rect x="1170.5" y="373" width="0.9" height="15.0" fill="rgb(210,27,45)" rx="2" ry="2" />
<text  x="1173.54" y="383.5" ></text>
</g>
<g >
<title>c10::memoryProfilingEnabled (4 samples, 0.09%)</title><rect x="383.0" y="341" width="1.2" height="15.0" fill="rgb(226,71,18)" rx="2" ry="2" />
<text  x="386.04" y="351.5" ></text>
</g>
<g >
<title>c10::constexpr_forward&lt;int&gt; (2 samples, 0.05%)</title><rect x="50.3" y="485" width="0.6" height="15.0" fill="rgb(206,69,18)" rx="2" ry="2" />
<text  x="53.31" y="495.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_CPUType.cpp (16 samples, 0.38%)</title><rect x="133.7" y="453" width="4.4" height="15.0" fill="rgb(207,138,20)" rx="2" ry="2" />
<text  x="136.70" y="463.5" ></text>
</g>
<g >
<title>c10::impl::check_tensor_options_and_extract_memory_format (4 samples, 0.09%)</title><rect x="56.1" y="485" width="1.2" height="15.0" fill="rgb(243,178,24)" rx="2" ry="2" />
<text  x="59.14" y="495.5" ></text>
</g>
<g >
<title>at::RecordFunction::~RecordFunction (3 samples, 0.07%)</title><rect x="1037.1" y="357" width="0.8" height="15.0" fill="rgb(206,17,36)" rx="2" ry="2" />
<text  x="1040.11" y="367.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::optional (15 samples, 0.35%)</title><rect x="604.9" y="389" width="4.1" height="15.0" fill="rgb(227,188,21)" rx="2" ry="2" />
<text  x="607.86" y="399.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (1 samples, 0.02%)</title><rect x="180.7" y="421" width="0.3" height="15.0" fill="rgb(218,138,35)" rx="2" ry="2" />
<text  x="183.68" y="431.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (2 samples, 0.05%)</title><rect x="191.8" y="373" width="0.6" height="15.0" fill="rgb(231,131,27)" rx="2" ry="2" />
<text  x="194.80" y="383.5" ></text>
</g>
<g >
<title>caffe2::detail::make_function_schema_for_c10 (1 samples, 0.02%)</title><rect x="195.4" y="421" width="0.3" height="15.0" fill="rgb(239,22,22)" rx="2" ry="2" />
<text  x="198.41" y="431.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (18 samples, 0.42%)</title><rect x="165.4" y="357" width="5.0" height="15.0" fill="rgb(210,112,30)" rx="2" ry="2" />
<text  x="168.39" y="367.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;torch::autograd::Node&gt;::~weak_ptr (1 samples, 0.02%)</title><rect x="393.0" y="341" width="0.3" height="15.0" fill="rgb(220,103,1)" rx="2" ry="2" />
<text  x="396.05" y="351.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::ScalarType&gt;::optional&lt;c10::ScalarType, false&gt; (9 samples, 0.21%)</title><rect x="469.2" y="325" width="2.5" height="15.0" fill="rgb(205,218,23)" rx="2" ry="2" />
<text  x="472.21" y="335.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::contained_val (1 samples, 0.02%)</title><rect x="415.0" y="405" width="0.3" height="15.0" fill="rgb(231,155,32)" rx="2" ry="2" />
<text  x="418.01" y="415.5" ></text>
</g>
<g >
<title>__libc_malloc (2 samples, 0.05%)</title><rect x="450.3" y="373" width="0.6" height="15.0" fill="rgb(233,34,16)" rx="2" ry="2" />
<text  x="453.31" y="383.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="194.0" y="293" width="0.3" height="15.0" fill="rgb(235,225,19)" rx="2" ry="2" />
<text  x="197.02" y="303.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (1 samples, 0.02%)</title><rect x="151.5" y="405" width="0.3" height="15.0" fill="rgb(232,199,12)" rx="2" ry="2" />
<text  x="154.49" y="415.5" ></text>
</g>
<g >
<title>lock_page_memcg (1 samples, 0.02%)</title><rect x="1181.9" y="309" width="0.3" height="15.0" fill="rgb(218,226,4)" rx="2" ry="2" />
<text  x="1184.94" y="319.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::(anonymous namespace)::createArgumentVector (1 samples, 0.02%)</title><rect x="187.1" y="405" width="0.2" height="15.0" fill="rgb(221,89,17)" rx="2" ry="2" />
<text  x="190.07" y="415.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (1 samples, 0.02%)</title><rect x="223.2" y="389" width="0.3" height="15.0" fill="rgb(225,105,24)" rx="2" ry="2" />
<text  x="226.21" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;torch::autograd::AutogradMeta, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::_M_ptr (10 samples, 0.24%)</title><rect x="1009.6" y="341" width="2.8" height="15.0" fill="rgb(221,102,53)" rx="2" ry="2" />
<text  x="1012.59" y="351.5" ></text>
</g>
<g >
<title>c10::ProfiledCPUMemoryReporter::Delete (6 samples, 0.14%)</title><rect x="588.7" y="341" width="1.7" height="15.0" fill="rgb(217,123,50)" rx="2" ry="2" />
<text  x="591.74" y="351.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="199.9" y="357" width="0.2" height="15.0" fill="rgb(218,206,48)" rx="2" ry="2" />
<text  x="202.86" y="367.5" ></text>
</g>
<g >
<title>torch::jit::parseSchema (1 samples, 0.02%)</title><rect x="225.7" y="453" width="0.3" height="15.0" fill="rgb(243,3,15)" rx="2" ry="2" />
<text  x="228.71" y="463.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (5 samples, 0.12%)</title><rect x="170.9" y="341" width="1.4" height="15.0" fill="rgb(207,213,23)" rx="2" ry="2" />
<text  x="173.95" y="351.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (4 samples, 0.09%)</title><rect x="220.4" y="405" width="1.1" height="15.0" fill="rgb(247,64,20)" rx="2" ry="2" />
<text  x="223.43" y="415.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.02%)</title><rect x="134.8" y="405" width="0.3" height="15.0" fill="rgb(217,178,30)" rx="2" ry="2" />
<text  x="137.81" y="415.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.05%)</title><rect x="143.1" y="341" width="0.6" height="15.0" fill="rgb(233,121,40)" rx="2" ry="2" />
<text  x="146.15" y="351.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.02%)</title><rect x="234.9" y="437" width="0.3" height="15.0" fill="rgb(250,103,24)" rx="2" ry="2" />
<text  x="237.88" y="447.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::dataptr (2 samples, 0.05%)</title><rect x="286.3" y="389" width="0.6" height="15.0" fill="rgb(221,202,22)" rx="2" ry="2" />
<text  x="289.31" y="399.5" ></text>
</g>
<g >
<title>do_fault (9 samples, 0.21%)</title><rect x="127.0" y="325" width="2.5" height="15.0" fill="rgb(211,219,52)" rx="2" ry="2" />
<text  x="130.03" y="335.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="159.8" y="341" width="0.3" height="15.0" fill="rgb(233,210,29)" rx="2" ry="2" />
<text  x="162.83" y="351.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;unsigned char&gt;@plt (2 samples, 0.05%)</title><rect x="790.3" y="309" width="0.5" height="15.0" fill="rgb(206,99,29)" rx="2" ry="2" />
<text  x="793.27" y="319.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;torch::autograd::Node,  (15 samples, 0.35%)</title><rect x="458.7" y="357" width="4.1" height="15.0" fill="rgb(241,0,53)" rx="2" ry="2" />
<text  x="461.65" y="367.5" ></text>
</g>
<g >
<title>at::native::empty_cpu@plt (1 samples, 0.02%)</title><rect x="565.1" y="293" width="0.3" height="15.0" fill="rgb(228,173,39)" rx="2" ry="2" />
<text  x="568.11" y="303.5" ></text>
</g>
<g >
<title>[ld-2.31.so] (356 samples, 8.39%)</title><rect x="104.8" y="501" width="98.9" height="15.0" fill="rgb(250,154,18)" rx="2" ry="2" />
<text  x="107.79" y="511.5" >[ld-2.31.so]</text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;std::tuple&lt;at::Tensor, at::Tensor&gt;  (1 samples, 0.02%)</title><rect x="179.3" y="421" width="0.3" height="15.0" fill="rgb(207,57,28)" rx="2" ry="2" />
<text  x="182.29" y="431.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="325.8" y="293" width="0.3" height="15.0" fill="rgb(245,135,2)" rx="2" ry="2" />
<text  x="328.78" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect x="191.0" y="389" width="0.2" height="15.0" fill="rgb(221,51,5)" rx="2" ry="2" />
<text  x="193.96" y="399.5" ></text>
</g>
<g >
<title>c10::GetAllocator (1 samples, 0.02%)</title><rect x="1133.8" y="245" width="0.3" height="15.0" fill="rgb(215,85,36)" rx="2" ry="2" />
<text  x="1136.85" y="255.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;bool&gt;::constexpr_optional_base (3 samples, 0.07%)</title><rect x="414.2" y="405" width="0.8" height="15.0" fill="rgb(231,168,21)" rx="2" ry="2" />
<text  x="417.17" y="415.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (2 samples, 0.05%)</title><rect x="248.8" y="453" width="0.5" height="15.0" fill="rgb(245,220,26)" rx="2" ry="2" />
<text  x="251.78" y="463.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.02%)</title><rect x="147.0" y="389" width="0.3" height="15.0" fill="rgb(218,25,16)" rx="2" ry="2" />
<text  x="150.04" y="399.5" ></text>
</g>
<g >
<title>torch::autograd::make_variable (42 samples, 0.99%)</title><rect x="293.5" y="421" width="11.7" height="15.0" fill="rgb(248,211,21)" rx="2" ry="2" />
<text  x="296.53" y="431.5" ></text>
</g>
<g >
<title>link_path_walk.part.0 (1 samples, 0.02%)</title><rect x="124.8" y="213" width="0.3" height="15.0" fill="rgb(225,202,34)" rx="2" ry="2" />
<text  x="127.80" y="223.5" ></text>
</g>
<g >
<title>c10::TensorOptions::device (12 samples, 0.28%)</title><rect x="274.1" y="421" width="3.3" height="15.0" fill="rgb(243,181,52)" rx="2" ry="2" />
<text  x="277.08" y="431.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.02%)</title><rect x="202.9" y="293" width="0.3" height="15.0" fill="rgb(218,173,13)" rx="2" ry="2" />
<text  x="205.91" y="303.5" ></text>
</g>
<g >
<title>c10::VariableVersion::VersionCounter::~VersionCounter (14 samples, 0.33%)</title><rect x="394.4" y="373" width="3.9" height="15.0" fill="rgb(234,160,54)" rx="2" ry="2" />
<text  x="397.44" y="383.5" ></text>
</g>
<g >
<title>c10::Device::is_cpu (1 samples, 0.02%)</title><rect x="615.4" y="325" width="0.3" height="15.0" fill="rgb(233,211,31)" rx="2" ry="2" />
<text  x="618.43" y="335.5" ></text>
</g>
<g >
<title>c10::constexpr_forward&lt;int&gt; (1 samples, 0.02%)</title><rect x="410.6" y="373" width="0.2" height="15.0" fill="rgb(241,184,35)" rx="2" ry="2" />
<text  x="413.56" y="383.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="154.5" y="261" width="0.3" height="15.0" fill="rgb(226,107,22)" rx="2" ry="2" />
<text  x="157.55" y="271.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr_target::~intrusive_ptr_target (4 samples, 0.09%)</title><rect x="595.4" y="341" width="1.1" height="15.0" fill="rgb(230,87,7)" rx="2" ry="2" />
<text  x="598.41" y="351.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTable_ (2 samples, 0.05%)</title><rect x="262.1" y="325" width="0.6" height="15.0" fill="rgb(211,171,0)" rx="2" ry="2" />
<text  x="265.12" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;, std::allocator&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt; &gt;::_Vector_base (12 samples, 0.28%)</title><rect x="955.7" y="341" width="3.3" height="15.0" fill="rgb(240,161,25)" rx="2" ry="2" />
<text  x="958.67" y="351.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="175.4" y="357" width="0.3" height="15.0" fill="rgb(238,148,50)" rx="2" ry="2" />
<text  x="178.39" y="367.5" ></text>
</g>
<g >
<title>torch::jit::parseName (1 samples, 0.02%)</title><rect x="150.1" y="389" width="0.3" height="15.0" fill="rgb(225,217,22)" rx="2" ry="2" />
<text  x="153.10" y="399.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="153.7" y="325" width="0.3" height="15.0" fill="rgb(220,168,0)" rx="2" ry="2" />
<text  x="156.71" y="335.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::computeDispatchTableEntryWithDebug (1 samples, 0.02%)</title><rect x="190.4" y="309" width="0.3" height="15.0" fill="rgb(231,95,32)" rx="2" ry="2" />
<text  x="193.41" y="319.5" ></text>
</g>
<g >
<title>c10::TensorOptions::device (16 samples, 0.38%)</title><rect x="401.7" y="421" width="4.4" height="15.0" fill="rgb(254,142,31)" rx="2" ry="2" />
<text  x="404.67" y="431.5" ></text>
</g>
<g >
<title>page_fault (14 samples, 0.33%)</title><rect x="126.5" y="421" width="3.9" height="15.0" fill="rgb(211,104,22)" rx="2" ry="2" />
<text  x="129.47" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;, std::allocator&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt; &gt;::_Vector_impl::_Vector_impl (4 samples, 0.09%)</title><rect x="463.7" y="341" width="1.1" height="15.0" fill="rgb(211,124,28)" rx="2" ry="2" />
<text  x="466.65" y="351.5" ></text>
</g>
<g >
<title>c10::Dispatcher::findOp (1 samples, 0.02%)</title><rect x="139.3" y="357" width="0.2" height="15.0" fill="rgb(239,200,8)" rx="2" ry="2" />
<text  x="142.26" y="367.5" ></text>
</g>
<g >
<title>_dl_addr (1 samples, 0.02%)</title><rect x="132.3" y="405" width="0.3" height="15.0" fill="rgb(242,150,33)" rx="2" ry="2" />
<text  x="135.31" y="415.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::ScalarType&gt;::contained_val (1 samples, 0.02%)</title><rect x="965.7" y="325" width="0.3" height="15.0" fill="rgb(226,166,10)" rx="2" ry="2" />
<text  x="968.67" y="335.5" ></text>
</g>
<g >
<title>c10::NUMAMove (1 samples, 0.02%)</title><rect x="34.7" y="485" width="0.3" height="15.0" fill="rgb(240,53,36)" rx="2" ry="2" />
<text  x="37.74" y="495.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::operator bool (1 samples, 0.02%)</title><rect x="242.7" y="485" width="0.2" height="15.0" fill="rgb(214,7,0)" rx="2" ry="2" />
<text  x="245.66" y="495.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="130.4" y="421" width="0.2" height="15.0" fill="rgb(245,12,2)" rx="2" ry="2" />
<text  x="133.36" y="431.5" ></text>
</g>
<g >
<title>c10::TensorOptions::dtype (1 samples, 0.02%)</title><rect x="41.1" y="485" width="0.3" height="15.0" fill="rgb(251,99,49)" rx="2" ry="2" />
<text  x="44.13" y="495.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (3 samples, 0.07%)</title><rect x="169.0" y="293" width="0.8" height="15.0" fill="rgb(224,166,5)" rx="2" ry="2" />
<text  x="172.00" y="303.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::load (1 samples, 0.02%)</title><rect x="440.3" y="357" width="0.3" height="15.0" fill="rgb(217,135,49)" rx="2" ry="2" />
<text  x="443.30" y="367.5" ></text>
</g>
<g >
<title>c10::TensorImpl::compute_contiguous (1 samples, 0.02%)</title><rect x="1143.0" y="229" width="0.3" height="15.0" fill="rgb(205,171,18)" rx="2" ry="2" />
<text  x="1146.02" y="239.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;torch::autograd::Node,  (1 samples, 0.02%)</title><rect x="393.0" y="325" width="0.3" height="15.0" fill="rgb(231,101,31)" rx="2" ry="2" />
<text  x="396.05" y="335.5" ></text>
</g>
<g >
<title>google::protobuf::(anonymous namespace)::AddDescriptorsImpl (3 samples, 0.07%)</title><rect x="202.1" y="453" width="0.8" height="15.0" fill="rgb(236,64,15)" rx="2" ry="2" />
<text  x="205.08" y="463.5" ></text>
</g>
<g >
<title>get_zeroed_page (1 samples, 0.02%)</title><rect x="1179.4" y="261" width="0.3" height="15.0" fill="rgb(232,190,20)" rx="2" ry="2" />
<text  x="1182.44" y="271.5" ></text>
</g>
<g >
<title>c10::constexpr_storage_t&lt;bool&gt;::constexpr_storage_t (2 samples, 0.05%)</title><rect x="414.5" y="389" width="0.5" height="15.0" fill="rgb(210,35,16)" rx="2" ry="2" />
<text  x="417.45" y="399.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="125.4" y="309" width="0.2" height="15.0" fill="rgb(225,108,9)" rx="2" ry="2" />
<text  x="128.36" y="319.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="147.9" y="293" width="0.3" height="15.0" fill="rgb(243,60,4)" rx="2" ry="2" />
<text  x="150.88" y="303.5" ></text>
</g>
<g >
<title>c10::TensorImpl::TensorImpl (19 samples, 0.45%)</title><rect x="1100.2" y="245" width="5.3" height="15.0" fill="rgb(241,59,49)" rx="2" ry="2" />
<text  x="1103.21" y="255.5" ></text>
</g>
<g >
<title>posix_memalign (73 samples, 1.72%)</title><rect x="1112.7" y="229" width="20.3" height="15.0" fill="rgb(251,199,49)" rx="2" ry="2" />
<text  x="1115.72" y="239.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="135.6" y="309" width="0.3" height="15.0" fill="rgb(248,36,53)" rx="2" ry="2" />
<text  x="138.64" y="319.5" ></text>
</g>
<g >
<title>c10::TensorOptions::dtype (3 samples, 0.07%)</title><rect x="369.1" y="341" width="0.9" height="15.0" fill="rgb(219,146,3)" rx="2" ry="2" />
<text  x="372.14" y="351.5" ></text>
</g>
<g >
<title>c10::UndefinedTensorImpl::singleton (5 samples, 0.12%)</title><rect x="45.3" y="485" width="1.4" height="15.0" fill="rgb(230,192,26)" rx="2" ry="2" />
<text  x="48.30" y="495.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (37 samples, 0.87%)</title><rect x="545.9" y="229" width="10.3" height="15.0" fill="rgb(228,14,47)" rx="2" ry="2" />
<text  x="548.93" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::vector (2 samples, 0.05%)</title><rect x="161.5" y="389" width="0.6" height="15.0" fill="rgb(213,173,52)" rx="2" ry="2" />
<text  x="164.50" y="399.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;long&gt;::begin (1 samples, 0.02%)</title><rect x="850.6" y="389" width="0.3" height="15.0" fill="rgb(226,182,17)" rx="2" ry="2" />
<text  x="853.59" y="399.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="125.9" y="197" width="0.3" height="15.0" fill="rgb(238,91,5)" rx="2" ry="2" />
<text  x="128.92" y="207.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (1 samples, 0.02%)</title><rect x="151.5" y="149" width="0.3" height="15.0" fill="rgb(237,93,38)" rx="2" ry="2" />
<text  x="154.49" y="159.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;short&gt; (5 samples, 0.12%)</title><rect x="984.3" y="309" width="1.4" height="15.0" fill="rgb(234,207,10)" rx="2" ry="2" />
<text  x="987.30" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (4 samples, 0.09%)</title><rect x="123.7" y="309" width="1.1" height="15.0" fill="rgb(221,218,38)" rx="2" ry="2" />
<text  x="126.69" y="319.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;torch::autograd::Node,  (18 samples, 0.42%)</title><rect x="947.3" y="325" width="5.0" height="15.0" fill="rgb(213,122,37)" rx="2" ry="2" />
<text  x="950.33" y="335.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="151.2" y="357" width="0.3" height="15.0" fill="rgb(236,172,2)" rx="2" ry="2" />
<text  x="154.21" y="367.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="154.5" y="309" width="0.3" height="15.0" fill="rgb(217,11,36)" rx="2" ry="2" />
<text  x="157.55" y="319.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;bool&gt;::constexpr_optional_base (5 samples, 0.12%)</title><rect x="428.1" y="421" width="1.4" height="15.0" fill="rgb(250,12,13)" rx="2" ry="2" />
<text  x="431.07" y="431.5" ></text>
</g>
<g >
<title>c10::Registerer&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unique_ptr&lt;caffe2::OperatorBase, std::default_delete&lt;caffe2::OperatorBase&gt; &gt;, caffe2::OperatorDef const&amp;, caffe2::Workspace*&gt;::Registerer (6 samples, 0.14%)</title><rect x="191.2" y="437" width="1.7" height="15.0" fill="rgb(214,210,0)" rx="2" ry="2" />
<text  x="194.24" y="447.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="189.6" y="325" width="0.2" height="15.0" fill="rgb(239,181,20)" rx="2" ry="2" />
<text  x="192.57" y="335.5" ></text>
</g>
<g >
<title>c10::Device::Device (4 samples, 0.09%)</title><rect x="278.0" y="373" width="1.1" height="15.0" fill="rgb(226,138,30)" rx="2" ry="2" />
<text  x="280.97" y="383.5" ></text>
</g>
<g >
<title>__libc_malloc (2 samples, 0.05%)</title><rect x="785.8" y="245" width="0.6" height="15.0" fill="rgb(224,63,11)" rx="2" ry="2" />
<text  x="788.83" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;torch::autograd::AutogradMeta, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::~unique_ptr (5 samples, 0.12%)</title><rect x="488.4" y="405" width="1.4" height="15.0" fill="rgb(239,209,3)" rx="2" ry="2" />
<text  x="491.39" y="415.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::retain_ (6 samples, 0.14%)</title><rect x="659.9" y="373" width="1.7" height="15.0" fill="rgb(254,23,41)" rx="2" ry="2" />
<text  x="662.90" y="383.5" ></text>
</g>
<g >
<title>torch::detail::TorchLibraryInit::TorchLibraryInit (1 samples, 0.02%)</title><rect x="186.5" y="437" width="0.3" height="15.0" fill="rgb(228,114,23)" rx="2" ry="2" />
<text  x="189.51" y="447.5" ></text>
</g>
<g >
<title>posix_memalign (60 samples, 1.41%)</title><rect x="754.7" y="229" width="16.7" height="15.0" fill="rgb(206,118,25)" rx="2" ry="2" />
<text  x="757.69" y="239.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, c10::AutogradMetaInterface*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="1014.0" y="309" width="0.3" height="15.0" fill="rgb(208,164,25)" rx="2" ry="2" />
<text  x="1017.04" y="319.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (1 samples, 0.02%)</title><rect x="177.3" y="309" width="0.3" height="15.0" fill="rgb(235,200,9)" rx="2" ry="2" />
<text  x="180.34" y="319.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="150.1" y="293" width="0.3" height="15.0" fill="rgb(238,227,16)" rx="2" ry="2" />
<text  x="153.10" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (1 samples, 0.02%)</title><rect x="209.6" y="485" width="0.3" height="15.0" fill="rgb(229,113,4)" rx="2" ry="2" />
<text  x="212.59" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::either&lt;c10::OperatorName, c10::FunctionSchema&gt;, std::allocator&lt;c10::either&lt;c10::OperatorName, c10::FunctionSchema&gt; &gt; &gt;::_M_realloc_insert&lt;c10::either&lt;c10::OperatorName, c10::FunctionSchema&gt; &gt; (1 samples, 0.02%)</title><rect x="141.5" y="357" width="0.3" height="15.0" fill="rgb(235,94,11)" rx="2" ry="2" />
<text  x="144.48" y="367.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.02%)</title><rect x="197.1" y="389" width="0.3" height="15.0" fill="rgb(217,85,33)" rx="2" ry="2" />
<text  x="200.08" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt; &gt;::_M_erase (2 samples, 0.05%)</title><rect x="254.9" y="325" width="0.6" height="15.0" fill="rgb(225,120,18)" rx="2" ry="2" />
<text  x="257.90" y="335.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;long&gt;::begin (3 samples, 0.07%)</title><rect x="852.0" y="373" width="0.8" height="15.0" fill="rgb(244,43,43)" rx="2" ry="2" />
<text  x="854.98" y="383.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseDeclaration (4 samples, 0.09%)</title><rect x="220.4" y="421" width="1.1" height="15.0" fill="rgb(225,130,21)" rx="2" ry="2" />
<text  x="223.43" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="100.6" y="485" width="0.3" height="15.0" fill="rgb(237,114,27)" rx="2" ry="2" />
<text  x="103.62" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.14%)</title><rect x="123.7" y="325" width="1.7" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="126.69" y="335.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, torch::autograd::AutogradMeta*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="935.7" y="277" width="0.2" height="15.0" fill="rgb(222,198,5)" rx="2" ry="2" />
<text  x="938.65" y="287.5" ></text>
</g>
<g >
<title>cfree (2 samples, 0.05%)</title><rect x="827.0" y="341" width="0.5" height="15.0" fill="rgb(251,164,28)" rx="2" ry="2" />
<text  x="829.97" y="351.5" ></text>
</g>
<g >
<title>c10::TensorImpl::TensorImpl (5 samples, 0.12%)</title><rect x="230.4" y="485" width="1.4" height="15.0" fill="rgb(223,165,38)" rx="2" ry="2" />
<text  x="233.43" y="495.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.02%)</title><rect x="141.5" y="373" width="0.3" height="15.0" fill="rgb(233,0,42)" rx="2" ry="2" />
<text  x="144.48" y="383.5" ></text>
</g>
<g >
<title>c10::TensorOptions::requires_grad (1 samples, 0.02%)</title><rect x="433.9" y="421" width="0.3" height="15.0" fill="rgb(227,19,37)" rx="2" ry="2" />
<text  x="436.91" y="431.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt;::allocator (1 samples, 0.02%)</title><rect x="1178.3" y="485" width="0.3" height="15.0" fill="rgb(219,202,14)" rx="2" ry="2" />
<text  x="1181.33" y="495.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::optional (1 samples, 0.02%)</title><rect x="576.8" y="389" width="0.3" height="15.0" fill="rgb(224,228,42)" rx="2" ry="2" />
<text  x="579.79" y="399.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.02%)</title><rect x="265.5" y="389" width="0.2" height="15.0" fill="rgb(214,84,3)" rx="2" ry="2" />
<text  x="268.46" y="399.5" ></text>
</g>
<g >
<title>__get_free_pages (1 samples, 0.02%)</title><rect x="1179.4" y="245" width="0.3" height="15.0" fill="rgb(250,36,31)" rx="2" ry="2" />
<text  x="1182.44" y="255.5" ></text>
</g>
<g >
<title>c10::findSchemaDifferences[abi:cxx11] (1 samples, 0.02%)</title><rect x="151.8" y="341" width="0.2" height="15.0" fill="rgb(231,49,8)" rx="2" ry="2" />
<text  x="154.77" y="351.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (1 samples, 0.02%)</title><rect x="154.0" y="389" width="0.3" height="15.0" fill="rgb(221,176,2)" rx="2" ry="2" />
<text  x="156.99" y="399.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::_M_head (2 samples, 0.05%)</title><rect x="484.5" y="325" width="0.6" height="15.0" fill="rgb(240,135,22)" rx="2" ry="2" />
<text  x="487.50" y="335.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (2 samples, 0.05%)</title><rect x="302.4" y="405" width="0.6" height="15.0" fill="rgb(215,77,6)" rx="2" ry="2" />
<text  x="305.43" y="415.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.02%)</title><rect x="195.7" y="341" width="0.3" height="15.0" fill="rgb(230,33,44)" rx="2" ry="2" />
<text  x="198.69" y="351.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (6 samples, 0.14%)</title><rect x="377.5" y="389" width="1.6" height="15.0" fill="rgb(222,202,34)" rx="2" ry="2" />
<text  x="380.48" y="399.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.02%)</title><rect x="540.4" y="261" width="0.3" height="15.0" fill="rgb(235,43,6)" rx="2" ry="2" />
<text  x="543.37" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt; &gt;::_M_emplace_unique&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, caffe2::OpSchema&gt; &gt; (1 samples, 0.02%)</title><rect x="194.0" y="421" width="0.3" height="15.0" fill="rgb(241,17,29)" rx="2" ry="2" />
<text  x="197.02" y="431.5" ></text>
</g>
<g >
<title>at::empty (454 samples, 10.69%)</title><rect x="673.8" y="389" width="126.2" height="15.0" fill="rgb(217,185,49)" rx="2" ry="2" />
<text  x="676.80" y="399.5" >at::empty</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (1 samples, 0.02%)</title><rect x="138.4" y="357" width="0.3" height="15.0" fill="rgb(205,135,8)" rx="2" ry="2" />
<text  x="141.42" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;torch::autograd::AutogradMeta, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::_M_ptr (7 samples, 0.16%)</title><rect x="934.0" y="341" width="1.9" height="15.0" fill="rgb(243,36,2)" rx="2" ry="2" />
<text  x="936.99" y="351.5" ></text>
</g>
<g >
<title>[libc10.so] (2 samples, 0.05%)</title><rect x="215.7" y="485" width="0.6" height="15.0" fill="rgb(230,205,32)" rx="2" ry="2" />
<text  x="218.70" y="495.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (1 samples, 0.02%)</title><rect x="181.2" y="405" width="0.3" height="15.0" fill="rgb(226,124,1)" rx="2" ry="2" />
<text  x="184.23" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect x="138.4" y="309" width="0.3" height="15.0" fill="rgb(207,85,32)" rx="2" ry="2" />
<text  x="141.42" y="319.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="122.0" y="341" width="0.3" height="15.0" fill="rgb(248,50,26)" rx="2" ry="2" />
<text  x="125.02" y="351.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, onnx_torch::TypeProto, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx_torch::TypeProto&gt; &gt; &gt;::~unordered_map (1 samples, 0.02%)</title><rect x="255.5" y="389" width="0.2" height="15.0" fill="rgb(252,75,36)" rx="2" ry="2" />
<text  x="258.45" y="399.5" ></text>
</g>
<g >
<title>THFloatVector_startup::THFloatVector_startup (1 samples, 0.02%)</title><rect x="146.5" y="437" width="0.3" height="15.0" fill="rgb(208,139,11)" rx="2" ry="2" />
<text  x="149.49" y="447.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::operator bool (3 samples, 0.07%)</title><rect x="889.0" y="373" width="0.8" height="15.0" fill="rgb(227,153,31)" rx="2" ry="2" />
<text  x="891.95" y="383.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::use_count (1 samples, 0.02%)</title><rect x="445.3" y="405" width="0.3" height="15.0" fill="rgb(219,128,19)" rx="2" ry="2" />
<text  x="448.31" y="415.5" ></text>
</g>
<g >
<title>c10::TensorType::operator== (1 samples, 0.02%)</title><rect x="181.2" y="325" width="0.3" height="15.0" fill="rgb(211,161,34)" rx="2" ry="2" />
<text  x="184.23" y="335.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="203.2" y="341" width="0.3" height="15.0" fill="rgb(223,164,21)" rx="2" ry="2" />
<text  x="206.19" y="351.5" ></text>
</g>
<g >
<title>c10::constexpr_storage_t&lt;bool&gt;::constexpr_storage_t (1 samples, 0.02%)</title><rect x="576.8" y="357" width="0.3" height="15.0" fill="rgb(251,198,40)" rx="2" ry="2" />
<text  x="579.79" y="367.5" ></text>
</g>
<g >
<title>c10::VariableVersion::VersionCounter::~VersionCounter (20 samples, 0.47%)</title><rect x="591.0" y="357" width="5.5" height="15.0" fill="rgb(217,190,20)" rx="2" ry="2" />
<text  x="593.97" y="367.5" ></text>
</g>
<g >
<title>ext4_filemap_fault (2 samples, 0.05%)</title><rect x="127.3" y="293" width="0.6" height="15.0" fill="rgb(249,83,53)" rx="2" ry="2" />
<text  x="130.31" y="303.5" ></text>
</g>
<g >
<title>cfree (3 samples, 0.07%)</title><rect x="398.3" y="389" width="0.9" height="15.0" fill="rgb(224,45,19)" rx="2" ry="2" />
<text  x="401.33" y="399.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (1 samples, 0.02%)</title><rect x="180.4" y="357" width="0.3" height="15.0" fill="rgb(250,175,6)" rx="2" ry="2" />
<text  x="183.40" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;c10::AutogradMetaInterface, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::_M_ptr (2 samples, 0.05%)</title><rect x="246.8" y="485" width="0.6" height="15.0" fill="rgb(237,182,20)" rx="2" ry="2" />
<text  x="249.83" y="495.5" ></text>
</g>
<g >
<title>std::move&lt;torch::autograd::Node*&amp;&gt; (2 samples, 0.05%)</title><rect x="462.3" y="309" width="0.5" height="15.0" fill="rgb(220,128,37)" rx="2" ry="2" />
<text  x="465.26" y="319.5" ></text>
</g>
<g >
<title>__tls_get_addr@plt (3 samples, 0.07%)</title><rect x="324.9" y="293" width="0.9" height="15.0" fill="rgb(215,118,22)" rx="2" ry="2" />
<text  x="327.94" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;, std::allocator&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.02%)</title><rect x="464.8" y="357" width="0.2" height="15.0" fill="rgb(241,136,52)" rx="2" ry="2" />
<text  x="467.77" y="367.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.02%)</title><rect x="133.4" y="165" width="0.3" height="15.0" fill="rgb(247,28,51)" rx="2" ry="2" />
<text  x="136.42" y="175.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.02%)</title><rect x="194.9" y="389" width="0.2" height="15.0" fill="rgb(233,3,1)" rx="2" ry="2" />
<text  x="197.85" y="399.5" ></text>
</g>
<g >
<title>c10::constexpr_forward&lt;c10::DeviceType const&amp;&gt; (1 samples, 0.02%)</title><rect x="610.1" y="373" width="0.3" height="15.0" fill="rgb(206,45,42)" rx="2" ry="2" />
<text  x="613.15" y="383.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::initialized (1 samples, 0.02%)</title><rect x="403.3" y="373" width="0.3" height="15.0" fill="rgb(244,150,23)" rx="2" ry="2" />
<text  x="406.33" y="383.5" ></text>
</g>
<g >
<title>c10::TensorType::operator== (1 samples, 0.02%)</title><rect x="173.2" y="325" width="0.2" height="15.0" fill="rgb(207,140,3)" rx="2" ry="2" />
<text  x="176.17" y="335.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (3 samples, 0.07%)</title><rect x="134.0" y="405" width="0.8" height="15.0" fill="rgb(230,84,39)" rx="2" ry="2" />
<text  x="136.98" y="415.5" ></text>
</g>
<g >
<title>c10::typeMetaToScalarType (9 samples, 0.21%)</title><rect x="791.9" y="325" width="2.5" height="15.0" fill="rgb(249,32,44)" rx="2" ry="2" />
<text  x="794.94" y="335.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="265.7" y="373" width="0.3" height="15.0" fill="rgb(237,106,25)" rx="2" ry="2" />
<text  x="268.74" y="383.5" ></text>
</g>
<g >
<title>c10::ProfiledCPUMemoryReporter::New (14 samples, 0.33%)</title><rect x="750.2" y="245" width="3.9" height="15.0" fill="rgb(254,83,13)" rx="2" ry="2" />
<text  x="753.24" y="255.5" ></text>
</g>
<g >
<title>[libtorch_cpu.so] (1 samples, 0.02%)</title><rect x="250.7" y="325" width="0.3" height="15.0" fill="rgb(229,46,50)" rx="2" ry="2" />
<text  x="253.73" y="335.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="152.3" y="245" width="0.3" height="15.0" fill="rgb(247,30,49)" rx="2" ry="2" />
<text  x="155.32" y="255.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1132.7" y="117" width="0.3" height="15.0" fill="rgb(239,24,41)" rx="2" ry="2" />
<text  x="1135.74" y="127.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (1 samples, 0.02%)</title><rect x="163.2" y="197" width="0.2" height="15.0" fill="rgb(237,10,49)" rx="2" ry="2" />
<text  x="166.16" y="207.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::ScalarType&gt;::initialized (1 samples, 0.02%)</title><rect x="467.5" y="325" width="0.3" height="15.0" fill="rgb(242,37,41)" rx="2" ry="2" />
<text  x="470.55" y="335.5" ></text>
</g>
<g >
<title>c10::Dispatcher::callWithDispatchKey&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (352 samples, 8.29%)</title><rect x="1053.5" y="325" width="97.9" height="15.0" fill="rgb(228,77,15)" rx="2" ry="2" />
<text  x="1056.51" y="335.5" >c10::Dispat..</text>
</g>
<g >
<title>__tls_get_addr (3 samples, 0.07%)</title><rect x="784.4" y="245" width="0.9" height="15.0" fill="rgb(226,187,30)" rx="2" ry="2" />
<text  x="787.44" y="255.5" ></text>
</g>
<g >
<title>[libc10.so] (21 samples, 0.49%)</title><rect x="203.7" y="501" width="5.9" height="15.0" fill="rgb(225,190,50)" rx="2" ry="2" />
<text  x="206.75" y="511.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="263.0" y="373" width="0.2" height="15.0" fill="rgb(253,155,15)" rx="2" ry="2" />
<text  x="265.96" y="383.5" ></text>
</g>
<g >
<title>path_lookupat.isra.0 (1 samples, 0.02%)</title><rect x="124.8" y="229" width="0.3" height="15.0" fill="rgb(220,212,21)" rx="2" ry="2" />
<text  x="127.80" y="239.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1 samples, 0.02%)</title><rect x="132.3" y="389" width="0.3" height="15.0" fill="rgb(254,95,37)" rx="2" ry="2" />
<text  x="135.31" y="399.5" ></text>
</g>
<g >
<title>__tls_get_addr@plt (1 samples, 0.02%)</title><rect x="513.7" y="277" width="0.3" height="15.0" fill="rgb(241,22,17)" rx="2" ry="2" />
<text  x="516.69" y="287.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (2 samples, 0.05%)</title><rect x="907.6" y="405" width="0.5" height="15.0" fill="rgb(208,53,40)" rx="2" ry="2" />
<text  x="910.58" y="415.5" ></text>
</g>
<g >
<title>__vfs_read (1 samples, 0.02%)</title><rect x="146.5" y="213" width="0.3" height="15.0" fill="rgb(220,204,29)" rx="2" ry="2" />
<text  x="149.49" y="223.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (10 samples, 0.24%)</title><rect x="1186.9" y="325" width="2.8" height="15.0" fill="rgb(229,138,19)" rx="2" ry="2" />
<text  x="1189.94" y="335.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.02%)</title><rect x="177.3" y="325" width="0.3" height="15.0" fill="rgb(238,96,11)" rx="2" ry="2" />
<text  x="180.34" y="335.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::operator* (1 samples, 0.02%)</title><rect x="415.8" y="405" width="0.3" height="15.0" fill="rgb(250,2,32)" rx="2" ry="2" />
<text  x="418.84" y="415.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;float&gt; (3 samples, 0.07%)</title><rect x="283.0" y="405" width="0.8" height="15.0" fill="rgb(212,173,26)" rx="2" ry="2" />
<text  x="285.97" y="415.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="202.9" y="309" width="0.3" height="15.0" fill="rgb(240,18,49)" rx="2" ry="2" />
<text  x="205.91" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int&gt; (1 samples, 0.02%)</title><rect x="137.3" y="357" width="0.3" height="15.0" fill="rgb(215,213,2)" rx="2" ry="2" />
<text  x="140.31" y="367.5" ></text>
</g>
<g >
<title>std::forward&lt;caffe2::TypeMeta&gt; (2 samples, 0.05%)</title><rect x="92.6" y="485" width="0.5" height="15.0" fill="rgb(227,190,9)" rx="2" ry="2" />
<text  x="95.56" y="495.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (4 samples, 0.09%)</title><rect x="249.9" y="373" width="1.1" height="15.0" fill="rgb(220,22,4)" rx="2" ry="2" />
<text  x="252.89" y="383.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, c10::AutogradMetaInterface*, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt; (2 samples, 0.05%)</title><rect x="304.7" y="373" width="0.5" height="15.0" fill="rgb(254,88,43)" rx="2" ry="2" />
<text  x="307.65" y="383.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="122.0" y="325" width="0.3" height="15.0" fill="rgb(231,164,54)" rx="2" ry="2" />
<text  x="125.02" y="335.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="178.7" y="277" width="0.3" height="15.0" fill="rgb(222,82,28)" rx="2" ry="2" />
<text  x="181.73" y="287.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="130.6" y="389" width="0.3" height="15.0" fill="rgb(230,107,46)" rx="2" ry="2" />
<text  x="133.64" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;c10::AutogradMetaInterface, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::_M_ptr (2 samples, 0.05%)</title><rect x="487.8" y="389" width="0.6" height="15.0" fill="rgb(245,53,19)" rx="2" ry="2" />
<text  x="490.84" y="399.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="152.3" y="293" width="0.3" height="15.0" fill="rgb(252,58,17)" rx="2" ry="2" />
<text  x="155.32" y="303.5" ></text>
</g>
<g >
<title>[libc10.so] (2 samples, 0.05%)</title><rect x="589.9" y="293" width="0.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="592.85" y="303.5" ></text>
</g>
<g >
<title>at::RecordFunction::~RecordFunction (4 samples, 0.09%)</title><rect x="689.1" y="357" width="1.1" height="15.0" fill="rgb(252,195,48)" rx="2" ry="2" />
<text  x="692.09" y="367.5" ></text>
</g>
<g >
<title>c10::InternedStrings::InternedStrings (1 samples, 0.02%)</title><rect x="142.0" y="389" width="0.3" height="15.0" fill="rgb(217,214,3)" rx="2" ry="2" />
<text  x="145.04" y="399.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;torch::autograd::Node,  (1 samples, 0.02%)</title><rect x="465.0" y="357" width="0.3" height="15.0" fill="rgb(239,198,15)" rx="2" ry="2" />
<text  x="468.04" y="367.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="150.1" y="277" width="0.3" height="15.0" fill="rgb(231,55,44)" rx="2" ry="2" />
<text  x="153.10" y="287.5" ></text>
</g>
<g >
<title>torch::detail::TorchLibraryInit::~TorchLibraryInit (26 samples, 0.61%)</title><rect x="255.7" y="389" width="7.3" height="15.0" fill="rgb(226,112,47)" rx="2" ry="2" />
<text  x="258.73" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect x="187.1" y="325" width="0.2" height="15.0" fill="rgb(237,112,52)" rx="2" ry="2" />
<text  x="190.07" y="335.5" ></text>
</g>
<g >
<title>c10::alloc_cpu (44 samples, 1.04%)</title><rect x="544.0" y="261" width="12.2" height="15.0" fill="rgb(230,130,52)" rx="2" ry="2" />
<text  x="546.99" y="271.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (2 samples, 0.05%)</title><rect x="144.5" y="325" width="0.6" height="15.0" fill="rgb(205,204,13)" rx="2" ry="2" />
<text  x="147.54" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect x="198.7" y="373" width="0.3" height="15.0" fill="rgb(245,87,39)" rx="2" ry="2" />
<text  x="201.74" y="383.5" ></text>
</g>
<g >
<title>c10::TensorImpl::TensorImpl (17 samples, 0.40%)</title><rect x="1100.8" y="229" width="4.7" height="15.0" fill="rgb(220,54,53)" rx="2" ry="2" />
<text  x="1103.77" y="239.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;unsigned char&gt; (4 samples, 0.09%)</title><rect x="80.9" y="485" width="1.1" height="15.0" fill="rgb(233,201,32)" rx="2" ry="2" />
<text  x="83.88" y="495.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;c10::Device&gt;::constexpr_optional_base&lt;c10::DeviceType const&amp;, int&gt; (20 samples, 0.47%)</title><rect x="610.1" y="389" width="5.6" height="15.0" fill="rgb(211,42,45)" rx="2" ry="2" />
<text  x="613.15" y="399.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.02%)</title><rect x="125.9" y="181" width="0.3" height="15.0" fill="rgb(215,143,19)" rx="2" ry="2" />
<text  x="128.92" y="191.5" ></text>
</g>
<g >
<title>__count_memcg_events (1 samples, 0.02%)</title><rect x="187.6" y="197" width="0.3" height="15.0" fill="rgb(215,212,20)" rx="2" ry="2" />
<text  x="190.63" y="207.5" ></text>
</g>
<g >
<title>c10::constexpr_storage_t&lt;bool&gt;::constexpr_storage_t (2 samples, 0.05%)</title><rect x="804.7" y="341" width="0.6" height="15.0" fill="rgb(232,191,19)" rx="2" ry="2" />
<text  x="807.73" y="351.5" ></text>
</g>
<g >
<title>c10::TensorImpl::release_resources (17 samples, 0.40%)</title><rect x="585.7" y="373" width="4.7" height="15.0" fill="rgb(205,3,34)" rx="2" ry="2" />
<text  x="588.68" y="383.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.02%)</title><rect x="147.3" y="405" width="0.3" height="15.0" fill="rgb(237,223,32)" rx="2" ry="2" />
<text  x="150.32" y="415.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="194.6" y="309" width="0.3" height="15.0" fill="rgb(207,20,39)" rx="2" ry="2" />
<text  x="197.57" y="319.5" ></text>
</g>
<g >
<title>c10::TensorImpl::empty_tensor_restride (8 samples, 0.19%)</title><rect x="358.9" y="277" width="2.2" height="15.0" fill="rgb(251,41,32)" rx="2" ry="2" />
<text  x="361.86" y="287.5" ></text>
</g>
<g >
<title>__cxa_demangle (1 samples, 0.02%)</title><rect x="184.3" y="405" width="0.3" height="15.0" fill="rgb(225,92,34)" rx="2" ry="2" />
<text  x="187.29" y="415.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, c10::AutogradMetaInterface*, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt; (2 samples, 0.05%)</title><rect x="668.5" y="341" width="0.6" height="15.0" fill="rgb(254,48,38)" rx="2" ry="2" />
<text  x="671.52" y="351.5" ></text>
</g>
<g >
<title>find_vma (1 samples, 0.02%)</title><rect x="180.1" y="261" width="0.3" height="15.0" fill="rgb(212,212,44)" rx="2" ry="2" />
<text  x="183.12" y="271.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;int&gt; (1 samples, 0.02%)</title><rect x="78.9" y="485" width="0.3" height="15.0" fill="rgb(225,168,23)" rx="2" ry="2" />
<text  x="81.94" y="495.5" ></text>
</g>
<g >
<title>page_fault (2 samples, 0.05%)</title><rect x="201.5" y="373" width="0.6" height="15.0" fill="rgb(251,56,43)" rx="2" ry="2" />
<text  x="204.52" y="383.5" ></text>
</g>
<g >
<title>c10::constexpr_forward&lt;c10::DeviceType const&amp;&gt; (1 samples, 0.02%)</title><rect x="863.9" y="373" width="0.3" height="15.0" fill="rgb(219,113,22)" rx="2" ry="2" />
<text  x="866.94" y="383.5" ></text>
</g>
<g >
<title>c10::TensorImpl::~TensorImpl (18 samples, 0.42%)</title><rect x="393.3" y="389" width="5.0" height="15.0" fill="rgb(227,44,7)" rx="2" ry="2" />
<text  x="396.33" y="399.5" ></text>
</g>
<g >
<title>[libcufft.so.10.2.0.218] (2 samples, 0.05%)</title><rect x="216.8" y="485" width="0.6" height="15.0" fill="rgb(215,39,39)" rx="2" ry="2" />
<text  x="219.81" y="495.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.02%)</title><rect x="133.4" y="293" width="0.3" height="15.0" fill="rgb(212,143,2)" rx="2" ry="2" />
<text  x="136.42" y="303.5" ></text>
</g>
<g >
<title>c10::detail::_str_wrapper&lt;char const*, char const* const&amp;, char const*, unsigned int const&amp;&gt;::call[abi:cxx11] (1 samples, 0.02%)</title><rect x="136.8" y="373" width="0.2" height="15.0" fill="rgb(229,180,38)" rx="2" ry="2" />
<text  x="139.76" y="383.5" ></text>
</g>
<g >
<title>c10::ThreadLocalDebugInfo::get (8 samples, 0.19%)</title><rect x="751.9" y="213" width="2.2" height="15.0" fill="rgb(234,122,26)" rx="2" ry="2" />
<text  x="754.91" y="223.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::expect (1 samples, 0.02%)</title><rect x="175.7" y="341" width="0.3" height="15.0" fill="rgb(216,126,7)" rx="2" ry="2" />
<text  x="178.67" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (1 samples, 0.02%)</title><rect x="167.9" y="309" width="0.3" height="15.0" fill="rgb(212,113,34)" rx="2" ry="2" />
<text  x="170.89" y="319.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="597.1" y="373" width="0.3" height="15.0" fill="rgb(240,24,8)" rx="2" ry="2" />
<text  x="600.08" y="383.5" ></text>
</g>
<g >
<title>c10::constexpr_storage_t&lt;c10::ScalarType&gt;::constexpr_storage_t&lt;c10::ScalarType&gt; (1 samples, 0.02%)</title><rect x="979.9" y="293" width="0.2" height="15.0" fill="rgb(224,37,47)" rx="2" ry="2" />
<text  x="982.85" y="303.5" ></text>
</g>
<g >
<title>std::swap&lt;torch::autograd::Node*&gt; (5 samples, 0.12%)</title><rect x="950.9" y="309" width="1.4" height="15.0" fill="rgb(210,125,3)" rx="2" ry="2" />
<text  x="953.94" y="319.5" ></text>
</g>
<g >
<title>std::begin&lt;long&gt; (3 samples, 0.07%)</title><rect x="599.0" y="405" width="0.9" height="15.0" fill="rgb(248,222,9)" rx="2" ry="2" />
<text  x="602.03" y="415.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="193.5" y="357" width="0.2" height="15.0" fill="rgb(237,93,3)" rx="2" ry="2" />
<text  x="196.46" y="367.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="187.6" y="293" width="0.3" height="15.0" fill="rgb(217,215,41)" rx="2" ry="2" />
<text  x="190.63" y="303.5" ></text>
</g>
<g >
<title>c10::constexpr_storage_t&lt;c10::MemoryFormat&gt;::constexpr_storage_t (2 samples, 0.05%)</title><rect x="898.7" y="389" width="0.5" height="15.0" fill="rgb(220,155,41)" rx="2" ry="2" />
<text  x="901.68" y="399.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::computeDispatchTableEntryWithDebug@plt (1 samples, 0.02%)</title><rect x="261.8" y="277" width="0.3" height="15.0" fill="rgb(214,163,2)" rx="2" ry="2" />
<text  x="264.84" y="287.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::initialized (1 samples, 0.02%)</title><rect x="412.8" y="389" width="0.3" height="15.0" fill="rgb(229,55,17)" rx="2" ry="2" />
<text  x="415.78" y="399.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="185.7" y="309" width="0.3" height="15.0" fill="rgb(212,128,23)" rx="2" ry="2" />
<text  x="188.68" y="319.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="137.3" y="245" width="0.3" height="15.0" fill="rgb(243,158,35)" rx="2" ry="2" />
<text  x="140.31" y="255.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="179.3" y="277" width="0.3" height="15.0" fill="rgb(232,30,49)" rx="2" ry="2" />
<text  x="182.29" y="287.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::(anonymous namespace)::createArgumentVector (1 samples, 0.02%)</title><rect x="153.4" y="373" width="0.3" height="15.0" fill="rgb(237,226,15)" rx="2" ry="2" />
<text  x="156.43" y="383.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseDeclaration (1 samples, 0.02%)</title><rect x="195.1" y="373" width="0.3" height="15.0" fill="rgb(242,129,46)" rx="2" ry="2" />
<text  x="198.13" y="383.5" ></text>
</g>
<g >
<title>at::RecordFunction::RecordFunction (4 samples, 0.09%)</title><rect x="512.9" y="325" width="1.1" height="15.0" fill="rgb(215,92,1)" rx="2" ry="2" />
<text  x="515.86" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt; &gt;::_M_erase (3 samples, 0.07%)</title><rect x="254.6" y="389" width="0.9" height="15.0" fill="rgb(213,224,31)" rx="2" ry="2" />
<text  x="257.62" y="399.5" ></text>
</g>
<g >
<title>at::detail::make_tensor&lt;c10::TensorImpl, c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;, c10::DispatchKey, caffe2::TypeMeta&amp;&gt; (2 samples, 0.05%)</title><rect x="215.7" y="469" width="0.6" height="15.0" fill="rgb(213,103,13)" rx="2" ry="2" />
<text  x="218.70" y="479.5" ></text>
</g>
<g >
<title>c10::alloc_cpu (8 samples, 0.19%)</title><rect x="46.7" y="485" width="2.2" height="15.0" fill="rgb(248,63,41)" rx="2" ry="2" />
<text  x="49.69" y="495.5" ></text>
</g>
<g >
<title>c10::FunctionSchema::FunctionSchema (1 samples, 0.02%)</title><rect x="184.6" y="405" width="0.2" height="15.0" fill="rgb(236,33,37)" rx="2" ry="2" />
<text  x="187.57" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect x="176.5" y="357" width="0.3" height="15.0" fill="rgb(237,102,29)" rx="2" ry="2" />
<text  x="179.51" y="367.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::registerSchema (1 samples, 0.02%)</title><rect x="189.8" y="389" width="0.3" height="15.0" fill="rgb(229,224,22)" rx="2" ry="2" />
<text  x="192.85" y="399.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, torch::CppFunction&gt; (1 samples, 0.02%)</title><rect x="146.2" y="421" width="0.3" height="15.0" fill="rgb(207,53,42)" rx="2" ry="2" />
<text  x="149.21" y="431.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="202.1" y="373" width="0.3" height="15.0" fill="rgb(235,112,9)" rx="2" ry="2" />
<text  x="205.08" y="383.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="132.3" y="421" width="0.3" height="15.0" fill="rgb(239,84,6)" rx="2" ry="2" />
<text  x="135.31" y="431.5" ></text>
</g>
<g >
<title>torch::jit::strtod_c@plt (1 samples, 0.02%)</title><rect x="166.2" y="261" width="0.3" height="15.0" fill="rgb(220,221,49)" rx="2" ry="2" />
<text  x="169.22" y="271.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="187.6" y="245" width="0.3" height="15.0" fill="rgb(240,117,30)" rx="2" ry="2" />
<text  x="190.63" y="255.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::optional&lt;caffe2::TypeMeta, false&gt; (1 samples, 0.02%)</title><rect x="634.6" y="421" width="0.3" height="15.0" fill="rgb(237,97,35)" rx="2" ry="2" />
<text  x="637.61" y="431.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_SparseCPUType.cpp (1 samples, 0.02%)</title><rect x="145.9" y="453" width="0.3" height="15.0" fill="rgb(210,9,48)" rx="2" ry="2" />
<text  x="148.93" y="463.5" ></text>
</g>
<g >
<title>at::Tensor::~Tensor (83 samples, 1.96%)</title><rect x="376.6" y="437" width="23.1" height="15.0" fill="rgb(214,29,40)" rx="2" ry="2" />
<text  x="379.65" y="447.5" >a..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.05%)</title><rect x="196.0" y="437" width="0.5" height="15.0" fill="rgb(241,119,2)" rx="2" ry="2" />
<text  x="198.96" y="447.5" ></text>
</g>
<g >
<title>c10::VariableVersion::VersionCounter::~VersionCounter (9 samples, 0.21%)</title><rect x="395.3" y="357" width="2.5" height="15.0" fill="rgb(250,24,26)" rx="2" ry="2" />
<text  x="398.27" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.05%)</title><rect x="161.5" y="373" width="0.6" height="15.0" fill="rgb(214,69,23)" rx="2" ry="2" />
<text  x="164.50" y="383.5" ></text>
</g>
<g >
<title>torch::Library::_impl (2 samples, 0.05%)</title><rect x="179.6" y="421" width="0.5" height="15.0" fill="rgb(250,68,44)" rx="2" ry="2" />
<text  x="182.56" y="431.5" ></text>
</g>
<g >
<title>c10::Dispatcher::deregisterFallback_ (1 samples, 0.02%)</title><rect x="257.1" y="373" width="0.3" height="15.0" fill="rgb(223,117,38)" rx="2" ry="2" />
<text  x="260.12" y="383.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (1 samples, 0.02%)</title><rect x="175.7" y="357" width="0.3" height="15.0" fill="rgb(206,165,47)" rx="2" ry="2" />
<text  x="178.67" y="367.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (1 samples, 0.02%)</title><rect x="178.2" y="373" width="0.3" height="15.0" fill="rgb(208,34,37)" rx="2" ry="2" />
<text  x="181.17" y="383.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_TraceType_0.cpp (7 samples, 0.16%)</title><rect x="146.8" y="453" width="1.9" height="15.0" fill="rgb(254,90,29)" rx="2" ry="2" />
<text  x="149.76" y="463.5" ></text>
</g>
<g >
<title>torch::autograd::AutogradMeta::AutogradMeta (195 samples, 4.59%)</title><rect x="937.0" y="373" width="54.2" height="15.0" fill="rgb(237,93,33)" rx="2" ry="2" />
<text  x="940.04" y="383.5" >torch..</text>
</g>
<g >
<title>torch::jit::Lexer::nextIf (1 samples, 0.02%)</title><rect x="166.8" y="341" width="0.3" height="15.0" fill="rgb(210,79,51)" rx="2" ry="2" />
<text  x="169.78" y="351.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (3 samples, 0.07%)</title><rect x="169.0" y="309" width="0.8" height="15.0" fill="rgb(252,69,48)" rx="2" ry="2" />
<text  x="172.00" y="319.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.02%)</title><rect x="188.7" y="357" width="0.3" height="15.0" fill="rgb(243,132,12)" rx="2" ry="2" />
<text  x="191.74" y="367.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::operator* (2 samples, 0.05%)</title><rect x="422.0" y="389" width="0.5" height="15.0" fill="rgb(231,44,34)" rx="2" ry="2" />
<text  x="424.96" y="399.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.02%)</title><rect x="195.7" y="389" width="0.3" height="15.0" fill="rgb(215,42,43)" rx="2" ry="2" />
<text  x="198.69" y="399.5" ></text>
</g>
<g >
<title>c10::VariableVersion::VersionCounter::~VersionCounter (8 samples, 0.19%)</title><rect x="268.5" y="373" width="2.2" height="15.0" fill="rgb(238,190,37)" rx="2" ry="2" />
<text  x="271.52" y="383.5" ></text>
</g>
<g >
<title>at::Tensor::~Tensor (13 samples, 0.31%)</title><rect x="640.2" y="405" width="3.6" height="15.0" fill="rgb(231,79,1)" rx="2" ry="2" />
<text  x="643.17" y="415.5" ></text>
</g>
<g >
<title>do_user_addr_fault (2 samples, 0.05%)</title><rect x="136.2" y="277" width="0.6" height="15.0" fill="rgb(249,2,45)" rx="2" ry="2" />
<text  x="139.20" y="287.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, c10::AutogradMetaInterface*, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt; (4 samples, 0.09%)</title><rect x="668.0" y="357" width="1.1" height="15.0" fill="rgb(249,84,13)" rx="2" ry="2" />
<text  x="670.96" y="367.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (6 samples, 0.14%)</title><rect x="10.0" y="485" width="1.7" height="15.0" fill="rgb(254,148,33)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (5 samples, 0.12%)</title><rect x="63.4" y="485" width="1.4" height="15.0" fill="rgb(235,46,39)" rx="2" ry="2" />
<text  x="66.37" y="495.5" ></text>
</g>
<g >
<title>c10::TensorImpl::empty_tensor_restride (8 samples, 0.19%)</title><rect x="1141.1" y="245" width="2.2" height="15.0" fill="rgb(214,157,50)" rx="2" ry="2" />
<text  x="1144.08" y="255.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.02%)</title><rect x="190.7" y="261" width="0.3" height="15.0" fill="rgb(212,82,50)" rx="2" ry="2" />
<text  x="193.68" y="271.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="132.6" y="357" width="0.3" height="15.0" fill="rgb(215,69,1)" rx="2" ry="2" />
<text  x="135.59" y="367.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.02%)</title><rect x="183.5" y="325" width="0.2" height="15.0" fill="rgb(212,68,2)" rx="2" ry="2" />
<text  x="186.46" y="335.5" ></text>
</g>
<g >
<title>c10::TensorImpl::empty_tensor_restride (4 samples, 0.09%)</title><rect x="363.9" y="261" width="1.1" height="15.0" fill="rgb(213,224,7)" rx="2" ry="2" />
<text  x="366.86" y="271.5" ></text>
</g>
<g >
<title>c10::impl::(anonymous namespace)::checkSchema (1 samples, 0.02%)</title><rect x="146.8" y="373" width="0.2" height="15.0" fill="rgb(242,98,4)" rx="2" ry="2" />
<text  x="149.76" y="383.5" ></text>
</g>
<g >
<title>c10::Dispatcher::findOrRegisterName_ (1 samples, 0.02%)</title><rect x="142.3" y="373" width="0.3" height="15.0" fill="rgb(233,56,50)" rx="2" ry="2" />
<text  x="145.32" y="383.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::ScalarType&gt;::operator* (2 samples, 0.05%)</title><rect x="467.8" y="341" width="0.6" height="15.0" fill="rgb(224,185,47)" rx="2" ry="2" />
<text  x="470.82" y="351.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;float&gt; (1 samples, 0.02%)</title><rect x="896.7" y="405" width="0.3" height="15.0" fill="rgb(234,130,12)" rx="2" ry="2" />
<text  x="899.74" y="415.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="572.3" y="357" width="0.3" height="15.0" fill="rgb(228,218,30)" rx="2" ry="2" />
<text  x="575.34" y="367.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;float&gt;@plt (1 samples, 0.02%)</title><rect x="793.3" y="309" width="0.3" height="15.0" fill="rgb(233,29,6)" rx="2" ry="2" />
<text  x="796.33" y="319.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="991.0" y="309" width="0.2" height="15.0" fill="rgb(254,146,35)" rx="2" ry="2" />
<text  x="993.97" y="319.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (1 samples, 0.02%)</title><rect x="170.7" y="309" width="0.2" height="15.0" fill="rgb(254,172,30)" rx="2" ry="2" />
<text  x="173.67" y="319.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="132.0" y="293" width="0.3" height="15.0" fill="rgb(248,155,12)" rx="2" ry="2" />
<text  x="135.03" y="303.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.05%)</title><rect x="164.8" y="341" width="0.6" height="15.0" fill="rgb(227,221,27)" rx="2" ry="2" />
<text  x="167.83" y="351.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::load (3 samples, 0.07%)</title><rect x="918.4" y="341" width="0.9" height="15.0" fill="rgb(235,143,13)" rx="2" ry="2" />
<text  x="921.42" y="351.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (1 samples, 0.02%)</title><rect x="21.4" y="485" width="0.3" height="15.0" fill="rgb(233,141,48)" rx="2" ry="2" />
<text  x="24.40" y="495.5" ></text>
</g>
<g >
<title>c10::ArrayRef&lt;long&gt;::ArrayRef (17 samples, 0.40%)</title><rect x="848.9" y="421" width="4.8" height="15.0" fill="rgb(246,17,38)" rx="2" ry="2" />
<text  x="851.93" y="431.5" ></text>
</g>
<g >
<title>[microbenchmark] (1 samples, 0.02%)</title><rect x="437.5" y="405" width="0.3" height="15.0" fill="rgb(248,134,43)" rx="2" ry="2" />
<text  x="440.52" y="415.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="130.6" y="357" width="0.3" height="15.0" fill="rgb(223,189,27)" rx="2" ry="2" />
<text  x="133.64" y="367.5" ></text>
</g>
<g >
<title>torch::jit::parseName (2 samples, 0.05%)</title><rect x="176.8" y="373" width="0.5" height="15.0" fill="rgb(240,179,24)" rx="2" ry="2" />
<text  x="179.78" y="383.5" ></text>
</g>
<g >
<title>xas_load (1 samples, 0.02%)</title><rect x="129.3" y="293" width="0.2" height="15.0" fill="rgb(222,94,38)" rx="2" ry="2" />
<text  x="132.25" y="303.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="160.4" y="229" width="0.3" height="15.0" fill="rgb(229,207,54)" rx="2" ry="2" />
<text  x="163.38" y="239.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (1 samples, 0.02%)</title><rect x="153.7" y="341" width="0.3" height="15.0" fill="rgb(222,216,47)" rx="2" ry="2" />
<text  x="156.71" y="351.5" ></text>
</g>
<g >
<title>[microbenchmark] (2 samples, 0.05%)</title><rect x="673.0" y="373" width="0.5" height="15.0" fill="rgb(237,84,51)" rx="2" ry="2" />
<text  x="675.97" y="383.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (2 samples, 0.05%)</title><rect x="144.5" y="341" width="0.6" height="15.0" fill="rgb(238,50,52)" rx="2" ry="2" />
<text  x="147.54" y="351.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (9 samples, 0.21%)</title><rect x="553.7" y="197" width="2.5" height="15.0" fill="rgb(221,23,27)" rx="2" ry="2" />
<text  x="556.72" y="207.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;float&gt; (2 samples, 0.05%)</title><rect x="622.7" y="389" width="0.5" height="15.0" fill="rgb(253,59,9)" rx="2" ry="2" />
<text  x="625.65" y="399.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (1 samples, 0.02%)</title><rect x="178.7" y="421" width="0.3" height="15.0" fill="rgb(233,35,28)" rx="2" ry="2" />
<text  x="181.73" y="431.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="158.4" y="357" width="0.3" height="15.0" fill="rgb(206,184,2)" rx="2" ry="2" />
<text  x="161.44" y="367.5" ></text>
</g>
<g >
<title>register_conv_params&lt;3&gt; (1 samples, 0.02%)</title><rect x="184.6" y="437" width="0.2" height="15.0" fill="rgb(254,118,50)" rx="2" ry="2" />
<text  x="187.57" y="447.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::ScalarType&gt;::optional&lt;c10::ScalarType, false&gt; (26 samples, 0.61%)</title><rect x="972.9" y="309" width="7.2" height="15.0" fill="rgb(225,152,27)" rx="2" ry="2" />
<text  x="975.90" y="319.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="193.5" y="277" width="0.2" height="15.0" fill="rgb(232,213,28)" rx="2" ry="2" />
<text  x="196.46" y="287.5" ></text>
</g>
<g >
<title>std::tuple&lt;c10::AutogradMetaInterface*, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::tuple&lt;c10::AutogradMetaInterface*, std::default_delete&lt;c10::AutogradMetaInterface&gt;, true&gt; (1 samples, 0.02%)</title><rect x="666.9" y="373" width="0.2" height="15.0" fill="rgb(211,150,53)" rx="2" ry="2" />
<text  x="669.85" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;, std::allocator&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt; &gt;::_Vector_impl::~_Vector_impl (1 samples, 0.02%)</title><rect x="246.3" y="485" width="0.3" height="15.0" fill="rgb(213,72,23)" rx="2" ry="2" />
<text  x="249.28" y="495.5" ></text>
</g>
<g >
<title>at::RecordFunction::~RecordFunction (4 samples, 0.09%)</title><rect x="514.0" y="325" width="1.1" height="15.0" fill="rgb(207,32,12)" rx="2" ry="2" />
<text  x="516.97" y="335.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="142.3" y="309" width="0.3" height="15.0" fill="rgb(222,229,25)" rx="2" ry="2" />
<text  x="145.32" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::RegistrationHandleRAII, std::allocator&lt;c10::RegistrationHandleRAII&gt; &gt;::_M_realloc_insert&lt;c10::RegistrationHandleRAII&gt; (1 samples, 0.02%)</title><rect x="183.2" y="373" width="0.3" height="15.0" fill="rgb(214,168,48)" rx="2" ry="2" />
<text  x="186.18" y="383.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::initialized (1 samples, 0.02%)</title><rect x="862.0" y="357" width="0.3" height="15.0" fill="rgb(221,24,53)" rx="2" ry="2" />
<text  x="864.99" y="367.5" ></text>
</g>
<g >
<title>c10::Device::validate (2 samples, 0.05%)</title><rect x="1149.4" y="277" width="0.6" height="15.0" fill="rgb(245,162,4)" rx="2" ry="2" />
<text  x="1152.42" y="287.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_QuantizedCUDAType.cpp (1 samples, 0.02%)</title><rect x="145.4" y="453" width="0.3" height="15.0" fill="rgb(206,180,20)" rx="2" ry="2" />
<text  x="148.37" y="463.5" ></text>
</g>
<g >
<title>torch::(anonymous namespace)::debugString (1 samples, 0.02%)</title><rect x="153.7" y="389" width="0.3" height="15.0" fill="rgb(209,32,10)" rx="2" ry="2" />
<text  x="156.71" y="399.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::initialized (2 samples, 0.05%)</title><rect x="424.5" y="389" width="0.5" height="15.0" fill="rgb(213,7,26)" rx="2" ry="2" />
<text  x="427.46" y="399.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::initialized (2 samples, 0.05%)</title><rect x="285.5" y="373" width="0.5" height="15.0" fill="rgb(234,98,9)" rx="2" ry="2" />
<text  x="288.47" y="383.5" ></text>
</g>
<g >
<title>torch::jit::parseName (1 samples, 0.02%)</title><rect x="152.3" y="373" width="0.3" height="15.0" fill="rgb(224,91,20)" rx="2" ry="2" />
<text  x="155.32" y="383.5" ></text>
</g>
<g >
<title>torch::(anonymous namespace)::debugString (1 samples, 0.02%)</title><rect x="132.9" y="389" width="0.2" height="15.0" fill="rgb(231,46,40)" rx="2" ry="2" />
<text  x="135.86" y="399.5" ></text>
</g>
<g >
<title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, c10::OperatorName, std::hash&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueHasher&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::hash&lt;c10::OperatorName&gt; &gt;, std::equal_to&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueEquality&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::equal_to&lt;c10::OperatorName&gt; &gt;, std::allocator&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt; &gt; &gt;::emplace_new_key&lt;c10::OperatorName const&amp;, c10::OperatorHandle&amp;&gt; (1 samples, 0.02%)</title><rect x="184.0" y="341" width="0.3" height="15.0" fill="rgb(240,38,16)" rx="2" ry="2" />
<text  x="187.01" y="351.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (9 samples, 0.21%)</title><rect x="904.0" y="389" width="2.5" height="15.0" fill="rgb(212,125,30)" rx="2" ry="2" />
<text  x="906.96" y="399.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.02%)</title><rect x="154.0" y="405" width="0.3" height="15.0" fill="rgb(209,123,14)" rx="2" ry="2" />
<text  x="156.99" y="415.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.02%)</title><rect x="177.3" y="357" width="0.3" height="15.0" fill="rgb(236,170,54)" rx="2" ry="2" />
<text  x="180.34" y="367.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (1 samples, 0.02%)</title><rect x="177.6" y="421" width="0.3" height="15.0" fill="rgb(243,172,40)" rx="2" ry="2" />
<text  x="180.62" y="431.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, torch::CppFunction&gt; (9 samples, 0.21%)</title><rect x="142.6" y="405" width="2.5" height="15.0" fill="rgb(212,28,13)" rx="2" ry="2" />
<text  x="145.59" y="415.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="203.2" y="213" width="0.3" height="15.0" fill="rgb(225,66,44)" rx="2" ry="2" />
<text  x="206.19" y="223.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_SparseCUDAType.cpp (1 samples, 0.02%)</title><rect x="146.2" y="453" width="0.3" height="15.0" fill="rgb(242,31,50)" rx="2" ry="2" />
<text  x="149.21" y="463.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="145.1" y="293" width="0.3" height="15.0" fill="rgb(248,229,20)" rx="2" ry="2" />
<text  x="148.10" y="303.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;caffe2::TypeMeta&gt;::constexpr_optional_base (2 samples, 0.05%)</title><rect x="893.7" y="389" width="0.5" height="15.0" fill="rgb(230,22,51)" rx="2" ry="2" />
<text  x="896.68" y="399.5" ></text>
</g>
<g >
<title>std::mutex::mutex (4 samples, 0.09%)</title><rect x="456.4" y="373" width="1.1" height="15.0" fill="rgb(223,146,22)" rx="2" ry="2" />
<text  x="459.43" y="383.5" ></text>
</g>
<g >
<title>torch::Library::def&lt;char const  (53 samples, 1.25%)</title><rect x="157.9" y="421" width="14.7" height="15.0" fill="rgb(208,82,10)" rx="2" ry="2" />
<text  x="160.88" y="431.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;long&gt;::end (2 samples, 0.05%)</title><rect x="400.6" y="405" width="0.5" height="15.0" fill="rgb(242,71,16)" rx="2" ry="2" />
<text  x="403.55" y="415.5" ></text>
</g>
<g >
<title>c10::TensorOptions::computeDispatchKey (7 samples, 0.16%)</title><rect x="367.2" y="341" width="1.9" height="15.0" fill="rgb(250,89,25)" rx="2" ry="2" />
<text  x="370.20" y="351.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="122.0" y="405" width="0.3" height="15.0" fill="rgb(244,30,15)" rx="2" ry="2" />
<text  x="125.02" y="415.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.02%)</title><rect x="194.3" y="389" width="0.3" height="15.0" fill="rgb(231,16,52)" rx="2" ry="2" />
<text  x="197.30" y="399.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;torch::autograd::Node,  (13 samples, 0.31%)</title><rect x="459.2" y="341" width="3.6" height="15.0" fill="rgb(217,94,43)" rx="2" ry="2" />
<text  x="462.21" y="351.5" ></text>
</g>
<g >
<title>[libcusparse.so.11.1.0.218] (2 samples, 0.05%)</title><rect x="131.8" y="453" width="0.5" height="15.0" fill="rgb(226,197,10)" rx="2" ry="2" />
<text  x="134.75" y="463.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (4 samples, 0.09%)</title><rect x="934.8" y="325" width="1.1" height="15.0" fill="rgb(247,76,5)" rx="2" ry="2" />
<text  x="937.82" y="335.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.02%)</title><rect x="217.6" y="453" width="0.3" height="15.0" fill="rgb(253,74,16)" rx="2" ry="2" />
<text  x="220.65" y="463.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (2 samples, 0.05%)</title><rect x="386.4" y="325" width="0.5" height="15.0" fill="rgb(208,72,25)" rx="2" ry="2" />
<text  x="389.38" y="335.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="133.4" y="197" width="0.3" height="15.0" fill="rgb(228,15,11)" rx="2" ry="2" />
<text  x="136.42" y="207.5" ></text>
</g>
<g >
<title>c10::ProfiledCPUMemoryReporter::Delete (18 samples, 0.42%)</title><rect x="818.9" y="341" width="5.0" height="15.0" fill="rgb(247,209,32)" rx="2" ry="2" />
<text  x="821.90" y="351.5" ></text>
</g>
<g >
<title>c10::TensorOptions::set_dtype (6 samples, 0.14%)</title><rect x="284.4" y="405" width="1.6" height="15.0" fill="rgb(247,18,23)" rx="2" ry="2" />
<text  x="287.36" y="415.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="194.0" y="405" width="0.3" height="15.0" fill="rgb(234,205,53)" rx="2" ry="2" />
<text  x="197.02" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;c10::AutogradMetaInterface, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::unique_ptr&lt;torch::autograd::AutogradMeta, std::default_delete&lt;torch::autograd::AutogradMeta&gt;, void&gt; (27 samples, 0.64%)</title><rect x="480.1" y="405" width="7.5" height="15.0" fill="rgb(223,81,4)" rx="2" ry="2" />
<text  x="483.05" y="415.5" ></text>
</g>
<g >
<title>c10::TensorImpl::set_sizes_contiguous (5 samples, 0.12%)</title><rect x="37.5" y="485" width="1.4" height="15.0" fill="rgb(223,52,16)" rx="2" ry="2" />
<text  x="40.52" y="495.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="184.8" y="357" width="0.3" height="15.0" fill="rgb(208,208,22)" rx="2" ry="2" />
<text  x="187.85" y="367.5" ></text>
</g>
<g >
<title>c10::UndefinedTensorImpl::singleton (1 samples, 0.02%)</title><rect x="846.7" y="373" width="0.3" height="15.0" fill="rgb(230,24,1)" rx="2" ry="2" />
<text  x="849.70" y="383.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.02%)</title><rect x="145.9" y="405" width="0.3" height="15.0" fill="rgb(238,204,1)" rx="2" ry="2" />
<text  x="148.93" y="415.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="137.3" y="341" width="0.3" height="15.0" fill="rgb(231,45,47)" rx="2" ry="2" />
<text  x="140.31" y="351.5" ></text>
</g>
<g >
<title>c10::TensorImpl::TensorImpl (23 samples, 0.54%)</title><rect x="740.5" y="245" width="6.4" height="15.0" fill="rgb(213,158,42)" rx="2" ry="2" />
<text  x="743.52" y="255.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseBaseType (4 samples, 0.09%)</title><rect x="249.9" y="421" width="1.1" height="15.0" fill="rgb(241,52,52)" rx="2" ry="2" />
<text  x="252.89" y="431.5" ></text>
</g>
<g >
<title>perf_event_mmap_output (1 samples, 0.02%)</title><rect x="151.5" y="133" width="0.3" height="15.0" fill="rgb(215,183,17)" rx="2" ry="2" />
<text  x="154.49" y="143.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTable_ (1 samples, 0.02%)</title><rect x="190.4" y="341" width="0.3" height="15.0" fill="rgb(207,171,6)" rx="2" ry="2" />
<text  x="193.41" y="351.5" ></text>
</g>
<g >
<title>c10::scalarTypeToTypeMeta (5 samples, 0.12%)</title><rect x="287.7" y="421" width="1.4" height="15.0" fill="rgb(224,206,41)" rx="2" ry="2" />
<text  x="290.70" y="431.5" ></text>
</g>
<g >
<title>task_work_run (1 samples, 0.02%)</title><rect x="123.1" y="277" width="0.3" height="15.0" fill="rgb(212,152,28)" rx="2" ry="2" />
<text  x="126.14" y="287.5" ></text>
</g>
<g >
<title>std::mutex::mutex (5 samples, 0.12%)</title><rect x="942.3" y="357" width="1.4" height="15.0" fill="rgb(245,182,50)" rx="2" ry="2" />
<text  x="945.33" y="367.5" ></text>
</g>
<g >
<title>do_wp_page (1 samples, 0.02%)</title><rect x="125.9" y="261" width="0.3" height="15.0" fill="rgb(237,166,0)" rx="2" ry="2" />
<text  x="128.92" y="271.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="137.0" y="341" width="0.3" height="15.0" fill="rgb(208,24,16)" rx="2" ry="2" />
<text  x="140.03" y="351.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor&amp;  (1 samples, 0.02%)</title><rect x="147.3" y="421" width="0.3" height="15.0" fill="rgb(207,134,45)" rx="2" ry="2" />
<text  x="150.32" y="431.5" ></text>
</g>
<g >
<title>c10::DefaultCPUAllocator::allocate (44 samples, 1.04%)</title><rect x="345.5" y="277" width="12.2" height="15.0" fill="rgb(241,70,48)" rx="2" ry="2" />
<text  x="348.51" y="287.5" ></text>
</g>
<g >
<title>c10::Dispatcher::deregisterDef_ (5 samples, 0.12%)</title><rect x="255.7" y="373" width="1.4" height="15.0" fill="rgb(242,26,49)" rx="2" ry="2" />
<text  x="258.73" y="383.5" ></text>
</g>
<g >
<title>microbenchmark (4,234 samples, 99.74%)</title><rect x="10.0" y="517" width="1176.9" height="15.0" fill="rgb(253,149,46)" rx="2" ry="2" />
<text  x="13.00" y="527.5" >microbenchmark</text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="486.4" y="325" width="0.3" height="15.0" fill="rgb(237,96,39)" rx="2" ry="2" />
<text  x="489.45" y="335.5" ></text>
</g>
<g >
<title>std::end&lt;long&gt; (2 samples, 0.05%)</title><rect x="272.1" y="421" width="0.6" height="15.0" fill="rgb(210,134,5)" rx="2" ry="2" />
<text  x="275.13" y="431.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::expect (1 samples, 0.02%)</title><rect x="155.7" y="357" width="0.2" height="15.0" fill="rgb(221,10,32)" rx="2" ry="2" />
<text  x="158.66" y="367.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::MemoryFormat&gt;::optional (1 samples, 0.02%)</title><rect x="429.5" y="437" width="0.2" height="15.0" fill="rgb(228,60,6)" rx="2" ry="2" />
<text  x="432.46" y="447.5" ></text>
</g>
<g >
<title>at::autocast::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Autocast (2 samples, 0.05%)</title><rect x="183.7" y="421" width="0.6" height="15.0" fill="rgb(213,80,46)" rx="2" ry="2" />
<text  x="186.73" y="431.5" ></text>
</g>
<g >
<title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;, c10::DispatchKey, std::hash&lt;c10::DispatchKey&gt;, ska::detailv3::KeyOrValueHasher&lt;c10::DispatchKey, std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;, std::hash&lt;c10::DispatchKey&gt; &gt;, std::equal_to&lt;c10::DispatchKey&gt;, ska::detailv3::KeyOrValueEquality&lt;c10::DispatchKey, std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;, std::equal_to&lt;c10::DispatchKey&gt; &gt;, std::allocator&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt; &gt; &gt; &gt;::emplace_new_key&lt;c10::DispatchKey const&amp;, ska::flat_hash_map&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt;, std::hash&lt;c10::DispatchKey&gt;, std::equal_to&lt;c10::DispatchKey&gt;, std::allocator&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt; &gt; &gt;::convertible_to_value&gt; (1 samples, 0.02%)</title><rect x="147.3" y="357" width="0.3" height="15.0" fill="rgb(239,191,21)" rx="2" ry="2" />
<text  x="150.32" y="367.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="993.2" y="309" width="0.3" height="15.0" fill="rgb(232,36,4)" rx="2" ry="2" />
<text  x="996.19" y="319.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::MemoryFormat&gt;::optional (2 samples, 0.05%)</title><rect x="634.1" y="421" width="0.5" height="15.0" fill="rgb(245,20,25)" rx="2" ry="2" />
<text  x="637.05" y="431.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="543.7" y="213" width="0.3" height="15.0" fill="rgb(205,207,52)" rx="2" ry="2" />
<text  x="546.71" y="223.5" ></text>
</g>
<g >
<title>c10::findSchemaDifferences[abi:cxx11] (1 samples, 0.02%)</title><rect x="181.2" y="357" width="0.3" height="15.0" fill="rgb(253,169,2)" rx="2" ry="2" />
<text  x="184.23" y="367.5" ></text>
</g>
<g >
<title>c10::constexpr_storage_t&lt;c10::Device&gt;::constexpr_storage_t&lt;c10::DeviceType const&amp;, int&gt; (15 samples, 0.35%)</title><rect x="406.7" y="389" width="4.1" height="15.0" fill="rgb(252,113,13)" rx="2" ry="2" />
<text  x="409.67" y="399.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (1 samples, 0.02%)</title><rect x="174.3" y="341" width="0.3" height="15.0" fill="rgb(206,52,43)" rx="2" ry="2" />
<text  x="177.28" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;c10::Symbol, c10::Symbol, std::allocator&lt;c10::Symbol&gt;, std::__detail::_Identity, std::equal_to&lt;c10::Symbol&gt;, std::hash&lt;c10::Symbol&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_Hashtable (2 samples, 0.05%)</title><rect x="220.7" y="357" width="0.6" height="15.0" fill="rgb(229,35,7)" rx="2" ry="2" />
<text  x="223.70" y="367.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::TypeMeta (2 samples, 0.05%)</title><rect x="283.2" y="389" width="0.6" height="15.0" fill="rgb(236,191,31)" rx="2" ry="2" />
<text  x="286.25" y="399.5" ></text>
</g>
<g >
<title>c10::TensorOptions::device&lt;c10::DeviceType const&amp;, int&gt; (50 samples, 1.18%)</title><rect x="853.7" y="421" width="13.9" height="15.0" fill="rgb(245,114,1)" rx="2" ry="2" />
<text  x="856.65" y="431.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseType (12 samples, 0.28%)</title><rect x="167.1" y="341" width="3.3" height="15.0" fill="rgb(219,225,7)" rx="2" ry="2" />
<text  x="170.06" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;, std::allocator&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt; &gt;::_Vector_base (5 samples, 0.12%)</title><rect x="463.4" y="357" width="1.4" height="15.0" fill="rgb(249,76,50)" rx="2" ry="2" />
<text  x="466.38" y="367.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.02%)</title><rect x="223.2" y="341" width="0.3" height="15.0" fill="rgb(222,215,21)" rx="2" ry="2" />
<text  x="226.21" y="351.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.02%)</title><rect x="170.7" y="341" width="0.2" height="15.0" fill="rgb(254,173,31)" rx="2" ry="2" />
<text  x="173.67" y="351.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr_target::~intrusive_ptr_target (12 samples, 0.28%)</title><rect x="592.1" y="325" width="3.3" height="15.0" fill="rgb(213,126,51)" rx="2" ry="2" />
<text  x="595.08" y="335.5" ></text>
</g>
<g >
<title>c10::ArrayRef&lt;long&gt;::ArrayRef (5 samples, 0.12%)</title><rect x="399.7" y="437" width="1.4" height="15.0" fill="rgb(225,105,6)" rx="2" ry="2" />
<text  x="402.72" y="447.5" ></text>
</g>
<g >
<title>torch::autograd::AutogradMeta::~AutogradMeta (62 samples, 1.46%)</title><rect x="824.7" y="357" width="17.3" height="15.0" fill="rgb(227,136,32)" rx="2" ry="2" />
<text  x="827.74" y="367.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="178.7" y="357" width="0.3" height="15.0" fill="rgb(234,97,8)" rx="2" ry="2" />
<text  x="181.73" y="367.5" ></text>
</g>
<g >
<title>__tls_get_addr (3 samples, 0.07%)</title><rect x="796.9" y="357" width="0.9" height="15.0" fill="rgb(213,115,54)" rx="2" ry="2" />
<text  x="799.94" y="367.5" ></text>
</g>
<g >
<title>at::RecordFunction::end (4 samples, 0.09%)</title><rect x="224.6" y="485" width="1.1" height="15.0" fill="rgb(223,98,34)" rx="2" ry="2" />
<text  x="227.60" y="495.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="194.0" y="309" width="0.3" height="15.0" fill="rgb(242,163,53)" rx="2" ry="2" />
<text  x="197.02" y="319.5" ></text>
</g>
<g >
<title>torch::detail::TorchLibraryInit::TorchLibraryInit (3 samples, 0.07%)</title><rect x="185.4" y="437" width="0.8" height="15.0" fill="rgb(244,205,37)" rx="2" ry="2" />
<text  x="188.40" y="447.5" ></text>
</g>
<g >
<title>c10::Device::validate (2 samples, 0.05%)</title><rect x="1133.0" y="261" width="0.6" height="15.0" fill="rgb(218,203,8)" rx="2" ry="2" />
<text  x="1136.02" y="271.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="156.5" y="309" width="0.3" height="15.0" fill="rgb(234,135,19)" rx="2" ry="2" />
<text  x="159.49" y="319.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (1 samples, 0.02%)</title><rect x="176.0" y="309" width="0.2" height="15.0" fill="rgb(206,37,15)" rx="2" ry="2" />
<text  x="178.95" y="319.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="152.3" y="149" width="0.3" height="15.0" fill="rgb(215,213,42)" rx="2" ry="2" />
<text  x="155.32" y="159.5" ></text>
</g>
<g >
<title>[libcufft.so.10.2.0.218] (1 samples, 0.02%)</title><rect x="131.5" y="453" width="0.3" height="15.0" fill="rgb(244,199,5)" rx="2" ry="2" />
<text  x="134.47" y="463.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseDeclaration (1 samples, 0.02%)</title><rect x="102.6" y="485" width="0.2" height="15.0" fill="rgb(228,140,14)" rx="2" ry="2" />
<text  x="105.57" y="495.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="150.1" y="181" width="0.3" height="15.0" fill="rgb(226,146,18)" rx="2" ry="2" />
<text  x="153.10" y="191.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, torch::autograd::AutogradMeta*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="452.8" y="293" width="0.3" height="15.0" fill="rgb(254,175,42)" rx="2" ry="2" />
<text  x="455.81" y="303.5" ></text>
</g>
<g >
<title>page_fault (2 samples, 0.05%)</title><rect x="125.6" y="357" width="0.6" height="15.0" fill="rgb(230,179,6)" rx="2" ry="2" />
<text  x="128.64" y="367.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;torch::autograd::Node&gt;::shared_ptr (3 samples, 0.07%)</title><rect x="478.7" y="357" width="0.8" height="15.0" fill="rgb(209,88,4)" rx="2" ry="2" />
<text  x="481.66" y="367.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::initialized (1 samples, 0.02%)</title><rect x="889.5" y="357" width="0.3" height="15.0" fill="rgb(215,215,26)" rx="2" ry="2" />
<text  x="892.51" y="367.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (1 samples, 0.02%)</title><rect x="152.6" y="421" width="0.3" height="15.0" fill="rgb(224,200,32)" rx="2" ry="2" />
<text  x="155.60" y="431.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="263.5" y="437" width="0.3" height="15.0" fill="rgb(229,223,48)" rx="2" ry="2" />
<text  x="266.51" y="447.5" ></text>
</g>
<g >
<title>[libcublas.so.11.1.0.229] (1 samples, 0.02%)</title><rect x="216.3" y="485" width="0.2" height="15.0" fill="rgb(229,27,49)" rx="2" ry="2" />
<text  x="219.26" y="495.5" ></text>
</g>
<g >
<title>c10::impl::tls_local_dispatch_key_set@plt (1 samples, 0.02%)</title><rect x="1166.1" y="373" width="0.3" height="15.0" fill="rgb(229,104,0)" rx="2" ry="2" />
<text  x="1169.09" y="383.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::TypeMeta (3 samples, 0.07%)</title><rect x="885.3" y="373" width="0.9" height="15.0" fill="rgb(245,21,43)" rx="2" ry="2" />
<text  x="888.34" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__is_null_pointer&lt;char&gt; (1 samples, 0.02%)</title><rect x="21.7" y="485" width="0.3" height="15.0" fill="rgb(223,27,32)" rx="2" ry="2" />
<text  x="24.67" y="495.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.05%)</title><rect x="995.4" y="325" width="0.6" height="15.0" fill="rgb(229,186,41)" rx="2" ry="2" />
<text  x="998.42" y="335.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="1036.8" y="325" width="0.3" height="15.0" fill="rgb(251,54,35)" rx="2" ry="2" />
<text  x="1039.84" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_brk (1 samples, 0.02%)</title><rect x="151.5" y="213" width="0.3" height="15.0" fill="rgb(212,135,19)" rx="2" ry="2" />
<text  x="154.49" y="223.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.02%)</title><rect x="176.0" y="325" width="0.2" height="15.0" fill="rgb(235,104,20)" rx="2" ry="2" />
<text  x="178.95" y="335.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_qbatch_norm.cpp (1 samples, 0.02%)</title><rect x="186.2" y="453" width="0.3" height="15.0" fill="rgb(231,5,10)" rx="2" ry="2" />
<text  x="189.24" y="463.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::optional&lt;c10::DeviceType const&amp;, int&gt; (19 samples, 0.45%)</title><rect x="862.3" y="405" width="5.3" height="15.0" fill="rgb(248,147,34)" rx="2" ry="2" />
<text  x="865.27" y="415.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (4 samples, 0.09%)</title><rect x="249.9" y="485" width="1.1" height="15.0" fill="rgb(251,177,49)" rx="2" ry="2" />
<text  x="252.89" y="495.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseAliasAnnotation (1 samples, 0.02%)</title><rect x="248.8" y="389" width="0.3" height="15.0" fill="rgb(254,191,28)" rx="2" ry="2" />
<text  x="251.78" y="399.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;c10::ScalarType&gt;::constexpr_optional_base (6 samples, 0.14%)</title><rect x="469.8" y="309" width="1.6" height="15.0" fill="rgb(236,83,21)" rx="2" ry="2" />
<text  x="472.77" y="319.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::load (3 samples, 0.07%)</title><rect x="657.1" y="341" width="0.9" height="15.0" fill="rgb(207,91,19)" rx="2" ry="2" />
<text  x="660.12" y="351.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseType (1 samples, 0.02%)</title><rect x="249.6" y="421" width="0.3" height="15.0" fill="rgb(213,139,15)" rx="2" ry="2" />
<text  x="252.61" y="431.5" ></text>
</g>
<g >
<title>std::forward&lt;bool&amp;&gt; (1 samples, 0.02%)</title><rect x="450.9" y="389" width="0.2" height="15.0" fill="rgb(218,147,35)" rx="2" ry="2" />
<text  x="453.87" y="399.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="156.5" y="293" width="0.3" height="15.0" fill="rgb(215,213,50)" rx="2" ry="2" />
<text  x="159.49" y="303.5" ></text>
</g>
<g >
<title>do_exit (12 samples, 0.28%)</title><rect x="1180.0" y="437" width="3.3" height="15.0" fill="rgb(205,64,22)" rx="2" ry="2" />
<text  x="1182.99" y="447.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;c10::MemoryFormat&gt;::constexpr_optional_base (2 samples, 0.05%)</title><rect x="808.3" y="373" width="0.6" height="15.0" fill="rgb(240,201,4)" rx="2" ry="2" />
<text  x="811.34" y="383.5" ></text>
</g>
<g >
<title>c10::TensorImpl::TensorImpl (11 samples, 0.26%)</title><rect x="536.8" y="261" width="3.0" height="15.0" fill="rgb(242,215,15)" rx="2" ry="2" />
<text  x="539.76" y="271.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::(anonymous namespace)::createArgumentVector (1 samples, 0.02%)</title><rect x="145.1" y="389" width="0.3" height="15.0" fill="rgb(247,193,18)" rx="2" ry="2" />
<text  x="148.10" y="399.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, torch::CppFunction&gt; (1 samples, 0.02%)</title><rect x="152.3" y="405" width="0.3" height="15.0" fill="rgb(250,91,30)" rx="2" ry="2" />
<text  x="155.32" y="415.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="135.9" y="325" width="0.3" height="15.0" fill="rgb(245,77,36)" rx="2" ry="2" />
<text  x="138.92" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (1 samples, 0.02%)</title><rect x="140.1" y="277" width="0.3" height="15.0" fill="rgb(214,167,29)" rx="2" ry="2" />
<text  x="143.09" y="287.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor&gt;  (1 samples, 0.02%)</title><rect x="152.0" y="421" width="0.3" height="15.0" fill="rgb(241,223,46)" rx="2" ry="2" />
<text  x="155.04" y="431.5" ></text>
</g>
<g >
<title>at::Tensor::defined (3 samples, 0.07%)</title><rect x="296.6" y="405" width="0.8" height="15.0" fill="rgb(227,55,0)" rx="2" ry="2" />
<text  x="299.59" y="415.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.02%)</title><rect x="154.5" y="213" width="0.3" height="15.0" fill="rgb(217,95,51)" rx="2" ry="2" />
<text  x="157.55" y="223.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_autocast_mode.cpp (2 samples, 0.05%)</title><rect x="183.7" y="453" width="0.6" height="15.0" fill="rgb(232,134,32)" rx="2" ry="2" />
<text  x="186.73" y="463.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::vector&lt;std::function&lt;at::Tensor  (4 samples, 0.09%)</title><rect x="387.5" y="341" width="1.1" height="15.0" fill="rgb(207,214,54)" rx="2" ry="2" />
<text  x="390.49" y="351.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="184.8" y="437" width="0.3" height="15.0" fill="rgb(243,120,37)" rx="2" ry="2" />
<text  x="187.85" y="447.5" ></text>
</g>
<g >
<title>c10::UndefinedTensorImpl::singleton (1 samples, 0.02%)</title><rect x="811.7" y="389" width="0.3" height="15.0" fill="rgb(219,2,23)" rx="2" ry="2" />
<text  x="814.68" y="399.5" ></text>
</g>
<g >
<title>__vma_link_file (1 samples, 0.02%)</title><rect x="124.5" y="213" width="0.3" height="15.0" fill="rgb(207,102,29)" rx="2" ry="2" />
<text  x="127.53" y="223.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="178.7" y="245" width="0.3" height="15.0" fill="rgb(230,10,24)" rx="2" ry="2" />
<text  x="181.73" y="255.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;short&gt;@plt (1 samples, 0.02%)</title><rect x="1168.9" y="357" width="0.3" height="15.0" fill="rgb(246,61,38)" rx="2" ry="2" />
<text  x="1171.87" y="367.5" ></text>
</g>
<g >
<title>torch::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Tracer (5 samples, 0.12%)</title><rect x="154.5" y="437" width="1.4" height="15.0" fill="rgb(248,136,36)" rx="2" ry="2" />
<text  x="157.55" y="447.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (4 samples, 0.09%)</title><rect x="123.7" y="277" width="1.1" height="15.0" fill="rgb(231,9,9)" rx="2" ry="2" />
<text  x="126.69" y="287.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::contained_val (1 samples, 0.02%)</title><rect x="606.3" y="373" width="0.2" height="15.0" fill="rgb(249,62,26)" rx="2" ry="2" />
<text  x="609.25" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="168.7" y="309" width="0.3" height="15.0" fill="rgb(229,14,4)" rx="2" ry="2" />
<text  x="171.72" y="319.5" ></text>
</g>
<g >
<title>c10::TensorType::isSubtypeOfExt (1 samples, 0.02%)</title><rect x="159.0" y="341" width="0.3" height="15.0" fill="rgb(240,45,41)" rx="2" ry="2" />
<text  x="161.99" y="351.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;long&gt;::end (2 samples, 0.05%)</title><rect x="600.1" y="389" width="0.6" height="15.0" fill="rgb(219,12,13)" rx="2" ry="2" />
<text  x="603.14" y="399.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (4 samples, 0.09%)</title><rect x="663.2" y="373" width="1.2" height="15.0" fill="rgb(210,80,38)" rx="2" ry="2" />
<text  x="666.24" y="383.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="178.2" y="341" width="0.3" height="15.0" fill="rgb(224,204,24)" rx="2" ry="2" />
<text  x="181.17" y="351.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.02%)</title><rect x="192.9" y="405" width="0.3" height="15.0" fill="rgb(251,153,34)" rx="2" ry="2" />
<text  x="195.91" y="415.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="149.8" y="373" width="0.3" height="15.0" fill="rgb(213,201,44)" rx="2" ry="2" />
<text  x="152.82" y="383.5" ></text>
</g>
<g >
<title>std::make_unique&lt;torch::autograd::AutogradMeta, c10::TensorImpl*, bool&amp;&gt; (115 samples, 2.71%)</title><rect x="448.1" y="405" width="32.0" height="15.0" fill="rgb(254,227,32)" rx="2" ry="2" />
<text  x="451.09" y="415.5" >st..</text>
</g>
<g >
<title>__libc_malloc (5 samples, 0.12%)</title><rect x="1105.8" y="229" width="1.4" height="15.0" fill="rgb(253,198,5)" rx="2" ry="2" />
<text  x="1108.77" y="239.5" ></text>
</g>
<g >
<title>torch::detail::TorchLibraryInit::TorchLibraryInit (3 samples, 0.07%)</title><rect x="132.9" y="437" width="0.8" height="15.0" fill="rgb(249,150,26)" rx="2" ry="2" />
<text  x="135.86" y="447.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.02%)</title><rect x="217.6" y="469" width="0.3" height="15.0" fill="rgb(223,214,50)" rx="2" ry="2" />
<text  x="220.65" y="479.5" ></text>
</g>
<g >
<title>std::__weak_count&lt; (1 samples, 0.02%)</title><rect x="465.0" y="341" width="0.3" height="15.0" fill="rgb(222,48,5)" rx="2" ry="2" />
<text  x="468.04" y="351.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="132.0" y="229" width="0.3" height="15.0" fill="rgb(206,207,36)" rx="2" ry="2" />
<text  x="135.03" y="239.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="193.5" y="309" width="0.2" height="15.0" fill="rgb(216,119,50)" rx="2" ry="2" />
<text  x="196.46" y="319.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseDeclaration (1 samples, 0.02%)</title><rect x="225.7" y="421" width="0.3" height="15.0" fill="rgb(248,91,16)" rx="2" ry="2" />
<text  x="228.71" y="431.5" ></text>
</g>
<g >
<title>filemap_fault (2 samples, 0.05%)</title><rect x="127.3" y="277" width="0.6" height="15.0" fill="rgb(211,51,11)" rx="2" ry="2" />
<text  x="130.31" y="287.5" ></text>
</g>
<g >
<title>at::detail::make_tensor&lt;c10::TensorImpl, c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;, c10::DispatchKey, caffe2::TypeMeta&amp;&gt; (16 samples, 0.38%)</title><rect x="536.2" y="277" width="4.5" height="15.0" fill="rgb(213,49,46)" rx="2" ry="2" />
<text  x="539.20" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt; &gt;::_M_erase (3 samples, 0.07%)</title><rect x="254.6" y="373" width="0.9" height="15.0" fill="rgb(231,24,43)" rx="2" ry="2" />
<text  x="257.62" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (1 samples, 0.02%)</title><rect x="145.4" y="389" width="0.3" height="15.0" fill="rgb(206,127,14)" rx="2" ry="2" />
<text  x="148.37" y="399.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (1 samples, 0.02%)</title><rect x="92.3" y="485" width="0.3" height="15.0" fill="rgb(218,162,30)" rx="2" ry="2" />
<text  x="95.28" y="495.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="188.2" y="357" width="0.3" height="15.0" fill="rgb(232,146,23)" rx="2" ry="2" />
<text  x="191.18" y="367.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="1179.4" y="293" width="0.3" height="15.0" fill="rgb(218,7,37)" rx="2" ry="2" />
<text  x="1182.44" y="303.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (1 samples, 0.02%)</title><rect x="187.3" y="421" width="0.3" height="15.0" fill="rgb(228,140,17)" rx="2" ry="2" />
<text  x="190.35" y="431.5" ></text>
</g>
<g >
<title>c10::constexpr_storage_t&lt;c10::MemoryFormat&gt;::constexpr_storage_t (1 samples, 0.02%)</title><rect x="808.6" y="357" width="0.3" height="15.0" fill="rgb(228,20,25)" rx="2" ry="2" />
<text  x="811.62" y="367.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (1 samples, 0.02%)</title><rect x="193.2" y="197" width="0.3" height="15.0" fill="rgb(248,113,0)" rx="2" ry="2" />
<text  x="196.18" y="207.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.02%)</title><rect x="745.5" y="197" width="0.3" height="15.0" fill="rgb(246,33,16)" rx="2" ry="2" />
<text  x="748.52" y="207.5" ></text>
</g>
<g >
<title>torch::class_&lt;ConvPackedParamsBase&lt;3&gt; &gt;::def_pickle&lt;register_conv_params&lt;3&gt; (1 samples, 0.02%)</title><rect x="184.6" y="421" width="0.2" height="15.0" fill="rgb(215,118,50)" rx="2" ry="2" />
<text  x="187.57" y="431.5" ></text>
</g>
<g >
<title>__libc_malloc (3 samples, 0.07%)</title><rect x="343.3" y="213" width="0.8" height="15.0" fill="rgb(217,193,22)" rx="2" ry="2" />
<text  x="346.29" y="223.5" ></text>
</g>
<g >
<title>c10::constexpr_move&lt;c10::ScalarType&amp;&gt; (2 samples, 0.05%)</title><rect x="50.9" y="485" width="0.5" height="15.0" fill="rgb(214,35,26)" rx="2" ry="2" />
<text  x="53.86" y="495.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::optional&lt;bool, false&gt; (3 samples, 0.07%)</title><rect x="897.0" y="421" width="0.8" height="15.0" fill="rgb(214,75,43)" rx="2" ry="2" />
<text  x="900.02" y="431.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="187.6" y="261" width="0.3" height="15.0" fill="rgb(210,73,7)" rx="2" ry="2" />
<text  x="190.63" y="271.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::TypeMeta (2 samples, 0.05%)</title><rect x="983.7" y="293" width="0.6" height="15.0" fill="rgb(216,103,32)" rx="2" ry="2" />
<text  x="986.74" y="303.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::ScalarType&gt;::optional&lt;c10::ScalarType, false&gt; (1 samples, 0.02%)</title><rect x="206.0" y="485" width="0.2" height="15.0" fill="rgb(219,192,18)" rx="2" ry="2" />
<text  x="208.97" y="495.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="183.2" y="341" width="0.3" height="15.0" fill="rgb(233,229,24)" rx="2" ry="2" />
<text  x="186.18" y="351.5" ></text>
</g>
<g >
<title>c10::TensorImpl::TensorImpl@plt (1 samples, 0.02%)</title><rect x="1105.5" y="245" width="0.3" height="15.0" fill="rgb(247,139,6)" rx="2" ry="2" />
<text  x="1108.50" y="255.5" ></text>
</g>
<g >
<title>____fput (1 samples, 0.02%)</title><rect x="1183.1" y="405" width="0.2" height="15.0" fill="rgb(235,29,48)" rx="2" ry="2" />
<text  x="1186.05" y="415.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.02%)</title><rect x="203.2" y="181" width="0.3" height="15.0" fill="rgb(246,92,13)" rx="2" ry="2" />
<text  x="206.19" y="191.5" ></text>
</g>
<g >
<title>at::Tensor::Tensor (4 samples, 0.09%)</title><rect x="437.8" y="405" width="1.1" height="15.0" fill="rgb(248,17,13)" rx="2" ry="2" />
<text  x="440.80" y="415.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, at::Tensor  (2 samples, 0.05%)</title><rect x="133.1" y="405" width="0.6" height="15.0" fill="rgb(240,193,50)" rx="2" ry="2" />
<text  x="136.14" y="415.5" ></text>
</g>
<g >
<title>c10::TensorOptions::set_requires_grad (2 samples, 0.05%)</title><rect x="372.8" y="389" width="0.5" height="15.0" fill="rgb(210,15,38)" rx="2" ry="2" />
<text  x="375.76" y="399.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::expect (2 samples, 0.05%)</title><rect x="170.4" y="373" width="0.5" height="15.0" fill="rgb(208,93,47)" rx="2" ry="2" />
<text  x="173.39" y="383.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="133.4" y="213" width="0.3" height="15.0" fill="rgb(208,126,21)" rx="2" ry="2" />
<text  x="136.42" y="223.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (1 samples, 0.02%)</title><rect x="193.5" y="245" width="0.2" height="15.0" fill="rgb(242,131,43)" rx="2" ry="2" />
<text  x="196.46" y="255.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.05%)</title><rect x="834.7" y="293" width="0.6" height="15.0" fill="rgb(220,11,24)" rx="2" ry="2" />
<text  x="837.75" y="303.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (1 samples, 0.02%)</title><rect x="386.7" y="309" width="0.2" height="15.0" fill="rgb(217,56,20)" rx="2" ry="2" />
<text  x="389.65" y="319.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.02%)</title><rect x="182.1" y="389" width="0.2" height="15.0" fill="rgb(225,169,53)" rx="2" ry="2" />
<text  x="185.07" y="399.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt;::~allocator (4 samples, 0.09%)</title><rect x="839.2" y="277" width="1.1" height="15.0" fill="rgb(229,12,11)" rx="2" ry="2" />
<text  x="842.20" y="287.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="1017.7" y="325" width="0.2" height="15.0" fill="rgb(207,85,45)" rx="2" ry="2" />
<text  x="1020.66" y="335.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTableFull_ (1 samples, 0.02%)</title><rect x="197.4" y="389" width="0.2" height="15.0" fill="rgb(205,139,53)" rx="2" ry="2" />
<text  x="200.35" y="399.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::operator* (1 samples, 0.02%)</title><rect x="422.5" y="405" width="0.3" height="15.0" fill="rgb(231,130,19)" rx="2" ry="2" />
<text  x="425.51" y="415.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.02%)</title><rect x="188.7" y="373" width="0.3" height="15.0" fill="rgb(229,220,5)" rx="2" ry="2" />
<text  x="191.74" y="383.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTable_ (1 samples, 0.02%)</title><rect x="154.0" y="357" width="0.3" height="15.0" fill="rgb(247,95,42)" rx="2" ry="2" />
<text  x="156.99" y="367.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (1 samples, 0.02%)</title><rect x="136.8" y="341" width="0.2" height="15.0" fill="rgb(213,102,2)" rx="2" ry="2" />
<text  x="139.76" y="351.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.02%)</title><rect x="217.6" y="437" width="0.3" height="15.0" fill="rgb(229,180,8)" rx="2" ry="2" />
<text  x="220.65" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::_M_realloc_insert&lt;c10::Argument&gt; (2 samples, 0.05%)</title><rect x="164.8" y="357" width="0.6" height="15.0" fill="rgb(246,196,18)" rx="2" ry="2" />
<text  x="167.83" y="367.5" ></text>
</g>
<g >
<title>[microbenchmark] (1 samples, 0.02%)</title><rect x="475.1" y="309" width="0.2" height="15.0" fill="rgb(252,104,54)" rx="2" ry="2" />
<text  x="478.05" y="319.5" ></text>
</g>
<g >
<title>torch::jit::parseSchema (1 samples, 0.02%)</title><rect x="194.3" y="405" width="0.3" height="15.0" fill="rgb(233,50,19)" rx="2" ry="2" />
<text  x="197.30" y="415.5" ></text>
</g>
<g >
<title>std::move&lt;at::Tensor&amp;&gt; (2 samples, 0.05%)</title><rect x="908.1" y="405" width="0.6" height="15.0" fill="rgb(245,94,12)" rx="2" ry="2" />
<text  x="911.13" y="415.5" ></text>
</g>
<g >
<title>__cxa_finalize (1 samples, 0.02%)</title><rect x="251.8" y="405" width="0.3" height="15.0" fill="rgb(221,12,3)" rx="2" ry="2" />
<text  x="254.84" y="415.5" ></text>
</g>
<g >
<title>__libc_calloc (1 samples, 0.02%)</title><rect x="188.2" y="405" width="0.3" height="15.0" fill="rgb(211,163,26)" rx="2" ry="2" />
<text  x="191.18" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="219.3" y="469" width="0.3" height="15.0" fill="rgb(214,177,27)" rx="2" ry="2" />
<text  x="222.31" y="479.5" ></text>
</g>
<g >
<title>at::hasCallbacks@plt (1 samples, 0.02%)</title><rect x="500.6" y="357" width="0.3" height="15.0" fill="rgb(229,139,47)" rx="2" ry="2" />
<text  x="503.62" y="367.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;*&gt; (3 samples, 0.07%)</title><rect x="390.3" y="309" width="0.8" height="15.0" fill="rgb(213,4,41)" rx="2" ry="2" />
<text  x="393.27" y="319.5" ></text>
</g>
<g >
<title>std::move&lt;torch::autograd::Node*&amp;&gt; (1 samples, 0.02%)</title><rect x="952.1" y="293" width="0.2" height="15.0" fill="rgb(244,16,53)" rx="2" ry="2" />
<text  x="955.05" y="303.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::MemoryFormat&gt;::optional (4 samples, 0.09%)</title><rect x="375.0" y="405" width="1.1" height="15.0" fill="rgb(250,116,40)" rx="2" ry="2" />
<text  x="377.98" y="415.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="140.6" y="341" width="0.3" height="15.0" fill="rgb(248,79,25)" rx="2" ry="2" />
<text  x="143.65" y="351.5" ></text>
</g>
<g >
<title>c10::AutogradMetaInterface::~AutogradMetaInterface (1 samples, 0.02%)</title><rect x="832.2" y="325" width="0.3" height="15.0" fill="rgb(245,58,33)" rx="2" ry="2" />
<text  x="835.25" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect x="190.1" y="405" width="0.3" height="15.0" fill="rgb(228,104,42)" rx="2" ry="2" />
<text  x="193.13" y="415.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (2 samples, 0.05%)</title><rect x="89.5" y="485" width="0.6" height="15.0" fill="rgb(244,172,12)" rx="2" ry="2" />
<text  x="92.50" y="495.5" ></text>
</g>
<g >
<title>torch::Library::_impl (7 samples, 0.16%)</title><rect x="172.6" y="405" width="2.0" height="15.0" fill="rgb(217,175,54)" rx="2" ry="2" />
<text  x="175.61" y="415.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="271.0" y="389" width="0.3" height="15.0" fill="rgb(247,159,1)" rx="2" ry="2" />
<text  x="274.02" y="399.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="198.2" y="373" width="0.3" height="15.0" fill="rgb(251,88,34)" rx="2" ry="2" />
<text  x="201.19" y="383.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="555.9" y="181" width="0.3" height="15.0" fill="rgb(251,201,22)" rx="2" ry="2" />
<text  x="558.94" y="191.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="130.6" y="373" width="0.3" height="15.0" fill="rgb(242,126,12)" rx="2" ry="2" />
<text  x="133.64" y="383.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.02%)</title><rect x="382.8" y="341" width="0.2" height="15.0" fill="rgb(228,97,18)" rx="2" ry="2" />
<text  x="385.76" y="351.5" ></text>
</g>
<g >
<title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, c10::OperatorName, std::hash&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueHasher&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::hash&lt;c10::OperatorName&gt; &gt;, std::equal_to&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueEquality&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::equal_to&lt;c10::OperatorName&gt; &gt;, std::allocator&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt; &gt; &gt;::rehash (1 samples, 0.02%)</title><rect x="184.0" y="325" width="0.3" height="15.0" fill="rgb(220,39,8)" rx="2" ry="2" />
<text  x="187.01" y="335.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::vector&lt;std::function&lt;at::Tensor  (2 samples, 0.05%)</title><rect x="384.7" y="357" width="0.6" height="15.0" fill="rgb(249,188,41)" rx="2" ry="2" />
<text  x="387.71" y="367.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.02%)</title><rect x="156.2" y="405" width="0.3" height="15.0" fill="rgb(209,6,8)" rx="2" ry="2" />
<text  x="159.21" y="415.5" ></text>
</g>
<g >
<title>c10::TensorImpl::compute_contiguous (4 samples, 0.09%)</title><rect x="360.0" y="261" width="1.1" height="15.0" fill="rgb(254,39,27)" rx="2" ry="2" />
<text  x="362.97" y="271.5" ></text>
</g>
<g >
<title>__tls_get_addr (2 samples, 0.05%)</title><rect x="1022.1" y="357" width="0.6" height="15.0" fill="rgb(254,128,16)" rx="2" ry="2" />
<text  x="1025.10" y="367.5" ></text>
</g>
<g >
<title>c10::TensorImpl::set_sizes_contiguous (14 samples, 0.33%)</title><rect x="361.1" y="277" width="3.9" height="15.0" fill="rgb(213,40,39)" rx="2" ry="2" />
<text  x="364.08" y="287.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="202.9" y="373" width="0.3" height="15.0" fill="rgb(221,196,24)" rx="2" ry="2" />
<text  x="205.91" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::_M_realloc_insert&lt;c10::Argument&gt; (1 samples, 0.02%)</title><rect x="194.9" y="357" width="0.2" height="15.0" fill="rgb(242,218,11)" rx="2" ry="2" />
<text  x="197.85" y="367.5" ></text>
</g>
<g >
<title>torch::jit::parseName (1 samples, 0.02%)</title><rect x="151.2" y="405" width="0.3" height="15.0" fill="rgb(232,210,26)" rx="2" ry="2" />
<text  x="154.21" y="415.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="224.3" y="485" width="0.3" height="15.0" fill="rgb(234,47,33)" rx="2" ry="2" />
<text  x="227.32" y="495.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.02%)</title><rect x="150.9" y="341" width="0.3" height="15.0" fill="rgb(228,94,37)" rx="2" ry="2" />
<text  x="153.93" y="351.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::operator (1 samples, 0.02%)</title><rect x="62.3" y="485" width="0.2" height="15.0" fill="rgb(238,131,21)" rx="2" ry="2" />
<text  x="65.26" y="495.5" ></text>
</g>
<g >
<title>c10::impl::tls_local_dispatch_key_set (6 samples, 0.14%)</title><rect x="796.1" y="373" width="1.7" height="15.0" fill="rgb(251,207,23)" rx="2" ry="2" />
<text  x="799.11" y="383.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (1 samples, 0.02%)</title><rect x="1007.1" y="341" width="0.3" height="15.0" fill="rgb(227,91,29)" rx="2" ry="2" />
<text  x="1010.09" y="351.5" ></text>
</g>
<g >
<title>TORCH_LIBRARY_IMPL_init_aten_Named (10 samples, 0.24%)</title><rect x="142.3" y="421" width="2.8" height="15.0" fill="rgb(233,27,3)" rx="2" ry="2" />
<text  x="145.32" y="431.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::registerKernel (1 samples, 0.02%)</title><rect x="151.8" y="373" width="0.2" height="15.0" fill="rgb(230,20,43)" rx="2" ry="2" />
<text  x="154.77" y="383.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="147.9" y="261" width="0.3" height="15.0" fill="rgb(221,62,3)" rx="2" ry="2" />
<text  x="150.88" y="271.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="195.7" y="309" width="0.3" height="15.0" fill="rgb(240,60,8)" rx="2" ry="2" />
<text  x="198.69" y="319.5" ></text>
</g>
<g >
<title>perf (11 samples, 0.26%)</title><rect x="1186.9" y="517" width="3.1" height="15.0" fill="rgb(206,37,27)" rx="2" ry="2" />
<text  x="1189.94" y="527.5" ></text>
</g>
<g >
<title>at::TORCH_LIBRARY_init_aten (73 samples, 1.72%)</title><rect x="155.9" y="437" width="20.3" height="15.0" fill="rgb(208,49,32)" rx="2" ry="2" />
<text  x="158.94" y="447.5" ></text>
</g>
<g >
<title>[libcusparse.so.11.1.0.218] (1 samples, 0.02%)</title><rect x="252.4" y="389" width="0.3" height="15.0" fill="rgb(239,213,3)" rx="2" ry="2" />
<text  x="255.39" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::_M_realloc_insert&lt;c10::Argument&gt; (1 samples, 0.02%)</title><rect x="199.3" y="373" width="0.3" height="15.0" fill="rgb(217,21,15)" rx="2" ry="2" />
<text  x="202.30" y="383.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (4 samples, 0.09%)</title><rect x="249.9" y="341" width="1.1" height="15.0" fill="rgb(239,226,52)" rx="2" ry="2" />
<text  x="252.89" y="351.5" ></text>
</g>
<g >
<title>at::hasCallbacks (5 samples, 0.12%)</title><rect x="324.7" y="309" width="1.4" height="15.0" fill="rgb(244,204,42)" rx="2" ry="2" />
<text  x="327.67" y="319.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;c10::OperatorKernel,  (1 samples, 0.02%)</title><rect x="148.7" y="405" width="0.3" height="15.0" fill="rgb(215,138,46)" rx="2" ry="2" />
<text  x="151.71" y="415.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="201.8" y="309" width="0.3" height="15.0" fill="rgb(240,179,17)" rx="2" ry="2" />
<text  x="204.80" y="319.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (1 samples, 0.02%)</title><rect x="159.8" y="325" width="0.3" height="15.0" fill="rgb(216,94,30)" rx="2" ry="2" />
<text  x="162.83" y="335.5" ></text>
</g>
<g >
<title>torch::Library::_impl (2 samples, 0.05%)</title><rect x="178.2" y="389" width="0.5" height="15.0" fill="rgb(210,16,51)" rx="2" ry="2" />
<text  x="181.17" y="399.5" ></text>
</g>
<g >
<title>c10::Device::validate (4 samples, 0.09%)</title><rect x="786.7" y="277" width="1.1" height="15.0" fill="rgb(234,198,25)" rx="2" ry="2" />
<text  x="789.66" y="287.5" ></text>
</g>
<g >
<title>at::Tensor::getIntrusivePtr (1 samples, 0.02%)</title><rect x="639.9" y="405" width="0.3" height="15.0" fill="rgb(229,202,51)" rx="2" ry="2" />
<text  x="642.89" y="415.5" ></text>
</g>
<g >
<title>ksys_read (1 samples, 0.02%)</title><rect x="146.5" y="245" width="0.3" height="15.0" fill="rgb(228,146,6)" rx="2" ry="2" />
<text  x="149.49" y="255.5" ></text>
</g>
<g >
<title>onnx_torch::OpSchema::TypeConstraint (1 samples, 0.02%)</title><rect x="187.6" y="389" width="0.3" height="15.0" fill="rgb(230,175,53)" rx="2" ry="2" />
<text  x="190.63" y="399.5" ></text>
</g>
<g >
<title>Xbyak::util::Cpu::Cpu (1 samples, 0.02%)</title><rect x="185.1" y="421" width="0.3" height="15.0" fill="rgb(236,156,44)" rx="2" ry="2" />
<text  x="188.12" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, char&gt; (1 samples, 0.02%)</title><rect x="152.0" y="357" width="0.3" height="15.0" fill="rgb(224,92,41)" rx="2" ry="2" />
<text  x="155.04" y="367.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="150.4" y="357" width="0.3" height="15.0" fill="rgb(213,190,18)" rx="2" ry="2" />
<text  x="153.38" y="367.5" ></text>
</g>
<g >
<title>c10::isFloatingType (1 samples, 0.02%)</title><rect x="244.6" y="485" width="0.3" height="15.0" fill="rgb(214,129,14)" rx="2" ry="2" />
<text  x="247.61" y="495.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="162.9" y="181" width="0.3" height="15.0" fill="rgb(246,28,33)" rx="2" ry="2" />
<text  x="165.89" y="191.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="180.1" y="325" width="0.3" height="15.0" fill="rgb(229,228,8)" rx="2" ry="2" />
<text  x="183.12" y="335.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;c10::MemoryFormat&gt;::constexpr_optional_base (3 samples, 0.07%)</title><rect x="375.0" y="389" width="0.8" height="15.0" fill="rgb(209,210,8)" rx="2" ry="2" />
<text  x="377.98" y="399.5" ></text>
</g>
<g >
<title>c10::isFloatingType (2 samples, 0.05%)</title><rect x="477.8" y="341" width="0.6" height="15.0" fill="rgb(248,12,39)" rx="2" ry="2" />
<text  x="480.83" y="351.5" ></text>
</g>
<g >
<title>torch::jit::parseName (1 samples, 0.02%)</title><rect x="177.3" y="373" width="0.3" height="15.0" fill="rgb(233,28,3)" rx="2" ry="2" />
<text  x="180.34" y="383.5" ></text>
</g>
<g >
<title>__libc_malloc (4 samples, 0.09%)</title><rect x="745.8" y="197" width="1.1" height="15.0" fill="rgb(248,21,6)" rx="2" ry="2" />
<text  x="748.80" y="207.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;torch::autograd::Node,  (26 samples, 0.61%)</title><rect x="945.9" y="341" width="7.3" height="15.0" fill="rgb(216,65,42)" rx="2" ry="2" />
<text  x="948.94" y="351.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::initialized (2 samples, 0.05%)</title><rect x="855.6" y="357" width="0.6" height="15.0" fill="rgb(231,46,31)" rx="2" ry="2" />
<text  x="858.60" y="367.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="132.0" y="325" width="0.3" height="15.0" fill="rgb(236,202,7)" rx="2" ry="2" />
<text  x="135.03" y="335.5" ></text>
</g>
<g >
<title>torch::jit::parseSchema (1 samples, 0.02%)</title><rect x="217.4" y="437" width="0.2" height="15.0" fill="rgb(231,47,30)" rx="2" ry="2" />
<text  x="220.37" y="447.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;float&gt; (3 samples, 0.07%)</title><rect x="13.6" y="485" width="0.8" height="15.0" fill="rgb(215,218,19)" rx="2" ry="2" />
<text  x="16.61" y="495.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;c10::MemoryFormat&gt;::constexpr_optional_base (1 samples, 0.02%)</title><rect x="879.8" y="421" width="0.3" height="15.0" fill="rgb(205,75,1)" rx="2" ry="2" />
<text  x="882.78" y="431.5" ></text>
</g>
<g >
<title>[libcudart.so.11.0.194] (1 samples, 0.02%)</title><rect x="200.4" y="405" width="0.3" height="15.0" fill="rgb(245,201,46)" rx="2" ry="2" />
<text  x="203.41" y="415.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::setManuallyBoxedKernel_ (1 samples, 0.02%)</title><rect x="197.4" y="405" width="0.2" height="15.0" fill="rgb(227,144,6)" rx="2" ry="2" />
<text  x="200.35" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::either&lt;c10::OperatorName, c10::FunctionSchema&gt;, std::allocator&lt;c10::either&lt;c10::OperatorName, c10::FunctionSchema&gt; &gt; &gt;::_M_realloc_insert&lt;c10::either&lt;c10::OperatorName, c10::FunctionSchema&gt; &gt; (1 samples, 0.02%)</title><rect x="152.3" y="341" width="0.3" height="15.0" fill="rgb(220,47,9)" rx="2" ry="2" />
<text  x="155.32" y="351.5" ></text>
</g>
<g >
<title>vsnprintf (1 samples, 0.02%)</title><rect x="146.5" y="117" width="0.3" height="15.0" fill="rgb(244,64,1)" rx="2" ry="2" />
<text  x="149.49" y="127.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;torch::autograd::Node,  (1 samples, 0.02%)</title><rect x="954.6" y="341" width="0.2" height="15.0" fill="rgb(211,101,31)" rx="2" ry="2" />
<text  x="957.56" y="351.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="137.3" y="309" width="0.3" height="15.0" fill="rgb(217,18,43)" rx="2" ry="2" />
<text  x="140.31" y="319.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.02%)</title><rect x="187.1" y="421" width="0.2" height="15.0" fill="rgb(243,40,13)" rx="2" ry="2" />
<text  x="190.07" y="431.5" ></text>
</g>
<g >
<title>c10::InternedStrings::symbol (1 samples, 0.02%)</title><rect x="141.8" y="421" width="0.2" height="15.0" fill="rgb(229,65,4)" rx="2" ry="2" />
<text  x="144.76" y="431.5" ></text>
</g>
<g >
<title>do_brk_flags (1 samples, 0.02%)</title><rect x="193.2" y="245" width="0.3" height="15.0" fill="rgb(209,169,7)" rx="2" ry="2" />
<text  x="196.18" y="255.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="935.9" y="309" width="0.3" height="15.0" fill="rgb(249,3,54)" rx="2" ry="2" />
<text  x="938.93" y="319.5" ></text>
</g>
<g >
<title>c10::impl::tls_local_dispatch_key_set (9 samples, 0.21%)</title><rect x="1163.6" y="373" width="2.5" height="15.0" fill="rgb(227,187,40)" rx="2" ry="2" />
<text  x="1166.59" y="383.5" ></text>
</g>
<g >
<title>c10::SingleElementType&lt; (1 samples, 0.02%)</title><rect x="181.2" y="341" width="0.3" height="15.0" fill="rgb(235,132,27)" rx="2" ry="2" />
<text  x="184.23" y="351.5" ></text>
</g>
<g >
<title>c10::detail::_str_wrapper&lt;char const*, char const* const&amp;, char const*, unsigned int const&amp;&gt;::call[abi:cxx11] (1 samples, 0.02%)</title><rect x="132.9" y="373" width="0.2" height="15.0" fill="rgb(216,215,41)" rx="2" ry="2" />
<text  x="135.86" y="383.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="150.1" y="245" width="0.3" height="15.0" fill="rgb(228,52,42)" rx="2" ry="2" />
<text  x="153.10" y="255.5" ></text>
</g>
<g >
<title>__tls_get_addr (2 samples, 0.05%)</title><rect x="1061.0" y="261" width="0.6" height="15.0" fill="rgb(208,77,49)" rx="2" ry="2" />
<text  x="1064.02" y="271.5" ></text>
</g>
<g >
<title>std::__weak_count&lt; (1 samples, 0.02%)</title><rect x="91.7" y="485" width="0.3" height="15.0" fill="rgb(208,21,23)" rx="2" ry="2" />
<text  x="94.72" y="495.5" ></text>
</g>
<g >
<title>do_anonymous_page (2 samples, 0.05%)</title><rect x="160.4" y="277" width="0.5" height="15.0" fill="rgb(248,29,33)" rx="2" ry="2" />
<text  x="163.38" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect x="88.1" y="485" width="0.3" height="15.0" fill="rgb(216,174,53)" rx="2" ry="2" />
<text  x="91.11" y="495.5" ></text>
</g>
<g >
<title>c10::TensorImpl::~TensorImpl (1 samples, 0.02%)</title><rect x="38.9" y="485" width="0.3" height="15.0" fill="rgb(222,16,36)" rx="2" ry="2" />
<text  x="41.91" y="495.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="147.9" y="341" width="0.3" height="15.0" fill="rgb(236,107,0)" rx="2" ry="2" />
<text  x="150.88" y="351.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="192.1" y="309" width="0.3" height="15.0" fill="rgb(233,12,30)" rx="2" ry="2" />
<text  x="195.07" y="319.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.02%)</title><rect x="221.3" y="357" width="0.2" height="15.0" fill="rgb(217,210,8)" rx="2" ry="2" />
<text  x="224.26" y="367.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (1 samples, 0.02%)</title><rect x="178.5" y="357" width="0.2" height="15.0" fill="rgb(244,154,4)" rx="2" ry="2" />
<text  x="181.45" y="367.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="194.0" y="357" width="0.3" height="15.0" fill="rgb(222,202,54)" rx="2" ry="2" />
<text  x="197.02" y="367.5" ></text>
</g>
<g >
<title>c10::Device::validate (6 samples, 0.14%)</title><rect x="418.3" y="389" width="1.7" height="15.0" fill="rgb(239,109,1)" rx="2" ry="2" />
<text  x="421.34" y="399.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="143.7" y="309" width="0.3" height="15.0" fill="rgb(223,74,3)" rx="2" ry="2" />
<text  x="146.71" y="319.5" ></text>
</g>
<g >
<title>[libcublasLt.so.11.1.0.229] (2 samples, 0.05%)</title><rect x="130.9" y="421" width="0.6" height="15.0" fill="rgb(207,136,48)" rx="2" ry="2" />
<text  x="133.92" y="431.5" ></text>
</g>
<g >
<title>c10::alloc_cpu (62 samples, 1.46%)</title><rect x="754.1" y="245" width="17.3" height="15.0" fill="rgb(213,92,5)" rx="2" ry="2" />
<text  x="757.14" y="255.5" ></text>
</g>
<g >
<title>c10::detail::getTypePtr_&lt;at::Tensor&gt;::call (1 samples, 0.02%)</title><rect x="55.3" y="485" width="0.3" height="15.0" fill="rgb(238,159,41)" rx="2" ry="2" />
<text  x="58.31" y="495.5" ></text>
</g>
<g >
<title>c10::impl::detail::with_scattered_tensor_options_impl_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor  (305 samples, 7.18%)</title><rect x="1066.6" y="293" width="84.8" height="15.0" fill="rgb(224,88,34)" rx="2" ry="2" />
<text  x="1069.58" y="303.5" >c10::impl..</text>
</g>
<g >
<title>std::forward&lt;int&gt; (1 samples, 0.02%)</title><rect x="615.7" y="405" width="0.3" height="15.0" fill="rgb(237,54,10)" rx="2" ry="2" />
<text  x="618.71" y="415.5" ></text>
</g>
<g >
<title>c10::Dispatcher::callWithDispatchKey&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (418 samples, 9.85%)</title><rect x="678.8" y="373" width="116.2" height="15.0" fill="rgb(241,145,19)" rx="2" ry="2" />
<text  x="681.81" y="383.5" >c10::Dispatche..</text>
</g>
<g >
<title>at::AutoNonVariableTypeMode::AutoNonVariableTypeMode (4 samples, 0.09%)</title><rect x="306.0" y="405" width="1.2" height="15.0" fill="rgb(247,81,50)" rx="2" ry="2" />
<text  x="309.04" y="415.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="104.2" y="485" width="0.3" height="15.0" fill="rgb(217,44,37)" rx="2" ry="2" />
<text  x="107.23" y="495.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="190.7" y="245" width="0.3" height="15.0" fill="rgb(233,101,17)" rx="2" ry="2" />
<text  x="193.68" y="255.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::optional (5 samples, 0.12%)</title><rect x="404.7" y="405" width="1.4" height="15.0" fill="rgb(239,164,9)" rx="2" ry="2" />
<text  x="407.72" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, char&gt; (1 samples, 0.02%)</title><rect x="180.7" y="373" width="0.3" height="15.0" fill="rgb(226,22,6)" rx="2" ry="2" />
<text  x="183.68" y="383.5" ></text>
</g>
<g >
<title>setup_new_exec (10 samples, 0.24%)</title><rect x="1186.9" y="405" width="2.8" height="15.0" fill="rgb(223,16,23)" rx="2" ry="2" />
<text  x="1189.94" y="415.5" ></text>
</g>
<g >
<title>__libc_malloc (2 samples, 0.05%)</title><rect x="191.8" y="389" width="0.6" height="15.0" fill="rgb(241,181,16)" rx="2" ry="2" />
<text  x="194.80" y="399.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;long&gt; (1 samples, 0.02%)</title><rect x="989.3" y="325" width="0.3" height="15.0" fill="rgb(208,112,43)" rx="2" ry="2" />
<text  x="992.30" y="335.5" ></text>
</g>
<g >
<title>c10::TensorImpl::TensorImpl (10 samples, 0.24%)</title><rect x="341.3" y="261" width="2.8" height="15.0" fill="rgb(231,217,5)" rx="2" ry="2" />
<text  x="344.35" y="271.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor  (2 samples, 0.05%)</title><rect x="180.1" y="421" width="0.6" height="15.0" fill="rgb(247,101,0)" rx="2" ry="2" />
<text  x="183.12" y="431.5" ></text>
</g>
<g >
<title>c10::impl::detail::with_scattered_tensor_options_impl_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor  (374 samples, 8.81%)</title><rect x="691.0" y="341" width="104.0" height="15.0" fill="rgb(223,224,38)" rx="2" ry="2" />
<text  x="694.04" y="351.5" >c10::impl::d..</text>
</g>
<g >
<title>vfs_statx (1 samples, 0.02%)</title><rect x="124.8" y="277" width="0.3" height="15.0" fill="rgb(244,220,49)" rx="2" ry="2" />
<text  x="127.80" y="287.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (1 samples, 0.02%)</title><rect x="1016.3" y="357" width="0.2" height="15.0" fill="rgb(224,136,12)" rx="2" ry="2" />
<text  x="1019.27" y="367.5" ></text>
</g>
<g >
<title>c10::TensorOptions::dtype (17 samples, 0.40%)</title><rect x="420.8" y="421" width="4.8" height="15.0" fill="rgb(237,0,36)" rx="2" ry="2" />
<text  x="423.85" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;, std::allocator&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt; &gt;::_Vector_impl::~_Vector_impl (1 samples, 0.02%)</title><rect x="85.1" y="485" width="0.2" height="15.0" fill="rgb(235,75,22)" rx="2" ry="2" />
<text  x="88.05" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;c10::AutogradMetaInterface, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::unique_ptr&lt;std::default_delete&lt;c10::AutogradMetaInterface&gt;, void&gt; (3 samples, 0.07%)</title><rect x="303.5" y="405" width="0.9" height="15.0" fill="rgb(234,124,52)" rx="2" ry="2" />
<text  x="306.54" y="415.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::initialized (2 samples, 0.05%)</title><rect x="872.8" y="373" width="0.6" height="15.0" fill="rgb(239,178,32)" rx="2" ry="2" />
<text  x="875.83" y="383.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, c10::AutogradMetaInterface*, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::_M_head (2 samples, 0.05%)</title><rect x="487.8" y="341" width="0.6" height="15.0" fill="rgb(221,38,19)" rx="2" ry="2" />
<text  x="490.84" y="351.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (1 samples, 0.02%)</title><rect x="223.2" y="309" width="0.3" height="15.0" fill="rgb(231,129,41)" rx="2" ry="2" />
<text  x="226.21" y="319.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="151.5" y="309" width="0.3" height="15.0" fill="rgb(252,162,23)" rx="2" ry="2" />
<text  x="154.49" y="319.5" ></text>
</g>
<g >
<title>c10::alloc_cpu (79 samples, 1.86%)</title><rect x="1111.1" y="245" width="21.9" height="15.0" fill="rgb(228,40,32)" rx="2" ry="2" />
<text  x="1114.06" y="255.5" >c..</text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;bool&gt;::constexpr_optional_base (2 samples, 0.05%)</title><rect x="897.3" y="405" width="0.5" height="15.0" fill="rgb(207,213,14)" rx="2" ry="2" />
<text  x="900.29" y="415.5" ></text>
</g>
<g >
<title>c10::RegisterOperators::registerOp_ (3 samples, 0.07%)</title><rect x="189.6" y="421" width="0.8" height="15.0" fill="rgb(227,207,3)" rx="2" ry="2" />
<text  x="192.57" y="431.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;float&gt; (1 samples, 0.02%)</title><rect x="207.1" y="485" width="0.3" height="15.0" fill="rgb(236,151,45)" rx="2" ry="2" />
<text  x="210.08" y="495.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;long  (1 samples, 0.02%)</title><rect x="147.9" y="421" width="0.3" height="15.0" fill="rgb(219,94,23)" rx="2" ry="2" />
<text  x="150.88" y="431.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="143.1" y="293" width="0.3" height="15.0" fill="rgb(222,177,39)" rx="2" ry="2" />
<text  x="146.15" y="303.5" ></text>
</g>
<g >
<title>std::_Hash_bytes@plt (1 samples, 0.02%)</title><rect x="248.2" y="309" width="0.3" height="15.0" fill="rgb(238,48,19)" rx="2" ry="2" />
<text  x="251.22" y="319.5" ></text>
</g>
<g >
<title>torch::autograd::make_variable (81 samples, 1.91%)</title><rect x="646.6" y="405" width="22.5" height="15.0" fill="rgb(248,176,17)" rx="2" ry="2" />
<text  x="649.56" y="415.5" >t..</text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, char&gt; (1 samples, 0.02%)</title><rect x="138.7" y="373" width="0.3" height="15.0" fill="rgb(208,55,14)" rx="2" ry="2" />
<text  x="141.70" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (1 samples, 0.02%)</title><rect x="170.4" y="309" width="0.3" height="15.0" fill="rgb(209,163,37)" rx="2" ry="2" />
<text  x="173.39" y="319.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;float&gt; (3 samples, 0.07%)</title><rect x="426.7" y="405" width="0.8" height="15.0" fill="rgb(231,191,27)" rx="2" ry="2" />
<text  x="429.68" y="415.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.02%)</title><rect x="178.7" y="261" width="0.3" height="15.0" fill="rgb(219,174,32)" rx="2" ry="2" />
<text  x="181.73" y="271.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, torch::CppFunction&gt; (1 samples, 0.02%)</title><rect x="183.5" y="389" width="0.2" height="15.0" fill="rgb(243,150,37)" rx="2" ry="2" />
<text  x="186.46" y="399.5" ></text>
</g>
<g >
<title>cpuinfo_initialize (1 samples, 0.02%)</title><rect x="146.5" y="389" width="0.3" height="15.0" fill="rgb(253,135,48)" rx="2" ry="2" />
<text  x="149.49" y="399.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (71 samples, 1.67%)</title><rect x="1113.3" y="213" width="19.7" height="15.0" fill="rgb(208,143,48)" rx="2" ry="2" />
<text  x="1116.28" y="223.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="202.6" y="341" width="0.3" height="15.0" fill="rgb(246,0,29)" rx="2" ry="2" />
<text  x="205.64" y="351.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="152.0" y="325" width="0.3" height="15.0" fill="rgb(251,61,29)" rx="2" ry="2" />
<text  x="155.04" y="335.5" ></text>
</g>
<g >
<title>[libcublasLt.so.11.1.0.229] (1 samples, 0.02%)</title><rect x="216.5" y="485" width="0.3" height="15.0" fill="rgb(211,43,41)" rx="2" ry="2" />
<text  x="219.53" y="495.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::optional (1 samples, 0.02%)</title><rect x="69.2" y="485" width="0.3" height="15.0" fill="rgb(227,198,54)" rx="2" ry="2" />
<text  x="72.21" y="495.5" ></text>
</g>
<g >
<title>at::hasCallbacks (2 samples, 0.05%)</title><rect x="1036.6" y="341" width="0.5" height="15.0" fill="rgb(225,209,46)" rx="2" ry="2" />
<text  x="1039.56" y="351.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.02%)</title><rect x="148.7" y="357" width="0.3" height="15.0" fill="rgb(224,7,46)" rx="2" ry="2" />
<text  x="151.71" y="367.5" ></text>
</g>
<g >
<title>torch::Library::impl_UNBOXED&lt;char const*, at::Tensor&amp;  (4 samples, 0.09%)</title><rect x="176.2" y="421" width="1.1" height="15.0" fill="rgb(235,67,49)" rx="2" ry="2" />
<text  x="179.23" y="431.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, torch::CppFunction&gt; (2 samples, 0.05%)</title><rect x="178.2" y="405" width="0.5" height="15.0" fill="rgb(225,131,54)" rx="2" ry="2" />
<text  x="181.17" y="415.5" ></text>
</g>
<g >
<title>torch::(anonymous namespace)::debugString (2 samples, 0.05%)</title><rect x="160.9" y="389" width="0.6" height="15.0" fill="rgb(223,164,0)" rx="2" ry="2" />
<text  x="163.94" y="399.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.02%)</title><rect x="155.4" y="389" width="0.3" height="15.0" fill="rgb(227,165,25)" rx="2" ry="2" />
<text  x="158.38" y="399.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="145.9" y="373" width="0.3" height="15.0" fill="rgb(243,179,11)" rx="2" ry="2" />
<text  x="148.93" y="383.5" ></text>
</g>
<g >
<title>do_page_fault (2 samples, 0.05%)</title><rect x="201.5" y="357" width="0.6" height="15.0" fill="rgb(227,97,6)" rx="2" ry="2" />
<text  x="204.52" y="367.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::optional&lt;bool, false&gt; (7 samples, 0.16%)</title><rect x="427.5" y="437" width="2.0" height="15.0" fill="rgb(212,87,5)" rx="2" ry="2" />
<text  x="430.52" y="447.5" ></text>
</g>
<g >
<title>__cxa_finalize (1 samples, 0.02%)</title><rect x="252.1" y="405" width="0.3" height="15.0" fill="rgb(232,126,41)" rx="2" ry="2" />
<text  x="255.12" y="415.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.02%)</title><rect x="170.7" y="325" width="0.2" height="15.0" fill="rgb(239,69,22)" rx="2" ry="2" />
<text  x="173.67" y="335.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_qconv_prepack.cpp (1 samples, 0.02%)</title><rect x="186.5" y="453" width="0.3" height="15.0" fill="rgb(232,139,10)" rx="2" ry="2" />
<text  x="189.51" y="463.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.02%)</title><rect x="181.8" y="389" width="0.3" height="15.0" fill="rgb(236,143,46)" rx="2" ry="2" />
<text  x="184.79" y="399.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;short&gt; (3 samples, 0.07%)</title><rect x="473.9" y="325" width="0.9" height="15.0" fill="rgb(250,102,2)" rx="2" ry="2" />
<text  x="476.94" y="335.5" ></text>
</g>
<g >
<title>c10::FloatType::isSubtypeOfExt (1 samples, 0.02%)</title><rect x="189.8" y="357" width="0.3" height="15.0" fill="rgb(232,229,20)" rx="2" ry="2" />
<text  x="192.85" y="367.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseList (1 samples, 0.02%)</title><rect x="164.6" y="325" width="0.2" height="15.0" fill="rgb(221,80,17)" rx="2" ry="2" />
<text  x="167.55" y="335.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::intrusive_ptr (2 samples, 0.05%)</title><rect x="639.3" y="389" width="0.6" height="15.0" fill="rgb(224,65,8)" rx="2" ry="2" />
<text  x="642.33" y="399.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_schema.cc (1 samples, 0.02%)</title><rect x="187.6" y="453" width="0.3" height="15.0" fill="rgb(207,90,12)" rx="2" ry="2" />
<text  x="190.63" y="463.5" ></text>
</g>
<g >
<title>c10::impl::tls_local_dispatch_key_set (3 samples, 0.07%)</title><rect x="573.5" y="389" width="0.8" height="15.0" fill="rgb(214,59,34)" rx="2" ry="2" />
<text  x="576.45" y="399.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="190.7" y="277" width="0.3" height="15.0" fill="rgb(249,152,14)" rx="2" ry="2" />
<text  x="193.68" y="287.5" ></text>
</g>
<g >
<title>c10::Device::is_cpu (4 samples, 0.09%)</title><rect x="621.5" y="357" width="1.2" height="15.0" fill="rgb(218,160,0)" rx="2" ry="2" />
<text  x="624.54" y="367.5" ></text>
</g>
<g >
<title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, c10::OperatorName, std::hash&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueHasher&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::hash&lt;c10::OperatorName&gt; &gt;, std::equal_to&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueEquality&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::equal_to&lt;c10::OperatorName&gt; &gt;, std::allocator&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt; &gt; &gt;::emplace_new_key&lt;c10::OperatorName const&amp;, c10::OperatorHandle&amp;&gt; (1 samples, 0.02%)</title><rect x="133.4" y="341" width="0.3" height="15.0" fill="rgb(253,180,34)" rx="2" ry="2" />
<text  x="136.42" y="351.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (54 samples, 1.27%)</title><rect x="756.4" y="213" width="15.0" height="15.0" fill="rgb(223,68,22)" rx="2" ry="2" />
<text  x="759.36" y="223.5" ></text>
</g>
<g >
<title>c10::TensorImpl::set_allow_tensor_metadata_change (3 samples, 0.07%)</title><rect x="916.2" y="389" width="0.8" height="15.0" fill="rgb(207,7,14)" rx="2" ry="2" />
<text  x="919.20" y="399.5" ></text>
</g>
<g >
<title>posix_memalign (3 samples, 0.07%)</title><rect x="245.4" y="485" width="0.9" height="15.0" fill="rgb(207,1,35)" rx="2" ry="2" />
<text  x="248.44" y="495.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1132.7" y="133" width="0.3" height="15.0" fill="rgb(230,218,16)" rx="2" ry="2" />
<text  x="1135.74" y="143.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="162.9" y="165" width="0.3" height="15.0" fill="rgb(222,194,38)" rx="2" ry="2" />
<text  x="165.89" y="175.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;unsigned char&gt; (1 samples, 0.02%)</title><rect x="986.5" y="309" width="0.3" height="15.0" fill="rgb(211,32,11)" rx="2" ry="2" />
<text  x="989.52" y="319.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="202.6" y="405" width="0.3" height="15.0" fill="rgb(224,0,53)" rx="2" ry="2" />
<text  x="205.64" y="415.5" ></text>
</g>
<g >
<title>caffe2::operator== (2 samples, 0.05%)</title><rect x="82.0" y="485" width="0.6" height="15.0" fill="rgb(245,197,19)" rx="2" ry="2" />
<text  x="85.00" y="495.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr_target::~intrusive_ptr_target (5 samples, 0.12%)</title><rect x="844.5" y="325" width="1.4" height="15.0" fill="rgb(226,171,9)" rx="2" ry="2" />
<text  x="847.48" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1 samples, 0.02%)</title><rect x="161.8" y="357" width="0.3" height="15.0" fill="rgb(239,26,35)" rx="2" ry="2" />
<text  x="164.77" y="367.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (1 samples, 0.02%)</title><rect x="183.7" y="405" width="0.3" height="15.0" fill="rgb(237,149,15)" rx="2" ry="2" />
<text  x="186.73" y="415.5" ></text>
</g>
<g >
<title>operator new (10 samples, 0.24%)</title><rect x="930.1" y="373" width="2.8" height="15.0" fill="rgb(254,149,2)" rx="2" ry="2" />
<text  x="933.09" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="123.1" y="325" width="0.3" height="15.0" fill="rgb(215,59,23)" rx="2" ry="2" />
<text  x="126.14" y="335.5" ></text>
</g>
<g >
<title>[ld-2.31.so] (2 samples, 0.05%)</title><rect x="103.7" y="485" width="0.5" height="15.0" fill="rgb(242,77,20)" rx="2" ry="2" />
<text  x="106.68" y="495.5" ></text>
</g>
<g >
<title>micro_requires_grad_true (726 samples, 17.10%)</title><rect x="376.1" y="453" width="201.8" height="15.0" fill="rgb(237,146,39)" rx="2" ry="2" />
<text  x="379.09" y="463.5" >micro_requires_grad_true</text>
</g>
<g >
<title>rmqueue (1 samples, 0.02%)</title><rect x="201.8" y="213" width="0.3" height="15.0" fill="rgb(228,31,6)" rx="2" ry="2" />
<text  x="204.80" y="223.5" ></text>
</g>
<g >
<title>c10::memoryProfilingEnabled (2 samples, 0.05%)</title><rect x="346.9" y="245" width="0.6" height="15.0" fill="rgb(224,101,34)" rx="2" ry="2" />
<text  x="349.90" y="255.5" ></text>
</g>
<g >
<title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="161.2" y="357" width="0.3" height="15.0" fill="rgb(225,86,19)" rx="2" ry="2" />
<text  x="164.22" y="367.5" ></text>
</g>
<g >
<title>__tls_get_addr (3 samples, 0.07%)</title><rect x="1165.3" y="357" width="0.8" height="15.0" fill="rgb(230,32,29)" rx="2" ry="2" />
<text  x="1168.26" y="367.5" ></text>
</g>
<g >
<title>__fput (1 samples, 0.02%)</title><rect x="1183.1" y="389" width="0.2" height="15.0" fill="rgb(249,30,3)" rx="2" ry="2" />
<text  x="1186.05" y="399.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor  (2 samples, 0.05%)</title><rect x="182.3" y="421" width="0.6" height="15.0" fill="rgb(246,203,29)" rx="2" ry="2" />
<text  x="185.34" y="431.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="196.0" y="421" width="0.2" height="15.0" fill="rgb(241,86,50)" rx="2" ry="2" />
<text  x="198.96" y="431.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (1 samples, 0.02%)</title><rect x="154.5" y="405" width="0.3" height="15.0" fill="rgb(235,73,41)" rx="2" ry="2" />
<text  x="157.55" y="415.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::vector&lt;std::function&lt;at::Tensor  (1 samples, 0.02%)</title><rect x="458.4" y="357" width="0.3" height="15.0" fill="rgb(243,200,6)" rx="2" ry="2" />
<text  x="461.37" y="367.5" ></text>
</g>
<g >
<title>c10::Dispatcher::singleton (2 samples, 0.05%)</title><rect x="795.0" y="373" width="0.6" height="15.0" fill="rgb(233,211,5)" rx="2" ry="2" />
<text  x="798.00" y="383.5" ></text>
</g>
<g >
<title>at::Tensor::Tensor (2 samples, 0.05%)</title><rect x="32.0" y="485" width="0.5" height="15.0" fill="rgb(208,119,44)" rx="2" ry="2" />
<text  x="34.96" y="495.5" ></text>
</g>
<g >
<title>at::Tensor::Tensor (1 samples, 0.02%)</title><rect x="296.3" y="405" width="0.3" height="15.0" fill="rgb(205,67,44)" rx="2" ry="2" />
<text  x="299.31" y="415.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="122.0" y="357" width="0.3" height="15.0" fill="rgb(206,227,13)" rx="2" ry="2" />
<text  x="125.02" y="367.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="152.3" y="229" width="0.3" height="15.0" fill="rgb(238,6,1)" rx="2" ry="2" />
<text  x="155.32" y="239.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.02%)</title><rect x="183.5" y="341" width="0.2" height="15.0" fill="rgb(235,181,12)" rx="2" ry="2" />
<text  x="186.46" y="351.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (2 samples, 0.05%)</title><rect x="149.5" y="389" width="0.6" height="15.0" fill="rgb(240,215,40)" rx="2" ry="2" />
<text  x="152.54" y="399.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (1 samples, 0.02%)</title><rect x="143.4" y="117" width="0.3" height="15.0" fill="rgb(231,38,48)" rx="2" ry="2" />
<text  x="146.43" y="127.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1 samples, 0.02%)</title><rect x="258.2" y="341" width="0.3" height="15.0" fill="rgb(236,74,47)" rx="2" ry="2" />
<text  x="261.23" y="351.5" ></text>
</g>
<g >
<title>c10::InternedStrings::symbol (1 samples, 0.02%)</title><rect x="189.3" y="437" width="0.3" height="15.0" fill="rgb(236,29,9)" rx="2" ry="2" />
<text  x="192.29" y="447.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (4 samples, 0.09%)</title><rect x="249.9" y="389" width="1.1" height="15.0" fill="rgb(231,37,16)" rx="2" ry="2" />
<text  x="252.89" y="399.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.02%)</title><rect x="182.9" y="405" width="0.3" height="15.0" fill="rgb(220,147,50)" rx="2" ry="2" />
<text  x="185.90" y="415.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="184.8" y="389" width="0.3" height="15.0" fill="rgb(222,8,11)" rx="2" ry="2" />
<text  x="187.85" y="399.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (1 samples, 0.02%)</title><rect x="157.3" y="389" width="0.3" height="15.0" fill="rgb(208,21,21)" rx="2" ry="2" />
<text  x="160.33" y="399.5" ></text>
</g>
<g >
<title>c10::typeMetaToScalarType (6 samples, 0.14%)</title><rect x="798.3" y="373" width="1.7" height="15.0" fill="rgb(206,92,34)" rx="2" ry="2" />
<text  x="801.33" y="383.5" ></text>
</g>
<g >
<title>__libc_malloc (4 samples, 0.09%)</title><rect x="1104.4" y="197" width="1.1" height="15.0" fill="rgb(251,82,40)" rx="2" ry="2" />
<text  x="1107.38" y="207.5" ></text>
</g>
<g >
<title>torch::detail::TorchLibraryInit::TorchLibraryInit (1 samples, 0.02%)</title><rect x="145.7" y="437" width="0.2" height="15.0" fill="rgb(253,147,36)" rx="2" ry="2" />
<text  x="148.65" y="447.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="145.1" y="261" width="0.3" height="15.0" fill="rgb(250,208,25)" rx="2" ry="2" />
<text  x="148.10" y="271.5" ></text>
</g>
<g >
<title>c10::impl::(anonymous namespace)::checkSchema (1 samples, 0.02%)</title><rect x="155.1" y="357" width="0.3" height="15.0" fill="rgb(247,120,16)" rx="2" ry="2" />
<text  x="158.10" y="367.5" ></text>
</g>
<g >
<title>torch::autograd::Edge::~Edge (9 samples, 0.21%)</title><rect x="993.5" y="373" width="2.5" height="15.0" fill="rgb(213,45,11)" rx="2" ry="2" />
<text  x="996.47" y="383.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.05%)</title><rect x="878.9" y="389" width="0.6" height="15.0" fill="rgb(213,141,48)" rx="2" ry="2" />
<text  x="881.95" y="399.5" ></text>
</g>
<g >
<title>c10::dtype (64 samples, 1.51%)</title><rect x="616.3" y="421" width="17.8" height="15.0" fill="rgb(238,194,23)" rx="2" ry="2" />
<text  x="619.26" y="431.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;int&gt;@plt (1 samples, 0.02%)</title><rect x="1168.6" y="357" width="0.3" height="15.0" fill="rgb(214,159,1)" rx="2" ry="2" />
<text  x="1171.60" y="367.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.02%)</title><rect x="147.9" y="405" width="0.3" height="15.0" fill="rgb(211,208,53)" rx="2" ry="2" />
<text  x="150.88" y="415.5" ></text>
</g>
<g >
<title>c10::TensorOptions::dtype (2 samples, 0.05%)</title><rect x="566.2" y="293" width="0.6" height="15.0" fill="rgb(227,32,46)" rx="2" ry="2" />
<text  x="569.23" y="303.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (6 samples, 0.14%)</title><rect x="460.3" y="325" width="1.7" height="15.0" fill="rgb(254,223,41)" rx="2" ry="2" />
<text  x="463.32" y="335.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (1 samples, 0.02%)</title><rect x="157.3" y="405" width="0.3" height="15.0" fill="rgb(226,188,38)" rx="2" ry="2" />
<text  x="160.33" y="415.5" ></text>
</g>
<g >
<title>at::TORCH_LIBRARY_init_aten (1 samples, 0.02%)</title><rect x="225.7" y="485" width="0.3" height="15.0" fill="rgb(212,175,21)" rx="2" ry="2" />
<text  x="228.71" y="495.5" ></text>
</g>
<g >
<title>__tls_get_addr (3 samples, 0.07%)</title><rect x="383.3" y="309" width="0.9" height="15.0" fill="rgb(225,156,38)" rx="2" ry="2" />
<text  x="386.32" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; (1 samples, 0.02%)</title><rect x="142.3" y="325" width="0.3" height="15.0" fill="rgb(245,144,6)" rx="2" ry="2" />
<text  x="145.32" y="335.5" ></text>
</g>
<g >
<title>[ld-2.31.so] (4 samples, 0.09%)</title><rect x="120.9" y="389" width="1.1" height="15.0" fill="rgb(228,149,45)" rx="2" ry="2" />
<text  x="123.91" y="399.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.02%)</title><rect x="179.3" y="357" width="0.3" height="15.0" fill="rgb(237,120,10)" rx="2" ry="2" />
<text  x="182.29" y="367.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::optional (5 samples, 0.12%)</title><rect x="65.9" y="485" width="1.4" height="15.0" fill="rgb(218,153,40)" rx="2" ry="2" />
<text  x="68.87" y="495.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="184.8" y="421" width="0.3" height="15.0" fill="rgb(246,156,0)" rx="2" ry="2" />
<text  x="187.85" y="431.5" ></text>
</g>
<g >
<title>c10::profiledCPUMemoryReporter (3 samples, 0.07%)</title><rect x="1178.6" y="501" width="0.8" height="15.0" fill="rgb(224,75,45)" rx="2" ry="2" />
<text  x="1181.60" y="511.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (1 samples, 0.02%)</title><rect x="179.6" y="389" width="0.2" height="15.0" fill="rgb(234,115,3)" rx="2" ry="2" />
<text  x="182.56" y="399.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.02%)</title><rect x="169.8" y="293" width="0.3" height="15.0" fill="rgb(251,215,32)" rx="2" ry="2" />
<text  x="172.84" y="303.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_RegisterOpContextClass.cpp (1 samples, 0.02%)</title><rect x="145.7" y="453" width="0.2" height="15.0" fill="rgb(220,114,20)" rx="2" ry="2" />
<text  x="148.65" y="463.5" ></text>
</g>
<g >
<title>caffe2::detail::make_function_schema_for_c10 (1 samples, 0.02%)</title><rect x="195.7" y="421" width="0.3" height="15.0" fill="rgb(219,58,34)" rx="2" ry="2" />
<text  x="198.69" y="431.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.02%)</title><rect x="195.1" y="309" width="0.3" height="15.0" fill="rgb(244,14,41)" rx="2" ry="2" />
<text  x="198.13" y="319.5" ></text>
</g>
<g >
<title>release_pages (3 samples, 0.07%)</title><rect x="1182.2" y="293" width="0.9" height="15.0" fill="rgb(215,140,35)" rx="2" ry="2" />
<text  x="1185.22" y="303.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.02%)</title><rect x="1100.5" y="229" width="0.3" height="15.0" fill="rgb(223,225,14)" rx="2" ry="2" />
<text  x="1103.49" y="239.5" ></text>
</g>
<g >
<title>handle_mm_fault (13 samples, 0.31%)</title><rect x="126.7" y="357" width="3.7" height="15.0" fill="rgb(206,81,29)" rx="2" ry="2" />
<text  x="129.75" y="367.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="222.4" y="389" width="0.3" height="15.0" fill="rgb(210,185,21)" rx="2" ry="2" />
<text  x="225.37" y="399.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="203.2" y="277" width="0.3" height="15.0" fill="rgb(222,227,47)" rx="2" ry="2" />
<text  x="206.19" y="287.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="180.1" y="309" width="0.3" height="15.0" fill="rgb(250,95,46)" rx="2" ry="2" />
<text  x="183.12" y="319.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;c10::AutogradMetaInterface&gt;, true&gt;::_Head_base&lt;std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (1 samples, 0.02%)</title><rect x="1003.5" y="325" width="0.3" height="15.0" fill="rgb(215,151,4)" rx="2" ry="2" />
<text  x="1006.48" y="335.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseDeclaration (1 samples, 0.02%)</title><rect x="194.3" y="373" width="0.3" height="15.0" fill="rgb(217,167,32)" rx="2" ry="2" />
<text  x="197.30" y="383.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.02%)</title><rect x="193.5" y="261" width="0.2" height="15.0" fill="rgb(217,12,16)" rx="2" ry="2" />
<text  x="196.46" y="271.5" ></text>
</g>
<g >
<title>c10::constexpr_move&lt;caffe2::TypeMeta&amp;&gt; (2 samples, 0.05%)</title><rect x="630.7" y="373" width="0.6" height="15.0" fill="rgb(227,36,8)" rx="2" ry="2" />
<text  x="633.72" y="383.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="123.1" y="293" width="0.3" height="15.0" fill="rgb(238,77,28)" rx="2" ry="2" />
<text  x="126.14" y="303.5" ></text>
</g>
<g >
<title>c10::ArrayRef&lt;long&gt;::ArrayRef (7 samples, 0.16%)</title><rect x="271.6" y="437" width="1.9" height="15.0" fill="rgb(250,13,40)" rx="2" ry="2" />
<text  x="274.57" y="447.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.07%)</title><rect x="83.1" y="485" width="0.8" height="15.0" fill="rgb(215,185,9)" rx="2" ry="2" />
<text  x="86.11" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::EncodedDescriptorDatabase::Add (1 samples, 0.02%)</title><rect x="202.1" y="421" width="0.3" height="15.0" fill="rgb(247,35,42)" rx="2" ry="2" />
<text  x="205.08" y="431.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="190.7" y="405" width="0.3" height="15.0" fill="rgb(238,206,21)" rx="2" ry="2" />
<text  x="193.68" y="415.5" ></text>
</g>
<g >
<title>c10::ProfiledCPUMemoryReporter::New (5 samples, 0.12%)</title><rect x="346.1" y="261" width="1.4" height="15.0" fill="rgb(218,86,35)" rx="2" ry="2" />
<text  x="349.07" y="271.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="178.5" y="341" width="0.2" height="15.0" fill="rgb(233,208,45)" rx="2" ry="2" />
<text  x="181.45" y="351.5" ></text>
</g>
<g >
<title>std::forward&lt;int&gt; (1 samples, 0.02%)</title><rect x="410.8" y="421" width="0.3" height="15.0" fill="rgb(250,6,21)" rx="2" ry="2" />
<text  x="413.84" y="431.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (2 samples, 0.05%)</title><rect x="254.9" y="261" width="0.6" height="15.0" fill="rgb(244,154,28)" rx="2" ry="2" />
<text  x="257.90" y="271.5" ></text>
</g>
<g >
<title>c10::UndefinedTensorImpl::singleton (1 samples, 0.02%)</title><rect x="299.6" y="405" width="0.3" height="15.0" fill="rgb(229,45,19)" rx="2" ry="2" />
<text  x="302.65" y="415.5" ></text>
</g>
<g >
<title>c10::tryTypeMetaToScalarType (4 samples, 0.09%)</title><rect x="963.7" y="341" width="1.1" height="15.0" fill="rgb(232,70,8)" rx="2" ry="2" />
<text  x="966.73" y="351.5" ></text>
</g>
<g >
<title>torch::autograd::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Autograd (5 samples, 0.12%)</title><rect x="176.2" y="437" width="1.4" height="15.0" fill="rgb(228,20,43)" rx="2" ry="2" />
<text  x="179.23" y="447.5" ></text>
</g>
<g >
<title>c10::Dispatcher::findOrRegisterName_ (1 samples, 0.02%)</title><rect x="189.6" y="389" width="0.2" height="15.0" fill="rgb(230,121,4)" rx="2" ry="2" />
<text  x="192.57" y="399.5" ></text>
</g>
<g >
<title>c10::Device::Device (12 samples, 0.28%)</title><rect x="619.3" y="389" width="3.4" height="15.0" fill="rgb(230,45,7)" rx="2" ry="2" />
<text  x="622.32" y="399.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::TypeMeta (2 samples, 0.05%)</title><rect x="473.4" y="309" width="0.5" height="15.0" fill="rgb(228,173,49)" rx="2" ry="2" />
<text  x="476.38" y="319.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="188.2" y="389" width="0.3" height="15.0" fill="rgb(234,132,49)" rx="2" ry="2" />
<text  x="191.18" y="399.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;float&gt; (4 samples, 0.09%)</title><rect x="895.6" y="389" width="1.1" height="15.0" fill="rgb(217,135,39)" rx="2" ry="2" />
<text  x="898.63" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;, std::allocator&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt; &gt;::vector (1 samples, 0.02%)</title><rect x="936.5" y="373" width="0.3" height="15.0" fill="rgb(232,152,31)" rx="2" ry="2" />
<text  x="939.49" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (1 samples, 0.02%)</title><rect x="87.8" y="485" width="0.3" height="15.0" fill="rgb(226,191,7)" rx="2" ry="2" />
<text  x="90.83" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;, std::allocator&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt; &gt;::~vector (12 samples, 0.28%)</title><rect x="389.7" y="341" width="3.3" height="15.0" fill="rgb(205,48,8)" rx="2" ry="2" />
<text  x="392.71" y="351.5" ></text>
</g>
<g >
<title>at::Tensor::defined (3 samples, 0.07%)</title><rect x="915.1" y="389" width="0.8" height="15.0" fill="rgb(220,186,2)" rx="2" ry="2" />
<text  x="918.08" y="399.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (1 samples, 0.02%)</title><rect x="174.3" y="293" width="0.3" height="15.0" fill="rgb(236,155,33)" rx="2" ry="2" />
<text  x="177.28" y="303.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (1 samples, 0.02%)</title><rect x="186.0" y="341" width="0.2" height="15.0" fill="rgb(227,139,30)" rx="2" ry="2" />
<text  x="188.96" y="351.5" ></text>
</g>
<g >
<title>c10::Dispatcher::callWithDispatchKey&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (202 samples, 4.76%)</title><rect x="510.6" y="341" width="56.2" height="15.0" fill="rgb(231,55,48)" rx="2" ry="2" />
<text  x="513.63" y="351.5" >c10::..</text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (1 samples, 0.02%)</title><rect x="190.7" y="421" width="0.3" height="15.0" fill="rgb(236,40,26)" rx="2" ry="2" />
<text  x="193.68" y="431.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;c10::Device&gt;::constexpr_optional_base (1 samples, 0.02%)</title><rect x="405.0" y="389" width="0.3" height="15.0" fill="rgb(213,127,49)" rx="2" ry="2" />
<text  x="408.00" y="399.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.02%)</title><rect x="158.2" y="309" width="0.2" height="15.0" fill="rgb(206,126,23)" rx="2" ry="2" />
<text  x="161.16" y="319.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="165.1" y="245" width="0.3" height="15.0" fill="rgb(243,118,27)" rx="2" ry="2" />
<text  x="168.11" y="255.5" ></text>
</g>
<g >
<title>cfree (2 samples, 0.05%)</title><rect x="397.8" y="357" width="0.5" height="15.0" fill="rgb(220,4,19)" rx="2" ry="2" />
<text  x="400.77" y="367.5" ></text>
</g>
<g >
<title>pte_alloc_one (1 samples, 0.02%)</title><rect x="125.4" y="229" width="0.2" height="15.0" fill="rgb(232,149,19)" rx="2" ry="2" />
<text  x="128.36" y="239.5" ></text>
</g>
<g >
<title>__cxa_atexit (1 samples, 0.02%)</title><rect x="188.2" y="437" width="0.3" height="15.0" fill="rgb(249,192,36)" rx="2" ry="2" />
<text  x="191.18" y="447.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (1 samples, 0.02%)</title><rect x="194.3" y="357" width="0.3" height="15.0" fill="rgb(242,173,28)" rx="2" ry="2" />
<text  x="197.30" y="367.5" ></text>
</g>
<g >
<title>brk (1 samples, 0.02%)</title><rect x="151.5" y="261" width="0.3" height="15.0" fill="rgb(221,202,10)" rx="2" ry="2" />
<text  x="154.49" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (1 samples, 0.02%)</title><rect x="218.2" y="341" width="0.3" height="15.0" fill="rgb(206,141,12)" rx="2" ry="2" />
<text  x="221.20" y="351.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="150.1" y="149" width="0.3" height="15.0" fill="rgb(250,227,46)" rx="2" ry="2" />
<text  x="153.10" y="159.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.02%)</title><rect x="160.7" y="229" width="0.2" height="15.0" fill="rgb(251,202,12)" rx="2" ry="2" />
<text  x="163.66" y="239.5" ></text>
</g>
<g >
<title>__libc_calloc (1 samples, 0.02%)</title><rect x="251.8" y="357" width="0.3" height="15.0" fill="rgb(216,124,39)" rx="2" ry="2" />
<text  x="254.84" y="367.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.02%)</title><rect x="183.2" y="181" width="0.3" height="15.0" fill="rgb(216,94,6)" rx="2" ry="2" />
<text  x="186.18" y="191.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::registerer (2 samples, 0.05%)</title><rect x="202.9" y="453" width="0.6" height="15.0" fill="rgb(215,79,16)" rx="2" ry="2" />
<text  x="205.91" y="463.5" ></text>
</g>
<g >
<title>at::RecordFunction::RecordFunction@plt (2 samples, 0.05%)</title><rect x="704.1" y="309" width="0.6" height="15.0" fill="rgb(225,152,6)" rx="2" ry="2" />
<text  x="707.10" y="319.5" ></text>
</g>
<g >
<title>__do_page_fault (2 samples, 0.05%)</title><rect x="201.5" y="341" width="0.6" height="15.0" fill="rgb(247,29,37)" rx="2" ry="2" />
<text  x="204.52" y="351.5" ></text>
</g>
<g >
<title>__read (1 samples, 0.02%)</title><rect x="146.5" y="309" width="0.3" height="15.0" fill="rgb(214,80,1)" rx="2" ry="2" />
<text  x="149.49" y="319.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.02%)</title><rect x="217.6" y="309" width="0.3" height="15.0" fill="rgb(221,79,37)" rx="2" ry="2" />
<text  x="220.65" y="319.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (8 samples, 0.19%)</title><rect x="925.4" y="389" width="2.2" height="15.0" fill="rgb(223,44,48)" rx="2" ry="2" />
<text  x="928.37" y="399.5" ></text>
</g>
<g >
<title>torch::empty (255 samples, 6.01%)</title><rect x="305.2" y="421" width="70.9" height="15.0" fill="rgb(214,4,39)" rx="2" ry="2" />
<text  x="308.21" y="431.5" >torch::e..</text>
</g>
<g >
<title>c10::InternedStrings::_symbol (1 samples, 0.02%)</title><rect x="248.2" y="325" width="0.3" height="15.0" fill="rgb(214,31,45)" rx="2" ry="2" />
<text  x="251.22" y="335.5" ></text>
</g>
<g >
<title>torch::empty (533 samples, 12.56%)</title><rect x="429.7" y="437" width="148.2" height="15.0" fill="rgb(212,20,2)" rx="2" ry="2" />
<text  x="432.74" y="447.5" >torch::empty</text>
</g>
<g >
<title>[microbenchmark] (1 samples, 0.02%)</title><rect x="307.4" y="389" width="0.3" height="15.0" fill="rgb(208,85,26)" rx="2" ry="2" />
<text  x="310.43" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;c10::AutogradMetaInterface, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::unique_ptr&lt;std::default_delete&lt;c10::AutogradMetaInterface&gt;, void&gt; (8 samples, 0.19%)</title><rect x="664.9" y="389" width="2.2" height="15.0" fill="rgb(246,166,14)" rx="2" ry="2" />
<text  x="667.91" y="399.5" ></text>
</g>
<g >
<title>at::RecordFunction::end (2 samples, 0.05%)</title><rect x="314.4" y="357" width="0.5" height="15.0" fill="rgb(224,191,22)" rx="2" ry="2" />
<text  x="317.38" y="367.5" ></text>
</g>
<g >
<title>do_sys_open (1 samples, 0.02%)</title><rect x="125.1" y="293" width="0.3" height="15.0" fill="rgb(234,135,30)" rx="2" ry="2" />
<text  x="128.08" y="303.5" ></text>
</g>
<g >
<title>c10::constexpr_storage_t&lt;c10::ScalarType&gt;::constexpr_storage_t&lt;c10::ScalarType&gt; (1 samples, 0.02%)</title><rect x="55.0" y="485" width="0.3" height="15.0" fill="rgb(227,96,13)" rx="2" ry="2" />
<text  x="58.03" y="495.5" ></text>
</g>
<g >
<title>c10::Dispatcher::singleton@plt (1 samples, 0.02%)</title><rect x="572.9" y="389" width="0.3" height="15.0" fill="rgb(229,152,46)" rx="2" ry="2" />
<text  x="575.90" y="399.5" ></text>
</g>
<g >
<title>do_group_exit (12 samples, 0.28%)</title><rect x="1180.0" y="453" width="3.3" height="15.0" fill="rgb(236,101,3)" rx="2" ry="2" />
<text  x="1182.99" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::vector (5 samples, 0.12%)</title><rect x="162.9" y="373" width="1.4" height="15.0" fill="rgb(207,47,53)" rx="2" ry="2" />
<text  x="165.89" y="383.5" ></text>
</g>
<g >
<title>c10::constexpr_storage_t&lt;bool&gt;::constexpr_storage_t (2 samples, 0.05%)</title><rect x="1174.2" y="357" width="0.5" height="15.0" fill="rgb(238,139,44)" rx="2" ry="2" />
<text  x="1177.16" y="367.5" ></text>
</g>
<g >
<title>std::operator&amp; (2 samples, 0.05%)</title><rect x="594.9" y="293" width="0.5" height="15.0" fill="rgb(212,168,0)" rx="2" ry="2" />
<text  x="597.86" y="303.5" ></text>
</g>
<g >
<title>[ld-2.31.so] (1 samples, 0.02%)</title><rect x="150.7" y="405" width="0.2" height="15.0" fill="rgb(224,187,54)" rx="2" ry="2" />
<text  x="153.65" y="415.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (2 samples, 0.05%)</title><rect x="103.1" y="485" width="0.6" height="15.0" fill="rgb(207,218,17)" rx="2" ry="2" />
<text  x="106.12" y="495.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="168.7" y="293" width="0.3" height="15.0" fill="rgb(219,209,3)" rx="2" ry="2" />
<text  x="171.72" y="303.5" ></text>
</g>
<g >
<title>c10::Device::Device (1 samples, 0.02%)</title><rect x="33.3" y="485" width="0.3" height="15.0" fill="rgb(252,11,15)" rx="2" ry="2" />
<text  x="36.35" y="495.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="1132.7" y="69" width="0.3" height="15.0" fill="rgb(239,152,36)" rx="2" ry="2" />
<text  x="1135.74" y="79.5" ></text>
</g>
<g >
<title>__tls_init (3 samples, 0.07%)</title><rect x="687.7" y="325" width="0.8" height="15.0" fill="rgb(231,48,11)" rx="2" ry="2" />
<text  x="690.70" y="335.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1132.7" y="149" width="0.3" height="15.0" fill="rgb(207,196,11)" rx="2" ry="2" />
<text  x="1135.74" y="159.5" ></text>
</g>
<g >
<title>native_write_msr (10 samples, 0.24%)</title><rect x="1186.9" y="309" width="2.8" height="15.0" fill="rgb(235,28,31)" rx="2" ry="2" />
<text  x="1189.94" y="319.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.02%)</title><rect x="248.8" y="357" width="0.3" height="15.0" fill="rgb(230,127,29)" rx="2" ry="2" />
<text  x="251.78" y="367.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (1 samples, 0.02%)</title><rect x="194.0" y="245" width="0.3" height="15.0" fill="rgb(236,229,1)" rx="2" ry="2" />
<text  x="197.02" y="255.5" ></text>
</g>
<g >
<title>do_page_fault (2 samples, 0.05%)</title><rect x="136.2" y="309" width="0.6" height="15.0" fill="rgb(216,32,31)" rx="2" ry="2" />
<text  x="139.20" y="319.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.02%)</title><rect x="137.6" y="357" width="0.3" height="15.0" fill="rgb(253,78,36)" rx="2" ry="2" />
<text  x="140.59" y="367.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::TypeMeta (2 samples, 0.05%)</title><rect x="288.5" y="389" width="0.6" height="15.0" fill="rgb(253,101,46)" rx="2" ry="2" />
<text  x="291.53" y="399.5" ></text>
</g>
<g >
<title>std::forward&lt;c10::ScalarType&gt; (1 samples, 0.02%)</title><rect x="471.4" y="309" width="0.3" height="15.0" fill="rgb(240,229,37)" rx="2" ry="2" />
<text  x="474.44" y="319.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (4 samples, 0.09%)</title><rect x="242.9" y="485" width="1.2" height="15.0" fill="rgb(207,98,31)" rx="2" ry="2" />
<text  x="245.94" y="495.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerDef (2 samples, 0.05%)</title><rect x="189.6" y="405" width="0.5" height="15.0" fill="rgb(229,64,14)" rx="2" ry="2" />
<text  x="192.57" y="415.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTableFull_ (1 samples, 0.02%)</title><rect x="157.0" y="373" width="0.3" height="15.0" fill="rgb(240,27,39)" rx="2" ry="2" />
<text  x="160.05" y="383.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::TypeMeta (1 samples, 0.02%)</title><rect x="622.9" y="373" width="0.3" height="15.0" fill="rgb(216,68,39)" rx="2" ry="2" />
<text  x="625.93" y="383.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseAliasAnnotation (2 samples, 0.05%)</title><rect x="219.9" y="389" width="0.5" height="15.0" fill="rgb(248,124,8)" rx="2" ry="2" />
<text  x="222.87" y="399.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (12 samples, 0.28%)</title><rect x="16.7" y="485" width="3.3" height="15.0" fill="rgb(238,159,44)" rx="2" ry="2" />
<text  x="19.67" y="495.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::optional (10 samples, 0.24%)</title><rect x="803.1" y="373" width="2.7" height="15.0" fill="rgb(224,96,29)" rx="2" ry="2" />
<text  x="806.06" y="383.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;bool&gt;::constexpr_optional_base (1 samples, 0.02%)</title><rect x="576.8" y="373" width="0.3" height="15.0" fill="rgb(214,194,14)" rx="2" ry="2" />
<text  x="579.79" y="383.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::nextIf (1 samples, 0.02%)</title><rect x="172.3" y="373" width="0.3" height="15.0" fill="rgb(208,59,11)" rx="2" ry="2" />
<text  x="175.34" y="383.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::optional (1 samples, 0.02%)</title><rect x="374.7" y="405" width="0.3" height="15.0" fill="rgb(243,170,20)" rx="2" ry="2" />
<text  x="377.70" y="415.5" ></text>
</g>
<g >
<title>[ld-2.31.so] (1 samples, 0.02%)</title><rect x="155.9" y="421" width="0.3" height="15.0" fill="rgb(231,71,8)" rx="2" ry="2" />
<text  x="158.94" y="431.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::dataptr (2 samples, 0.05%)</title><rect x="859.2" y="373" width="0.6" height="15.0" fill="rgb(225,86,40)" rx="2" ry="2" />
<text  x="862.21" y="383.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.02%)</title><rect x="796.7" y="357" width="0.2" height="15.0" fill="rgb(254,207,24)" rx="2" ry="2" />
<text  x="799.67" y="367.5" ></text>
</g>
<g >
<title>torch::autograd::isDifferentiableType (1 samples, 0.02%)</title><rect x="248.5" y="485" width="0.3" height="15.0" fill="rgb(230,217,23)" rx="2" ry="2" />
<text  x="251.50" y="495.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerDef (7 samples, 0.16%)</title><rect x="157.9" y="389" width="1.9" height="15.0" fill="rgb(206,50,46)" rx="2" ry="2" />
<text  x="160.88" y="399.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::TypeMeta (1 samples, 0.02%)</title><rect x="474.5" y="309" width="0.3" height="15.0" fill="rgb(212,0,25)" rx="2" ry="2" />
<text  x="477.49" y="319.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::operator++ (1 samples, 0.02%)</title><rect x="443.9" y="373" width="0.3" height="15.0" fill="rgb(249,153,29)" rx="2" ry="2" />
<text  x="446.92" y="383.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.02%)</title><rect x="182.1" y="421" width="0.2" height="15.0" fill="rgb(245,228,1)" rx="2" ry="2" />
<text  x="185.07" y="431.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::dataptr (2 samples, 0.05%)</title><rect x="627.9" y="373" width="0.6" height="15.0" fill="rgb(248,16,22)" rx="2" ry="2" />
<text  x="630.94" y="383.5" ></text>
</g>
<g >
<title>at::hasCallbacks@plt (1 samples, 0.02%)</title><rect x="313.8" y="357" width="0.3" height="15.0" fill="rgb(215,156,31)" rx="2" ry="2" />
<text  x="316.83" y="367.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="125.9" y="213" width="0.3" height="15.0" fill="rgb(234,94,0)" rx="2" ry="2" />
<text  x="128.92" y="223.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;torch::autograd::Node&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="479.8" y="373" width="0.3" height="15.0" fill="rgb(250,49,36)" rx="2" ry="2" />
<text  x="482.78" y="383.5" ></text>
</g>
<g >
<title>inode_permission (1 samples, 0.02%)</title><rect x="124.8" y="197" width="0.3" height="15.0" fill="rgb(205,146,48)" rx="2" ry="2" />
<text  x="127.80" y="207.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="183.2" y="309" width="0.3" height="15.0" fill="rgb(246,41,39)" rx="2" ry="2" />
<text  x="186.18" y="319.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, c10::AutogradMetaInterface*, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::_M_head (4 samples, 0.09%)</title><rect x="1013.2" y="325" width="1.1" height="15.0" fill="rgb(209,163,25)" rx="2" ry="2" />
<text  x="1016.21" y="335.5" ></text>
</g>
<g >
<title>c10::TensorImpl::set_allow_tensor_metadata_change (5 samples, 0.12%)</title><rect x="654.3" y="389" width="1.4" height="15.0" fill="rgb(249,36,1)" rx="2" ry="2" />
<text  x="657.34" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.14%)</title><rect x="123.7" y="341" width="1.7" height="15.0" fill="rgb(249,229,13)" rx="2" ry="2" />
<text  x="126.69" y="351.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseAliasAnnotation (1 samples, 0.02%)</title><rect x="218.2" y="405" width="0.3" height="15.0" fill="rgb(222,54,1)" rx="2" ry="2" />
<text  x="221.20" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; (1 samples, 0.02%)</title><rect x="84.2" y="485" width="0.3" height="15.0" fill="rgb(240,211,9)" rx="2" ry="2" />
<text  x="87.22" y="495.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (1 samples, 0.02%)</title><rect x="194.0" y="229" width="0.3" height="15.0" fill="rgb(248,5,22)" rx="2" ry="2" />
<text  x="197.02" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (1 samples, 0.02%)</title><rect x="160.9" y="357" width="0.3" height="15.0" fill="rgb(254,160,38)" rx="2" ry="2" />
<text  x="163.94" y="367.5" ></text>
</g>
<g >
<title>c10::ObservedOperators::isObserved (2 samples, 0.05%)</title><rect x="135.4" y="341" width="0.5" height="15.0" fill="rgb(242,188,21)" rx="2" ry="2" />
<text  x="138.37" y="351.5" ></text>
</g>
<g >
<title>at::is_custom_op (2 samples, 0.05%)</title><rect x="227.7" y="485" width="0.5" height="15.0" fill="rgb(218,175,23)" rx="2" ry="2" />
<text  x="230.65" y="495.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="1016.5" y="341" width="0.3" height="15.0" fill="rgb(226,112,38)" rx="2" ry="2" />
<text  x="1019.54" y="351.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, c10::AutogradMetaInterface*, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="304.1" y="357" width="0.3" height="15.0" fill="rgb(238,197,20)" rx="2" ry="2" />
<text  x="307.10" y="367.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="189.6" y="373" width="0.2" height="15.0" fill="rgb(228,190,6)" rx="2" ry="2" />
<text  x="192.57" y="383.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::vector&lt;std::function&lt;at::Tensor  (2 samples, 0.05%)</title><rect x="388.0" y="325" width="0.6" height="15.0" fill="rgb(210,148,31)" rx="2" ry="2" />
<text  x="391.04" y="335.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="202.6" y="325" width="0.3" height="15.0" fill="rgb(233,179,44)" rx="2" ry="2" />
<text  x="205.64" y="335.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_VariableType_0.cpp (5 samples, 0.12%)</title><rect x="176.2" y="453" width="1.4" height="15.0" fill="rgb(221,98,41)" rx="2" ry="2" />
<text  x="179.23" y="463.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (62 samples, 1.46%)</title><rect x="580.4" y="405" width="17.2" height="15.0" fill="rgb(209,191,13)" rx="2" ry="2" />
<text  x="583.40" y="415.5" ></text>
</g>
<g >
<title>__do_page_fault (2 samples, 0.05%)</title><rect x="162.9" y="277" width="0.5" height="15.0" fill="rgb(226,68,10)" rx="2" ry="2" />
<text  x="165.89" y="287.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="347.2" y="213" width="0.3" height="15.0" fill="rgb(235,75,23)" rx="2" ry="2" />
<text  x="350.18" y="223.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="147.0" y="373" width="0.3" height="15.0" fill="rgb(237,36,15)" rx="2" ry="2" />
<text  x="150.04" y="383.5" ></text>
</g>
<g >
<title>_dl_catch_exception (14 samples, 0.33%)</title><rect x="122.3" y="421" width="3.9" height="15.0" fill="rgb(248,138,39)" rx="2" ry="2" />
<text  x="125.30" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, char&gt; (1 samples, 0.02%)</title><rect x="187.1" y="389" width="0.2" height="15.0" fill="rgb(239,22,29)" rx="2" ry="2" />
<text  x="190.07" y="399.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="150.1" y="229" width="0.3" height="15.0" fill="rgb(223,43,25)" rx="2" ry="2" />
<text  x="153.10" y="239.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="152.0" y="341" width="0.3" height="15.0" fill="rgb(239,110,20)" rx="2" ry="2" />
<text  x="155.04" y="351.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="165.1" y="293" width="0.3" height="15.0" fill="rgb(246,86,21)" rx="2" ry="2" />
<text  x="168.11" y="303.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="125.4" y="325" width="0.2" height="15.0" fill="rgb(237,195,42)" rx="2" ry="2" />
<text  x="128.36" y="335.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="132.6" y="341" width="0.3" height="15.0" fill="rgb(238,226,20)" rx="2" ry="2" />
<text  x="135.59" y="351.5" ></text>
</g>
<g >
<title>at::native::empty_cpu (1 samples, 0.02%)</title><rect x="228.2" y="485" width="0.3" height="15.0" fill="rgb(211,112,30)" rx="2" ry="2" />
<text  x="231.21" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::substr (2 samples, 0.05%)</title><rect x="168.4" y="325" width="0.6" height="15.0" fill="rgb(241,115,8)" rx="2" ry="2" />
<text  x="171.45" y="335.5" ></text>
</g>
<g >
<title>torch::autograd::AutogradMeta::~AutogradMeta (33 samples, 0.78%)</title><rect x="384.2" y="373" width="9.1" height="15.0" fill="rgb(219,73,32)" rx="2" ry="2" />
<text  x="387.15" y="383.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.02%)</title><rect x="151.5" y="341" width="0.3" height="15.0" fill="rgb(222,225,42)" rx="2" ry="2" />
<text  x="154.49" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="219.0" y="469" width="0.3" height="15.0" fill="rgb(227,29,26)" rx="2" ry="2" />
<text  x="222.04" y="479.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.02%)</title><rect x="156.5" y="325" width="0.3" height="15.0" fill="rgb(217,54,17)" rx="2" ry="2" />
<text  x="159.49" y="335.5" ></text>
</g>
<g >
<title>c10::TensorImpl::empty_tensor_restride (1 samples, 0.02%)</title><rect x="1178.0" y="501" width="0.3" height="15.0" fill="rgb(218,93,1)" rx="2" ry="2" />
<text  x="1181.05" y="511.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="190.7" y="309" width="0.3" height="15.0" fill="rgb(236,81,26)" rx="2" ry="2" />
<text  x="193.68" y="319.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.02%)</title><rect x="137.3" y="325" width="0.3" height="15.0" fill="rgb(214,211,44)" rx="2" ry="2" />
<text  x="140.31" y="335.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (1 samples, 0.02%)</title><rect x="197.1" y="405" width="0.3" height="15.0" fill="rgb(248,14,3)" rx="2" ry="2" />
<text  x="200.08" y="415.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.12%)</title><rect x="1105.8" y="245" width="1.4" height="15.0" fill="rgb(251,65,12)" rx="2" ry="2" />
<text  x="1108.77" y="255.5" ></text>
</g>
<g >
<title>torch::autograd::AutogradMeta::AutogradMeta (88 samples, 2.07%)</title><rect x="453.9" y="389" width="24.5" height="15.0" fill="rgb(207,180,54)" rx="2" ry="2" />
<text  x="456.92" y="399.5" >t..</text>
</g>
<g >
<title>torch::(anonymous namespace)::debugString (2 samples, 0.05%)</title><rect x="143.7" y="373" width="0.6" height="15.0" fill="rgb(251,41,32)" rx="2" ry="2" />
<text  x="146.71" y="383.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (1 samples, 0.02%)</title><rect x="199.9" y="405" width="0.2" height="15.0" fill="rgb(210,63,23)" rx="2" ry="2" />
<text  x="202.86" y="415.5" ></text>
</g>
<g >
<title>c10::Registerer&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unique_ptr&lt;caffe2::OperatorBase, std::default_delete&lt;caffe2::OperatorBase&gt; &gt;, caffe2::OperatorDef const&amp;, caffe2::Workspace*&gt;::Registerer (1 samples, 0.02%)</title><rect x="187.9" y="437" width="0.3" height="15.0" fill="rgb(228,65,14)" rx="2" ry="2" />
<text  x="190.90" y="447.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (2 samples, 0.05%)</title><rect x="1146.4" y="245" width="0.5" height="15.0" fill="rgb(220,133,13)" rx="2" ry="2" />
<text  x="1149.36" y="255.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::dataptr (1 samples, 0.02%)</title><rect x="276.3" y="389" width="0.3" height="15.0" fill="rgb(213,13,12)" rx="2" ry="2" />
<text  x="279.30" y="399.5" ></text>
</g>
<g >
<title>c10::TensorOptions::computeDispatchKey (18 samples, 0.42%)</title><rect x="1151.9" y="325" width="5.0" height="15.0" fill="rgb(222,191,42)" rx="2" ry="2" />
<text  x="1154.92" y="335.5" ></text>
</g>
<g >
<title>__tls_get_addr@plt (1 samples, 0.02%)</title><rect x="500.3" y="325" width="0.3" height="15.0" fill="rgb(247,104,23)" rx="2" ry="2" />
<text  x="503.35" y="335.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.02%)</title><rect x="185.7" y="325" width="0.3" height="15.0" fill="rgb(253,141,0)" rx="2" ry="2" />
<text  x="188.68" y="335.5" ></text>
</g>
<g >
<title>std::function&lt;std::unique_ptr&lt;caffe2::OperatorBase, std::default_delete&lt;caffe2::OperatorBase&gt; &gt;  (1 samples, 0.02%)</title><rect x="93.4" y="485" width="0.3" height="15.0" fill="rgb(210,219,42)" rx="2" ry="2" />
<text  x="96.39" y="495.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="149.3" y="309" width="0.2" height="15.0" fill="rgb(207,195,22)" rx="2" ry="2" />
<text  x="152.27" y="319.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;bool&gt;::constexpr_optional_base (1 samples, 0.02%)</title><rect x="806.1" y="389" width="0.3" height="15.0" fill="rgb(218,221,23)" rx="2" ry="2" />
<text  x="809.12" y="399.5" ></text>
</g>
<g >
<title>c10::ThreadLocalDebugInfo::get (4 samples, 0.09%)</title><rect x="383.0" y="325" width="1.2" height="15.0" fill="rgb(230,51,36)" rx="2" ry="2" />
<text  x="386.04" y="335.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="185.4" y="341" width="0.3" height="15.0" fill="rgb(215,19,50)" rx="2" ry="2" />
<text  x="188.40" y="351.5" ></text>
</g>
<g >
<title>c10::Device::validate (1 samples, 0.02%)</title><rect x="366.9" y="293" width="0.3" height="15.0" fill="rgb(217,10,47)" rx="2" ry="2" />
<text  x="369.92" y="303.5" ></text>
</g>
<g >
<title>c10::Dispatcher::callWithDispatchKey&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (274 samples, 6.45%)</title><rect x="496.5" y="389" width="76.1" height="15.0" fill="rgb(254,17,13)" rx="2" ry="2" />
<text  x="499.45" y="399.5" >c10::Dis..</text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::VariableVersion::VersionCounter, c10::detail::intrusive_target_default_null_type&lt;c10::VariableVersion::VersionCounter&gt; &gt;::use_count (5 samples, 0.12%)</title><rect x="298.3" y="373" width="1.3" height="15.0" fill="rgb(206,76,18)" rx="2" ry="2" />
<text  x="301.26" y="383.5" ></text>
</g>
<g >
<title>c10::VariableVersion::unique (8 samples, 0.19%)</title><rect x="917.0" y="373" width="2.3" height="15.0" fill="rgb(209,220,31)" rx="2" ry="2" />
<text  x="920.03" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (1 samples, 0.02%)</title><rect x="187.1" y="373" width="0.2" height="15.0" fill="rgb(214,226,35)" rx="2" ry="2" />
<text  x="190.07" y="383.5" ></text>
</g>
<g >
<title>c10::TensorImpl::~TensorImpl (22 samples, 0.52%)</title><rect x="590.4" y="373" width="6.1" height="15.0" fill="rgb(244,216,10)" rx="2" ry="2" />
<text  x="593.41" y="383.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;float&gt;@plt (1 samples, 0.02%)</title><rect x="566.5" y="277" width="0.3" height="15.0" fill="rgb(237,85,19)" rx="2" ry="2" />
<text  x="569.50" y="287.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (3 samples, 0.07%)</title><rect x="144.3" y="357" width="0.8" height="15.0" fill="rgb(231,224,37)" rx="2" ry="2" />
<text  x="147.26" y="367.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::initialized (5 samples, 0.12%)</title><rect x="870.6" y="373" width="1.4" height="15.0" fill="rgb(245,222,45)" rx="2" ry="2" />
<text  x="873.61" y="383.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="142.0" y="277" width="0.3" height="15.0" fill="rgb(207,26,30)" rx="2" ry="2" />
<text  x="145.04" y="287.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (3 samples, 0.07%)</title><rect x="165.7" y="293" width="0.8" height="15.0" fill="rgb(239,217,40)" rx="2" ry="2" />
<text  x="168.67" y="303.5" ></text>
</g>
<g >
<title>c10::TensorOptions::set_requires_grad (3 samples, 0.07%)</title><rect x="412.2" y="421" width="0.9" height="15.0" fill="rgb(240,19,13)" rx="2" ry="2" />
<text  x="415.23" y="431.5" ></text>
</g>
<g >
<title>c10::constexpr_storage_t&lt;c10::MemoryFormat&gt;::constexpr_storage_t (3 samples, 0.07%)</title><rect x="1175.0" y="357" width="0.8" height="15.0" fill="rgb(247,176,44)" rx="2" ry="2" />
<text  x="1177.99" y="367.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, torch::CppFunction&gt; (1 samples, 0.02%)</title><rect x="145.9" y="421" width="0.3" height="15.0" fill="rgb(244,15,50)" rx="2" ry="2" />
<text  x="148.93" y="431.5" ></text>
</g>
<g >
<title>__static_initialization_and_destruction_0 (1 samples, 0.02%)</title><rect x="185.1" y="437" width="0.3" height="15.0" fill="rgb(232,50,34)" rx="2" ry="2" />
<text  x="188.12" y="447.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::initialized (1 samples, 0.02%)</title><rect x="604.6" y="357" width="0.3" height="15.0" fill="rgb(253,86,53)" rx="2" ry="2" />
<text  x="607.59" y="367.5" ></text>
</g>
<g >
<title>__tls_get_addr (3 samples, 0.07%)</title><rect x="823.1" y="293" width="0.8" height="15.0" fill="rgb(240,10,32)" rx="2" ry="2" />
<text  x="826.07" y="303.5" ></text>
</g>
<g >
<title>c10::Device::validate (2 samples, 0.05%)</title><rect x="771.4" y="261" width="0.5" height="15.0" fill="rgb(227,13,52)" rx="2" ry="2" />
<text  x="774.37" y="271.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.02%)</title><rect x="132.0" y="213" width="0.3" height="15.0" fill="rgb(212,42,54)" rx="2" ry="2" />
<text  x="135.03" y="223.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, c10::AutogradMetaInterface*, false&gt;::_Head_base&lt;c10::AutogradMetaInterface*&amp;&gt; (2 samples, 0.05%)</title><rect x="1002.9" y="325" width="0.6" height="15.0" fill="rgb(206,209,45)" rx="2" ry="2" />
<text  x="1005.92" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;torch::autograd::AutogradMeta, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::~unique_ptr (14 samples, 0.33%)</title><rect x="1014.3" y="389" width="3.9" height="15.0" fill="rgb(244,135,8)" rx="2" ry="2" />
<text  x="1017.32" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (1 samples, 0.02%)</title><rect x="177.1" y="325" width="0.2" height="15.0" fill="rgb(238,95,36)" rx="2" ry="2" />
<text  x="180.06" y="335.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::operator-- (1 samples, 0.02%)</title><rect x="399.4" y="389" width="0.3" height="15.0" fill="rgb(215,29,43)" rx="2" ry="2" />
<text  x="402.44" y="399.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="132.0" y="261" width="0.3" height="15.0" fill="rgb(213,160,2)" rx="2" ry="2" />
<text  x="135.03" y="271.5" ></text>
</g>
<g >
<title>[libcudart.so.11.0.194] (6 samples, 0.14%)</title><rect x="200.4" y="421" width="1.7" height="15.0" fill="rgb(238,191,42)" rx="2" ry="2" />
<text  x="203.41" y="431.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="135.9" y="229" width="0.3" height="15.0" fill="rgb(233,28,49)" rx="2" ry="2" />
<text  x="138.92" y="239.5" ></text>
</g>
<g >
<title>__fput (1 samples, 0.02%)</title><rect x="123.1" y="245" width="0.3" height="15.0" fill="rgb(232,194,34)" rx="2" ry="2" />
<text  x="126.14" y="255.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.07%)</title><rect x="343.3" y="229" width="0.8" height="15.0" fill="rgb(242,88,31)" rx="2" ry="2" />
<text  x="346.29" y="239.5" ></text>
</g>
<g >
<title>c10::ObservedOperators::isObserved (1 samples, 0.02%)</title><rect x="133.1" y="325" width="0.3" height="15.0" fill="rgb(207,137,11)" rx="2" ry="2" />
<text  x="136.14" y="335.5" ></text>
</g>
<g >
<title>std::forward&lt;int&gt; (1 samples, 0.02%)</title><rect x="93.1" y="485" width="0.3" height="15.0" fill="rgb(253,208,23)" rx="2" ry="2" />
<text  x="96.11" y="495.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (3 samples, 0.07%)</title><rect x="185.4" y="373" width="0.8" height="15.0" fill="rgb(230,224,2)" rx="2" ry="2" />
<text  x="188.40" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;torch::autograd::AutogradMeta, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="15.8" y="485" width="0.3" height="15.0" fill="rgb(248,200,21)" rx="2" ry="2" />
<text  x="18.84" y="495.5" ></text>
</g>
<g >
<title>c10::RegisterOperators::registerOp_ (1 samples, 0.02%)</title><rect x="190.4" y="405" width="0.3" height="15.0" fill="rgb(213,154,13)" rx="2" ry="2" />
<text  x="193.41" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;c10::AutogradMetaInterface, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::__uniq_ptr_impl&lt;std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (31 samples, 0.73%)</title><rect x="997.4" y="373" width="8.6" height="15.0" fill="rgb(236,165,0)" rx="2" ry="2" />
<text  x="1000.36" y="383.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.02%)</title><rect x="135.9" y="341" width="0.3" height="15.0" fill="rgb(205,196,11)" rx="2" ry="2" />
<text  x="138.92" y="351.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor&amp;  (1 samples, 0.02%)</title><rect x="153.4" y="405" width="0.3" height="15.0" fill="rgb(216,74,22)" rx="2" ry="2" />
<text  x="156.43" y="415.5" ></text>
</g>
<g >
<title>vfs_read (1 samples, 0.02%)</title><rect x="146.5" y="229" width="0.3" height="15.0" fill="rgb(253,26,9)" rx="2" ry="2" />
<text  x="149.49" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect x="187.1" y="357" width="0.2" height="15.0" fill="rgb(205,154,6)" rx="2" ry="2" />
<text  x="190.07" y="367.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::operator bool (1 samples, 0.02%)</title><rect x="297.1" y="389" width="0.3" height="15.0" fill="rgb(240,193,51)" rx="2" ry="2" />
<text  x="300.15" y="399.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::Registerer::op (7 samples, 0.16%)</title><rect x="219.6" y="469" width="1.9" height="15.0" fill="rgb(226,162,28)" rx="2" ry="2" />
<text  x="222.59" y="479.5" ></text>
</g>
<g >
<title>c10::UndefinedTensorImpl::singleton (2 samples, 0.05%)</title><rect x="596.5" y="373" width="0.6" height="15.0" fill="rgb(222,8,22)" rx="2" ry="2" />
<text  x="599.53" y="383.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="187.6" y="277" width="0.3" height="15.0" fill="rgb(217,48,52)" rx="2" ry="2" />
<text  x="190.63" y="287.5" ></text>
</g>
<g >
<title>do_page_fault (2 samples, 0.05%)</title><rect x="160.4" y="357" width="0.5" height="15.0" fill="rgb(235,126,10)" rx="2" ry="2" />
<text  x="163.38" y="367.5" ></text>
</g>
<g >
<title>load_elf_binary (2 samples, 0.05%)</title><rect x="1179.4" y="421" width="0.6" height="15.0" fill="rgb(214,96,19)" rx="2" ry="2" />
<text  x="1182.44" y="431.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::MemoryFormat&gt;::optional (1 samples, 0.02%)</title><rect x="69.5" y="485" width="0.3" height="15.0" fill="rgb(252,177,37)" rx="2" ry="2" />
<text  x="72.49" y="495.5" ></text>
</g>
<g >
<title>torch::detail::TorchLibraryInit::TorchLibraryInit (1 samples, 0.02%)</title><rect x="186.8" y="437" width="0.3" height="15.0" fill="rgb(221,9,31)" rx="2" ry="2" />
<text  x="189.79" y="447.5" ></text>
</g>
<g >
<title>std::ios_base::_M_call_callbacks (1 samples, 0.02%)</title><rect x="247.7" y="485" width="0.2" height="15.0" fill="rgb(221,120,19)" rx="2" ry="2" />
<text  x="250.67" y="495.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (2 samples, 0.05%)</title><rect x="175.7" y="389" width="0.5" height="15.0" fill="rgb(253,4,6)" rx="2" ry="2" />
<text  x="178.67" y="399.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;float&gt; (1 samples, 0.02%)</title><rect x="244.9" y="485" width="0.3" height="15.0" fill="rgb(232,166,42)" rx="2" ry="2" />
<text  x="247.89" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (1 samples, 0.02%)</title><rect x="187.1" y="341" width="0.2" height="15.0" fill="rgb(209,73,19)" rx="2" ry="2" />
<text  x="190.07" y="351.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (60 samples, 1.41%)</title><rect x="581.0" y="389" width="16.6" height="15.0" fill="rgb(223,215,40)" rx="2" ry="2" />
<text  x="583.96" y="399.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="190.7" y="293" width="0.3" height="15.0" fill="rgb(221,200,9)" rx="2" ry="2" />
<text  x="193.68" y="303.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="193.7" y="421" width="0.3" height="15.0" fill="rgb(211,137,35)" rx="2" ry="2" />
<text  x="196.74" y="431.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.02%)</title><rect x="154.5" y="341" width="0.3" height="15.0" fill="rgb(247,186,0)" rx="2" ry="2" />
<text  x="157.55" y="351.5" ></text>
</g>
<g >
<title>c10::Device::validate (2 samples, 0.05%)</title><rect x="540.9" y="261" width="0.6" height="15.0" fill="rgb(235,81,1)" rx="2" ry="2" />
<text  x="543.93" y="271.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="160.4" y="261" width="0.3" height="15.0" fill="rgb(225,170,30)" rx="2" ry="2" />
<text  x="163.38" y="271.5" ></text>
</g>
<g >
<title>__handle_mm_fault (12 samples, 0.28%)</title><rect x="127.0" y="341" width="3.4" height="15.0" fill="rgb(246,43,31)" rx="2" ry="2" />
<text  x="130.03" y="351.5" ></text>
</g>
<g >
<title>std::end&lt;long&gt; (3 samples, 0.07%)</title><rect x="599.9" y="405" width="0.8" height="15.0" fill="rgb(232,132,31)" rx="2" ry="2" />
<text  x="602.86" y="415.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.02%)</title><rect x="177.6" y="405" width="0.3" height="15.0" fill="rgb(247,222,48)" rx="2" ry="2" />
<text  x="180.62" y="415.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_jit_avx2_f32_copy_at_kern_autogen.cpp (1 samples, 0.02%)</title><rect x="184.8" y="453" width="0.3" height="15.0" fill="rgb(240,120,40)" rx="2" ry="2" />
<text  x="187.85" y="463.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt;  (1 samples, 0.02%)</title><rect x="138.7" y="421" width="0.3" height="15.0" fill="rgb(216,121,36)" rx="2" ry="2" />
<text  x="141.70" y="431.5" ></text>
</g>
<g >
<title>c10::scalarTypeToTypeMeta (4 samples, 0.09%)</title><rect x="426.4" y="421" width="1.1" height="15.0" fill="rgb(220,88,7)" rx="2" ry="2" />
<text  x="429.41" y="431.5" ></text>
</g>
<g >
<title>c10::Dispatcher::callWithDispatchKey&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (2 samples, 0.05%)</title><rect x="800.0" y="389" width="0.6" height="15.0" fill="rgb(247,173,8)" rx="2" ry="2" />
<text  x="803.00" y="399.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.02%)</title><rect x="220.4" y="341" width="0.3" height="15.0" fill="rgb(213,200,30)" rx="2" ry="2" />
<text  x="223.43" y="351.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.05%)</title><rect x="162.9" y="229" width="0.5" height="15.0" fill="rgb(236,155,0)" rx="2" ry="2" />
<text  x="165.89" y="239.5" ></text>
</g>
<g >
<title>c10::impl::tls_local_dispatch_key_set (2 samples, 0.05%)</title><rect x="205.4" y="485" width="0.6" height="15.0" fill="rgb(215,112,3)" rx="2" ry="2" />
<text  x="208.42" y="495.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (1 samples, 0.02%)</title><rect x="199.6" y="341" width="0.3" height="15.0" fill="rgb(209,141,0)" rx="2" ry="2" />
<text  x="202.58" y="351.5" ></text>
</g>
<g >
<title>c10::detail::intrusive_target_default_null_type&lt;c10::VariableVersion::VersionCounter&gt;::singleton (2 samples, 0.05%)</title><rect x="655.7" y="357" width="0.6" height="15.0" fill="rgb(246,71,34)" rx="2" ry="2" />
<text  x="658.73" y="367.5" ></text>
</g>
<g >
<title>c10::impl::(anonymous namespace)::checkSchema (2 samples, 0.05%)</title><rect x="182.3" y="357" width="0.6" height="15.0" fill="rgb(239,101,52)" rx="2" ry="2" />
<text  x="185.34" y="367.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_TraceType_3.cpp (7 samples, 0.16%)</title><rect x="152.6" y="453" width="1.9" height="15.0" fill="rgb(238,208,49)" rx="2" ry="2" />
<text  x="155.60" y="463.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (1 samples, 0.02%)</title><rect x="179.8" y="389" width="0.3" height="15.0" fill="rgb(217,200,32)" rx="2" ry="2" />
<text  x="182.84" y="399.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="160.4" y="245" width="0.3" height="15.0" fill="rgb(237,115,50)" rx="2" ry="2" />
<text  x="163.38" y="255.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="142.0" y="325" width="0.3" height="15.0" fill="rgb(250,56,43)" rx="2" ry="2" />
<text  x="145.04" y="335.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="135.9" y="197" width="0.3" height="15.0" fill="rgb(208,42,35)" rx="2" ry="2" />
<text  x="138.92" y="207.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;std::tuple&lt;at::Tensor, at::Tensor&gt;  (1 samples, 0.02%)</title><rect x="152.0" y="405" width="0.3" height="15.0" fill="rgb(246,173,42)" rx="2" ry="2" />
<text  x="155.04" y="415.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;bool&gt;::constexpr_optional_base (1 samples, 0.02%)</title><rect x="577.3" y="405" width="0.3" height="15.0" fill="rgb(251,220,13)" rx="2" ry="2" />
<text  x="580.35" y="415.5" ></text>
</g>
<g >
<title>std::tuple&lt;c10::AutogradMetaInterface*, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::tuple&lt;c10::AutogradMetaInterface*&amp;, std::default_delete&lt;torch::autograd::AutogradMeta&gt;, true&gt; (10 samples, 0.24%)</title><rect x="480.9" y="373" width="2.8" height="15.0" fill="rgb(242,67,7)" rx="2" ry="2" />
<text  x="483.89" y="383.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::initialized (1 samples, 0.02%)</title><rect x="890.6" y="357" width="0.3" height="15.0" fill="rgb(241,113,39)" rx="2" ry="2" />
<text  x="893.62" y="367.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (2 samples, 0.05%)</title><rect x="130.9" y="389" width="0.6" height="15.0" fill="rgb(212,28,2)" rx="2" ry="2" />
<text  x="133.92" y="399.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;float&gt; (3 samples, 0.07%)</title><rect x="420.0" y="405" width="0.8" height="15.0" fill="rgb(244,93,37)" rx="2" ry="2" />
<text  x="423.01" y="415.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.02%)</title><rect x="217.6" y="421" width="0.3" height="15.0" fill="rgb(224,63,28)" rx="2" ry="2" />
<text  x="220.65" y="431.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::operator* (7 samples, 0.16%)</title><rect x="67.3" y="485" width="1.9" height="15.0" fill="rgb(239,79,45)" rx="2" ry="2" />
<text  x="70.26" y="495.5" ></text>
</g>
<g >
<title>torch::jit::parseName (1 samples, 0.02%)</title><rect x="157.6" y="405" width="0.3" height="15.0" fill="rgb(224,30,50)" rx="2" ry="2" />
<text  x="160.60" y="415.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (3 samples, 0.07%)</title><rect x="172.9" y="389" width="0.8" height="15.0" fill="rgb(235,50,37)" rx="2" ry="2" />
<text  x="175.89" y="399.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::MemoryFormat&gt;::optional (1 samples, 0.02%)</title><rect x="577.6" y="405" width="0.3" height="15.0" fill="rgb(236,171,53)" rx="2" ry="2" />
<text  x="580.62" y="415.5" ></text>
</g>
<g >
<title>at::Tensor::~Tensor (2 samples, 0.05%)</title><rect x="32.8" y="485" width="0.5" height="15.0" fill="rgb(252,40,25)" rx="2" ry="2" />
<text  x="35.79" y="495.5" ></text>
</g>
<g >
<title>[libcusparse.so.11.1.0.218] (1 samples, 0.02%)</title><rect x="252.4" y="421" width="0.3" height="15.0" fill="rgb(242,25,3)" rx="2" ry="2" />
<text  x="255.39" y="431.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.02%)</title><rect x="225.7" y="437" width="0.3" height="15.0" fill="rgb(206,80,31)" rx="2" ry="2" />
<text  x="228.71" y="447.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.02%)</title><rect x="752.2" y="197" width="0.3" height="15.0" fill="rgb(225,136,34)" rx="2" ry="2" />
<text  x="755.19" y="207.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="1132.5" y="165" width="0.2" height="15.0" fill="rgb(205,72,12)" rx="2" ry="2" />
<text  x="1135.46" y="175.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (1 samples, 0.02%)</title><rect x="179.8" y="405" width="0.3" height="15.0" fill="rgb(253,134,47)" rx="2" ry="2" />
<text  x="182.84" y="415.5" ></text>
</g>
<g >
<title>[microbenchmark] (1 samples, 0.02%)</title><rect x="981.2" y="293" width="0.3" height="15.0" fill="rgb(215,124,28)" rx="2" ry="2" />
<text  x="984.24" y="303.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::use_count (4 samples, 0.09%)</title><rect x="301.3" y="405" width="1.1" height="15.0" fill="rgb(219,54,51)" rx="2" ry="2" />
<text  x="304.32" y="415.5" ></text>
</g>
<g >
<title>c10::TensorImpl::compute_contiguous (7 samples, 0.16%)</title><rect x="773.6" y="245" width="1.9" height="15.0" fill="rgb(231,220,17)" rx="2" ry="2" />
<text  x="776.59" y="255.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.02%)</title><rect x="192.9" y="389" width="0.3" height="15.0" fill="rgb(210,132,36)" rx="2" ry="2" />
<text  x="195.91" y="399.5" ></text>
</g>
<g >
<title>[libcusparse.so.11.1.0.218] (1 samples, 0.02%)</title><rect x="252.4" y="373" width="0.3" height="15.0" fill="rgb(213,7,48)" rx="2" ry="2" />
<text  x="255.39" y="383.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor, at::Tensor, at::Tensor, long&gt;  (1 samples, 0.02%)</title><rect x="154.0" y="421" width="0.3" height="15.0" fill="rgb(242,37,54)" rx="2" ry="2" />
<text  x="156.99" y="431.5" ></text>
</g>
<g >
<title>std::move&lt;c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;&amp;&gt; (2 samples, 0.05%)</title><rect x="996.0" y="389" width="0.5" height="15.0" fill="rgb(254,86,8)" rx="2" ry="2" />
<text  x="998.97" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;c10::AutogradMetaInterface, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::_M_ptr (2 samples, 0.05%)</title><rect x="304.7" y="389" width="0.5" height="15.0" fill="rgb(253,183,44)" rx="2" ry="2" />
<text  x="307.65" y="399.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;bool&gt;::constexpr_optional_base (3 samples, 0.07%)</title><rect x="51.7" y="485" width="0.8" height="15.0" fill="rgb(213,197,10)" rx="2" ry="2" />
<text  x="54.70" y="495.5" ></text>
</g>
<g >
<title>std::__weak_count&lt; (2 samples, 0.05%)</title><rect x="961.2" y="325" width="0.6" height="15.0" fill="rgb(220,143,36)" rx="2" ry="2" />
<text  x="964.23" y="335.5" ></text>
</g>
<g >
<title>__cxa_demangle (1 samples, 0.02%)</title><rect x="188.7" y="405" width="0.3" height="15.0" fill="rgb(206,208,48)" rx="2" ry="2" />
<text  x="191.74" y="415.5" ></text>
</g>
<g >
<title>string_nocheck (1 samples, 0.02%)</title><rect x="146.5" y="85" width="0.3" height="15.0" fill="rgb(241,72,42)" rx="2" ry="2" />
<text  x="149.49" y="95.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (2 samples, 0.05%)</title><rect x="143.7" y="325" width="0.6" height="15.0" fill="rgb(222,164,43)" rx="2" ry="2" />
<text  x="146.71" y="335.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_VariableType_2.cpp (7 samples, 0.16%)</title><rect x="178.7" y="453" width="2.0" height="15.0" fill="rgb(253,221,2)" rx="2" ry="2" />
<text  x="181.73" y="463.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="125.9" y="229" width="0.3" height="15.0" fill="rgb(244,16,42)" rx="2" ry="2" />
<text  x="128.92" y="239.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;std::tuple&lt;at::Tensor, at::Tensor&gt;  (1 samples, 0.02%)</title><rect x="182.9" y="421" width="0.3" height="15.0" fill="rgb(210,71,54)" rx="2" ry="2" />
<text  x="185.90" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="198.2" y="389" width="0.3" height="15.0" fill="rgb(218,52,28)" rx="2" ry="2" />
<text  x="201.19" y="399.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::initialized (2 samples, 0.05%)</title><rect x="859.8" y="373" width="0.5" height="15.0" fill="rgb(238,28,0)" rx="2" ry="2" />
<text  x="862.77" y="383.5" ></text>
</g>
<g >
<title>task_work_run (1 samples, 0.02%)</title><rect x="1183.1" y="421" width="0.2" height="15.0" fill="rgb(206,6,33)" rx="2" ry="2" />
<text  x="1186.05" y="431.5" ></text>
</g>
<g >
<title>at::detail::make_tensor&lt;c10::TensorImpl, c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;, c10::DispatchKey, caffe2::TypeMeta&amp;&gt; (18 samples, 0.42%)</title><rect x="340.5" y="277" width="5.0" height="15.0" fill="rgb(231,223,52)" rx="2" ry="2" />
<text  x="343.51" y="287.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.02%)</title><rect x="157.6" y="373" width="0.3" height="15.0" fill="rgb(216,152,29)" rx="2" ry="2" />
<text  x="160.60" y="383.5" ></text>
</g>
<g >
<title>find_get_entry (1 samples, 0.02%)</title><rect x="127.6" y="245" width="0.3" height="15.0" fill="rgb(209,146,37)" rx="2" ry="2" />
<text  x="130.58" y="255.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_TypeDefault.cpp (73 samples, 1.72%)</title><rect x="155.9" y="453" width="20.3" height="15.0" fill="rgb(243,99,30)" rx="2" ry="2" />
<text  x="158.94" y="463.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.02%)</title><rect x="146.2" y="373" width="0.3" height="15.0" fill="rgb(209,74,35)" rx="2" ry="2" />
<text  x="149.21" y="383.5" ></text>
</g>
<g >
<title>at::TORCH_LIBRARY_IMPL_init_aten_VmapMode (1 samples, 0.02%)</title><rect x="183.5" y="421" width="0.2" height="15.0" fill="rgb(212,49,8)" rx="2" ry="2" />
<text  x="186.46" y="431.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.12%)</title><rect x="344.1" y="261" width="1.4" height="15.0" fill="rgb(234,161,8)" rx="2" ry="2" />
<text  x="347.12" y="271.5" ></text>
</g>
<g >
<title>c10::Dispatcher::cleanup (2 samples, 0.05%)</title><rect x="256.3" y="357" width="0.5" height="15.0" fill="rgb(218,199,36)" rx="2" ry="2" />
<text  x="259.29" y="367.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_tmpxft_0000efa8_00000000_6_softsign_op.compute_70.cudafe1.cpp (1 samples, 0.02%)</title><rect x="188.5" y="453" width="0.2" height="15.0" fill="rgb(248,106,21)" rx="2" ry="2" />
<text  x="191.46" y="463.5" ></text>
</g>
<g >
<title>[libcublasLt.so.11.1.0.229] (1 samples, 0.02%)</title><rect x="252.1" y="389" width="0.3" height="15.0" fill="rgb(251,57,8)" rx="2" ry="2" />
<text  x="255.12" y="399.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.02%)</title><rect x="199.6" y="357" width="0.3" height="15.0" fill="rgb(208,101,0)" rx="2" ry="2" />
<text  x="202.58" y="367.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::(anonymous namespace)::createArgumentVector (1 samples, 0.02%)</title><rect x="177.9" y="373" width="0.3" height="15.0" fill="rgb(215,6,27)" rx="2" ry="2" />
<text  x="180.90" y="383.5" ></text>
</g>
<g >
<title>at::hasCallbacks (5 samples, 0.12%)</title><rect x="226.3" y="485" width="1.4" height="15.0" fill="rgb(206,2,12)" rx="2" ry="2" />
<text  x="229.26" y="495.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTable_ (1 samples, 0.02%)</title><rect x="12.2" y="485" width="0.3" height="15.0" fill="rgb(210,115,48)" rx="2" ry="2" />
<text  x="15.22" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::SimpleDescriptorDatabase::DescriptorIndex&lt;std::pair&lt;void const*, int&gt; &gt;::AddSymbol (1 samples, 0.02%)</title><rect x="202.1" y="389" width="0.3" height="15.0" fill="rgb(211,196,13)" rx="2" ry="2" />
<text  x="205.08" y="399.5" ></text>
</g>
<g >
<title>at::detail::make_tensor&lt;c10::TensorImpl, c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;, c10::DispatchKey, caffe2::TypeMeta&amp;&gt; (2 samples, 0.05%)</title><rect x="12.5" y="453" width="0.6" height="15.0" fill="rgb(226,190,50)" rx="2" ry="2" />
<text  x="15.50" y="463.5" ></text>
</g>
<g >
<title>c10::Device::validate (2 samples, 0.05%)</title><rect x="510.1" y="341" width="0.5" height="15.0" fill="rgb(222,119,42)" rx="2" ry="2" />
<text  x="513.08" y="351.5" ></text>
</g>
<g >
<title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;std::type_index, std::shared_ptr&lt;c10::ClassType&gt; &gt;, std::type_index, std::hash&lt;std::type_index&gt;, ska::detailv3::KeyOrValueHasher&lt;std::type_index, std::pair&lt;std::type_index, std::shared_ptr&lt;c10::ClassType&gt; &gt;, std::hash&lt;std::type_index&gt; &gt;, std::equal_to&lt;std::type_index&gt;, ska::detailv3::KeyOrValueEquality&lt;std::type_index, std::pair&lt;std::type_index, std::shared_ptr&lt;c10::ClassType&gt; &gt;, std::equal_to&lt;std::type_index&gt; &gt;, std::allocator&lt;std::pair&lt;std::type_index, std::shared_ptr&lt;c10::ClassType&gt; &gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;std::type_index, std::shared_ptr&lt;c10::ClassType&gt; &gt; &gt; &gt; &gt;::sherwood_v3_table (1 samples, 0.02%)</title><rect x="186.5" y="341" width="0.3" height="15.0" fill="rgb(219,229,21)" rx="2" ry="2" />
<text  x="189.51" y="351.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.02%)</title><rect x="181.0" y="405" width="0.2" height="15.0" fill="rgb(230,16,20)" rx="2" ry="2" />
<text  x="183.95" y="415.5" ></text>
</g>
<g >
<title>exit (43 samples, 1.01%)</title><rect x="251.8" y="469" width="12.0" height="15.0" fill="rgb(217,111,34)" rx="2" ry="2" />
<text  x="254.84" y="479.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.02%)</title><rect x="155.7" y="341" width="0.2" height="15.0" fill="rgb(216,132,13)" rx="2" ry="2" />
<text  x="158.66" y="351.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::load (1 samples, 0.02%)</title><rect x="445.3" y="389" width="0.3" height="15.0" fill="rgb(220,168,1)" rx="2" ry="2" />
<text  x="448.31" y="399.5" ></text>
</g>
<g >
<title>torch::jit::parseSchema (40 samples, 0.94%)</title><rect x="161.5" y="405" width="11.1" height="15.0" fill="rgb(231,73,37)" rx="2" ry="2" />
<text  x="164.50" y="415.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.02%)</title><rect x="218.5" y="325" width="0.3" height="15.0" fill="rgb(238,40,2)" rx="2" ry="2" />
<text  x="221.48" y="335.5" ></text>
</g>
<g >
<title>c10::detail::getTypePtr_&lt;c10::intrusive_ptr&lt;ConvPackedParamsBase&lt;2&gt;, c10::detail::intrusive_target_default_null_type&lt;ConvPackedParamsBase&lt;2&gt; &gt; &gt; &gt;::call (1 samples, 0.02%)</title><rect x="186.5" y="357" width="0.3" height="15.0" fill="rgb(241,81,4)" rx="2" ry="2" />
<text  x="189.51" y="367.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;torch::autograd::Node&gt;::shared_ptr (6 samples, 0.14%)</title><rect x="991.8" y="341" width="1.7" height="15.0" fill="rgb(228,221,54)" rx="2" ry="2" />
<text  x="994.80" y="351.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.02%)</title><rect x="183.5" y="309" width="0.2" height="15.0" fill="rgb(219,39,21)" rx="2" ry="2" />
<text  x="186.46" y="319.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (2 samples, 0.05%)</title><rect x="193.2" y="373" width="0.5" height="15.0" fill="rgb(231,27,3)" rx="2" ry="2" />
<text  x="196.18" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (1 samples, 0.02%)</title><rect x="246.6" y="485" width="0.2" height="15.0" fill="rgb(240,10,47)" rx="2" ry="2" />
<text  x="249.56" y="495.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.02%)</title><rect x="209.6" y="501" width="0.3" height="15.0" fill="rgb(240,144,16)" rx="2" ry="2" />
<text  x="212.59" y="511.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="178.7" y="405" width="0.3" height="15.0" fill="rgb(251,57,38)" rx="2" ry="2" />
<text  x="181.73" y="415.5" ></text>
</g>
<g >
<title>c10::TensorImpl::empty_tensor_restride (7 samples, 0.16%)</title><rect x="560.1" y="261" width="2.0" height="15.0" fill="rgb(236,156,7)" rx="2" ry="2" />
<text  x="563.11" y="271.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::operator* (4 samples, 0.09%)</title><rect x="892.3" y="373" width="1.1" height="15.0" fill="rgb(218,214,36)" rx="2" ry="2" />
<text  x="895.29" y="383.5" ></text>
</g>
<g >
<title>at::TORCH_LIBRARY_IMPL_init_aten_SparseCPU (1 samples, 0.02%)</title><rect x="145.9" y="437" width="0.3" height="15.0" fill="rgb(234,198,31)" rx="2" ry="2" />
<text  x="148.93" y="447.5" ></text>
</g>
<g >
<title>unmap_vmas (11 samples, 0.26%)</title><rect x="1180.0" y="389" width="3.1" height="15.0" fill="rgb(247,127,44)" rx="2" ry="2" />
<text  x="1182.99" y="399.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::initialized (1 samples, 0.02%)</title><rect x="415.6" y="405" width="0.2" height="15.0" fill="rgb(234,24,27)" rx="2" ry="2" />
<text  x="418.56" y="415.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::operator bool (2 samples, 0.05%)</title><rect x="421.4" y="389" width="0.6" height="15.0" fill="rgb(211,20,6)" rx="2" ry="2" />
<text  x="424.40" y="399.5" ></text>
</g>
<g >
<title>c10::UndefinedTensorImpl::singleton (2 samples, 0.05%)</title><rect x="830.9" y="293" width="0.5" height="15.0" fill="rgb(215,93,25)" rx="2" ry="2" />
<text  x="833.86" y="303.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="183.2" y="325" width="0.3" height="15.0" fill="rgb(234,28,5)" rx="2" ry="2" />
<text  x="186.18" y="335.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="1179.4" y="373" width="0.3" height="15.0" fill="rgb(245,192,26)" rx="2" ry="2" />
<text  x="1182.44" y="383.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;torch::autograd::Node,  (1 samples, 0.02%)</title><rect x="479.8" y="357" width="0.3" height="15.0" fill="rgb(227,90,17)" rx="2" ry="2" />
<text  x="482.78" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::vector (2 samples, 0.05%)</title><rect x="222.1" y="405" width="0.6" height="15.0" fill="rgb(249,178,33)" rx="2" ry="2" />
<text  x="225.09" y="415.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::TypeMeta (2 samples, 0.05%)</title><rect x="420.3" y="389" width="0.5" height="15.0" fill="rgb(207,104,28)" rx="2" ry="2" />
<text  x="423.29" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1 samples, 0.02%)</title><rect x="386.9" y="341" width="0.3" height="15.0" fill="rgb(245,101,2)" rx="2" ry="2" />
<text  x="389.93" y="351.5" ></text>
</g>
<g >
<title>c10::impl::(anonymous namespace)::checkSchema (1 samples, 0.02%)</title><rect x="181.2" y="373" width="0.3" height="15.0" fill="rgb(226,146,36)" rx="2" ry="2" />
<text  x="184.23" y="383.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.02%)</title><rect x="142.3" y="293" width="0.3" height="15.0" fill="rgb(232,7,45)" rx="2" ry="2" />
<text  x="145.32" y="303.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="84.5" y="485" width="0.3" height="15.0" fill="rgb(239,217,44)" rx="2" ry="2" />
<text  x="87.50" y="495.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (10 samples, 0.24%)</title><rect x="355.0" y="197" width="2.7" height="15.0" fill="rgb(220,103,11)" rx="2" ry="2" />
<text  x="357.97" y="207.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="130.4" y="405" width="0.2" height="15.0" fill="rgb(247,100,10)" rx="2" ry="2" />
<text  x="133.36" y="415.5" ></text>
</g>
<g >
<title>std::move&lt;torch::autograd::Node*&amp;&gt; (1 samples, 0.02%)</title><rect x="950.7" y="309" width="0.2" height="15.0" fill="rgb(209,166,17)" rx="2" ry="2" />
<text  x="953.66" y="319.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_VariableType_4.cpp (5 samples, 0.12%)</title><rect x="182.1" y="453" width="1.4" height="15.0" fill="rgb(213,171,25)" rx="2" ry="2" />
<text  x="185.07" y="463.5" ></text>
</g>
<g >
<title>at::detail::make_tensor&lt;c10::TensorImpl, c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;, c10::DispatchKey, caffe2::TypeMeta&amp;&gt; (34 samples, 0.80%)</title><rect x="1098.0" y="261" width="9.4" height="15.0" fill="rgb(253,169,7)" rx="2" ry="2" />
<text  x="1100.99" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::RegistryPriority&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::RegistryPriority&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (1 samples, 0.02%)</title><rect x="191.5" y="405" width="0.3" height="15.0" fill="rgb(208,203,19)" rx="2" ry="2" />
<text  x="194.52" y="415.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (6 samples, 0.14%)</title><rect x="291.3" y="405" width="1.7" height="15.0" fill="rgb(205,30,23)" rx="2" ry="2" />
<text  x="294.31" y="415.5" ></text>
</g>
<g >
<title>c10::TensorOptions::set_dtype (7 samples, 0.16%)</title><rect x="624.0" y="389" width="2.0" height="15.0" fill="rgb(222,15,43)" rx="2" ry="2" />
<text  x="627.04" y="399.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::computeDispatchTableEntry (1 samples, 0.02%)</title><rect x="257.1" y="341" width="0.3" height="15.0" fill="rgb(232,88,30)" rx="2" ry="2" />
<text  x="260.12" y="351.5" ></text>
</g>
<g >
<title>c10::constexpr_storage_t&lt;c10::ScalarType&gt;::constexpr_storage_t&lt;c10::ScalarType&gt; (4 samples, 0.09%)</title><rect x="470.3" y="293" width="1.1" height="15.0" fill="rgb(205,68,50)" rx="2" ry="2" />
<text  x="473.33" y="303.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="134.3" y="341" width="0.2" height="15.0" fill="rgb(237,81,32)" rx="2" ry="2" />
<text  x="137.25" y="351.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;short&gt;@plt (1 samples, 0.02%)</title><rect x="793.6" y="309" width="0.3" height="15.0" fill="rgb(231,85,19)" rx="2" ry="2" />
<text  x="796.61" y="319.5" ></text>
</g>
<g >
<title>c10::AliasInfo::~AliasInfo (1 samples, 0.02%)</title><rect x="167.6" y="325" width="0.3" height="15.0" fill="rgb(207,144,6)" rx="2" ry="2" />
<text  x="170.61" y="335.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;unsigned char&gt; (1 samples, 0.02%)</title><rect x="477.6" y="341" width="0.2" height="15.0" fill="rgb(227,150,51)" rx="2" ry="2" />
<text  x="480.55" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="145.9" y="389" width="0.3" height="15.0" fill="rgb(216,104,53)" rx="2" ry="2" />
<text  x="148.93" y="399.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::operator* (2 samples, 0.05%)</title><rect x="425.0" y="389" width="0.6" height="15.0" fill="rgb(241,129,44)" rx="2" ry="2" />
<text  x="428.02" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (11 samples, 0.26%)</title><rect x="1186.9" y="485" width="3.1" height="15.0" fill="rgb(251,218,3)" rx="2" ry="2" />
<text  x="1189.94" y="495.5" ></text>
</g>
<g >
<title>torch::Library::_fallback (1 samples, 0.02%)</title><rect x="132.9" y="405" width="0.2" height="15.0" fill="rgb(228,169,22)" rx="2" ry="2" />
<text  x="135.86" y="415.5" ></text>
</g>
<g >
<title>torch::Library::_impl (2 samples, 0.05%)</title><rect x="182.3" y="405" width="0.6" height="15.0" fill="rgb(240,179,5)" rx="2" ry="2" />
<text  x="185.34" y="415.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.19%)</title><rect x="746.9" y="245" width="2.2" height="15.0" fill="rgb(247,19,3)" rx="2" ry="2" />
<text  x="749.91" y="255.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::retain_ (2 samples, 0.05%)</title><rect x="921.2" y="373" width="0.6" height="15.0" fill="rgb(211,54,20)" rx="2" ry="2" />
<text  x="924.20" y="383.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.02%)</title><rect x="248.2" y="453" width="0.3" height="15.0" fill="rgb(214,101,27)" rx="2" ry="2" />
<text  x="251.22" y="463.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::operator bool (3 samples, 0.07%)</title><rect x="402.8" y="389" width="0.8" height="15.0" fill="rgb(219,125,24)" rx="2" ry="2" />
<text  x="405.78" y="399.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;c10::MemoryFormat&gt;::constexpr_optional_base (1 samples, 0.02%)</title><rect x="616.0" y="421" width="0.3" height="15.0" fill="rgb(235,6,4)" rx="2" ry="2" />
<text  x="618.98" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, char&gt; (1 samples, 0.02%)</title><rect x="134.3" y="373" width="0.2" height="15.0" fill="rgb(249,95,39)" rx="2" ry="2" />
<text  x="137.25" y="383.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (2 samples, 0.05%)</title><rect x="264.9" y="389" width="0.6" height="15.0" fill="rgb(226,11,38)" rx="2" ry="2" />
<text  x="267.90" y="399.5" ></text>
</g>
<g >
<title>c10::constexpr_forward&lt;c10::DeviceType const&amp;&gt; (1 samples, 0.02%)</title><rect x="410.3" y="373" width="0.3" height="15.0" fill="rgb(215,21,28)" rx="2" ry="2" />
<text  x="413.28" y="383.5" ></text>
</g>
<g >
<title>do_brk_flags (1 samples, 0.02%)</title><rect x="151.5" y="197" width="0.3" height="15.0" fill="rgb(214,40,43)" rx="2" ry="2" />
<text  x="154.49" y="207.5" ></text>
</g>
<g >
<title>std::forward&lt;c10::AutogradMetaInterface*&amp;&gt; (1 samples, 0.02%)</title><rect x="1003.2" y="309" width="0.3" height="15.0" fill="rgb(208,218,26)" rx="2" ry="2" />
<text  x="1006.20" y="319.5" ></text>
</g>
<g >
<title>c10::FunctionSchema::~FunctionSchema (1 samples, 0.02%)</title><rect x="254.3" y="389" width="0.3" height="15.0" fill="rgb(235,125,21)" rx="2" ry="2" />
<text  x="257.34" y="399.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.02%)</title><rect x="564.3" y="261" width="0.3" height="15.0" fill="rgb(206,134,33)" rx="2" ry="2" />
<text  x="567.28" y="271.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::load (2 samples, 0.05%)</title><rect x="845.3" y="309" width="0.6" height="15.0" fill="rgb(246,89,8)" rx="2" ry="2" />
<text  x="848.31" y="319.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.02%)</title><rect x="195.1" y="389" width="0.3" height="15.0" fill="rgb(213,181,40)" rx="2" ry="2" />
<text  x="198.13" y="399.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::registerKernel (2 samples, 0.05%)</title><rect x="182.3" y="373" width="0.6" height="15.0" fill="rgb(209,139,2)" rx="2" ry="2" />
<text  x="185.34" y="383.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.02%)</title><rect x="186.8" y="373" width="0.3" height="15.0" fill="rgb(215,45,31)" rx="2" ry="2" />
<text  x="189.79" y="383.5" ></text>
</g>
<g >
<title>c10::Dispatcher::findOrRegisterName_ (2 samples, 0.05%)</title><rect x="133.1" y="357" width="0.6" height="15.0" fill="rgb(240,170,28)" rx="2" ry="2" />
<text  x="136.14" y="367.5" ></text>
</g>
<g >
<title>user_path_at_empty (1 samples, 0.02%)</title><rect x="124.8" y="261" width="0.3" height="15.0" fill="rgb(208,62,46)" rx="2" ry="2" />
<text  x="127.80" y="271.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::load (1 samples, 0.02%)</title><rect x="302.2" y="389" width="0.2" height="15.0" fill="rgb(225,202,21)" rx="2" ry="2" />
<text  x="305.15" y="399.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::(anonymous namespace)::createArgumentVector (1 samples, 0.02%)</title><rect x="152.0" y="373" width="0.3" height="15.0" fill="rgb(254,177,35)" rx="2" ry="2" />
<text  x="155.04" y="383.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::optional&lt;caffe2::TypeMeta, false&gt; (6 samples, 0.14%)</title><rect x="629.6" y="405" width="1.7" height="15.0" fill="rgb(236,121,23)" rx="2" ry="2" />
<text  x="632.60" y="415.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::operator-- (2 samples, 0.05%)</title><rect x="433.4" y="373" width="0.5" height="15.0" fill="rgb(210,202,36)" rx="2" ry="2" />
<text  x="436.35" y="383.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="201.8" y="293" width="0.3" height="15.0" fill="rgb(206,166,3)" rx="2" ry="2" />
<text  x="204.80" y="303.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr_target::release_resources (2 samples, 0.05%)</title><rect x="244.1" y="485" width="0.5" height="15.0" fill="rgb(223,138,11)" rx="2" ry="2" />
<text  x="247.05" y="495.5" ></text>
</g>
<g >
<title>c10::memoryProfilingEnabled (3 samples, 0.07%)</title><rect x="64.8" y="485" width="0.8" height="15.0" fill="rgb(217,0,38)" rx="2" ry="2" />
<text  x="67.76" y="495.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;c10::MemoryFormat&gt;::constexpr_optional_base (3 samples, 0.07%)</title><rect x="1175.0" y="373" width="0.8" height="15.0" fill="rgb(213,61,21)" rx="2" ry="2" />
<text  x="1177.99" y="383.5" ></text>
</g>
<g >
<title>c10::TensorImpl::set_sizes_contiguous (18 samples, 0.42%)</title><rect x="557.6" y="277" width="5.0" height="15.0" fill="rgb(254,136,7)" rx="2" ry="2" />
<text  x="560.61" y="287.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::optional&lt;caffe2::TypeMeta, false&gt; (1 samples, 0.02%)</title><rect x="899.2" y="421" width="0.3" height="15.0" fill="rgb(254,69,14)" rx="2" ry="2" />
<text  x="902.24" y="431.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="219.3" y="453" width="0.3" height="15.0" fill="rgb(232,74,4)" rx="2" ry="2" />
<text  x="222.31" y="463.5" ></text>
</g>
<g >
<title>__do_execve_file.isra.0 (11 samples, 0.26%)</title><rect x="1186.9" y="453" width="3.1" height="15.0" fill="rgb(248,51,18)" rx="2" ry="2" />
<text  x="1189.94" y="463.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (1 samples, 0.02%)</title><rect x="187.1" y="309" width="0.2" height="15.0" fill="rgb(237,165,32)" rx="2" ry="2" />
<text  x="190.07" y="319.5" ></text>
</g>
<g >
<title>c10::TensorImpl::release_resources (49 samples, 1.15%)</title><rect x="379.7" y="389" width="13.6" height="15.0" fill="rgb(250,96,29)" rx="2" ry="2" />
<text  x="382.71" y="399.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::operator* (1 samples, 0.02%)</title><rect x="412.8" y="405" width="0.3" height="15.0" fill="rgb(248,12,42)" rx="2" ry="2" />
<text  x="415.78" y="415.5" ></text>
</g>
<g >
<title>cfree (2 samples, 0.05%)</title><rect x="846.1" y="341" width="0.6" height="15.0" fill="rgb(235,126,9)" rx="2" ry="2" />
<text  x="849.15" y="351.5" ></text>
</g>
<g >
<title>c10::Type::isSubtypeOfExt (1 samples, 0.02%)</title><rect x="189.8" y="341" width="0.3" height="15.0" fill="rgb(219,157,26)" rx="2" ry="2" />
<text  x="192.85" y="351.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::registerKernel (3 samples, 0.07%)</title><rect x="172.9" y="373" width="0.8" height="15.0" fill="rgb(220,168,35)" rx="2" ry="2" />
<text  x="175.89" y="383.5" ></text>
</g>
<g >
<title>torch::jit::registerOperator (1 samples, 0.02%)</title><rect x="203.2" y="405" width="0.3" height="15.0" fill="rgb(208,67,18)" rx="2" ry="2" />
<text  x="206.19" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;c10::AutogradMetaInterface, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::__uniq_ptr_impl (3 samples, 0.07%)</title><rect x="303.5" y="389" width="0.9" height="15.0" fill="rgb(238,99,42)" rx="2" ry="2" />
<text  x="306.54" y="399.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::TypeMeta (2 samples, 0.05%)</title><rect x="985.1" y="293" width="0.6" height="15.0" fill="rgb(230,34,9)" rx="2" ry="2" />
<text  x="988.13" y="303.5" ></text>
</g>
<g >
<title>c10::Device::is_cpu (1 samples, 0.02%)</title><rect x="419.7" y="373" width="0.3" height="15.0" fill="rgb(226,23,24)" rx="2" ry="2" />
<text  x="422.73" y="383.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::optional&lt;caffe2::TypeMeta, false&gt; (1 samples, 0.02%)</title><rect x="287.4" y="421" width="0.3" height="15.0" fill="rgb(214,167,47)" rx="2" ry="2" />
<text  x="290.42" y="431.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (5 samples, 0.12%)</title><rect x="170.9" y="373" width="1.4" height="15.0" fill="rgb(214,120,35)" rx="2" ry="2" />
<text  x="173.95" y="383.5" ></text>
</g>
<g >
<title>c10::constexpr_forward&lt;int&gt; (2 samples, 0.05%)</title><rect x="279.1" y="373" width="0.5" height="15.0" fill="rgb(235,228,6)" rx="2" ry="2" />
<text  x="282.08" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="187.6" y="357" width="0.3" height="15.0" fill="rgb(223,189,12)" rx="2" ry="2" />
<text  x="190.63" y="367.5" ></text>
</g>
<g >
<title>std::move&lt;std::__shared_ptr&lt;torch::autograd::Node,  (2 samples, 0.05%)</title><rect x="952.3" y="325" width="0.6" height="15.0" fill="rgb(229,182,18)" rx="2" ry="2" />
<text  x="955.33" y="335.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (26 samples, 0.61%)</title><rect x="264.3" y="405" width="7.3" height="15.0" fill="rgb(232,192,6)" rx="2" ry="2" />
<text  x="267.35" y="415.5" ></text>
</g>
<g >
<title>at::AutoNonVariableTypeMode::AutoNonVariableTypeMode (2 samples, 0.05%)</title><rect x="23.3" y="485" width="0.6" height="15.0" fill="rgb(219,201,29)" rx="2" ry="2" />
<text  x="26.34" y="495.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::dataptr (1 samples, 0.02%)</title><rect x="65.6" y="485" width="0.3" height="15.0" fill="rgb(225,146,0)" rx="2" ry="2" />
<text  x="68.59" y="495.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_BatchingRegistrations.cpp (3 samples, 0.07%)</title><rect x="132.9" y="453" width="0.8" height="15.0" fill="rgb(252,64,51)" rx="2" ry="2" />
<text  x="135.86" y="463.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (2 samples, 0.05%)</title><rect x="176.2" y="373" width="0.6" height="15.0" fill="rgb(248,216,0)" rx="2" ry="2" />
<text  x="179.23" y="383.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.02%)</title><rect x="149.0" y="421" width="0.3" height="15.0" fill="rgb(242,127,1)" rx="2" ry="2" />
<text  x="151.99" y="431.5" ></text>
</g>
<g >
<title>caffe2::_c10_ops::schema_BoxWithNMSLimit2 (1 samples, 0.02%)</title><rect x="218.5" y="469" width="0.3" height="15.0" fill="rgb(249,229,19)" rx="2" ry="2" />
<text  x="221.48" y="479.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="133.4" y="181" width="0.3" height="15.0" fill="rgb(237,143,22)" rx="2" ry="2" />
<text  x="136.42" y="191.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (1 samples, 0.02%)</title><rect x="199.9" y="389" width="0.2" height="15.0" fill="rgb(206,62,34)" rx="2" ry="2" />
<text  x="202.86" y="399.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="371.6" y="373" width="0.3" height="15.0" fill="rgb(234,105,32)" rx="2" ry="2" />
<text  x="374.64" y="383.5" ></text>
</g>
<g >
<title>std::move&lt;c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="664.4" y="389" width="0.2" height="15.0" fill="rgb(252,129,26)" rx="2" ry="2" />
<text  x="667.35" y="399.5" ></text>
</g>
<g >
<title>c10::DefaultCPUAllocator::allocate (4 samples, 0.09%)</title><rect x="228.5" y="485" width="1.1" height="15.0" fill="rgb(245,218,29)" rx="2" ry="2" />
<text  x="231.49" y="495.5" ></text>
</g>
<g >
<title>torch::jit::parseSchema (7 samples, 0.16%)</title><rect x="197.9" y="421" width="2.0" height="15.0" fill="rgb(211,95,15)" rx="2" ry="2" />
<text  x="200.91" y="431.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="132.0" y="357" width="0.3" height="15.0" fill="rgb(240,98,48)" rx="2" ry="2" />
<text  x="135.03" y="367.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::(anonymous namespace)::createArgumentVector (1 samples, 0.02%)</title><rect x="179.3" y="389" width="0.3" height="15.0" fill="rgb(231,68,29)" rx="2" ry="2" />
<text  x="182.29" y="399.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;signed char&gt; (3 samples, 0.07%)</title><rect x="474.8" y="325" width="0.8" height="15.0" fill="rgb(212,200,43)" rx="2" ry="2" />
<text  x="477.77" y="335.5" ></text>
</g>
<g >
<title>c10::dtype (1 samples, 0.02%)</title><rect x="577.9" y="437" width="0.3" height="15.0" fill="rgb(205,46,30)" rx="2" ry="2" />
<text  x="580.90" y="447.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_TraceType_4.cpp (5 samples, 0.12%)</title><rect x="154.5" y="453" width="1.4" height="15.0" fill="rgb(213,170,12)" rx="2" ry="2" />
<text  x="157.55" y="463.5" ></text>
</g>
<g >
<title>torch::jit::parseSchema (3 samples, 0.07%)</title><rect x="185.4" y="389" width="0.8" height="15.0" fill="rgb(241,186,43)" rx="2" ry="2" />
<text  x="188.40" y="399.5" ></text>
</g>
<g >
<title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;, c10::DispatchKey, std::hash&lt;c10::DispatchKey&gt;, ska::detailv3::KeyOrValueHasher&lt;c10::DispatchKey, std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;, std::hash&lt;c10::DispatchKey&gt; &gt;, std::equal_to&lt;c10::DispatchKey&gt;, ska::detailv3::KeyOrValueEquality&lt;c10::DispatchKey, std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;, std::equal_to&lt;c10::DispatchKey&gt; &gt;, std::allocator&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt; &gt; &gt; &gt;::emplace_new_key&lt;c10::DispatchKey const&amp;, ska::flat_hash_map&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt;, std::hash&lt;c10::DispatchKey&gt;, std::equal_to&lt;c10::DispatchKey&gt;, std::allocator&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt; &gt; &gt;::convertible_to_value&gt; (1 samples, 0.02%)</title><rect x="140.4" y="357" width="0.2" height="15.0" fill="rgb(218,210,52)" rx="2" ry="2" />
<text  x="143.37" y="367.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1 samples, 0.02%)</title><rect x="104.5" y="485" width="0.3" height="15.0" fill="rgb(242,0,30)" rx="2" ry="2" />
<text  x="107.51" y="495.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.02%)</title><rect x="225.7" y="341" width="0.3" height="15.0" fill="rgb(237,40,6)" rx="2" ry="2" />
<text  x="228.71" y="351.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;bool&gt;::constexpr_optional_base (3 samples, 0.07%)</title><rect x="807.0" y="373" width="0.8" height="15.0" fill="rgb(211,74,36)" rx="2" ry="2" />
<text  x="809.95" y="383.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::operator (1 samples, 0.02%)</title><rect x="907.3" y="405" width="0.3" height="15.0" fill="rgb(235,185,7)" rx="2" ry="2" />
<text  x="910.30" y="415.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.02%)</title><rect x="152.6" y="405" width="0.3" height="15.0" fill="rgb(254,36,2)" rx="2" ry="2" />
<text  x="155.60" y="415.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.02%)</title><rect x="153.7" y="405" width="0.3" height="15.0" fill="rgb(223,218,34)" rx="2" ry="2" />
<text  x="156.71" y="415.5" ></text>
</g>
<g >
<title>c10::constexpr_storage_t&lt;c10::MemoryFormat&gt;::constexpr_storage_t (1 samples, 0.02%)</title><rect x="289.1" y="405" width="0.3" height="15.0" fill="rgb(215,115,48)" rx="2" ry="2" />
<text  x="292.09" y="415.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="152.3" y="213" width="0.3" height="15.0" fill="rgb(237,103,42)" rx="2" ry="2" />
<text  x="155.32" y="223.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_tmpxft_0000d9f5_00000000_6_affine_channel_op.compute_70.cudafe1.cpp (1 samples, 0.02%)</title><rect x="187.9" y="453" width="0.3" height="15.0" fill="rgb(240,84,52)" rx="2" ry="2" />
<text  x="190.90" y="463.5" ></text>
</g>
<g >
<title>c10::alloc_cpu (37 samples, 0.87%)</title><rect x="347.5" y="261" width="10.2" height="15.0" fill="rgb(222,19,18)" rx="2" ry="2" />
<text  x="350.46" y="271.5" ></text>
</g>
<g >
<title>c10::TensorOptions::requires_grad (18 samples, 0.42%)</title><rect x="411.1" y="437" width="5.0" height="15.0" fill="rgb(207,147,46)" rx="2" ry="2" />
<text  x="414.12" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.02%)</title><rect x="86.7" y="485" width="0.3" height="15.0" fill="rgb(252,202,30)" rx="2" ry="2" />
<text  x="89.72" y="495.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="452.8" y="309" width="0.3" height="15.0" fill="rgb(239,182,33)" rx="2" ry="2" />
<text  x="455.81" y="319.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="137.3" y="261" width="0.3" height="15.0" fill="rgb(209,174,15)" rx="2" ry="2" />
<text  x="140.31" y="271.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;torch::autograd::AutogradMeta, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::_M_ptr (8 samples, 0.19%)</title><rect x="1015.7" y="373" width="2.2" height="15.0" fill="rgb(239,188,22)" rx="2" ry="2" />
<text  x="1018.71" y="383.5" ></text>
</g>
<g >
<title>[microbenchmark] (1 samples, 0.02%)</title><rect x="981.0" y="293" width="0.2" height="15.0" fill="rgb(240,211,8)" rx="2" ry="2" />
<text  x="983.96" y="303.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="254.6" y="341" width="0.3" height="15.0" fill="rgb(214,106,10)" rx="2" ry="2" />
<text  x="257.62" y="351.5" ></text>
</g>
<g >
<title>c10::VariableVersion::unique (5 samples, 0.12%)</title><rect x="298.3" y="389" width="1.3" height="15.0" fill="rgb(225,5,34)" rx="2" ry="2" />
<text  x="301.26" y="399.5" ></text>
</g>
<g >
<title>at::AutoNonVariableTypeMode::~AutoNonVariableTypeMode (2 samples, 0.05%)</title><rect x="1022.7" y="389" width="0.5" height="15.0" fill="rgb(231,76,7)" rx="2" ry="2" />
<text  x="1025.66" y="399.5" ></text>
</g>
<g >
<title>__tls_get_addr (2 samples, 0.05%)</title><rect x="365.5" y="261" width="0.6" height="15.0" fill="rgb(236,13,15)" rx="2" ry="2" />
<text  x="368.53" y="271.5" ></text>
</g>
<g >
<title>std::move&lt;at::Tensor&amp;&gt; (1 samples, 0.02%)</title><rect x="899.5" y="421" width="0.3" height="15.0" fill="rgb(213,144,7)" rx="2" ry="2" />
<text  x="902.52" y="431.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="134.8" y="341" width="0.3" height="15.0" fill="rgb(246,212,37)" rx="2" ry="2" />
<text  x="137.81" y="351.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.02%)</title><rect x="177.9" y="389" width="0.3" height="15.0" fill="rgb(231,167,36)" rx="2" ry="2" />
<text  x="180.90" y="399.5" ></text>
</g>
<g >
<title>torch::autograd::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Autograd (4 samples, 0.09%)</title><rect x="177.6" y="437" width="1.1" height="15.0" fill="rgb(245,146,14)" rx="2" ry="2" />
<text  x="180.62" y="447.5" ></text>
</g>
<g >
<title>main (3,282 samples, 77.31%)</title><rect x="263.8" y="469" width="912.3" height="15.0" fill="rgb(236,7,46)" rx="2" ry="2" />
<text  x="266.79" y="479.5" >main</text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;bool&gt;::constexpr_optional_base (1 samples, 0.02%)</title><rect x="374.7" y="389" width="0.3" height="15.0" fill="rgb(205,68,9)" rx="2" ry="2" />
<text  x="377.70" y="399.5" ></text>
</g>
<g >
<title>__tls_get_addr (2 samples, 0.05%)</title><rect x="223.8" y="485" width="0.5" height="15.0" fill="rgb(209,169,37)" rx="2" ry="2" />
<text  x="226.76" y="495.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTable_ (5 samples, 0.12%)</title><rect x="260.7" y="309" width="1.4" height="15.0" fill="rgb(244,22,30)" rx="2" ry="2" />
<text  x="263.73" y="319.5" ></text>
</g>
<g >
<title>all (4,245 samples, 100%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(237,175,10)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.02%)</title><rect x="153.2" y="389" width="0.2" height="15.0" fill="rgb(232,195,17)" rx="2" ry="2" />
<text  x="156.16" y="399.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.02%)</title><rect x="160.9" y="325" width="0.3" height="15.0" fill="rgb(228,156,6)" rx="2" ry="2" />
<text  x="163.94" y="335.5" ></text>
</g>
<g >
<title>c10::impl::tls_local_dispatch_key_set@plt (2 samples, 0.05%)</title><rect x="797.8" y="373" width="0.5" height="15.0" fill="rgb(241,135,38)" rx="2" ry="2" />
<text  x="800.78" y="383.5" ></text>
</g>
<g >
<title>caffe2::detail::make_function_schema_for_c10 (1 samples, 0.02%)</title><rect x="194.3" y="421" width="0.3" height="15.0" fill="rgb(235,139,53)" rx="2" ry="2" />
<text  x="197.30" y="431.5" ></text>
</g>
<g >
<title>[ld-2.31.so] (14 samples, 0.33%)</title><rect x="122.3" y="405" width="3.9" height="15.0" fill="rgb(233,112,17)" rx="2" ry="2" />
<text  x="125.30" y="415.5" ></text>
</g>
<g >
<title>c10::SingleElementType&lt; (1 samples, 0.02%)</title><rect x="155.1" y="325" width="0.3" height="15.0" fill="rgb(230,7,20)" rx="2" ry="2" />
<text  x="158.10" y="335.5" ></text>
</g>
<g >
<title>torch::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Tracer (7 samples, 0.16%)</title><rect x="150.7" y="437" width="1.9" height="15.0" fill="rgb(234,167,54)" rx="2" ry="2" />
<text  x="153.65" y="447.5" ></text>
</g>
<g >
<title>c10::TensorOptions::requires_grad (1 samples, 0.02%)</title><rect x="644.1" y="405" width="0.2" height="15.0" fill="rgb(213,131,35)" rx="2" ry="2" />
<text  x="647.06" y="415.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.02%)</title><rect x="143.4" y="133" width="0.3" height="15.0" fill="rgb(251,72,16)" rx="2" ry="2" />
<text  x="146.43" y="143.5" ></text>
</g>
<g >
<title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (186 samples, 4.38%)</title><rect x="515.1" y="325" width="51.7" height="15.0" fill="rgb(228,126,38)" rx="2" ry="2" />
<text  x="518.08" y="335.5" >c10::..</text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="201.8" y="245" width="0.3" height="15.0" fill="rgb(219,180,36)" rx="2" ry="2" />
<text  x="204.80" y="255.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (2 samples, 0.05%)</title><rect x="489.2" y="373" width="0.6" height="15.0" fill="rgb(205,200,49)" rx="2" ry="2" />
<text  x="492.23" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (1 samples, 0.02%)</title><rect x="168.2" y="325" width="0.2" height="15.0" fill="rgb(232,72,51)" rx="2" ry="2" />
<text  x="171.17" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (2 samples, 0.05%)</title><rect x="193.2" y="421" width="0.5" height="15.0" fill="rgb(232,53,31)" rx="2" ry="2" />
<text  x="196.18" y="431.5" ></text>
</g>
<g >
<title>torch::Library::impl_UNBOXED&lt;char const*, at::Tensor&amp;  (1 samples, 0.02%)</title><rect x="154.3" y="421" width="0.2" height="15.0" fill="rgb(215,97,49)" rx="2" ry="2" />
<text  x="157.27" y="431.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::operator bool (1 samples, 0.02%)</title><rect x="439.5" y="389" width="0.2" height="15.0" fill="rgb(227,109,29)" rx="2" ry="2" />
<text  x="442.47" y="399.5" ></text>
</g>
<g >
<title>c10::TensorOptions::set_dtype (2 samples, 0.05%)</title><rect x="425.6" y="421" width="0.5" height="15.0" fill="rgb(246,8,29)" rx="2" ry="2" />
<text  x="428.57" y="431.5" ></text>
</g>
<g >
<title>c10::impl::(anonymous namespace)::checkSchema (2 samples, 0.05%)</title><rect x="139.8" y="357" width="0.6" height="15.0" fill="rgb(224,205,24)" rx="2" ry="2" />
<text  x="142.81" y="367.5" ></text>
</g>
<g >
<title>torch::jit::parseName (1 samples, 0.02%)</title><rect x="174.8" y="389" width="0.3" height="15.0" fill="rgb(232,212,1)" rx="2" ry="2" />
<text  x="177.84" y="399.5" ></text>
</g>
<g >
<title>__do_page_fault (2 samples, 0.05%)</title><rect x="125.6" y="325" width="0.6" height="15.0" fill="rgb(242,171,1)" rx="2" ry="2" />
<text  x="128.64" y="335.5" ></text>
</g>
<g >
<title>c10::Device::Device (3 samples, 0.07%)</title><rect x="883.7" y="389" width="0.8" height="15.0" fill="rgb(230,215,48)" rx="2" ry="2" />
<text  x="886.67" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1 samples, 0.02%)</title><rect x="163.7" y="341" width="0.3" height="15.0" fill="rgb(205,11,43)" rx="2" ry="2" />
<text  x="166.72" y="351.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, c10::AutogradMetaInterface*, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt; (4 samples, 0.09%)</title><rect x="1013.2" y="357" width="1.1" height="15.0" fill="rgb(231,165,9)" rx="2" ry="2" />
<text  x="1016.21" y="367.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::dataptr (2 samples, 0.05%)</title><rect x="606.5" y="373" width="0.6" height="15.0" fill="rgb(253,159,23)" rx="2" ry="2" />
<text  x="609.53" y="383.5" ></text>
</g>
<g >
<title>c10::TensorOptions::dtype (2 samples, 0.05%)</title><rect x="787.8" y="277" width="0.5" height="15.0" fill="rgb(222,74,48)" rx="2" ry="2" />
<text  x="790.77" y="287.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;torch::autograd::Node&gt;::operator= (15 samples, 0.35%)</title><rect x="458.7" y="373" width="4.1" height="15.0" fill="rgb(205,25,33)" rx="2" ry="2" />
<text  x="461.65" y="383.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="202.6" y="389" width="0.3" height="15.0" fill="rgb(232,30,33)" rx="2" ry="2" />
<text  x="205.64" y="399.5" ></text>
</g>
<g >
<title>[ld-2.31.so] (1 samples, 0.02%)</title><rect x="150.7" y="421" width="0.2" height="15.0" fill="rgb(244,129,38)" rx="2" ry="2" />
<text  x="153.65" y="431.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="1132.7" y="101" width="0.3" height="15.0" fill="rgb(251,193,46)" rx="2" ry="2" />
<text  x="1135.74" y="111.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="152.3" y="261" width="0.3" height="15.0" fill="rgb(239,126,6)" rx="2" ry="2" />
<text  x="155.32" y="271.5" ></text>
</g>
<g >
<title>torch::jit::parseSchema (4 samples, 0.09%)</title><rect x="175.1" y="405" width="1.1" height="15.0" fill="rgb(253,35,32)" rx="2" ry="2" />
<text  x="178.12" y="415.5" ></text>
</g>
<g >
<title>at::native::empty_cpu@plt (1 samples, 0.02%)</title><rect x="786.4" y="277" width="0.3" height="15.0" fill="rgb(222,178,19)" rx="2" ry="2" />
<text  x="789.38" y="287.5" ></text>
</g>
<g >
<title>[ld-2.31.so] (1 samples, 0.02%)</title><rect x="155.9" y="405" width="0.3" height="15.0" fill="rgb(211,39,28)" rx="2" ry="2" />
<text  x="158.94" y="415.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseBaseType (1 samples, 0.02%)</title><rect x="217.4" y="373" width="0.2" height="15.0" fill="rgb(237,78,28)" rx="2" ry="2" />
<text  x="220.37" y="383.5" ></text>
</g>
<g >
<title>google::protobuf::internal::(anonymous namespace)::InitSCC_DFS (1 samples, 0.02%)</title><rect x="202.4" y="421" width="0.2" height="15.0" fill="rgb(226,166,21)" rx="2" ry="2" />
<text  x="205.36" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (1 samples, 0.02%)</title><rect x="140.1" y="293" width="0.3" height="15.0" fill="rgb(217,22,27)" rx="2" ry="2" />
<text  x="143.09" y="303.5" ></text>
</g>
<g >
<title>c10::RegisterOperators::op&lt;void  (1 samples, 0.02%)</title><rect x="190.4" y="437" width="0.3" height="15.0" fill="rgb(205,111,29)" rx="2" ry="2" />
<text  x="193.41" y="447.5" ></text>
</g>
<g >
<title>c10::TensorImpl::unique_version (3 samples, 0.07%)</title><rect x="439.7" y="405" width="0.9" height="15.0" fill="rgb(209,192,37)" rx="2" ry="2" />
<text  x="442.75" y="415.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (2 samples, 0.05%)</title><rect x="227.7" y="469" width="0.5" height="15.0" fill="rgb(232,89,16)" rx="2" ry="2" />
<text  x="230.65" y="479.5" ></text>
</g>
<g >
<title>c10::demangle_type&lt;caffe2::SumReluOp&lt;caffe2::CPUContext&gt; &gt; (1 samples, 0.02%)</title><rect x="184.3" y="437" width="0.3" height="15.0" fill="rgb(206,110,35)" rx="2" ry="2" />
<text  x="187.29" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;, std::allocator&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt; &gt;::_Vector_impl::_Vector_impl (8 samples, 0.19%)</title><rect x="956.8" y="325" width="2.2" height="15.0" fill="rgb(237,90,0)" rx="2" ry="2" />
<text  x="959.78" y="335.5" ></text>
</g>
<g >
<title>c10::Device::Device (1 samples, 0.02%)</title><rect x="282.7" y="405" width="0.3" height="15.0" fill="rgb(247,224,53)" rx="2" ry="2" />
<text  x="285.69" y="415.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;unsigned char&gt;@plt (1 samples, 0.02%)</title><rect x="1162.8" y="309" width="0.2" height="15.0" fill="rgb(250,8,40)" rx="2" ry="2" />
<text  x="1165.76" y="319.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;c10::AutogradMetaInterface&gt;, true&gt;::_Head_base&lt;std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (4 samples, 0.09%)</title><rect x="1004.0" y="309" width="1.1" height="15.0" fill="rgb(236,72,32)" rx="2" ry="2" />
<text  x="1007.04" y="319.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.02%)</title><rect x="217.4" y="421" width="0.2" height="15.0" fill="rgb(221,75,2)" rx="2" ry="2" />
<text  x="220.37" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, char&gt; (1 samples, 0.02%)</title><rect x="138.4" y="373" width="0.3" height="15.0" fill="rgb(251,198,53)" rx="2" ry="2" />
<text  x="141.42" y="383.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::operator (3 samples, 0.07%)</title><rect x="921.8" y="389" width="0.8" height="15.0" fill="rgb(237,30,8)" rx="2" ry="2" />
<text  x="924.76" y="399.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (1 samples, 0.02%)</title><rect x="153.2" y="405" width="0.2" height="15.0" fill="rgb(223,103,29)" rx="2" ry="2" />
<text  x="156.16" y="415.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;float&gt; (6 samples, 0.14%)</title><rect x="884.5" y="389" width="1.7" height="15.0" fill="rgb(205,70,7)" rx="2" ry="2" />
<text  x="887.51" y="399.5" ></text>
</g>
<g >
<title>[ld-2.31.so] (1 samples, 0.02%)</title><rect x="202.4" y="405" width="0.2" height="15.0" fill="rgb(232,66,2)" rx="2" ry="2" />
<text  x="205.36" y="415.5" ></text>
</g>
<g >
<title>page_fault (11 samples, 0.26%)</title><rect x="1183.9" y="501" width="3.0" height="15.0" fill="rgb(240,182,8)" rx="2" ry="2" />
<text  x="1186.88" y="511.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::computeDispatchTableEntryWithDebug (1 samples, 0.02%)</title><rect x="235.7" y="485" width="0.3" height="15.0" fill="rgb(208,189,13)" rx="2" ry="2" />
<text  x="238.71" y="495.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="23.1" y="485" width="0.2" height="15.0" fill="rgb(222,136,25)" rx="2" ry="2" />
<text  x="26.06" y="495.5" ></text>
</g>
<g >
<title>wp_page_copy (1 samples, 0.02%)</title><rect x="183.2" y="245" width="0.3" height="15.0" fill="rgb(248,52,54)" rx="2" ry="2" />
<text  x="186.18" y="255.5" ></text>
</g>
<g >
<title>torch::autograd::AutogradMeta::~AutogradMeta (49 samples, 1.15%)</title><rect x="828.4" y="341" width="13.6" height="15.0" fill="rgb(233,95,10)" rx="2" ry="2" />
<text  x="831.36" y="351.5" ></text>
</g>
<g >
<title>caffe2::detail::make_function_schema_for_c10 (1 samples, 0.02%)</title><rect x="195.1" y="421" width="0.3" height="15.0" fill="rgb(207,175,11)" rx="2" ry="2" />
<text  x="198.13" y="431.5" ></text>
</g>
<g >
<title>at::empty (526 samples, 12.39%)</title><rect x="1023.2" y="389" width="146.2" height="15.0" fill="rgb(244,41,9)" rx="2" ry="2" />
<text  x="1026.22" y="399.5" >at::empty</text>
</g>
<g >
<title>exit_mmap (11 samples, 0.26%)</title><rect x="1180.0" y="405" width="3.1" height="15.0" fill="rgb(253,17,28)" rx="2" ry="2" />
<text  x="1182.99" y="415.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (10 samples, 0.24%)</title><rect x="1186.9" y="357" width="2.8" height="15.0" fill="rgb(248,204,30)" rx="2" ry="2" />
<text  x="1189.94" y="367.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::operator* (2 samples, 0.05%)</title><rect x="276.6" y="389" width="0.5" height="15.0" fill="rgb(243,71,23)" rx="2" ry="2" />
<text  x="279.58" y="399.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="263.2" y="341" width="0.3" height="15.0" fill="rgb(227,47,41)" rx="2" ry="2" />
<text  x="266.23" y="351.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.02%)</title><rect x="189.6" y="357" width="0.2" height="15.0" fill="rgb(218,37,14)" rx="2" ry="2" />
<text  x="192.57" y="367.5" ></text>
</g>
<g >
<title>clear_user (1 samples, 0.02%)</title><rect x="1179.4" y="405" width="0.3" height="15.0" fill="rgb(229,219,18)" rx="2" ry="2" />
<text  x="1182.44" y="415.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::operator* (8 samples, 0.19%)</title><rect x="876.7" y="389" width="2.2" height="15.0" fill="rgb(227,89,6)" rx="2" ry="2" />
<text  x="879.72" y="399.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.02%)</title><rect x="219.9" y="357" width="0.2" height="15.0" fill="rgb(236,114,27)" rx="2" ry="2" />
<text  x="222.87" y="367.5" ></text>
</g>
<g >
<title>c10::TensorImpl::TensorImpl (1 samples, 0.02%)</title><rect x="1177.8" y="501" width="0.2" height="15.0" fill="rgb(217,102,36)" rx="2" ry="2" />
<text  x="1180.77" y="511.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="147.9" y="277" width="0.3" height="15.0" fill="rgb(253,209,41)" rx="2" ry="2" />
<text  x="150.88" y="287.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;long&gt;::begin (1 samples, 0.02%)</title><rect x="94.5" y="485" width="0.3" height="15.0" fill="rgb(252,6,28)" rx="2" ry="2" />
<text  x="97.50" y="495.5" ></text>
</g>
<g >
<title>c10::TensorOptions::computeDispatchKey (9 samples, 0.21%)</title><rect x="788.3" y="325" width="2.5" height="15.0" fill="rgb(209,185,12)" rx="2" ry="2" />
<text  x="791.33" y="335.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (32 samples, 0.75%)</title><rect x="348.9" y="229" width="8.8" height="15.0" fill="rgb(245,13,12)" rx="2" ry="2" />
<text  x="351.85" y="239.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="134.3" y="325" width="0.2" height="15.0" fill="rgb(215,69,7)" rx="2" ry="2" />
<text  x="137.25" y="335.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="140.6" y="373" width="0.3" height="15.0" fill="rgb(254,220,34)" rx="2" ry="2" />
<text  x="143.65" y="383.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="183.2" y="229" width="0.3" height="15.0" fill="rgb(244,90,1)" rx="2" ry="2" />
<text  x="186.18" y="239.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.09%)</title><rect x="564.0" y="277" width="1.1" height="15.0" fill="rgb(211,139,15)" rx="2" ry="2" />
<text  x="567.00" y="287.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="1179.4" y="325" width="0.3" height="15.0" fill="rgb(234,94,49)" rx="2" ry="2" />
<text  x="1182.44" y="335.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.02%)</title><rect x="539.5" y="213" width="0.3" height="15.0" fill="rgb(205,192,28)" rx="2" ry="2" />
<text  x="542.54" y="223.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (1 samples, 0.02%)</title><rect x="146.8" y="405" width="0.2" height="15.0" fill="rgb(229,117,25)" rx="2" ry="2" />
<text  x="149.76" y="415.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, torch::CppFunction&gt; (1 samples, 0.02%)</title><rect x="183.2" y="405" width="0.3" height="15.0" fill="rgb(224,154,0)" rx="2" ry="2" />
<text  x="186.18" y="415.5" ></text>
</g>
<g >
<title>c10::UndefinedTensorImpl::singleton (1 samples, 0.02%)</title><rect x="663.0" y="373" width="0.2" height="15.0" fill="rgb(241,17,52)" rx="2" ry="2" />
<text  x="665.96" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (1 samples, 0.02%)</title><rect x="175.7" y="261" width="0.3" height="15.0" fill="rgb(231,75,28)" rx="2" ry="2" />
<text  x="178.67" y="271.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::operator* (7 samples, 0.16%)</title><rect x="607.1" y="373" width="1.9" height="15.0" fill="rgb(224,0,10)" rx="2" ry="2" />
<text  x="610.09" y="383.5" ></text>
</g>
<g >
<title>torch::jit::parseName (1 samples, 0.02%)</title><rect x="155.7" y="389" width="0.2" height="15.0" fill="rgb(212,33,5)" rx="2" ry="2" />
<text  x="158.66" y="399.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="180.4" y="309" width="0.3" height="15.0" fill="rgb(230,121,15)" rx="2" ry="2" />
<text  x="183.40" y="319.5" ></text>
</g>
<g >
<title>c10::Device::validate (14 samples, 0.33%)</title><rect x="611.8" y="341" width="3.9" height="15.0" fill="rgb(237,220,26)" rx="2" ry="2" />
<text  x="614.81" y="351.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::optional (22 samples, 0.52%)</title><rect x="873.4" y="405" width="6.1" height="15.0" fill="rgb(234,43,3)" rx="2" ry="2" />
<text  x="876.39" y="415.5" ></text>
</g>
<g >
<title>[microbenchmark] (1 samples, 0.02%)</title><rect x="844.2" y="341" width="0.3" height="15.0" fill="rgb(219,178,20)" rx="2" ry="2" />
<text  x="847.20" y="351.5" ></text>
</g>
<g >
<title>c10::impl::check_tensor_options_and_extract_memory_format (2 samples, 0.05%)</title><rect x="795.6" y="373" width="0.5" height="15.0" fill="rgb(208,131,26)" rx="2" ry="2" />
<text  x="798.55" y="383.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (1 samples, 0.02%)</title><rect x="145.1" y="421" width="0.3" height="15.0" fill="rgb(229,133,7)" rx="2" ry="2" />
<text  x="148.10" y="431.5" ></text>
</g>
<g >
<title>std::operator&amp; (6 samples, 0.14%)</title><rect x="96.7" y="485" width="1.7" height="15.0" fill="rgb(223,159,30)" rx="2" ry="2" />
<text  x="99.73" y="495.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::IValue&gt;::optional (1 samples, 0.02%)</title><rect x="199.3" y="357" width="0.3" height="15.0" fill="rgb(223,136,17)" rx="2" ry="2" />
<text  x="202.30" y="367.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor&amp;  (1 samples, 0.02%)</title><rect x="179.0" y="421" width="0.3" height="15.0" fill="rgb(206,115,23)" rx="2" ry="2" />
<text  x="182.01" y="431.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="159.8" y="357" width="0.3" height="15.0" fill="rgb(225,203,11)" rx="2" ry="2" />
<text  x="162.83" y="367.5" ></text>
</g>
<g >
<title>at::RecordFunction::RecordFunction (10 samples, 0.24%)</title><rect x="23.9" y="485" width="2.8" height="15.0" fill="rgb(249,134,16)" rx="2" ry="2" />
<text  x="26.90" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::either&lt;c10::OperatorName, c10::FunctionSchema&gt;, std::allocator&lt;c10::either&lt;c10::OperatorName, c10::FunctionSchema&gt; &gt; &gt;::_M_realloc_insert&lt;c10::either&lt;c10::OperatorName, c10::FunctionSchema&gt; &gt; (1 samples, 0.02%)</title><rect x="151.2" y="373" width="0.3" height="15.0" fill="rgb(229,42,18)" rx="2" ry="2" />
<text  x="154.21" y="383.5" ></text>
</g>
<g >
<title>__x64_sys_brk (1 samples, 0.02%)</title><rect x="193.2" y="261" width="0.3" height="15.0" fill="rgb(208,201,35)" rx="2" ry="2" />
<text  x="196.18" y="271.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;long&gt; (6 samples, 0.14%)</title><rect x="982.6" y="309" width="1.7" height="15.0" fill="rgb(215,58,20)" rx="2" ry="2" />
<text  x="985.63" y="319.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="187.6" y="325" width="0.3" height="15.0" fill="rgb(212,31,30)" rx="2" ry="2" />
<text  x="190.63" y="335.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;c10::MemoryFormat&gt;::constexpr_optional_base (1 samples, 0.02%)</title><rect x="429.5" y="421" width="0.2" height="15.0" fill="rgb(238,2,24)" rx="2" ry="2" />
<text  x="432.46" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::SimpleDescriptorDatabase::DescriptorIndex&lt;std::pair&lt;void const*, int&gt; &gt;::AddFile (1 samples, 0.02%)</title><rect x="202.1" y="405" width="0.3" height="15.0" fill="rgb(243,73,50)" rx="2" ry="2" />
<text  x="205.08" y="415.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.02%)</title><rect x="784.2" y="245" width="0.2" height="15.0" fill="rgb(214,169,0)" rx="2" ry="2" />
<text  x="787.16" y="255.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::registerKernel (1 samples, 0.02%)</title><rect x="157.0" y="389" width="0.3" height="15.0" fill="rgb(215,65,25)" rx="2" ry="2" />
<text  x="160.05" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;c10::AutogradMetaInterface, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::unique_ptr&lt;torch::autograd::AutogradMeta, std::default_delete&lt;torch::autograd::AutogradMeta&gt;, void&gt; (57 samples, 1.34%)</title><rect x="996.5" y="389" width="15.9" height="15.0" fill="rgb(235,48,29)" rx="2" ry="2" />
<text  x="999.53" y="399.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.02%)</title><rect x="182.6" y="309" width="0.3" height="15.0" fill="rgb(228,190,30)" rx="2" ry="2" />
<text  x="185.62" y="319.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="147.9" y="325" width="0.3" height="15.0" fill="rgb(216,141,46)" rx="2" ry="2" />
<text  x="150.88" y="335.5" ></text>
</g>
<g >
<title>up_write (1 samples, 0.02%)</title><rect x="1179.7" y="373" width="0.3" height="15.0" fill="rgb(236,215,2)" rx="2" ry="2" />
<text  x="1182.71" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;torch::autograd::AutogradMeta, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::get (3 samples, 0.07%)</title><rect x="486.7" y="373" width="0.9" height="15.0" fill="rgb(209,24,13)" rx="2" ry="2" />
<text  x="489.73" y="383.5" ></text>
</g>
<g >
<title>c10::constexpr_storage_t&lt;c10::Device&gt;::constexpr_storage_t (1 samples, 0.02%)</title><rect x="858.9" y="357" width="0.3" height="15.0" fill="rgb(232,202,12)" rx="2" ry="2" />
<text  x="861.93" y="367.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::initialized (1 samples, 0.02%)</title><rect x="576.5" y="357" width="0.3" height="15.0" fill="rgb(249,47,23)" rx="2" ry="2" />
<text  x="579.51" y="367.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="150.1" y="341" width="0.3" height="15.0" fill="rgb(236,193,4)" rx="2" ry="2" />
<text  x="153.10" y="351.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseDeclaration (1 samples, 0.02%)</title><rect x="218.5" y="405" width="0.3" height="15.0" fill="rgb(217,32,47)" rx="2" ry="2" />
<text  x="221.48" y="415.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::operator bool (1 samples, 0.02%)</title><rect x="373.0" y="373" width="0.3" height="15.0" fill="rgb(252,24,54)" rx="2" ry="2" />
<text  x="376.03" y="383.5" ></text>
</g>
<g >
<title>c10::impl::(anonymous namespace)::checkSchema (1 samples, 0.02%)</title><rect x="151.8" y="357" width="0.2" height="15.0" fill="rgb(238,185,35)" rx="2" ry="2" />
<text  x="154.77" y="367.5" ></text>
</g>
<g >
<title>__libc_malloc (2 samples, 0.05%)</title><rect x="143.1" y="325" width="0.6" height="15.0" fill="rgb(210,91,29)" rx="2" ry="2" />
<text  x="146.15" y="335.5" ></text>
</g>
<g >
<title>torch::jit::parseSchema (1 samples, 0.02%)</title><rect x="195.7" y="405" width="0.3" height="15.0" fill="rgb(237,186,17)" rx="2" ry="2" />
<text  x="198.69" y="415.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.02%)</title><rect x="177.3" y="341" width="0.3" height="15.0" fill="rgb(251,7,52)" rx="2" ry="2" />
<text  x="180.34" y="351.5" ></text>
</g>
<g >
<title>c10::TensorImpl::TensorImpl (9 samples, 0.21%)</title><rect x="341.6" y="245" width="2.5" height="15.0" fill="rgb(245,81,21)" rx="2" ry="2" />
<text  x="344.62" y="255.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.02%)</title><rect x="151.2" y="389" width="0.3" height="15.0" fill="rgb(235,167,28)" rx="2" ry="2" />
<text  x="154.21" y="399.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (38 samples, 0.90%)</title><rect x="162.1" y="389" width="10.5" height="15.0" fill="rgb(221,222,4)" rx="2" ry="2" />
<text  x="165.05" y="399.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.02%)</title><rect x="194.6" y="325" width="0.3" height="15.0" fill="rgb(208,51,33)" rx="2" ry="2" />
<text  x="197.57" y="335.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseType (4 samples, 0.09%)</title><rect x="220.4" y="389" width="1.1" height="15.0" fill="rgb(208,194,6)" rx="2" ry="2" />
<text  x="223.43" y="399.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="143.4" y="261" width="0.3" height="15.0" fill="rgb(208,115,19)" rx="2" ry="2" />
<text  x="146.43" y="271.5" ></text>
</g>
<g >
<title>__tls_init (2 samples, 0.05%)</title><rect x="513.4" y="293" width="0.6" height="15.0" fill="rgb(235,94,40)" rx="2" ry="2" />
<text  x="516.41" y="303.5" ></text>
</g>
<g >
<title>at::Tensor::Tensor (1 samples, 0.02%)</title><rect x="449.8" y="389" width="0.2" height="15.0" fill="rgb(254,10,37)" rx="2" ry="2" />
<text  x="452.76" y="399.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="179.3" y="213" width="0.3" height="15.0" fill="rgb(221,35,7)" rx="2" ry="2" />
<text  x="182.29" y="223.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (7 samples, 0.16%)</title><rect x="221.5" y="421" width="2.0" height="15.0" fill="rgb(212,175,38)" rx="2" ry="2" />
<text  x="224.54" y="431.5" ></text>
</g>
<g >
<title>c10::constexpr_storage_t&lt;bool&gt;::constexpr_storage_t&lt;bool&gt; (1 samples, 0.02%)</title><rect x="429.2" y="405" width="0.3" height="15.0" fill="rgb(239,113,26)" rx="2" ry="2" />
<text  x="432.18" y="415.5" ></text>
</g>
<g >
<title>std::ios_base::ios_base@plt (1 samples, 0.02%)</title><rect x="132.9" y="357" width="0.2" height="15.0" fill="rgb(208,61,9)" rx="2" ry="2" />
<text  x="135.86" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;c10::AutogradMetaInterface, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::__uniq_ptr_impl (2 samples, 0.05%)</title><rect x="303.0" y="405" width="0.5" height="15.0" fill="rgb(239,57,21)" rx="2" ry="2" />
<text  x="305.98" y="415.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.02%)</title><rect x="186.5" y="389" width="0.3" height="15.0" fill="rgb(250,101,7)" rx="2" ry="2" />
<text  x="189.51" y="399.5" ></text>
</g>
<g >
<title>__tls_init (3 samples, 0.07%)</title><rect x="499.8" y="341" width="0.8" height="15.0" fill="rgb(247,55,44)" rx="2" ry="2" />
<text  x="502.79" y="351.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.02%)</title><rect x="181.8" y="309" width="0.3" height="15.0" fill="rgb(215,67,5)" rx="2" ry="2" />
<text  x="184.79" y="319.5" ></text>
</g>
<g >
<title>c10::memoryProfilingEnabled (5 samples, 0.12%)</title><rect x="589.0" y="325" width="1.4" height="15.0" fill="rgb(212,166,44)" rx="2" ry="2" />
<text  x="592.02" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="123.1" y="309" width="0.3" height="15.0" fill="rgb(220,167,11)" rx="2" ry="2" />
<text  x="126.14" y="319.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="202.6" y="373" width="0.3" height="15.0" fill="rgb(214,20,10)" rx="2" ry="2" />
<text  x="205.64" y="383.5" ></text>
</g>
<g >
<title>caffe2::operator== (9 samples, 0.21%)</title><rect x="986.8" y="309" width="2.5" height="15.0" fill="rgb(209,220,54)" rx="2" ry="2" />
<text  x="989.80" y="319.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.02%)</title><rect x="162.6" y="373" width="0.3" height="15.0" fill="rgb(205,47,37)" rx="2" ry="2" />
<text  x="165.61" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;c10::Symbol, c10::Symbol, std::allocator&lt;c10::Symbol&gt;, std::__detail::_Identity, std::equal_to&lt;c10::Symbol&gt;, std::hash&lt;c10::Symbol&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_Hashtable@plt (1 samples, 0.02%)</title><rect x="170.1" y="309" width="0.3" height="15.0" fill="rgb(246,121,54)" rx="2" ry="2" />
<text  x="173.11" y="319.5" ></text>
</g>
<g >
<title>__libc_malloc (8 samples, 0.19%)</title><rect x="746.9" y="229" width="2.2" height="15.0" fill="rgb(225,107,39)" rx="2" ry="2" />
<text  x="749.91" y="239.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="222.4" y="357" width="0.3" height="15.0" fill="rgb(220,88,54)" rx="2" ry="2" />
<text  x="225.37" y="367.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="186.2" y="341" width="0.3" height="15.0" fill="rgb(210,186,19)" rx="2" ry="2" />
<text  x="189.24" y="351.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.02%)</title><rect x="223.5" y="437" width="0.3" height="15.0" fill="rgb(240,126,51)" rx="2" ry="2" />
<text  x="226.48" y="447.5" ></text>
</g>
<g >
<title>c10::TensorImpl::set_autograd_meta (3 samples, 0.07%)</title><rect x="297.4" y="405" width="0.9" height="15.0" fill="rgb(240,152,2)" rx="2" ry="2" />
<text  x="300.43" y="415.5" ></text>
</g>
<g >
<title>std::__mutex_base::__mutex_base (2 samples, 0.05%)</title><rect x="943.2" y="341" width="0.5" height="15.0" fill="rgb(246,181,20)" rx="2" ry="2" />
<text  x="946.16" y="351.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;*, std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt; (4 samples, 0.09%)</title><rect x="835.9" y="309" width="1.1" height="15.0" fill="rgb(253,208,47)" rx="2" ry="2" />
<text  x="838.86" y="319.5" ></text>
</g>
<g >
<title>c10::DefaultCPUAllocator::ReportAndDelete (18 samples, 0.42%)</title><rect x="818.9" y="357" width="5.0" height="15.0" fill="rgb(235,22,1)" rx="2" ry="2" />
<text  x="821.90" y="367.5" ></text>
</g>
<g >
<title>std::forward&lt;std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (2 samples, 0.05%)</title><rect x="998.8" y="357" width="0.5" height="15.0" fill="rgb(223,204,24)" rx="2" ry="2" />
<text  x="1001.75" y="367.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="202.9" y="325" width="0.3" height="15.0" fill="rgb(247,60,8)" rx="2" ry="2" />
<text  x="205.91" y="335.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.02%)</title><rect x="218.2" y="373" width="0.3" height="15.0" fill="rgb(242,14,25)" rx="2" ry="2" />
<text  x="221.20" y="383.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_VariableType_1.cpp (4 samples, 0.09%)</title><rect x="177.6" y="453" width="1.1" height="15.0" fill="rgb(253,25,10)" rx="2" ry="2" />
<text  x="180.62" y="463.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="145.1" y="277" width="0.3" height="15.0" fill="rgb(211,221,1)" rx="2" ry="2" />
<text  x="148.10" y="287.5" ></text>
</g>
<g >
<title>c10::memoryProfilingEnabled (15 samples, 0.35%)</title><rect x="819.7" y="325" width="4.2" height="15.0" fill="rgb(217,217,45)" rx="2" ry="2" />
<text  x="822.74" y="335.5" ></text>
</g>
<g >
<title>torch::Library::impl_UNBOXED&lt;char const*, at::Tensor&amp;  (2 samples, 0.05%)</title><rect x="178.2" y="421" width="0.5" height="15.0" fill="rgb(218,181,8)" rx="2" ry="2" />
<text  x="181.17" y="431.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="186.5" y="325" width="0.3" height="15.0" fill="rgb(234,51,7)" rx="2" ry="2" />
<text  x="189.51" y="335.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="143.4" y="277" width="0.3" height="15.0" fill="rgb(208,152,50)" rx="2" ry="2" />
<text  x="146.43" y="287.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (1 samples, 0.02%)</title><rect x="177.9" y="405" width="0.3" height="15.0" fill="rgb(241,109,3)" rx="2" ry="2" />
<text  x="180.90" y="415.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::operator-- (2 samples, 0.05%)</title><rect x="848.4" y="373" width="0.5" height="15.0" fill="rgb(216,41,24)" rx="2" ry="2" />
<text  x="851.37" y="383.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.02%)</title><rect x="177.3" y="389" width="0.3" height="15.0" fill="rgb(206,52,39)" rx="2" ry="2" />
<text  x="180.34" y="399.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="147.9" y="245" width="0.3" height="15.0" fill="rgb(229,37,13)" rx="2" ry="2" />
<text  x="150.88" y="255.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.02%)</title><rect x="176.0" y="357" width="0.2" height="15.0" fill="rgb(209,38,23)" rx="2" ry="2" />
<text  x="178.95" y="367.5" ></text>
</g>
<g >
<title>c10::tryTypeMetaToScalarType (33 samples, 0.78%)</title><rect x="468.4" y="341" width="9.2" height="15.0" fill="rgb(222,21,34)" rx="2" ry="2" />
<text  x="471.38" y="351.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.02%)</title><rect x="177.1" y="341" width="0.2" height="15.0" fill="rgb(231,134,25)" rx="2" ry="2" />
<text  x="180.06" y="351.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::VariableVersion::VersionCounter, c10::detail::intrusive_target_default_null_type&lt;c10::VariableVersion::VersionCounter&gt; &gt;::use_count (6 samples, 0.14%)</title><rect x="656.3" y="357" width="1.7" height="15.0" fill="rgb(242,152,30)" rx="2" ry="2" />
<text  x="659.29" y="367.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::retain_ (2 samples, 0.05%)</title><rect x="300.5" y="389" width="0.5" height="15.0" fill="rgb(210,88,21)" rx="2" ry="2" />
<text  x="303.48" y="399.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="125.1" y="261" width="0.3" height="15.0" fill="rgb(212,211,16)" rx="2" ry="2" />
<text  x="128.08" y="271.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseType (1 samples, 0.02%)</title><rect x="218.2" y="421" width="0.3" height="15.0" fill="rgb(233,150,53)" rx="2" ry="2" />
<text  x="221.20" y="431.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::expect (1 samples, 0.02%)</title><rect x="102.8" y="485" width="0.3" height="15.0" fill="rgb(223,137,24)" rx="2" ry="2" />
<text  x="105.84" y="495.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.02%)</title><rect x="150.4" y="373" width="0.3" height="15.0" fill="rgb(215,163,4)" rx="2" ry="2" />
<text  x="153.38" y="383.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="223.5" y="453" width="0.3" height="15.0" fill="rgb(213,14,37)" rx="2" ry="2" />
<text  x="226.48" y="463.5" ></text>
</g>
<g >
<title>do_wp_page (1 samples, 0.02%)</title><rect x="183.2" y="261" width="0.3" height="15.0" fill="rgb(237,143,35)" rx="2" ry="2" />
<text  x="186.18" y="271.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.02%)</title><rect x="217.6" y="341" width="0.3" height="15.0" fill="rgb(251,141,6)" rx="2" ry="2" />
<text  x="220.65" y="351.5" ></text>
</g>
<g >
<title>c10::KernelFunction::makeFromUnboxedRuntimeFunction&lt;false, at::Tensor  (1 samples, 0.02%)</title><rect x="148.7" y="421" width="0.3" height="15.0" fill="rgb(230,188,39)" rx="2" ry="2" />
<text  x="151.71" y="431.5" ></text>
</g>
<g >
<title>c10::Device::validate (1 samples, 0.02%)</title><rect x="884.2" y="373" width="0.3" height="15.0" fill="rgb(215,107,32)" rx="2" ry="2" />
<text  x="887.23" y="383.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="150.4" y="341" width="0.3" height="15.0" fill="rgb(231,6,24)" rx="2" ry="2" />
<text  x="153.38" y="351.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.02%)</title><rect x="218.5" y="341" width="0.3" height="15.0" fill="rgb(214,161,19)" rx="2" ry="2" />
<text  x="221.48" y="351.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;short&gt;@plt (1 samples, 0.02%)</title><rect x="1162.5" y="309" width="0.3" height="15.0" fill="rgb(218,70,21)" rx="2" ry="2" />
<text  x="1165.48" y="319.5" ></text>
</g>
<g >
<title>torch::Library::_def (1 samples, 0.02%)</title><rect x="145.7" y="405" width="0.2" height="15.0" fill="rgb(215,208,32)" rx="2" ry="2" />
<text  x="148.65" y="415.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="597.4" y="373" width="0.2" height="15.0" fill="rgb(228,105,32)" rx="2" ry="2" />
<text  x="600.36" y="383.5" ></text>
</g>
<g >
<title>__libc_malloc (2 samples, 0.05%)</title><rect x="131.8" y="405" width="0.5" height="15.0" fill="rgb(214,77,47)" rx="2" ry="2" />
<text  x="134.75" y="415.5" ></text>
</g>
<g >
<title>[ld-2.31.so] (93 samples, 2.19%)</title><rect x="104.8" y="453" width="25.8" height="15.0" fill="rgb(214,121,5)" rx="2" ry="2" />
<text  x="107.79" y="463.5" >[..</text>
</g>
<g >
<title>std::begin&lt;long&gt; (1 samples, 0.02%)</title><rect x="634.9" y="421" width="0.3" height="15.0" fill="rgb(210,117,2)" rx="2" ry="2" />
<text  x="637.89" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (1 samples, 0.02%)</title><rect x="175.7" y="277" width="0.3" height="15.0" fill="rgb(247,197,30)" rx="2" ry="2" />
<text  x="178.67" y="287.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.16%)</title><rect x="745.0" y="213" width="1.9" height="15.0" fill="rgb(215,182,11)" rx="2" ry="2" />
<text  x="747.96" y="223.5" ></text>
</g>
<g >
<title>[microbenchmark] (4 samples, 0.09%)</title><rect x="242.9" y="469" width="1.2" height="15.0" fill="rgb(234,31,25)" rx="2" ry="2" />
<text  x="245.94" y="479.5" ></text>
</g>
<g >
<title>c10::constexpr_storage_t&lt;c10::Device&gt;::constexpr_storage_t (1 samples, 0.02%)</title><rect x="606.0" y="357" width="0.3" height="15.0" fill="rgb(219,83,2)" rx="2" ry="2" />
<text  x="608.98" y="367.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.02%)</title><rect x="149.3" y="341" width="0.2" height="15.0" fill="rgb(209,96,17)" rx="2" ry="2" />
<text  x="152.27" y="351.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.02%)</title><rect x="194.0" y="261" width="0.3" height="15.0" fill="rgb(251,92,52)" rx="2" ry="2" />
<text  x="197.02" y="271.5" ></text>
</g>
<g >
<title>c10::Device::is_cpu (1 samples, 0.02%)</title><rect x="867.3" y="325" width="0.3" height="15.0" fill="rgb(207,142,19)" rx="2" ry="2" />
<text  x="870.27" y="335.5" ></text>
</g>
<g >
<title>__sti____cudaRegisterAll (7 samples, 0.16%)</title><rect x="200.1" y="453" width="2.0" height="15.0" fill="rgb(238,169,35)" rx="2" ry="2" />
<text  x="203.13" y="463.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::ScalarType&gt;::initialized (2 samples, 0.05%)</title><rect x="969.0" y="309" width="0.6" height="15.0" fill="rgb(219,73,5)" rx="2" ry="2" />
<text  x="972.01" y="319.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.05%)</title><rect x="125.6" y="293" width="0.6" height="15.0" fill="rgb(231,176,28)" rx="2" ry="2" />
<text  x="128.64" y="303.5" ></text>
</g>
<g >
<title>perf_iterate_sb (1 samples, 0.02%)</title><rect x="193.2" y="213" width="0.3" height="15.0" fill="rgb(230,186,5)" rx="2" ry="2" />
<text  x="196.18" y="223.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, c10::AutogradMetaInterface*, false&gt;::_Head_base (2 samples, 0.05%)</title><rect x="666.0" y="325" width="0.6" height="15.0" fill="rgb(232,109,31)" rx="2" ry="2" />
<text  x="669.02" y="335.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (4 samples, 0.09%)</title><rect x="249.9" y="453" width="1.1" height="15.0" fill="rgb(208,16,54)" rx="2" ry="2" />
<text  x="252.89" y="463.5" ></text>
</g>
<g >
<title>at::RecordFunction::end (1 samples, 0.02%)</title><rect x="704.9" y="293" width="0.3" height="15.0" fill="rgb(212,16,8)" rx="2" ry="2" />
<text  x="707.94" y="303.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.02%)</title><rect x="199.6" y="389" width="0.3" height="15.0" fill="rgb(216,73,13)" rx="2" ry="2" />
<text  x="202.58" y="399.5" ></text>
</g>
<g >
<title>c10::InternedStrings::_symbol (1 samples, 0.02%)</title><rect x="189.3" y="405" width="0.3" height="15.0" fill="rgb(228,78,16)" rx="2" ry="2" />
<text  x="192.29" y="415.5" ></text>
</g>
<g >
<title>c10::InternedStrings::symbol (1 samples, 0.02%)</title><rect x="248.2" y="341" width="0.3" height="15.0" fill="rgb(218,95,51)" rx="2" ry="2" />
<text  x="251.22" y="351.5" ></text>
</g>
<g >
<title>c10::UndefinedTensorImpl::singleton (2 samples, 0.05%)</title><rect x="447.5" y="373" width="0.6" height="15.0" fill="rgb(223,180,44)" rx="2" ry="2" />
<text  x="450.53" y="383.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (1 samples, 0.02%)</title><rect x="195.4" y="357" width="0.3" height="15.0" fill="rgb(231,158,38)" rx="2" ry="2" />
<text  x="198.41" y="367.5" ></text>
</g>
<g >
<title>c10::TensorOptions::dtype (5 samples, 0.12%)</title><rect x="1150.0" y="277" width="1.4" height="15.0" fill="rgb(231,199,44)" rx="2" ry="2" />
<text  x="1152.97" y="287.5" ></text>
</g>
<g >
<title>c10::impl::(anonymous namespace)::checkSchema (2 samples, 0.05%)</title><rect x="159.3" y="357" width="0.5" height="15.0" fill="rgb(217,180,15)" rx="2" ry="2" />
<text  x="162.27" y="367.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (1 samples, 0.02%)</title><rect x="132.6" y="421" width="0.3" height="15.0" fill="rgb(251,163,27)" rx="2" ry="2" />
<text  x="135.59" y="431.5" ></text>
</g>
<g >
<title>vma_link (1 samples, 0.02%)</title><rect x="124.5" y="229" width="0.3" height="15.0" fill="rgb(205,80,33)" rx="2" ry="2" />
<text  x="127.53" y="239.5" ></text>
</g>
<g >
<title>posix_memalign (36 samples, 0.85%)</title><rect x="347.7" y="245" width="10.0" height="15.0" fill="rgb(214,108,6)" rx="2" ry="2" />
<text  x="350.74" y="255.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_elementwise_sum_relu_op.cc (1 samples, 0.02%)</title><rect x="184.3" y="453" width="0.3" height="15.0" fill="rgb(242,126,53)" rx="2" ry="2" />
<text  x="187.29" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::vector (1 samples, 0.02%)</title><rect x="194.6" y="373" width="0.3" height="15.0" fill="rgb(222,22,10)" rx="2" ry="2" />
<text  x="197.57" y="383.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, torch::autograd::AutogradMeta*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="486.4" y="309" width="0.3" height="15.0" fill="rgb(243,211,2)" rx="2" ry="2" />
<text  x="489.45" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, char&gt; (1 samples, 0.02%)</title><rect x="156.2" y="373" width="0.3" height="15.0" fill="rgb(226,112,41)" rx="2" ry="2" />
<text  x="159.21" y="383.5" ></text>
</g>
<g >
<title>at::RecordFunction::RecordFunction (3 samples, 0.07%)</title><rect x="313.3" y="373" width="0.8" height="15.0" fill="rgb(209,120,47)" rx="2" ry="2" />
<text  x="316.27" y="383.5" ></text>
</g>
<g >
<title>std::forward&lt;bool&amp;&gt; (1 samples, 0.02%)</title><rect x="932.9" y="373" width="0.3" height="15.0" fill="rgb(213,19,12)" rx="2" ry="2" />
<text  x="935.87" y="383.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.02%)</title><rect x="152.9" y="421" width="0.3" height="15.0" fill="rgb(247,112,11)" rx="2" ry="2" />
<text  x="155.88" y="431.5" ></text>
</g>
<g >
<title>std::__addressof&lt;bool&gt; (3 samples, 0.07%)</title><rect x="874.5" y="357" width="0.8" height="15.0" fill="rgb(253,34,9)" rx="2" ry="2" />
<text  x="877.50" y="367.5" ></text>
</g>
<g >
<title>get_page_from_freelist (3 samples, 0.07%)</title><rect x="127.9" y="277" width="0.8" height="15.0" fill="rgb(234,1,53)" rx="2" ry="2" />
<text  x="130.86" y="287.5" ></text>
</g>
<g >
<title>caffe2::detail::make_function_schema_for_c10 (1 samples, 0.02%)</title><rect x="218.5" y="453" width="0.3" height="15.0" fill="rgb(238,85,50)" rx="2" ry="2" />
<text  x="221.48" y="463.5" ></text>
</g>
<g >
<title>c10::impl::check_tensor_options_and_extract_memory_format (1 samples, 0.02%)</title><rect x="573.2" y="389" width="0.3" height="15.0" fill="rgb(225,40,16)" rx="2" ry="2" />
<text  x="576.18" y="399.5" ></text>
</g>
<g >
<title>c10::TensorOptions::set_device (2 samples, 0.05%)</title><rect x="274.6" y="405" width="0.6" height="15.0" fill="rgb(239,105,35)" rx="2" ry="2" />
<text  x="277.63" y="415.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::operator (1 samples, 0.02%)</title><rect x="301.0" y="405" width="0.3" height="15.0" fill="rgb(236,73,16)" rx="2" ry="2" />
<text  x="304.04" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="87.6" y="485" width="0.2" height="15.0" fill="rgb(244,125,39)" rx="2" ry="2" />
<text  x="90.55" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::InternedStrings::SymbolInfo, std::allocator&lt;c10::InternedStrings::SymbolInfo&gt; &gt;::_M_realloc_insert&lt;c10::InternedStrings::SymbolInfo&gt; (1 samples, 0.02%)</title><rect x="141.8" y="389" width="0.2" height="15.0" fill="rgb(219,43,24)" rx="2" ry="2" />
<text  x="144.76" y="399.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::contained_val (2 samples, 0.05%)</title><rect x="869.8" y="389" width="0.5" height="15.0" fill="rgb(245,181,30)" rx="2" ry="2" />
<text  x="872.77" y="399.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::operator* (2 samples, 0.05%)</title><rect x="286.9" y="389" width="0.5" height="15.0" fill="rgb(246,197,21)" rx="2" ry="2" />
<text  x="289.86" y="399.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="181.8" y="325" width="0.3" height="15.0" fill="rgb(248,119,27)" rx="2" ry="2" />
<text  x="184.79" y="335.5" ></text>
</g>
<g >
<title>std::ios_base::Init::Init@plt (1 samples, 0.02%)</title><rect x="138.1" y="437" width="0.3" height="15.0" fill="rgb(242,84,47)" rx="2" ry="2" />
<text  x="141.15" y="447.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.02%)</title><rect x="218.5" y="421" width="0.3" height="15.0" fill="rgb(230,27,38)" rx="2" ry="2" />
<text  x="221.48" y="431.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::registerKernel (1 samples, 0.02%)</title><rect x="146.8" y="389" width="0.2" height="15.0" fill="rgb(228,98,12)" rx="2" ry="2" />
<text  x="149.76" y="399.5" ></text>
</g>
<g >
<title>at::RecordFunction::RecordFunction (14 samples, 0.33%)</title><rect x="684.6" y="357" width="3.9" height="15.0" fill="rgb(248,169,31)" rx="2" ry="2" />
<text  x="687.64" y="367.5" ></text>
</g>
<g >
<title>torch::detail::TorchLibraryInit::TorchLibraryInit (2 samples, 0.05%)</title><rect x="183.7" y="437" width="0.6" height="15.0" fill="rgb(247,98,51)" rx="2" ry="2" />
<text  x="186.73" y="447.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="175.4" y="325" width="0.3" height="15.0" fill="rgb(210,152,11)" rx="2" ry="2" />
<text  x="178.39" y="335.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="145.1" y="197" width="0.3" height="15.0" fill="rgb(210,51,26)" rx="2" ry="2" />
<text  x="148.10" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;, std::allocator&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.02%)</title><rect x="84.8" y="485" width="0.3" height="15.0" fill="rgb(239,154,8)" rx="2" ry="2" />
<text  x="87.78" y="495.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.02%)</title><rect x="749.1" y="245" width="0.3" height="15.0" fill="rgb(229,53,25)" rx="2" ry="2" />
<text  x="752.13" y="255.5" ></text>
</g>
<g >
<title>[libcublasLt.so.11.1.0.229] (2 samples, 0.05%)</title><rect x="130.9" y="437" width="0.6" height="15.0" fill="rgb(242,58,25)" rx="2" ry="2" />
<text  x="133.92" y="447.5" ></text>
</g>
<g >
<title>c10::Device::validate (1 samples, 0.02%)</title><rect x="556.2" y="277" width="0.3" height="15.0" fill="rgb(253,102,6)" rx="2" ry="2" />
<text  x="559.22" y="287.5" ></text>
</g>
<g >
<title>at::RecordFunction::RecordFunction (10 samples, 0.24%)</title><rect x="1058.8" y="309" width="2.8" height="15.0" fill="rgb(247,149,34)" rx="2" ry="2" />
<text  x="1061.80" y="319.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::MemoryFormat&gt;::optional (5 samples, 0.12%)</title><rect x="1174.7" y="389" width="1.4" height="15.0" fill="rgb(236,129,3)" rx="2" ry="2" />
<text  x="1177.71" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;torch::jit::Token, std::allocator&lt;torch::jit::Token&gt; &gt;::_M_erase (1 samples, 0.02%)</title><rect x="170.4" y="341" width="0.3" height="15.0" fill="rgb(218,93,45)" rx="2" ry="2" />
<text  x="173.39" y="351.5" ></text>
</g>
<g >
<title>c10::DefaultCPUAllocator::ReportAndDelete (9 samples, 0.21%)</title><rect x="381.7" y="373" width="2.5" height="15.0" fill="rgb(241,67,40)" rx="2" ry="2" />
<text  x="384.65" y="383.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (1 samples, 0.02%)</title><rect x="146.2" y="325" width="0.3" height="15.0" fill="rgb(239,223,41)" rx="2" ry="2" />
<text  x="149.21" y="335.5" ></text>
</g>
<g >
<title>torch::schema (4 samples, 0.09%)</title><rect x="175.1" y="421" width="1.1" height="15.0" fill="rgb(213,85,14)" rx="2" ry="2" />
<text  x="178.12" y="431.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (2 samples, 0.05%)</title><rect x="484.5" y="357" width="0.6" height="15.0" fill="rgb(212,142,12)" rx="2" ry="2" />
<text  x="487.50" y="367.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::registerKernel (1 samples, 0.02%)</title><rect x="187.3" y="405" width="0.3" height="15.0" fill="rgb(223,208,54)" rx="2" ry="2" />
<text  x="190.35" y="415.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::optional (10 samples, 0.24%)</title><rect x="890.9" y="389" width="2.8" height="15.0" fill="rgb(219,176,33)" rx="2" ry="2" />
<text  x="893.90" y="399.5" ></text>
</g>
<g >
<title>alloc_pages_vma (3 samples, 0.07%)</title><rect x="127.9" y="309" width="0.8" height="15.0" fill="rgb(239,88,2)" rx="2" ry="2" />
<text  x="130.86" y="319.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.02%)</title><rect x="155.7" y="373" width="0.2" height="15.0" fill="rgb(222,181,41)" rx="2" ry="2" />
<text  x="158.66" y="383.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="270.2" y="309" width="0.3" height="15.0" fill="rgb(225,155,37)" rx="2" ry="2" />
<text  x="273.18" y="319.5" ></text>
</g>
<g >
<title>c10::TensorOptions::requires_grad (15 samples, 0.35%)</title><rect x="1169.7" y="389" width="4.2" height="15.0" fill="rgb(232,221,2)" rx="2" ry="2" />
<text  x="1172.71" y="399.5" ></text>
</g>
<g >
<title>c10::detail::getTypePtr_&lt;at::Tensor&gt;::call (1 samples, 0.02%)</title><rect x="181.0" y="373" width="0.2" height="15.0" fill="rgb(208,227,8)" rx="2" ry="2" />
<text  x="183.95" y="383.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="154.5" y="277" width="0.3" height="15.0" fill="rgb(215,171,46)" rx="2" ry="2" />
<text  x="157.55" y="287.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;torch::autograd::Node&gt;::operator= (32 samples, 0.75%)</title><rect x="945.1" y="357" width="8.9" height="15.0" fill="rgb(225,226,22)" rx="2" ry="2" />
<text  x="948.10" y="367.5" ></text>
</g>
<g >
<title>subfunc (2,152 samples, 50.69%)</title><rect x="577.9" y="453" width="598.2" height="15.0" fill="rgb(226,173,39)" rx="2" ry="2" />
<text  x="580.90" y="463.5" >subfunc</text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseType (1 samples, 0.02%)</title><rect x="248.2" y="405" width="0.3" height="15.0" fill="rgb(230,93,8)" rx="2" ry="2" />
<text  x="251.22" y="415.5" ></text>
</g>
<g >
<title>micro_requires_grad_false (829 samples, 19.53%)</title><rect x="578.5" y="437" width="230.4" height="15.0" fill="rgb(250,121,5)" rx="2" ry="2" />
<text  x="581.46" y="447.5" >micro_requires_grad_false</text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::initialized (1 samples, 0.02%)</title><rect x="802.8" y="341" width="0.3" height="15.0" fill="rgb(241,207,35)" rx="2" ry="2" />
<text  x="805.78" y="351.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;torch::autograd::Node,  (1 samples, 0.02%)</title><rect x="387.2" y="341" width="0.3" height="15.0" fill="rgb(229,190,26)" rx="2" ry="2" />
<text  x="390.21" y="351.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::operator bool (2 samples, 0.05%)</title><rect x="855.6" y="373" width="0.6" height="15.0" fill="rgb(245,101,30)" rx="2" ry="2" />
<text  x="858.60" y="383.5" ></text>
</g>
<g >
<title>[libcusparse.so.11.1.0.218] (2 samples, 0.05%)</title><rect x="131.8" y="421" width="0.5" height="15.0" fill="rgb(218,67,16)" rx="2" ry="2" />
<text  x="134.75" y="431.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::registerKernel (1 samples, 0.02%)</title><rect x="148.4" y="373" width="0.3" height="15.0" fill="rgb(251,154,6)" rx="2" ry="2" />
<text  x="151.43" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (1 samples, 0.02%)</title><rect x="156.2" y="357" width="0.3" height="15.0" fill="rgb(211,107,12)" rx="2" ry="2" />
<text  x="159.21" y="367.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::(anonymous namespace)::createArgumentVector (3 samples, 0.07%)</title><rect x="134.0" y="389" width="0.8" height="15.0" fill="rgb(225,224,40)" rx="2" ry="2" />
<text  x="136.98" y="399.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (3 samples, 0.07%)</title><rect x="926.8" y="373" width="0.8" height="15.0" fill="rgb(254,32,18)" rx="2" ry="2" />
<text  x="929.76" y="383.5" ></text>
</g>
<g >
<title>at::native::compute_cpu_capability (1 samples, 0.02%)</title><rect x="146.5" y="405" width="0.3" height="15.0" fill="rgb(246,144,18)" rx="2" ry="2" />
<text  x="149.49" y="415.5" ></text>
</g>
<g >
<title>std::addressof&lt;caffe2::TypeMeta&gt; (1 samples, 0.02%)</title><rect x="628.2" y="357" width="0.3" height="15.0" fill="rgb(250,62,39)" rx="2" ry="2" />
<text  x="631.21" y="367.5" ></text>
</g>
<g >
<title>c10::findSchemaDifferences[abi:cxx11] (2 samples, 0.05%)</title><rect x="159.3" y="341" width="0.5" height="15.0" fill="rgb(252,167,14)" rx="2" ry="2" />
<text  x="162.27" y="351.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;double&gt; (1 samples, 0.02%)</title><rect x="86.4" y="485" width="0.3" height="15.0" fill="rgb(248,170,36)" rx="2" ry="2" />
<text  x="89.44" y="495.5" ></text>
</g>
<g >
<title>c10::TensorOptions::dtype (8 samples, 0.19%)</title><rect x="1156.9" y="325" width="2.2" height="15.0" fill="rgb(239,170,37)" rx="2" ry="2" />
<text  x="1159.92" y="335.5" ></text>
</g>
<g >
<title>c10::Device::Device (10 samples, 0.24%)</title><rect x="407.5" y="373" width="2.8" height="15.0" fill="rgb(252,48,50)" rx="2" ry="2" />
<text  x="410.50" y="383.5" ></text>
</g>
<g >
<title>c10::detail::_str_wrapper&lt;char const*, char const* const&amp;, char const*, unsigned int const&amp;&gt;::call[abi:cxx11] (1 samples, 0.02%)</title><rect x="153.7" y="373" width="0.3" height="15.0" fill="rgb(215,204,36)" rx="2" ry="2" />
<text  x="156.71" y="383.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (1 samples, 0.02%)</title><rect x="1007.4" y="357" width="0.2" height="15.0" fill="rgb(246,63,11)" rx="2" ry="2" />
<text  x="1010.37" y="367.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::intrusive_ptr (3 samples, 0.07%)</title><rect x="939.8" y="341" width="0.9" height="15.0" fill="rgb(249,20,11)" rx="2" ry="2" />
<text  x="942.82" y="351.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::expect (1 samples, 0.02%)</title><rect x="223.2" y="373" width="0.3" height="15.0" fill="rgb(251,170,32)" rx="2" ry="2" />
<text  x="226.21" y="383.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="148.7" y="389" width="0.3" height="15.0" fill="rgb(215,196,42)" rx="2" ry="2" />
<text  x="151.71" y="399.5" ></text>
</g>
<g >
<title>std::swap&lt;torch::autograd::Node*&gt; (3 samples, 0.07%)</title><rect x="462.0" y="325" width="0.8" height="15.0" fill="rgb(253,131,25)" rx="2" ry="2" />
<text  x="464.99" y="335.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (1 samples, 0.02%)</title><rect x="181.5" y="373" width="0.3" height="15.0" fill="rgb(207,36,38)" rx="2" ry="2" />
<text  x="184.51" y="383.5" ></text>
</g>
<g >
<title>c10::TensorOptions::set_device (8 samples, 0.19%)</title><rect x="602.6" y="389" width="2.3" height="15.0" fill="rgb(221,218,48)" rx="2" ry="2" />
<text  x="605.64" y="399.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1132.7" y="165" width="0.3" height="15.0" fill="rgb(252,204,30)" rx="2" ry="2" />
<text  x="1135.74" y="175.5" ></text>
</g>
<g >
<title>std::addressof&lt;caffe2::TypeMeta&gt; (1 samples, 0.02%)</title><rect x="893.4" y="373" width="0.3" height="15.0" fill="rgb(248,12,14)" rx="2" ry="2" />
<text  x="896.40" y="383.5" ></text>
</g>
<g >
<title>torch::(anonymous namespace)::debugString (1 samples, 0.02%)</title><rect x="174.3" y="389" width="0.3" height="15.0" fill="rgb(248,177,4)" rx="2" ry="2" />
<text  x="177.28" y="399.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (1 samples, 0.02%)</title><rect x="187.1" y="437" width="0.2" height="15.0" fill="rgb(207,150,14)" rx="2" ry="2" />
<text  x="190.07" y="447.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (5 samples, 0.12%)</title><rect x="135.4" y="389" width="1.4" height="15.0" fill="rgb(205,101,16)" rx="2" ry="2" />
<text  x="138.37" y="399.5" ></text>
</g>
<g >
<title>c10::RegisterOperators::checkSchemaAndRegisterOp_ (1 samples, 0.02%)</title><rect x="190.4" y="421" width="0.3" height="15.0" fill="rgb(211,138,18)" rx="2" ry="2" />
<text  x="193.41" y="431.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor  (1 samples, 0.02%)</title><rect x="177.9" y="421" width="0.3" height="15.0" fill="rgb(247,55,20)" rx="2" ry="2" />
<text  x="180.90" y="431.5" ></text>
</g>
<g >
<title>c10::TensorOptions::requires_grad (3 samples, 0.07%)</title><rect x="41.4" y="485" width="0.8" height="15.0" fill="rgb(216,172,16)" rx="2" ry="2" />
<text  x="44.41" y="495.5" ></text>
</g>
<g >
<title>putname (1 samples, 0.02%)</title><rect x="125.1" y="277" width="0.3" height="15.0" fill="rgb(242,152,9)" rx="2" ry="2" />
<text  x="128.08" y="287.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.02%)</title><rect x="1179.4" y="229" width="0.3" height="15.0" fill="rgb(238,93,10)" rx="2" ry="2" />
<text  x="1182.44" y="239.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.05%)</title><rect x="160.4" y="293" width="0.5" height="15.0" fill="rgb(216,218,22)" rx="2" ry="2" />
<text  x="163.38" y="303.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.02%)</title><rect x="181.2" y="309" width="0.3" height="15.0" fill="rgb(227,151,30)" rx="2" ry="2" />
<text  x="184.23" y="319.5" ></text>
</g>
<g >
<title>at::RecordFunction::end (1 samples, 0.02%)</title><rect x="1037.4" y="341" width="0.3" height="15.0" fill="rgb(216,192,52)" rx="2" ry="2" />
<text  x="1040.39" y="351.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::MemoryFormat&gt;::optional (5 samples, 0.12%)</title><rect x="897.8" y="421" width="1.4" height="15.0" fill="rgb(216,71,37)" rx="2" ry="2" />
<text  x="900.85" y="431.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::operator* (5 samples, 0.12%)</title><rect x="284.6" y="389" width="1.4" height="15.0" fill="rgb(236,220,52)" rx="2" ry="2" />
<text  x="287.64" y="399.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::VariableVersion::VersionCounter, c10::detail::intrusive_target_default_null_type&lt;c10::VariableVersion::VersionCounter&gt; &gt;::use_count (2 samples, 0.05%)</title><rect x="440.0" y="373" width="0.6" height="15.0" fill="rgb(229,210,48)" rx="2" ry="2" />
<text  x="443.03" y="383.5" ></text>
</g>
<g >
<title>c10::GetCPUAllocator (1 samples, 0.02%)</title><rect x="771.9" y="261" width="0.3" height="15.0" fill="rgb(228,226,11)" rx="2" ry="2" />
<text  x="774.93" y="271.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (1 samples, 0.02%)</title><rect x="248.8" y="309" width="0.3" height="15.0" fill="rgb(207,110,37)" rx="2" ry="2" />
<text  x="251.78" y="319.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="145.9" y="341" width="0.3" height="15.0" fill="rgb(207,195,50)" rx="2" ry="2" />
<text  x="148.93" y="351.5" ></text>
</g>
<g >
<title>torch::(anonymous namespace)::debugString (1 samples, 0.02%)</title><rect x="156.5" y="405" width="0.3" height="15.0" fill="rgb(215,83,33)" rx="2" ry="2" />
<text  x="159.49" y="415.5" ></text>
</g>
<g >
<title>at::RecordFunction::~RecordFunction (2 samples, 0.05%)</title><rect x="704.7" y="309" width="0.5" height="15.0" fill="rgb(207,122,21)" rx="2" ry="2" />
<text  x="707.66" y="319.5" ></text>
</g>
<g >
<title>__memcg_kmem_charge (1 samples, 0.02%)</title><rect x="1179.4" y="197" width="0.3" height="15.0" fill="rgb(226,113,42)" rx="2" ry="2" />
<text  x="1182.44" y="207.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="253.8" y="373" width="0.3" height="15.0" fill="rgb(205,0,5)" rx="2" ry="2" />
<text  x="256.78" y="383.5" ></text>
</g>
<g >
<title>caffe2::_c10_ops::schema_HeatmapMaxKeypoint (1 samples, 0.02%)</title><rect x="195.1" y="437" width="0.3" height="15.0" fill="rgb(227,85,16)" rx="2" ry="2" />
<text  x="198.13" y="447.5" ></text>
</g>
<g >
<title>c10::TensorOptions::device&lt;c10::DeviceType const&amp;, int&gt; (22 samples, 0.52%)</title><rect x="273.5" y="437" width="6.1" height="15.0" fill="rgb(222,208,6)" rx="2" ry="2" />
<text  x="276.52" y="447.5" ></text>
</g>
<g >
<title>c10::demangle_type&lt;caffe2::TopKCudaOp&lt;float, caffe2::CUDAContext&gt; &gt; (1 samples, 0.02%)</title><rect x="188.7" y="437" width="0.3" height="15.0" fill="rgb(212,76,41)" rx="2" ry="2" />
<text  x="191.74" y="447.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="174.3" y="325" width="0.3" height="15.0" fill="rgb(252,121,25)" rx="2" ry="2" />
<text  x="177.28" y="335.5" ></text>
</g>
<g >
<title>std::end&lt;long&gt; (1 samples, 0.02%)</title><rect x="635.2" y="421" width="0.2" height="15.0" fill="rgb(243,170,46)" rx="2" ry="2" />
<text  x="638.16" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect x="176.8" y="357" width="0.3" height="15.0" fill="rgb(229,214,31)" rx="2" ry="2" />
<text  x="179.78" y="367.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::intrusive_ptr (1 samples, 0.02%)</title><rect x="438.6" y="389" width="0.3" height="15.0" fill="rgb(242,167,29)" rx="2" ry="2" />
<text  x="441.64" y="399.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="133.4" y="117" width="0.3" height="15.0" fill="rgb(212,25,33)" rx="2" ry="2" />
<text  x="136.42" y="127.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;torch::autograd::Node,  (4 samples, 0.09%)</title><rect x="834.2" y="309" width="1.1" height="15.0" fill="rgb(242,99,16)" rx="2" ry="2" />
<text  x="837.19" y="319.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (2 samples, 0.05%)</title><rect x="133.1" y="373" width="0.6" height="15.0" fill="rgb(208,47,12)" rx="2" ry="2" />
<text  x="136.14" y="383.5" ></text>
</g>
<g >
<title>[ld-2.31.so] (93 samples, 2.19%)</title><rect x="104.8" y="437" width="25.8" height="15.0" fill="rgb(213,108,50)" rx="2" ry="2" />
<text  x="107.79" y="447.5" >[..</text>
</g>
<g >
<title>operator new (2 samples, 0.05%)</title><rect x="539.3" y="229" width="0.5" height="15.0" fill="rgb(249,84,52)" rx="2" ry="2" />
<text  x="542.26" y="239.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;torch::autograd::Node,  (1 samples, 0.02%)</title><rect x="991.5" y="341" width="0.3" height="15.0" fill="rgb(205,69,13)" rx="2" ry="2" />
<text  x="994.53" y="351.5" ></text>
</g>
<g >
<title>c10::typeMetaToScalarType (11 samples, 0.26%)</title><rect x="1166.4" y="373" width="3.0" height="15.0" fill="rgb(238,39,6)" rx="2" ry="2" />
<text  x="1169.37" y="383.5" ></text>
</g>
<g >
<title>c10::Dispatcher::singleton (2 samples, 0.05%)</title><rect x="34.2" y="485" width="0.5" height="15.0" fill="rgb(243,132,50)" rx="2" ry="2" />
<text  x="37.18" y="495.5" ></text>
</g>
<g >
<title>c10::ProfiledCPUMemoryReporter::New (2 samples, 0.05%)</title><rect x="35.3" y="485" width="0.6" height="15.0" fill="rgb(210,3,26)" rx="2" ry="2" />
<text  x="38.30" y="495.5" ></text>
</g>
<g >
<title>c10::constexpr_forward&lt;c10::DeviceType const&amp;&gt; (1 samples, 0.02%)</title><rect x="863.7" y="389" width="0.2" height="15.0" fill="rgb(246,125,45)" rx="2" ry="2" />
<text  x="866.66" y="399.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="256.6" y="309" width="0.2" height="15.0" fill="rgb(236,175,51)" rx="2" ry="2" />
<text  x="259.56" y="319.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="180.1" y="341" width="0.3" height="15.0" fill="rgb(217,165,10)" rx="2" ry="2" />
<text  x="183.12" y="351.5" ></text>
</g>
<g >
<title>c10::TensorOptions::set_device (9 samples, 0.21%)</title><rect x="855.0" y="389" width="2.5" height="15.0" fill="rgb(237,52,24)" rx="2" ry="2" />
<text  x="858.04" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt; &gt;::_M_erase (3 samples, 0.07%)</title><rect x="254.6" y="357" width="0.9" height="15.0" fill="rgb(218,66,48)" rx="2" ry="2" />
<text  x="257.62" y="367.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::optional&lt;caffe2::TypeMeta, false&gt; (1 samples, 0.02%)</title><rect x="426.1" y="421" width="0.3" height="15.0" fill="rgb(231,8,35)" rx="2" ry="2" />
<text  x="429.13" y="431.5" ></text>
</g>
<g >
<title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;, c10::DispatchKey, std::hash&lt;c10::DispatchKey&gt;, ska::detailv3::KeyOrValueHasher&lt;c10::DispatchKey, std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;, std::hash&lt;c10::DispatchKey&gt; &gt;, std::equal_to&lt;c10::DispatchKey&gt;, ska::detailv3::KeyOrValueEquality&lt;c10::DispatchKey, std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;, std::equal_to&lt;c10::DispatchKey&gt; &gt;, std::allocator&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt; &gt; &gt; &gt;::emplace_new_key&lt;std::pair&lt;c10::DispatchKey, std::__cxx11::list&lt;c10::impl::AnnotatedKernel, std::allocator&lt;c10::impl::AnnotatedKernel&gt; &gt; &gt;&gt; (1 samples, 0.02%)</title><rect x="147.3" y="341" width="0.3" height="15.0" fill="rgb(230,100,8)" rx="2" ry="2" />
<text  x="150.32" y="351.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="160.1" y="341" width="0.3" height="15.0" fill="rgb(218,221,44)" rx="2" ry="2" />
<text  x="163.11" y="351.5" ></text>
</g>
<g >
<title>c10::demangle[abi:cxx11] (1 samples, 0.02%)</title><rect x="188.7" y="421" width="0.3" height="15.0" fill="rgb(251,169,35)" rx="2" ry="2" />
<text  x="191.74" y="431.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.02%)</title><rect x="187.3" y="437" width="0.3" height="15.0" fill="rgb(222,219,0)" rx="2" ry="2" />
<text  x="190.35" y="447.5" ></text>
</g>
<g >
<title>c10::Dispatcher::addRegistrationListener (2 samples, 0.05%)</title><rect x="202.9" y="437" width="0.6" height="15.0" fill="rgb(246,13,37)" rx="2" ry="2" />
<text  x="205.91" y="447.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.05%)</title><rect x="125.6" y="277" width="0.6" height="15.0" fill="rgb(229,127,25)" rx="2" ry="2" />
<text  x="128.64" y="287.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.02%)</title><rect x="142.0" y="261" width="0.3" height="15.0" fill="rgb(233,116,17)" rx="2" ry="2" />
<text  x="145.04" y="271.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (7 samples, 0.16%)</title><rect x="219.6" y="437" width="1.9" height="15.0" fill="rgb(224,4,39)" rx="2" ry="2" />
<text  x="222.59" y="447.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="132.0" y="309" width="0.3" height="15.0" fill="rgb(216,95,37)" rx="2" ry="2" />
<text  x="135.03" y="319.5" ></text>
</g>
<g >
<title>c10::ObservedOperators::isObserved (1 samples, 0.02%)</title><rect x="158.2" y="341" width="0.2" height="15.0" fill="rgb(238,61,10)" rx="2" ry="2" />
<text  x="161.16" y="351.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::(anonymous namespace)::createArgumentVector (1 samples, 0.02%)</title><rect x="153.2" y="373" width="0.2" height="15.0" fill="rgb(236,77,53)" rx="2" ry="2" />
<text  x="156.16" y="383.5" ></text>
</g>
<g >
<title>_start (3,325 samples, 78.33%)</title><rect x="251.8" y="501" width="924.3" height="15.0" fill="rgb(222,204,37)" rx="2" ry="2" />
<text  x="254.84" y="511.5" >_start</text>
</g>
<g >
<title>c10::impl::wrap_kernel_functor_unboxed_&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (4 samples, 0.09%)</title><rect x="59.5" y="485" width="1.1" height="15.0" fill="rgb(233,53,51)" rx="2" ry="2" />
<text  x="62.48" y="495.5" ></text>
</g>
<g >
<title>c10::ProfiledCPUMemoryReporter::Delete (8 samples, 0.19%)</title><rect x="381.9" y="357" width="2.3" height="15.0" fill="rgb(242,180,21)" rx="2" ry="2" />
<text  x="384.93" y="367.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.02%)</title><rect x="125.4" y="245" width="0.2" height="15.0" fill="rgb(241,225,5)" rx="2" ry="2" />
<text  x="128.36" y="255.5" ></text>
</g>
<g >
<title>c10::Device::validate (2 samples, 0.05%)</title><rect x="357.7" y="277" width="0.6" height="15.0" fill="rgb(227,2,16)" rx="2" ry="2" />
<text  x="360.75" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;, std::allocator&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt; &gt;::vector (6 samples, 0.14%)</title><rect x="463.4" y="373" width="1.6" height="15.0" fill="rgb(219,125,24)" rx="2" ry="2" />
<text  x="466.38" y="383.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="183.2" y="357" width="0.3" height="15.0" fill="rgb(210,153,49)" rx="2" ry="2" />
<text  x="186.18" y="367.5" ></text>
</g>
<g >
<title>std::tuple&lt;torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::tuple&lt;torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt;, true&gt; (1 samples, 0.02%)</title><rect x="935.9" y="341" width="0.3" height="15.0" fill="rgb(238,19,23)" rx="2" ry="2" />
<text  x="938.93" y="351.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, torch::autograd::AutogradMeta*, false&gt;::_M_head (3 samples, 0.07%)</title><rect x="1011.5" y="277" width="0.9" height="15.0" fill="rgb(246,194,29)" rx="2" ry="2" />
<text  x="1014.54" y="287.5" ></text>
</g>
<g >
<title>c10::ThreadLocalDebugInfo::get (8 samples, 0.19%)</title><rect x="232.7" y="485" width="2.2" height="15.0" fill="rgb(231,174,27)" rx="2" ry="2" />
<text  x="235.66" y="495.5" ></text>
</g>
<g >
<title>std::ios_base::ios_base (1 samples, 0.02%)</title><rect x="174.0" y="389" width="0.3" height="15.0" fill="rgb(221,58,17)" rx="2" ry="2" />
<text  x="177.00" y="399.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (1 samples, 0.02%)</title><rect x="149.3" y="405" width="0.2" height="15.0" fill="rgb(210,114,42)" rx="2" ry="2" />
<text  x="152.27" y="415.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.02%)</title><rect x="151.2" y="341" width="0.3" height="15.0" fill="rgb(229,60,35)" rx="2" ry="2" />
<text  x="154.21" y="351.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::ScalarType&gt;::contained_val (1 samples, 0.02%)</title><rect x="968.7" y="309" width="0.3" height="15.0" fill="rgb(237,227,34)" rx="2" ry="2" />
<text  x="971.73" y="319.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.02%)</title><rect x="152.3" y="101" width="0.3" height="15.0" fill="rgb(247,111,16)" rx="2" ry="2" />
<text  x="155.32" y="111.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;torch::autograd::AutogradMeta, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="15.6" y="485" width="0.2" height="15.0" fill="rgb(233,19,6)" rx="2" ry="2" />
<text  x="18.56" y="495.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (8 samples, 0.19%)</title><rect x="904.2" y="373" width="2.3" height="15.0" fill="rgb(254,50,31)" rx="2" ry="2" />
<text  x="907.24" y="383.5" ></text>
</g>
<g >
<title>operator new (11 samples, 0.26%)</title><rect x="1146.4" y="261" width="3.0" height="15.0" fill="rgb(221,35,36)" rx="2" ry="2" />
<text  x="1149.36" y="271.5" ></text>
</g>
<g >
<title>torch::Library::_impl (2 samples, 0.05%)</title><rect x="150.9" y="421" width="0.6" height="15.0" fill="rgb(223,116,1)" rx="2" ry="2" />
<text  x="153.93" y="431.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (4 samples, 0.09%)</title><rect x="949.6" y="309" width="1.1" height="15.0" fill="rgb(249,216,14)" rx="2" ry="2" />
<text  x="952.55" y="319.5" ></text>
</g>
<g >
<title>at::hasCallbacks (2 samples, 0.05%)</title><rect x="513.4" y="309" width="0.6" height="15.0" fill="rgb(253,229,42)" rx="2" ry="2" />
<text  x="516.41" y="319.5" ></text>
</g>
<g >
<title>c10::constexpr_forward&lt;int&gt; (1 samples, 0.02%)</title><rect x="277.4" y="389" width="0.3" height="15.0" fill="rgb(250,185,14)" rx="2" ry="2" />
<text  x="280.41" y="399.5" ></text>
</g>
<g >
<title>at::is_custom_op (1 samples, 0.02%)</title><rect x="202.9" y="405" width="0.3" height="15.0" fill="rgb(211,115,22)" rx="2" ry="2" />
<text  x="205.91" y="415.5" ></text>
</g>
<g >
<title>call_rcu (1 samples, 0.02%)</title><rect x="1183.1" y="373" width="0.2" height="15.0" fill="rgb(221,4,52)" rx="2" ry="2" />
<text  x="1186.05" y="383.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, torch::CppFunction&gt; (10 samples, 0.24%)</title><rect x="139.0" y="421" width="2.8" height="15.0" fill="rgb(222,10,51)" rx="2" ry="2" />
<text  x="141.98" y="431.5" ></text>
</g>
<g >
<title>c10::constexpr_storage_t&lt;c10::Device&gt;::constexpr_storage_t&lt;c10::DeviceType const&amp;, int&gt; (7 samples, 0.16%)</title><rect x="277.7" y="389" width="1.9" height="15.0" fill="rgb(248,16,28)" rx="2" ry="2" />
<text  x="280.69" y="399.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.02%)</title><rect x="142.0" y="245" width="0.3" height="15.0" fill="rgb(233,123,12)" rx="2" ry="2" />
<text  x="145.04" y="255.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::expect (1 samples, 0.02%)</title><rect x="176.0" y="373" width="0.2" height="15.0" fill="rgb(248,184,37)" rx="2" ry="2" />
<text  x="178.95" y="383.5" ></text>
</g>
<g >
<title>c10::TensorOptions::requires_grad (8 samples, 0.19%)</title><rect x="372.2" y="405" width="2.2" height="15.0" fill="rgb(221,63,23)" rx="2" ry="2" />
<text  x="375.20" y="415.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (5 samples, 0.12%)</title><rect x="1016.5" y="357" width="1.4" height="15.0" fill="rgb(236,22,25)" rx="2" ry="2" />
<text  x="1019.54" y="367.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (30 samples, 0.71%)</title><rect x="349.4" y="213" width="8.3" height="15.0" fill="rgb(240,104,35)" rx="2" ry="2" />
<text  x="352.41" y="223.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.02%)</title><rect x="158.4" y="341" width="0.3" height="15.0" fill="rgb(222,164,10)" rx="2" ry="2" />
<text  x="161.44" y="351.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (1 samples, 0.02%)</title><rect x="174.3" y="357" width="0.3" height="15.0" fill="rgb(248,50,37)" rx="2" ry="2" />
<text  x="177.28" y="367.5" ></text>
</g>
<g >
<title>onnx_torch::RegisterOpSetSchema&lt;onnx_torch::OpSet_PyTorch_ver1&gt; (1 samples, 0.02%)</title><rect x="187.6" y="437" width="0.3" height="15.0" fill="rgb(215,214,51)" rx="2" ry="2" />
<text  x="190.63" y="447.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="143.7" y="293" width="0.3" height="15.0" fill="rgb(242,179,36)" rx="2" ry="2" />
<text  x="146.71" y="303.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::Registerer::op (2 samples, 0.05%)</title><rect x="248.8" y="485" width="0.5" height="15.0" fill="rgb(209,116,47)" rx="2" ry="2" />
<text  x="251.78" y="495.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;torch::autograd::AutogradMeta, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::__uniq_ptr_impl (9 samples, 0.21%)</title><rect x="933.7" y="357" width="2.5" height="15.0" fill="rgb(233,173,1)" rx="2" ry="2" />
<text  x="936.71" y="367.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="190.7" y="325" width="0.3" height="15.0" fill="rgb(220,55,40)" rx="2" ry="2" />
<text  x="193.68" y="335.5" ></text>
</g>
<g >
<title>torch::jit::parseName (1 samples, 0.02%)</title><rect x="181.8" y="373" width="0.3" height="15.0" fill="rgb(254,139,9)" rx="2" ry="2" />
<text  x="184.79" y="383.5" ></text>
</g>
<g >
<title>__x64_sys_execve (11 samples, 0.26%)</title><rect x="1186.9" y="469" width="3.1" height="15.0" fill="rgb(207,175,22)" rx="2" ry="2" />
<text  x="1189.94" y="479.5" ></text>
</g>
<g >
<title>at::Tensor::~Tensor (26 samples, 0.61%)</title><rect x="264.3" y="437" width="7.3" height="15.0" fill="rgb(242,130,21)" rx="2" ry="2" />
<text  x="267.35" y="447.5" ></text>
</g>
<g >
<title>c10::Dispatcher::findOrRegisterName_ (3 samples, 0.07%)</title><rect x="157.9" y="373" width="0.8" height="15.0" fill="rgb(206,153,26)" rx="2" ry="2" />
<text  x="160.88" y="383.5" ></text>
</g>
<g >
<title>__libc_malloc (2 samples, 0.05%)</title><rect x="193.2" y="389" width="0.5" height="15.0" fill="rgb(206,24,2)" rx="2" ry="2" />
<text  x="196.18" y="399.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="192.1" y="341" width="0.3" height="15.0" fill="rgb(220,224,50)" rx="2" ry="2" />
<text  x="195.07" y="351.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="135.9" y="245" width="0.3" height="15.0" fill="rgb(250,68,20)" rx="2" ry="2" />
<text  x="138.92" y="255.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;bool  (1 samples, 0.02%)</title><rect x="153.7" y="421" width="0.3" height="15.0" fill="rgb(238,18,24)" rx="2" ry="2" />
<text  x="156.71" y="431.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="245.2" y="485" width="0.2" height="15.0" fill="rgb(213,135,14)" rx="2" ry="2" />
<text  x="248.17" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;torch::autograd::AutogradMeta, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::release (17 samples, 0.40%)</title><rect x="1007.6" y="373" width="4.8" height="15.0" fill="rgb(207,197,0)" rx="2" ry="2" />
<text  x="1010.65" y="383.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.02%)</title><rect x="202.6" y="293" width="0.3" height="15.0" fill="rgb(206,31,36)" rx="2" ry="2" />
<text  x="205.64" y="303.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.02%)</title><rect x="176.2" y="341" width="0.3" height="15.0" fill="rgb(235,213,28)" rx="2" ry="2" />
<text  x="179.23" y="351.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (2 samples, 0.05%)</title><rect x="591.5" y="341" width="0.6" height="15.0" fill="rgb(228,217,44)" rx="2" ry="2" />
<text  x="594.52" y="351.5" ></text>
</g>
<g >
<title>__cxa_demangle (1 samples, 0.02%)</title><rect x="217.6" y="485" width="0.3" height="15.0" fill="rgb(238,165,8)" rx="2" ry="2" />
<text  x="220.65" y="495.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::contained_val (1 samples, 0.02%)</title><rect x="276.9" y="373" width="0.2" height="15.0" fill="rgb(241,147,38)" rx="2" ry="2" />
<text  x="279.86" y="383.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.05%)</title><rect x="191.8" y="405" width="0.6" height="15.0" fill="rgb(251,175,52)" rx="2" ry="2" />
<text  x="194.80" y="415.5" ></text>
</g>
<g >
<title>c10::dtype (34 samples, 0.80%)</title><rect x="279.6" y="437" width="9.5" height="15.0" fill="rgb(245,195,37)" rx="2" ry="2" />
<text  x="282.63" y="447.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::initialized (5 samples, 0.12%)</title><rect x="875.3" y="389" width="1.4" height="15.0" fill="rgb(219,117,35)" rx="2" ry="2" />
<text  x="878.33" y="399.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::operator* (5 samples, 0.12%)</title><rect x="856.2" y="373" width="1.3" height="15.0" fill="rgb(238,48,26)" rx="2" ry="2" />
<text  x="859.15" y="383.5" ></text>
</g>
<g >
<title>alloc_pages_vma (3 samples, 0.07%)</title><rect x="129.5" y="293" width="0.9" height="15.0" fill="rgb(238,13,23)" rx="2" ry="2" />
<text  x="132.53" y="303.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.02%)</title><rect x="176.0" y="341" width="0.2" height="15.0" fill="rgb(215,186,29)" rx="2" ry="2" />
<text  x="178.95" y="351.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="125.4" y="341" width="0.2" height="15.0" fill="rgb(241,199,41)" rx="2" ry="2" />
<text  x="128.36" y="351.5" ></text>
</g>
<g >
<title>std::forward&lt;std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (2 samples, 0.05%)</title><rect x="1004.6" y="293" width="0.5" height="15.0" fill="rgb(206,209,37)" rx="2" ry="2" />
<text  x="1007.59" y="303.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="125.4" y="261" width="0.2" height="15.0" fill="rgb(237,14,15)" rx="2" ry="2" />
<text  x="128.36" y="271.5" ></text>
</g>
<g >
<title>c10::impl::(anonymous namespace)::checkSchema (1 samples, 0.02%)</title><rect x="173.2" y="357" width="0.2" height="15.0" fill="rgb(254,136,45)" rx="2" ry="2" />
<text  x="176.17" y="367.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseType (4 samples, 0.09%)</title><rect x="249.9" y="437" width="1.1" height="15.0" fill="rgb(233,85,36)" rx="2" ry="2" />
<text  x="252.89" y="447.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.09%)</title><rect x="785.3" y="261" width="1.1" height="15.0" fill="rgb(250,25,16)" rx="2" ry="2" />
<text  x="788.27" y="271.5" ></text>
</g>
<g >
<title>seq_read (1 samples, 0.02%)</title><rect x="146.5" y="181" width="0.3" height="15.0" fill="rgb(218,201,45)" rx="2" ry="2" />
<text  x="149.49" y="191.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::nextIf (1 samples, 0.02%)</title><rect x="249.3" y="485" width="0.3" height="15.0" fill="rgb(220,24,31)" rx="2" ry="2" />
<text  x="252.34" y="495.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.02%)</title><rect x="588.7" y="325" width="0.3" height="15.0" fill="rgb(254,195,27)" rx="2" ry="2" />
<text  x="591.74" y="335.5" ></text>
</g>
<g >
<title>c10::TensorType::operator== (2 samples, 0.05%)</title><rect x="139.8" y="325" width="0.6" height="15.0" fill="rgb(241,17,46)" rx="2" ry="2" />
<text  x="142.81" y="335.5" ></text>
</g>
<g >
<title>do_user_addr_fault (14 samples, 0.33%)</title><rect x="126.5" y="373" width="3.9" height="15.0" fill="rgb(216,157,29)" rx="2" ry="2" />
<text  x="129.47" y="383.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;c10::Type,  (1 samples, 0.02%)</title><rect x="165.4" y="341" width="0.3" height="15.0" fill="rgb(223,190,35)" rx="2" ry="2" />
<text  x="168.39" y="351.5" ></text>
</g>
<g >
<title>c10::VariableVersion::unique (2 samples, 0.05%)</title><rect x="440.0" y="389" width="0.6" height="15.0" fill="rgb(241,175,21)" rx="2" ry="2" />
<text  x="443.03" y="399.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (1 samples, 0.02%)</title><rect x="151.8" y="389" width="0.2" height="15.0" fill="rgb(205,14,39)" rx="2" ry="2" />
<text  x="154.77" y="399.5" ></text>
</g>
<g >
<title>c10::constexpr_storage_t&lt;c10::Device&gt;::constexpr_storage_t&lt;c10::DeviceType const&amp;, int&gt; (19 samples, 0.45%)</title><rect x="610.4" y="373" width="5.3" height="15.0" fill="rgb(254,14,43)" rx="2" ry="2" />
<text  x="613.42" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="146.5" y="277" width="0.3" height="15.0" fill="rgb(236,200,1)" rx="2" ry="2" />
<text  x="149.49" y="287.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.02%)</title><rect x="190.7" y="197" width="0.3" height="15.0" fill="rgb(215,12,5)" rx="2" ry="2" />
<text  x="193.68" y="207.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;torch::autograd::AutogradMeta, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::get_deleter (5 samples, 0.12%)</title><rect x="1006.3" y="373" width="1.3" height="15.0" fill="rgb(229,69,43)" rx="2" ry="2" />
<text  x="1009.26" y="383.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.02%)</title><rect x="154.5" y="389" width="0.3" height="15.0" fill="rgb(252,55,46)" rx="2" ry="2" />
<text  x="157.55" y="399.5" ></text>
</g>
<g >
<title>c10::constexpr_forward&lt;c10::ScalarType&gt; (4 samples, 0.09%)</title><rect x="978.7" y="261" width="1.2" height="15.0" fill="rgb(252,89,33)" rx="2" ry="2" />
<text  x="981.74" y="271.5" ></text>
</g>
<g >
<title>[ld-2.31.so] (17 samples, 0.40%)</title><rect x="117.3" y="405" width="4.7" height="15.0" fill="rgb(224,203,10)" rx="2" ry="2" />
<text  x="120.30" y="415.5" ></text>
</g>
<g >
<title>std::forward&lt;c10::AutogradMetaInterface*&amp;&gt; (1 samples, 0.02%)</title><rect x="482.8" y="341" width="0.3" height="15.0" fill="rgb(225,30,9)" rx="2" ry="2" />
<text  x="485.83" y="351.5" ></text>
</g>
<g >
<title>read_hpet (1 samples, 0.02%)</title><rect x="1132.7" y="37" width="0.3" height="15.0" fill="rgb(229,201,26)" rx="2" ry="2" />
<text  x="1135.74" y="47.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="174.3" y="309" width="0.3" height="15.0" fill="rgb(238,106,10)" rx="2" ry="2" />
<text  x="177.28" y="319.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTable_ (1 samples, 0.02%)</title><rect x="173.4" y="341" width="0.3" height="15.0" fill="rgb(220,114,41)" rx="2" ry="2" />
<text  x="176.45" y="351.5" ></text>
</g>
<g >
<title>__do_munmap (1 samples, 0.02%)</title><rect x="124.0" y="229" width="0.2" height="15.0" fill="rgb(235,146,34)" rx="2" ry="2" />
<text  x="126.97" y="239.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.02%)</title><rect x="172.3" y="357" width="0.3" height="15.0" fill="rgb(207,38,54)" rx="2" ry="2" />
<text  x="175.34" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;torch::autograd::AutogradMeta, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::release (9 samples, 0.21%)</title><rect x="485.1" y="389" width="2.5" height="15.0" fill="rgb(235,71,36)" rx="2" ry="2" />
<text  x="488.06" y="399.5" ></text>
</g>
<g >
<title>caffe2::_c10_ops::schema_ResizeNearest3D (1 samples, 0.02%)</title><rect x="195.4" y="437" width="0.3" height="15.0" fill="rgb(220,37,51)" rx="2" ry="2" />
<text  x="198.41" y="447.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::optional (11 samples, 0.26%)</title><rect x="413.1" y="421" width="3.0" height="15.0" fill="rgb(239,171,34)" rx="2" ry="2" />
<text  x="416.06" y="431.5" ></text>
</g>
<g >
<title>torch::Library::impl_UNBOXED&lt;char const*, std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;&gt;  (1 samples, 0.02%)</title><rect x="181.8" y="421" width="0.3" height="15.0" fill="rgb(226,73,23)" rx="2" ry="2" />
<text  x="184.79" y="431.5" ></text>
</g>
<g >
<title>c10::TensorOptions::requires_grad (19 samples, 0.45%)</title><rect x="800.6" y="389" width="5.2" height="15.0" fill="rgb(253,138,53)" rx="2" ry="2" />
<text  x="803.56" y="399.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="487.3" y="309" width="0.3" height="15.0" fill="rgb(207,133,17)" rx="2" ry="2" />
<text  x="490.28" y="319.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="142.0" y="293" width="0.3" height="15.0" fill="rgb(209,113,4)" rx="2" ry="2" />
<text  x="145.04" y="303.5" ></text>
</g>
<g >
<title>clocksource_watchdog (1 samples, 0.02%)</title><rect x="1132.7" y="53" width="0.3" height="15.0" fill="rgb(226,197,4)" rx="2" ry="2" />
<text  x="1135.74" y="63.5" ></text>
</g>
<g >
<title>torch::Library::_def (1 samples, 0.02%)</title><rect x="156.5" y="421" width="0.3" height="15.0" fill="rgb(216,156,39)" rx="2" ry="2" />
<text  x="159.49" y="431.5" ></text>
</g>
<g >
<title>torch::Library::impl_UNBOXED&lt;char const*, at::Tensor&amp;  (2 samples, 0.05%)</title><rect x="155.4" y="421" width="0.5" height="15.0" fill="rgb(219,109,17)" rx="2" ry="2" />
<text  x="158.38" y="431.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="184.8" y="373" width="0.3" height="15.0" fill="rgb(221,31,35)" rx="2" ry="2" />
<text  x="187.85" y="383.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::contained_val (1 samples, 0.02%)</title><rect x="285.2" y="373" width="0.3" height="15.0" fill="rgb(253,208,29)" rx="2" ry="2" />
<text  x="288.19" y="383.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;torch::autograd::Node&gt;::~shared_ptr (6 samples, 0.14%)</title><rect x="994.3" y="357" width="1.7" height="15.0" fill="rgb(234,50,41)" rx="2" ry="2" />
<text  x="997.31" y="367.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="143.4" y="229" width="0.3" height="15.0" fill="rgb(245,31,54)" rx="2" ry="2" />
<text  x="146.43" y="239.5" ></text>
</g>
<g >
<title>[ld-2.31.so] (355 samples, 8.36%)</title><rect x="104.8" y="485" width="98.7" height="15.0" fill="rgb(243,16,7)" rx="2" ry="2" />
<text  x="107.79" y="495.5" >[ld-2.31.so]</text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;torch::autograd::AutogradMeta&gt;&gt; (2 samples, 0.05%)</title><rect x="484.5" y="341" width="0.6" height="15.0" fill="rgb(211,227,40)" rx="2" ry="2" />
<text  x="487.50" y="351.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;torch::autograd::Node,  (2 samples, 0.05%)</title><rect x="478.9" y="341" width="0.6" height="15.0" fill="rgb(218,132,26)" rx="2" ry="2" />
<text  x="481.94" y="351.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.02%)</title><rect x="234.9" y="389" width="0.3" height="15.0" fill="rgb(244,68,18)" rx="2" ry="2" />
<text  x="237.88" y="399.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::optional (16 samples, 0.38%)</title><rect x="857.8" y="389" width="4.5" height="15.0" fill="rgb(228,179,9)" rx="2" ry="2" />
<text  x="860.82" y="399.5" ></text>
</g>
<g >
<title>c10::TensorOptions::dtype (3 samples, 0.07%)</title><rect x="231.8" y="485" width="0.9" height="15.0" fill="rgb(212,135,1)" rx="2" ry="2" />
<text  x="234.82" y="495.5" ></text>
</g>
<g >
<title>c10::InternedStrings::_symbol (1 samples, 0.02%)</title><rect x="189.3" y="421" width="0.3" height="15.0" fill="rgb(241,174,17)" rx="2" ry="2" />
<text  x="192.29" y="431.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.02%)</title><rect x="181.2" y="421" width="0.3" height="15.0" fill="rgb(230,122,11)" rx="2" ry="2" />
<text  x="184.23" y="431.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::optional (4 samples, 0.09%)</title><rect x="286.3" y="405" width="1.1" height="15.0" fill="rgb(252,16,22)" rx="2" ry="2" />
<text  x="289.31" y="415.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (1 samples, 0.02%)</title><rect x="137.6" y="325" width="0.3" height="15.0" fill="rgb(245,197,45)" rx="2" ry="2" />
<text  x="140.59" y="335.5" ></text>
</g>
<g >
<title>__libc_malloc (4 samples, 0.09%)</title><rect x="22.0" y="485" width="1.1" height="15.0" fill="rgb(218,180,11)" rx="2" ry="2" />
<text  x="24.95" y="495.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr_target::~intrusive_ptr_target (5 samples, 0.12%)</title><rect x="269.1" y="341" width="1.4" height="15.0" fill="rgb(244,151,51)" rx="2" ry="2" />
<text  x="272.07" y="351.5" ></text>
</g>
<g >
<title>std::tuple&lt;torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::tuple&lt;torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt;, true&gt; (2 samples, 0.05%)</title><rect x="453.1" y="357" width="0.5" height="15.0" fill="rgb(240,195,15)" rx="2" ry="2" />
<text  x="456.09" y="367.5" ></text>
</g>
<g >
<title>[ld-2.31.so] (42 samples, 0.99%)</title><rect x="251.8" y="437" width="11.7" height="15.0" fill="rgb(221,28,5)" rx="2" ry="2" />
<text  x="254.84" y="447.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="183.2" y="293" width="0.3" height="15.0" fill="rgb(250,38,25)" rx="2" ry="2" />
<text  x="186.18" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.05%)</title><rect x="196.5" y="437" width="0.6" height="15.0" fill="rgb(235,19,43)" rx="2" ry="2" />
<text  x="199.52" y="447.5" ></text>
</g>
<g >
<title>c10::RegisterOperators::Options::schema (1 samples, 0.02%)</title><rect x="218.2" y="469" width="0.3" height="15.0" fill="rgb(252,210,4)" rx="2" ry="2" />
<text  x="221.20" y="479.5" ></text>
</g>
<g >
<title>micro_requires_grad_false (403 samples, 9.49%)</title><rect x="264.1" y="453" width="112.0" height="15.0" fill="rgb(216,37,11)" rx="2" ry="2" />
<text  x="267.07" y="463.5" >micro_require..</text>
</g>
<g >
<title>at::RecordFunction::RecordFunction (7 samples, 0.16%)</title><rect x="324.1" y="325" width="2.0" height="15.0" fill="rgb(230,107,3)" rx="2" ry="2" />
<text  x="327.11" y="335.5" ></text>
</g>
<g >
<title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="150.9" y="405" width="0.3" height="15.0" fill="rgb(213,111,37)" rx="2" ry="2" />
<text  x="153.93" y="415.5" ></text>
</g>
<g >
<title>__default_morecore (1 samples, 0.02%)</title><rect x="151.5" y="293" width="0.3" height="15.0" fill="rgb(213,183,1)" rx="2" ry="2" />
<text  x="154.49" y="303.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::ScalarType&gt;::operator bool (5 samples, 0.12%)</title><rect x="966.0" y="325" width="1.3" height="15.0" fill="rgb(225,169,7)" rx="2" ry="2" />
<text  x="968.95" y="335.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::operator++ (2 samples, 0.05%)</title><rect x="661.0" y="357" width="0.6" height="15.0" fill="rgb(234,175,14)" rx="2" ry="2" />
<text  x="664.02" y="367.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;c10::Half&gt; (2 samples, 0.05%)</title><rect x="471.7" y="325" width="0.6" height="15.0" fill="rgb(223,5,7)" rx="2" ry="2" />
<text  x="474.71" y="335.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.02%)</title><rect x="217.6" y="373" width="0.3" height="15.0" fill="rgb(214,28,52)" rx="2" ry="2" />
<text  x="220.65" y="383.5" ></text>
</g>
<g >
<title>c10::Dispatcher::~Dispatcher (1 samples, 0.02%)</title><rect x="254.1" y="389" width="0.2" height="15.0" fill="rgb(230,111,18)" rx="2" ry="2" />
<text  x="257.06" y="399.5" ></text>
</g>
<g >
<title>c10::isFloatingType (3 samples, 0.07%)</title><rect x="990.4" y="325" width="0.8" height="15.0" fill="rgb(235,142,32)" rx="2" ry="2" />
<text  x="993.41" y="335.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;c10::ScalarType&gt;::constexpr_optional_base (19 samples, 0.45%)</title><rect x="974.6" y="293" width="5.3" height="15.0" fill="rgb(230,45,24)" rx="2" ry="2" />
<text  x="977.57" y="303.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::contained_val (2 samples, 0.05%)</title><rect x="604.0" y="357" width="0.6" height="15.0" fill="rgb(246,16,2)" rx="2" ry="2" />
<text  x="607.03" y="367.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (3 samples, 0.07%)</title><rect x="142.9" y="373" width="0.8" height="15.0" fill="rgb(244,120,17)" rx="2" ry="2" />
<text  x="145.87" y="383.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.05%)</title><rect x="136.2" y="261" width="0.6" height="15.0" fill="rgb(210,107,33)" rx="2" ry="2" />
<text  x="139.20" y="271.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.02%)</title><rect x="220.1" y="373" width="0.3" height="15.0" fill="rgb(224,61,54)" rx="2" ry="2" />
<text  x="223.15" y="383.5" ></text>
</g>
<g >
<title>[microbenchmark] (1 samples, 0.02%)</title><rect x="633.5" y="373" width="0.3" height="15.0" fill="rgb(206,112,29)" rx="2" ry="2" />
<text  x="636.50" y="383.5" ></text>
</g>
<g >
<title>c10::TensorOptions::requires_grad (6 samples, 0.14%)</title><rect x="575.4" y="405" width="1.7" height="15.0" fill="rgb(228,74,34)" rx="2" ry="2" />
<text  x="578.40" y="415.5" ></text>
</g>
<g >
<title>__lru_cache_add (1 samples, 0.02%)</title><rect x="160.7" y="245" width="0.2" height="15.0" fill="rgb(245,31,34)" rx="2" ry="2" />
<text  x="163.66" y="255.5" ></text>
</g>
<g >
<title>c10::impl::tls_local_dispatch_key_set (3 samples, 0.07%)</title><rect x="58.6" y="485" width="0.9" height="15.0" fill="rgb(242,130,3)" rx="2" ry="2" />
<text  x="61.65" y="495.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_BackendSelectRegister.cpp (1 samples, 0.02%)</title><rect x="132.6" y="453" width="0.3" height="15.0" fill="rgb(224,106,54)" rx="2" ry="2" />
<text  x="135.59" y="463.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;bool  (1 samples, 0.02%)</title><rect x="147.6" y="421" width="0.3" height="15.0" fill="rgb(243,113,13)" rx="2" ry="2" />
<text  x="150.60" y="431.5" ></text>
</g>
<g >
<title>__sbrk (1 samples, 0.02%)</title><rect x="151.5" y="277" width="0.3" height="15.0" fill="rgb(244,102,37)" rx="2" ry="2" />
<text  x="154.49" y="287.5" ></text>
</g>
<g >
<title>c10::TensorImpl::release_resources (9 samples, 0.21%)</title><rect x="265.7" y="389" width="2.5" height="15.0" fill="rgb(224,137,33)" rx="2" ry="2" />
<text  x="268.74" y="399.5" ></text>
</g>
<g >
<title>load_elf_binary (11 samples, 0.26%)</title><rect x="1186.9" y="421" width="3.1" height="15.0" fill="rgb(223,81,19)" rx="2" ry="2" />
<text  x="1189.94" y="431.5" ></text>
</g>
<g >
<title>c10::Dispatcher::singleton (1 samples, 0.02%)</title><rect x="1163.0" y="373" width="0.3" height="15.0" fill="rgb(221,44,48)" rx="2" ry="2" />
<text  x="1166.04" y="383.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="1110.8" y="197" width="0.3" height="15.0" fill="rgb(212,7,46)" rx="2" ry="2" />
<text  x="1113.78" y="207.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.02%)</title><rect x="150.1" y="197" width="0.3" height="15.0" fill="rgb(240,116,16)" rx="2" ry="2" />
<text  x="153.10" y="207.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt;::allocator (1 samples, 0.02%)</title><rect x="464.5" y="325" width="0.3" height="15.0" fill="rgb(206,123,10)" rx="2" ry="2" />
<text  x="467.49" y="335.5" ></text>
</g>
<g >
<title>__libc_start_main (3,325 samples, 78.33%)</title><rect x="251.8" y="485" width="924.3" height="15.0" fill="rgb(230,164,51)" rx="2" ry="2" />
<text  x="254.84" y="495.5" >__libc_start_main</text>
</g>
<g >
<title>std::_Hashtable&lt;c10::Symbol, c10::Symbol, std::allocator&lt;c10::Symbol&gt;, std::__detail::_Identity, std::equal_to&lt;c10::Symbol&gt;, std::hash&lt;c10::Symbol&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_insert&lt;c10::Symbol const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;c10::Symbol, true&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="218.2" y="357" width="0.3" height="15.0" fill="rgb(206,68,15)" rx="2" ry="2" />
<text  x="221.20" y="367.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="150.1" y="213" width="0.3" height="15.0" fill="rgb(208,70,20)" rx="2" ry="2" />
<text  x="153.10" y="223.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.02%)</title><rect x="150.1" y="133" width="0.3" height="15.0" fill="rgb(215,103,24)" rx="2" ry="2" />
<text  x="153.10" y="143.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::initialized (2 samples, 0.05%)</title><rect x="373.9" y="373" width="0.5" height="15.0" fill="rgb(244,205,1)" rx="2" ry="2" />
<text  x="376.87" y="383.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="157.3" y="357" width="0.3" height="15.0" fill="rgb(240,165,11)" rx="2" ry="2" />
<text  x="160.33" y="367.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.02%)</title><rect x="223.2" y="357" width="0.3" height="15.0" fill="rgb(245,34,20)" rx="2" ry="2" />
<text  x="226.21" y="367.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (4 samples, 0.09%)</title><rect x="1016.8" y="341" width="1.1" height="15.0" fill="rgb(241,71,33)" rx="2" ry="2" />
<text  x="1019.82" y="351.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;c10::MemoryFormat&gt;::constexpr_optional_base (4 samples, 0.09%)</title><rect x="53.1" y="485" width="1.1" height="15.0" fill="rgb(254,111,5)" rx="2" ry="2" />
<text  x="56.09" y="495.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="944.8" y="325" width="0.3" height="15.0" fill="rgb(244,21,22)" rx="2" ry="2" />
<text  x="947.83" y="335.5" ></text>
</g>
<g >
<title>torch::autograd::make_variable (199 samples, 4.69%)</title><rect x="434.5" y="421" width="55.3" height="15.0" fill="rgb(206,47,48)" rx="2" ry="2" />
<text  x="437.47" y="431.5" >torch..</text>
</g>
<g >
<title>[libc-2.31.so] (9 samples, 0.21%)</title><rect x="813.6" y="373" width="2.5" height="15.0" fill="rgb(226,146,13)" rx="2" ry="2" />
<text  x="816.62" y="383.5" ></text>
</g>
<g >
<title>ska::detailv3::sherwood_v3_table&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, c10::OperatorName, std::hash&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueHasher&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::hash&lt;c10::OperatorName&gt; &gt;, std::equal_to&lt;c10::OperatorName&gt;, ska::detailv3::KeyOrValueEquality&lt;c10::OperatorName, std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt;, std::equal_to&lt;c10::OperatorName&gt; &gt;, std::allocator&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt;, std::allocator&lt;ska::detailv3::sherwood_v3_entry&lt;std::pair&lt;c10::OperatorName, c10::OperatorHandle&gt; &gt; &gt; &gt;::rehash (1 samples, 0.02%)</title><rect x="133.4" y="325" width="0.3" height="15.0" fill="rgb(232,152,30)" rx="2" ry="2" />
<text  x="136.42" y="335.5" ></text>
</g>
<g >
<title>__pthread_once_slow (1 samples, 0.02%)</title><rect x="146.5" y="373" width="0.3" height="15.0" fill="rgb(248,171,40)" rx="2" ry="2" />
<text  x="149.49" y="383.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (1 samples, 0.02%)</title><rect x="92.0" y="485" width="0.3" height="15.0" fill="rgb(233,138,13)" rx="2" ry="2" />
<text  x="95.00" y="495.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::vector&lt;std::function&lt;at::Tensor  (2 samples, 0.05%)</title><rect x="833.6" y="309" width="0.6" height="15.0" fill="rgb(223,130,24)" rx="2" ry="2" />
<text  x="836.64" y="319.5" ></text>
</g>
<g >
<title>c10::impl::detail::with_scattered_tensor_options_impl_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor  (141 samples, 3.32%)</title><rect x="328.0" y="309" width="39.2" height="15.0" fill="rgb(231,189,0)" rx="2" ry="2" />
<text  x="331.00" y="319.5" >c10..</text>
</g>
<g >
<title>c10::impl::OperatorEntry::computeDispatchTableEntry (1 samples, 0.02%)</title><rect x="197.4" y="357" width="0.2" height="15.0" fill="rgb(211,76,37)" rx="2" ry="2" />
<text  x="200.35" y="367.5" ></text>
</g>
<g >
<title>_nv019856rm (1 samples, 0.02%)</title><rect x="595.1" y="277" width="0.3" height="15.0" fill="rgb(241,169,47)" rx="2" ry="2" />
<text  x="598.14" y="287.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;c10::intrusive_ptr&lt;ConvPackedParamsBase&lt;2&gt;, c10::detail::intrusive_target_default_null_type&lt;ConvPackedParamsBase&lt;2&gt; &gt; &gt;  (1 samples, 0.02%)</title><rect x="186.5" y="405" width="0.3" height="15.0" fill="rgb(222,46,24)" rx="2" ry="2" />
<text  x="189.51" y="415.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="142.0" y="357" width="0.3" height="15.0" fill="rgb(254,97,42)" rx="2" ry="2" />
<text  x="145.04" y="367.5" ></text>
</g>
<g >
<title>c10::Dispatcher::findOrRegisterName_ (3 samples, 0.07%)</title><rect x="142.9" y="357" width="0.8" height="15.0" fill="rgb(250,121,33)" rx="2" ry="2" />
<text  x="145.87" y="367.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::contained_val (1 samples, 0.02%)</title><rect x="861.7" y="357" width="0.3" height="15.0" fill="rgb(209,196,38)" rx="2" ry="2" />
<text  x="864.71" y="367.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (1 samples, 0.02%)</title><rect x="186.2" y="373" width="0.3" height="15.0" fill="rgb(208,204,48)" rx="2" ry="2" />
<text  x="189.24" y="383.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;short&gt; (1 samples, 0.02%)</title><rect x="80.0" y="485" width="0.3" height="15.0" fill="rgb(242,22,4)" rx="2" ry="2" />
<text  x="83.05" y="495.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (3 samples, 0.07%)</title><rect x="129.5" y="277" width="0.9" height="15.0" fill="rgb(227,203,6)" rx="2" ry="2" />
<text  x="132.53" y="287.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="154.5" y="325" width="0.3" height="15.0" fill="rgb(253,46,12)" rx="2" ry="2" />
<text  x="157.55" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::Symbol&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::Symbol&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="189.3" y="389" width="0.3" height="15.0" fill="rgb(216,102,23)" rx="2" ry="2" />
<text  x="192.29" y="399.5" ></text>
</g>
<g >
<title>strrchr (1 samples, 0.02%)</title><rect x="1189.7" y="405" width="0.3" height="15.0" fill="rgb(207,201,19)" rx="2" ry="2" />
<text  x="1192.72" y="415.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::operator* (7 samples, 0.16%)</title><rect x="860.3" y="373" width="2.0" height="15.0" fill="rgb(238,157,19)" rx="2" ry="2" />
<text  x="863.32" y="383.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::(anonymous namespace)::createArgumentVector (1 samples, 0.02%)</title><rect x="138.4" y="389" width="0.3" height="15.0" fill="rgb(216,203,12)" rx="2" ry="2" />
<text  x="141.42" y="399.5" ></text>
</g>
<g >
<title>at::AutoNonVariableTypeMode::AutoNonVariableTypeMode (7 samples, 0.16%)</title><rect x="1020.7" y="389" width="2.0" height="15.0" fill="rgb(251,34,53)" rx="2" ry="2" />
<text  x="1023.71" y="399.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="144.0" y="309" width="0.3" height="15.0" fill="rgb(224,188,16)" rx="2" ry="2" />
<text  x="146.98" y="319.5" ></text>
</g>
<g >
<title>[ld-2.31.so] (1 samples, 0.02%)</title><rect x="150.7" y="389" width="0.2" height="15.0" fill="rgb(223,49,0)" rx="2" ry="2" />
<text  x="153.65" y="399.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.02%)</title><rect x="234.9" y="453" width="0.3" height="15.0" fill="rgb(233,101,20)" rx="2" ry="2" />
<text  x="237.88" y="463.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::ScalarType&gt;::operator* (1 samples, 0.02%)</title><rect x="70.6" y="485" width="0.3" height="15.0" fill="rgb(237,182,13)" rx="2" ry="2" />
<text  x="73.60" y="495.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.02%)</title><rect x="145.1" y="229" width="0.3" height="15.0" fill="rgb(218,157,47)" rx="2" ry="2" />
<text  x="148.10" y="239.5" ></text>
</g>
<g >
<title>get_cached_acl_rcu (1 samples, 0.02%)</title><rect x="124.8" y="181" width="0.3" height="15.0" fill="rgb(205,105,35)" rx="2" ry="2" />
<text  x="127.80" y="191.5" ></text>
</g>
<g >
<title>c10::impl::tls_local_dispatch_key_set (11 samples, 0.26%)</title><rect x="1143.3" y="261" width="3.1" height="15.0" fill="rgb(228,108,24)" rx="2" ry="2" />
<text  x="1146.30" y="271.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;unsigned char&gt;@plt (1 samples, 0.02%)</title><rect x="1169.2" y="357" width="0.2" height="15.0" fill="rgb(216,210,28)" rx="2" ry="2" />
<text  x="1172.15" y="367.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.02%)</title><rect x="217.6" y="405" width="0.3" height="15.0" fill="rgb(220,32,4)" rx="2" ry="2" />
<text  x="220.65" y="415.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="135.9" y="181" width="0.3" height="15.0" fill="rgb(221,12,25)" rx="2" ry="2" />
<text  x="138.92" y="191.5" ></text>
</g>
<g >
<title>__x64_sys_execve (2 samples, 0.05%)</title><rect x="1179.4" y="469" width="0.6" height="15.0" fill="rgb(206,1,52)" rx="2" ry="2" />
<text  x="1182.44" y="479.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="194.0" y="373" width="0.3" height="15.0" fill="rgb(225,215,30)" rx="2" ry="2" />
<text  x="197.02" y="383.5" ></text>
</g>
<g >
<title>__tls_get_addr (5 samples, 0.12%)</title><rect x="1145.0" y="245" width="1.4" height="15.0" fill="rgb(249,94,53)" rx="2" ry="2" />
<text  x="1147.97" y="255.5" ></text>
</g>
<g >
<title>c10::Device::validate (3 samples, 0.07%)</title><rect x="278.2" y="357" width="0.9" height="15.0" fill="rgb(242,109,47)" rx="2" ry="2" />
<text  x="281.24" y="367.5" ></text>
</g>
<g >
<title>cpuinfo_x86_linux_init (1 samples, 0.02%)</title><rect x="146.5" y="357" width="0.3" height="15.0" fill="rgb(227,49,49)" rx="2" ry="2" />
<text  x="149.49" y="367.5" ></text>
</g>
<g >
<title>[libnvToolsExt.so.1.0.0] (1 samples, 0.02%)</title><rect x="252.7" y="421" width="0.2" height="15.0" fill="rgb(211,27,19)" rx="2" ry="2" />
<text  x="255.67" y="431.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="132.0" y="341" width="0.3" height="15.0" fill="rgb(244,179,36)" rx="2" ry="2" />
<text  x="135.03" y="351.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.02%)</title><rect x="145.1" y="165" width="0.3" height="15.0" fill="rgb(234,122,45)" rx="2" ry="2" />
<text  x="148.10" y="175.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;torch::autograd::Node,  (1 samples, 0.02%)</title><rect x="832.8" y="325" width="0.3" height="15.0" fill="rgb(236,128,49)" rx="2" ry="2" />
<text  x="835.80" y="335.5" ></text>
</g>
<g >
<title>torch::jit::parseSchema (2 samples, 0.05%)</title><rect x="248.8" y="469" width="0.5" height="15.0" fill="rgb(249,39,23)" rx="2" ry="2" />
<text  x="251.78" y="479.5" ></text>
</g>
<g >
<title>c10::ProfiledCPUMemoryReporter::New (10 samples, 0.24%)</title><rect x="1108.3" y="245" width="2.8" height="15.0" fill="rgb(229,72,16)" rx="2" ry="2" />
<text  x="1111.28" y="255.5" ></text>
</g>
<g >
<title>std::tuple&lt;c10::AutogradMetaInterface*, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::tuple&lt;c10::AutogradMetaInterface*, std::default_delete&lt;c10::AutogradMetaInterface&gt;, true&gt; (6 samples, 0.14%)</title><rect x="665.2" y="357" width="1.7" height="15.0" fill="rgb(242,144,52)" rx="2" ry="2" />
<text  x="668.18" y="367.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.02%)</title><rect x="379.1" y="389" width="0.3" height="15.0" fill="rgb(240,41,6)" rx="2" ry="2" />
<text  x="382.15" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (1 samples, 0.02%)</title><rect x="185.4" y="357" width="0.3" height="15.0" fill="rgb(218,66,6)" rx="2" ry="2" />
<text  x="188.40" y="367.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;caffe2::TypeMeta&gt;::constexpr_optional_base (3 samples, 0.07%)</title><rect x="630.4" y="389" width="0.9" height="15.0" fill="rgb(235,97,35)" rx="2" ry="2" />
<text  x="633.44" y="399.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::registerKernel (1 samples, 0.02%)</title><rect x="190.4" y="373" width="0.3" height="15.0" fill="rgb(236,74,44)" rx="2" ry="2" />
<text  x="193.41" y="383.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;long&gt;::size (1 samples, 0.02%)</title><rect x="853.4" y="405" width="0.3" height="15.0" fill="rgb(242,100,25)" rx="2" ry="2" />
<text  x="856.37" y="415.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::contained_val (1 samples, 0.02%)</title><rect x="425.0" y="373" width="0.3" height="15.0" fill="rgb(244,144,50)" rx="2" ry="2" />
<text  x="428.02" y="383.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="688.3" y="309" width="0.2" height="15.0" fill="rgb(216,112,50)" rx="2" ry="2" />
<text  x="691.26" y="319.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr_target::release_resources (1 samples, 0.02%)</title><rect x="270.7" y="373" width="0.3" height="15.0" fill="rgb(212,72,6)" rx="2" ry="2" />
<text  x="273.74" y="383.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (3 samples, 0.07%)</title><rect x="219.6" y="421" width="0.8" height="15.0" fill="rgb(220,16,4)" rx="2" ry="2" />
<text  x="222.59" y="431.5" ></text>
</g>
<g >
<title>at::Tensor::~Tensor (10 samples, 0.24%)</title><rect x="431.1" y="421" width="2.8" height="15.0" fill="rgb(229,136,21)" rx="2" ry="2" />
<text  x="434.13" y="431.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::operator-- (1 samples, 0.02%)</title><rect x="271.3" y="389" width="0.3" height="15.0" fill="rgb(207,209,10)" rx="2" ry="2" />
<text  x="274.30" y="399.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (1 samples, 0.02%)</title><rect x="178.5" y="373" width="0.2" height="15.0" fill="rgb(219,213,15)" rx="2" ry="2" />
<text  x="181.45" y="383.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::intrusive_ptr (7 samples, 0.16%)</title><rect x="919.8" y="389" width="2.0" height="15.0" fill="rgb(241,114,1)" rx="2" ry="2" />
<text  x="922.81" y="399.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;torch::jit::Operator, std::allocator&lt;torch::jit::Operator&gt;,  (1 samples, 0.02%)</title><rect x="263.2" y="373" width="0.3" height="15.0" fill="rgb(243,196,28)" rx="2" ry="2" />
<text  x="266.23" y="383.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.02%)</title><rect x="223.2" y="325" width="0.3" height="15.0" fill="rgb(243,41,44)" rx="2" ry="2" />
<text  x="226.21" y="335.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.02%)</title><rect x="540.1" y="245" width="0.3" height="15.0" fill="rgb(234,126,6)" rx="2" ry="2" />
<text  x="543.10" y="255.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (7 samples, 0.16%)</title><rect x="197.9" y="405" width="2.0" height="15.0" fill="rgb(211,26,20)" rx="2" ry="2" />
<text  x="200.91" y="415.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="180.7" y="357" width="0.3" height="15.0" fill="rgb(223,56,16)" rx="2" ry="2" />
<text  x="183.68" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;torch::autograd::AutogradMeta, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::_M_deleter (3 samples, 0.07%)</title><rect x="1006.5" y="357" width="0.9" height="15.0" fill="rgb(243,157,47)" rx="2" ry="2" />
<text  x="1009.54" y="367.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::initialized (1 samples, 0.02%)</title><rect x="425.3" y="373" width="0.3" height="15.0" fill="rgb(228,101,32)" rx="2" ry="2" />
<text  x="428.29" y="383.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="178.2" y="357" width="0.3" height="15.0" fill="rgb(239,192,40)" rx="2" ry="2" />
<text  x="181.17" y="367.5" ></text>
</g>
<g >
<title>c10::detail::_str_wrapper&lt;char const*, char const* const&amp;, char const*, unsigned int const&amp;&gt;::call[abi:cxx11] (1 samples, 0.02%)</title><rect x="174.3" y="373" width="0.3" height="15.0" fill="rgb(213,215,35)" rx="2" ry="2" />
<text  x="177.28" y="383.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="192.1" y="325" width="0.3" height="15.0" fill="rgb(228,107,53)" rx="2" ry="2" />
<text  x="195.07" y="335.5" ></text>
</g>
<g >
<title>c10::ArrayRef&lt;long&gt;::ArrayRef (12 samples, 0.28%)</title><rect x="597.6" y="421" width="3.4" height="15.0" fill="rgb(216,124,34)" rx="2" ry="2" />
<text  x="600.64" y="431.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="262.4" y="309" width="0.3" height="15.0" fill="rgb(236,171,47)" rx="2" ry="2" />
<text  x="265.40" y="319.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.02%)</title><rect x="195.4" y="389" width="0.3" height="15.0" fill="rgb(248,203,34)" rx="2" ry="2" />
<text  x="198.41" y="399.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.02%)</title><rect x="203.2" y="245" width="0.3" height="15.0" fill="rgb(205,58,8)" rx="2" ry="2" />
<text  x="206.19" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (1 samples, 0.02%)</title><rect x="160.9" y="341" width="0.3" height="15.0" fill="rgb(247,82,12)" rx="2" ry="2" />
<text  x="163.94" y="351.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::_Tuple_impl&lt;std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (5 samples, 0.12%)</title><rect x="1003.8" y="325" width="1.3" height="15.0" fill="rgb(233,181,29)" rx="2" ry="2" />
<text  x="1006.76" y="335.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="154.5" y="229" width="0.3" height="15.0" fill="rgb(226,97,0)" rx="2" ry="2" />
<text  x="157.55" y="239.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="137.3" y="277" width="0.3" height="15.0" fill="rgb(238,167,18)" rx="2" ry="2" />
<text  x="140.31" y="287.5" ></text>
</g>
<g >
<title>at::AutoNonVariableTypeMode::AutoNonVariableTypeMode (4 samples, 0.09%)</title><rect x="490.1" y="405" width="1.1" height="15.0" fill="rgb(212,68,28)" rx="2" ry="2" />
<text  x="493.06" y="415.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, c10::AutogradMetaInterface*, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::_Tuple_impl (6 samples, 0.14%)</title><rect x="665.2" y="341" width="1.7" height="15.0" fill="rgb(228,1,3)" rx="2" ry="2" />
<text  x="668.18" y="351.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.02%)</title><rect x="181.5" y="389" width="0.3" height="15.0" fill="rgb(234,217,33)" rx="2" ry="2" />
<text  x="184.51" y="399.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::registerKernel (4 samples, 0.09%)</title><rect x="139.5" y="373" width="1.1" height="15.0" fill="rgb(225,105,34)" rx="2" ry="2" />
<text  x="142.54" y="383.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="1179.4" y="309" width="0.3" height="15.0" fill="rgb(247,218,10)" rx="2" ry="2" />
<text  x="1182.44" y="319.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::get (1 samples, 0.02%)</title><rect x="919.5" y="389" width="0.3" height="15.0" fill="rgb(213,95,12)" rx="2" ry="2" />
<text  x="922.53" y="399.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="149.3" y="293" width="0.2" height="15.0" fill="rgb(213,4,36)" rx="2" ry="2" />
<text  x="152.27" y="303.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::computeDispatchTableEntryWithDebug (1 samples, 0.02%)</title><rect x="257.1" y="325" width="0.3" height="15.0" fill="rgb(218,159,10)" rx="2" ry="2" />
<text  x="260.12" y="335.5" ></text>
</g>
<g >
<title>at::Tensor::Tensor (5 samples, 0.12%)</title><rect x="939.3" y="357" width="1.4" height="15.0" fill="rgb(237,142,32)" rx="2" ry="2" />
<text  x="942.27" y="367.5" ></text>
</g>
<g >
<title>ctx_resched (10 samples, 0.24%)</title><rect x="1186.9" y="373" width="2.8" height="15.0" fill="rgb(251,191,0)" rx="2" ry="2" />
<text  x="1189.94" y="383.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="145.1" y="245" width="0.3" height="15.0" fill="rgb(238,107,36)" rx="2" ry="2" />
<text  x="148.10" y="255.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;bool&gt;::constexpr_optional_base (7 samples, 0.16%)</title><rect x="803.3" y="357" width="2.0" height="15.0" fill="rgb(240,114,46)" rx="2" ry="2" />
<text  x="806.34" y="367.5" ></text>
</g>
<g >
<title>at::detail::make_tensor&lt;c10::TensorImpl, c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;, c10::DispatchKey, caffe2::TypeMeta&amp;&gt; (4 samples, 0.09%)</title><rect x="203.7" y="485" width="1.2" height="15.0" fill="rgb(236,148,30)" rx="2" ry="2" />
<text  x="206.75" y="495.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="190.7" y="213" width="0.3" height="15.0" fill="rgb(219,203,2)" rx="2" ry="2" />
<text  x="193.68" y="223.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::use_count (2 samples, 0.05%)</title><rect x="662.4" y="389" width="0.6" height="15.0" fill="rgb(245,99,2)" rx="2" ry="2" />
<text  x="665.41" y="399.5" ></text>
</g>
<g >
<title>torch::jit::parseName (1 samples, 0.02%)</title><rect x="141.5" y="389" width="0.3" height="15.0" fill="rgb(225,215,10)" rx="2" ry="2" />
<text  x="144.48" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, caffe2::OpSchema&gt; &gt; &gt;::_M_erase (2 samples, 0.05%)</title><rect x="254.9" y="309" width="0.6" height="15.0" fill="rgb(232,110,15)" rx="2" ry="2" />
<text  x="257.90" y="319.5" ></text>
</g>
<g >
<title>perf_event_mmap (1 samples, 0.02%)</title><rect x="124.2" y="229" width="0.3" height="15.0" fill="rgb(220,151,2)" rx="2" ry="2" />
<text  x="127.25" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.33%)</title><rect x="1179.4" y="501" width="3.9" height="15.0" fill="rgb(223,53,40)" rx="2" ry="2" />
<text  x="1182.44" y="511.5" ></text>
</g>
<g >
<title>onnx_torch::GetOpSchema&lt;onnx_torch::DotProduct_PyTorch_ver1&gt; (1 samples, 0.02%)</title><rect x="187.6" y="405" width="0.3" height="15.0" fill="rgb(205,203,2)" rx="2" ry="2" />
<text  x="190.63" y="415.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (2 samples, 0.05%)</title><rect x="258.5" y="325" width="0.6" height="15.0" fill="rgb(242,92,45)" rx="2" ry="2" />
<text  x="261.51" y="335.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.05%)</title><rect x="366.1" y="277" width="0.5" height="15.0" fill="rgb(211,133,48)" rx="2" ry="2" />
<text  x="369.08" y="287.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;torch::autograd::Node&gt;::weak_ptr (1 samples, 0.02%)</title><rect x="465.0" y="373" width="0.3" height="15.0" fill="rgb(246,153,51)" rx="2" ry="2" />
<text  x="468.04" y="383.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.05%)</title><rect x="1183.3" y="501" width="0.6" height="15.0" fill="rgb(233,9,32)" rx="2" ry="2" />
<text  x="1186.33" y="511.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt;::allocator (3 samples, 0.07%)</title><rect x="958.2" y="309" width="0.8" height="15.0" fill="rgb(206,73,45)" rx="2" ry="2" />
<text  x="961.17" y="319.5" ></text>
</g>
<g >
<title>torch::detail::TorchLibraryInit::TorchLibraryInit (10 samples, 0.24%)</title><rect x="142.3" y="437" width="2.8" height="15.0" fill="rgb(244,120,44)" rx="2" ry="2" />
<text  x="145.32" y="447.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (2 samples, 0.05%)</title><rect x="20.0" y="485" width="0.6" height="15.0" fill="rgb(246,178,50)" rx="2" ry="2" />
<text  x="23.01" y="495.5" ></text>
</g>
<g >
<title>torch::jit::parseName (3 samples, 0.07%)</title><rect x="144.3" y="373" width="0.8" height="15.0" fill="rgb(206,65,1)" rx="2" ry="2" />
<text  x="147.26" y="383.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::(anonymous namespace)::createArgumentVector (1 samples, 0.02%)</title><rect x="186.5" y="373" width="0.3" height="15.0" fill="rgb(250,185,6)" rx="2" ry="2" />
<text  x="189.51" y="383.5" ></text>
</g>
<g >
<title>do_user_addr_fault (2 samples, 0.05%)</title><rect x="125.6" y="309" width="0.6" height="15.0" fill="rgb(234,45,43)" rx="2" ry="2" />
<text  x="128.64" y="319.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_jit_avx_u8_copy_sum_bn_kern_autogen.cpp (1 samples, 0.02%)</title><rect x="185.1" y="453" width="0.3" height="15.0" fill="rgb(234,122,26)" rx="2" ry="2" />
<text  x="188.12" y="463.5" ></text>
</g>
<g >
<title>c10::Device::validate (1 samples, 0.02%)</title><rect x="750.0" y="245" width="0.2" height="15.0" fill="rgb(247,170,53)" rx="2" ry="2" />
<text  x="752.97" y="255.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseType (2 samples, 0.05%)</title><rect x="164.3" y="357" width="0.5" height="15.0" fill="rgb(245,224,21)" rx="2" ry="2" />
<text  x="167.28" y="367.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::(anonymous namespace)::createArgumentVector (1 samples, 0.02%)</title><rect x="138.7" y="389" width="0.3" height="15.0" fill="rgb(249,112,10)" rx="2" ry="2" />
<text  x="141.70" y="399.5" ></text>
</g>
<g >
<title>__libc_malloc (5 samples, 0.12%)</title><rect x="200.7" y="405" width="1.4" height="15.0" fill="rgb(230,115,18)" rx="2" ry="2" />
<text  x="203.69" y="415.5" ></text>
</g>
<g >
<title>c10::Symbol::dimname (2 samples, 0.05%)</title><rect x="141.8" y="437" width="0.5" height="15.0" fill="rgb(236,121,7)" rx="2" ry="2" />
<text  x="144.76" y="447.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor&amp;  (1 samples, 0.02%)</title><rect x="138.4" y="421" width="0.3" height="15.0" fill="rgb(231,165,7)" rx="2" ry="2" />
<text  x="141.42" y="431.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.02%)</title><rect x="184.0" y="389" width="0.3" height="15.0" fill="rgb(207,19,45)" rx="2" ry="2" />
<text  x="187.01" y="399.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::contained_val (1 samples, 0.02%)</title><rect x="872.6" y="373" width="0.2" height="15.0" fill="rgb(243,61,0)" rx="2" ry="2" />
<text  x="875.55" y="383.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.02%)</title><rect x="146.2" y="405" width="0.3" height="15.0" fill="rgb(243,108,32)" rx="2" ry="2" />
<text  x="149.21" y="415.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::intrusive_ptr (3 samples, 0.07%)</title><rect x="644.3" y="405" width="0.9" height="15.0" fill="rgb(244,82,0)" rx="2" ry="2" />
<text  x="647.34" y="415.5" ></text>
</g>
<g >
<title>__vma_link_rb (1 samples, 0.02%)</title><rect x="124.0" y="181" width="0.2" height="15.0" fill="rgb(221,104,42)" rx="2" ry="2" />
<text  x="126.97" y="191.5" ></text>
</g>
<g >
<title>at::Tensor::~Tensor (1 samples, 0.02%)</title><rect x="226.0" y="485" width="0.3" height="15.0" fill="rgb(242,206,15)" rx="2" ry="2" />
<text  x="228.99" y="495.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::expect (1 samples, 0.02%)</title><rect x="195.4" y="341" width="0.3" height="15.0" fill="rgb(211,199,21)" rx="2" ry="2" />
<text  x="198.41" y="351.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.02%)</title><rect x="184.3" y="341" width="0.3" height="15.0" fill="rgb(209,196,49)" rx="2" ry="2" />
<text  x="187.29" y="351.5" ></text>
</g>
<g >
<title>do_page_fault (14 samples, 0.33%)</title><rect x="126.5" y="405" width="3.9" height="15.0" fill="rgb(223,213,45)" rx="2" ry="2" />
<text  x="129.47" y="415.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_tmpxft_0000f646_00000000_6_top_k.compute_70.cudafe1.cpp (1 samples, 0.02%)</title><rect x="188.7" y="453" width="0.3" height="15.0" fill="rgb(253,4,22)" rx="2" ry="2" />
<text  x="191.74" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (1 samples, 0.02%)</title><rect x="153.2" y="357" width="0.2" height="15.0" fill="rgb(208,220,16)" rx="2" ry="2" />
<text  x="156.16" y="367.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::(anonymous namespace)::createArgumentVector (1 samples, 0.02%)</title><rect x="180.7" y="389" width="0.3" height="15.0" fill="rgb(253,173,33)" rx="2" ry="2" />
<text  x="183.68" y="399.5" ></text>
</g>
<g >
<title>c10::TensorOptions::device&lt;c10::DeviceType const&amp;, int&gt; (36 samples, 0.85%)</title><rect x="401.1" y="437" width="10.0" height="15.0" fill="rgb(217,97,49)" rx="2" ry="2" />
<text  x="404.11" y="447.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.02%)</title><rect x="164.3" y="309" width="0.3" height="15.0" fill="rgb(242,179,37)" rx="2" ry="2" />
<text  x="167.28" y="319.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;torch::autograd::Node&gt;::operator= (1 samples, 0.02%)</title><rect x="451.4" y="389" width="0.3" height="15.0" fill="rgb(245,140,18)" rx="2" ry="2" />
<text  x="454.42" y="399.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::vector&lt;std::function&lt;at::Tensor  (3 samples, 0.07%)</title><rect x="833.4" y="325" width="0.8" height="15.0" fill="rgb(207,94,50)" rx="2" ry="2" />
<text  x="836.36" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt;::new_allocator (2 samples, 0.05%)</title><rect x="958.4" y="293" width="0.6" height="15.0" fill="rgb(225,55,3)" rx="2" ry="2" />
<text  x="961.45" y="303.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;c10::Half&gt;@plt (1 samples, 0.02%)</title><rect x="793.1" y="309" width="0.2" height="15.0" fill="rgb(215,224,41)" rx="2" ry="2" />
<text  x="796.05" y="319.5" ></text>
</g>
<g >
<title>c10::impl::detail::with_scattered_tensor_options_impl_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor  (20 samples, 0.47%)</title><rect x="236.0" y="485" width="5.6" height="15.0" fill="rgb(253,96,44)" rx="2" ry="2" />
<text  x="238.99" y="495.5" ></text>
</g>
<g >
<title>__do_page_fault (14 samples, 0.33%)</title><rect x="126.5" y="389" width="3.9" height="15.0" fill="rgb(239,173,43)" rx="2" ry="2" />
<text  x="129.47" y="399.5" ></text>
</g>
<g >
<title>[libc10.so] (4 samples, 0.09%)</title><rect x="1143.9" y="245" width="1.1" height="15.0" fill="rgb(206,15,35)" rx="2" ry="2" />
<text  x="1146.86" y="255.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::load (4 samples, 0.09%)</title><rect x="924.3" y="373" width="1.1" height="15.0" fill="rgb(207,95,48)" rx="2" ry="2" />
<text  x="927.26" y="383.5" ></text>
</g>
<g >
<title>c10::UndefinedTensorImpl::singleton (2 samples, 0.05%)</title><rect x="920.6" y="373" width="0.6" height="15.0" fill="rgb(221,34,19)" rx="2" ry="2" />
<text  x="923.64" y="383.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="179.3" y="293" width="0.3" height="15.0" fill="rgb(242,1,34)" rx="2" ry="2" />
<text  x="182.29" y="303.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.02%)</title><rect x="750.2" y="229" width="0.3" height="15.0" fill="rgb(234,119,32)" rx="2" ry="2" />
<text  x="753.24" y="239.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::intrusive_ptr (3 samples, 0.07%)</title><rect x="902.0" y="389" width="0.9" height="15.0" fill="rgb(222,19,4)" rx="2" ry="2" />
<text  x="905.02" y="399.5" ></text>
</g>
<g >
<title>__do_fault (2 samples, 0.05%)</title><rect x="127.3" y="309" width="0.6" height="15.0" fill="rgb(247,26,16)" rx="2" ry="2" />
<text  x="130.31" y="319.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::get (2 samples, 0.05%)</title><rect x="440.6" y="405" width="0.5" height="15.0" fill="rgb(228,55,46)" rx="2" ry="2" />
<text  x="443.58" y="415.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.02%)</title><rect x="152.3" y="357" width="0.3" height="15.0" fill="rgb(248,182,40)" rx="2" ry="2" />
<text  x="155.32" y="367.5" ></text>
</g>
<g >
<title>c10::VariableVersion::unique (3 samples, 0.07%)</title><rect x="658.0" y="389" width="0.8" height="15.0" fill="rgb(231,109,30)" rx="2" ry="2" />
<text  x="660.96" y="399.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::reset_ (2 samples, 0.05%)</title><rect x="302.4" y="389" width="0.6" height="15.0" fill="rgb(246,89,51)" rx="2" ry="2" />
<text  x="305.43" y="399.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="203.5" y="485" width="0.2" height="15.0" fill="rgb(231,188,29)" rx="2" ry="2" />
<text  x="206.47" y="495.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;long&gt;::size (1 samples, 0.02%)</title><rect x="600.4" y="373" width="0.3" height="15.0" fill="rgb(210,139,52)" rx="2" ry="2" />
<text  x="603.42" y="383.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="180.1" y="293" width="0.3" height="15.0" fill="rgb(224,153,54)" rx="2" ry="2" />
<text  x="183.12" y="303.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_TraceType_2.cpp (7 samples, 0.16%)</title><rect x="150.7" y="453" width="1.9" height="15.0" fill="rgb(235,216,26)" rx="2" ry="2" />
<text  x="153.65" y="463.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;torch::autograd::Node&gt;::~shared_ptr (4 samples, 0.09%)</title><rect x="388.6" y="341" width="1.1" height="15.0" fill="rgb(244,149,8)" rx="2" ry="2" />
<text  x="391.60" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::RegistryPriority&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, c10::RegistryPriority&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (1 samples, 0.02%)</title><rect x="187.9" y="405" width="0.3" height="15.0" fill="rgb(208,176,28)" rx="2" ry="2" />
<text  x="190.90" y="415.5" ></text>
</g>
<g >
<title>c10::detail::_str_wrapper&lt;char const*, char const* const&amp;, char const*, unsigned int const&amp;&gt;::call[abi:cxx11] (1 samples, 0.02%)</title><rect x="186.2" y="405" width="0.3" height="15.0" fill="rgb(215,222,40)" rx="2" ry="2" />
<text  x="189.24" y="415.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="153.7" y="309" width="0.3" height="15.0" fill="rgb(238,74,9)" rx="2" ry="2" />
<text  x="156.71" y="319.5" ></text>
</g>
<g >
<title>c10::TensorImpl::empty_tensor_restride (4 samples, 0.09%)</title><rect x="556.5" y="277" width="1.1" height="15.0" fill="rgb(237,111,35)" rx="2" ry="2" />
<text  x="559.50" y="287.5" ></text>
</g>
<g >
<title>torch::empty (3 samples, 0.07%)</title><rect x="101.2" y="485" width="0.8" height="15.0" fill="rgb(235,172,14)" rx="2" ry="2" />
<text  x="104.18" y="495.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="189.6" y="309" width="0.2" height="15.0" fill="rgb(242,81,13)" rx="2" ry="2" />
<text  x="192.57" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect x="140.9" y="373" width="0.3" height="15.0" fill="rgb(219,165,7)" rx="2" ry="2" />
<text  x="143.93" y="383.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="192.1" y="357" width="0.3" height="15.0" fill="rgb(245,1,10)" rx="2" ry="2" />
<text  x="195.07" y="367.5" ></text>
</g>
<g >
<title>c10::memoryProfilingEnabled (6 samples, 0.14%)</title><rect x="542.3" y="245" width="1.7" height="15.0" fill="rgb(219,29,22)" rx="2" ry="2" />
<text  x="545.32" y="255.5" ></text>
</g>
<g >
<title>c10::Device::Device (1 samples, 0.02%)</title><rect x="280.2" y="421" width="0.3" height="15.0" fill="rgb(213,104,30)" rx="2" ry="2" />
<text  x="283.19" y="431.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::(anonymous namespace)::createArgumentVector (1 samples, 0.02%)</title><rect x="177.6" y="389" width="0.3" height="15.0" fill="rgb(218,112,53)" rx="2" ry="2" />
<text  x="180.62" y="399.5" ></text>
</g>
<g >
<title>c10::TensorOptions::requires_grad (43 samples, 1.01%)</title><rect x="867.6" y="421" width="11.9" height="15.0" fill="rgb(250,146,3)" rx="2" ry="2" />
<text  x="870.55" y="431.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.02%)</title><rect x="199.6" y="373" width="0.3" height="15.0" fill="rgb(232,193,35)" rx="2" ry="2" />
<text  x="202.58" y="383.5" ></text>
</g>
<g >
<title>at::RecordFunction::end@plt (1 samples, 0.02%)</title><rect x="501.7" y="357" width="0.3" height="15.0" fill="rgb(249,85,20)" rx="2" ry="2" />
<text  x="504.74" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;c10::Symbol, c10::Symbol, std::allocator&lt;c10::Symbol&gt;, std::__detail::_Identity, std::equal_to&lt;c10::Symbol&gt;, std::hash&lt;c10::Symbol&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_assign&lt;std::_Hashtable&lt;c10::Symbol, c10::Symbol, std::allocator&lt;c10::Symbol&gt;, std::__detail::_Identity, std::equal_to&lt;c10::Symbol&gt;, std::hash&lt;c10::Symbol&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_assign (1 samples, 0.02%)</title><rect x="175.4" y="373" width="0.3" height="15.0" fill="rgb(254,195,1)" rx="2" ry="2" />
<text  x="178.39" y="383.5" ></text>
</g>
<g >
<title>perf_event_mmap (1 samples, 0.02%)</title><rect x="151.5" y="181" width="0.3" height="15.0" fill="rgb(213,92,16)" rx="2" ry="2" />
<text  x="154.49" y="191.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;long&gt;::begin (1 samples, 0.02%)</title><rect x="272.4" y="389" width="0.3" height="15.0" fill="rgb(253,82,18)" rx="2" ry="2" />
<text  x="275.41" y="399.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (1 samples, 0.02%)</title><rect x="150.9" y="389" width="0.3" height="15.0" fill="rgb(212,80,9)" rx="2" ry="2" />
<text  x="153.93" y="399.5" ></text>
</g>
<g >
<title>__x64_sys_read (1 samples, 0.02%)</title><rect x="146.5" y="261" width="0.3" height="15.0" fill="rgb(236,161,50)" rx="2" ry="2" />
<text  x="149.49" y="271.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::(anonymous namespace)::createArgumentVector (1 samples, 0.02%)</title><rect x="134.8" y="389" width="0.3" height="15.0" fill="rgb(244,99,3)" rx="2" ry="2" />
<text  x="137.81" y="399.5" ></text>
</g>
<g >
<title>c10::impl::tls_local_dispatch_key_set (4 samples, 0.09%)</title><rect x="365.0" y="277" width="1.1" height="15.0" fill="rgb(224,190,29)" rx="2" ry="2" />
<text  x="367.97" y="287.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::OperatorEntry (1 samples, 0.02%)</title><rect x="142.3" y="357" width="0.3" height="15.0" fill="rgb(235,157,2)" rx="2" ry="2" />
<text  x="145.32" y="367.5" ></text>
</g>
<g >
<title>c10::constexpr_storage_t&lt;c10::Device&gt;::constexpr_storage_t&lt;c10::DeviceType const&amp;, int&gt; (12 samples, 0.28%)</title><rect x="864.2" y="373" width="3.4" height="15.0" fill="rgb(235,195,5)" rx="2" ry="2" />
<text  x="867.21" y="383.5" ></text>
</g>
<g >
<title>c10::TensorOptions::set_dtype (1 samples, 0.02%)</title><rect x="42.2" y="485" width="0.3" height="15.0" fill="rgb(248,191,40)" rx="2" ry="2" />
<text  x="45.24" y="495.5" ></text>
</g>
<g >
<title>__cudaRegisterFunction (6 samples, 0.14%)</title><rect x="200.4" y="437" width="1.7" height="15.0" fill="rgb(228,214,3)" rx="2" ry="2" />
<text  x="203.41" y="447.5" ></text>
</g>
<g >
<title>c10::impl::ExcludeDispatchKeyGuard::ExcludeDispatchKeyGuard (2 samples, 0.05%)</title><rect x="306.6" y="389" width="0.6" height="15.0" fill="rgb(250,92,22)" rx="2" ry="2" />
<text  x="309.60" y="399.5" ></text>
</g>
<g >
<title>at::native::empty_cpu@plt (1 samples, 0.02%)</title><rect x="366.6" y="293" width="0.3" height="15.0" fill="rgb(232,90,9)" rx="2" ry="2" />
<text  x="369.64" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;c10::Symbol, c10::Symbol, std::allocator&lt;c10::Symbol&gt;, std::__detail::_Identity, std::equal_to&lt;c10::Symbol&gt;, std::hash&lt;c10::Symbol&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::~_Hashtable (1 samples, 0.02%)</title><rect x="263.2" y="357" width="0.3" height="15.0" fill="rgb(224,74,51)" rx="2" ry="2" />
<text  x="266.23" y="367.5" ></text>
</g>
<g >
<title>__libc_calloc (1 samples, 0.02%)</title><rect x="252.4" y="357" width="0.3" height="15.0" fill="rgb(232,151,24)" rx="2" ry="2" />
<text  x="255.39" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (1 samples, 0.02%)</title><rect x="156.5" y="373" width="0.3" height="15.0" fill="rgb(245,26,21)" rx="2" ry="2" />
<text  x="159.49" y="383.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;int&gt;@plt (2 samples, 0.05%)</title><rect x="368.6" y="325" width="0.5" height="15.0" fill="rgb(239,58,13)" rx="2" ry="2" />
<text  x="371.59" y="335.5" ></text>
</g>
<g >
<title>at::TORCH_LIBRARY_IMPL_init_aten_SparseCUDA (1 samples, 0.02%)</title><rect x="146.2" y="437" width="0.3" height="15.0" fill="rgb(237,26,28)" rx="2" ry="2" />
<text  x="149.21" y="447.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="201.8" y="261" width="0.3" height="15.0" fill="rgb(209,121,46)" rx="2" ry="2" />
<text  x="204.80" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (12 samples, 0.28%)</title><rect x="1180.0" y="469" width="3.3" height="15.0" fill="rgb(235,31,19)" rx="2" ry="2" />
<text  x="1182.99" y="479.5" ></text>
</g>
<g >
<title>at::hasCallbacks (3 samples, 0.07%)</title><rect x="499.8" y="357" width="0.8" height="15.0" fill="rgb(218,109,8)" rx="2" ry="2" />
<text  x="502.79" y="367.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTable_ (1 samples, 0.02%)</title><rect x="197.4" y="373" width="0.2" height="15.0" fill="rgb(245,122,16)" rx="2" ry="2" />
<text  x="200.35" y="383.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::Make&lt;float&gt; (3 samples, 0.07%)</title><rect x="632.9" y="389" width="0.9" height="15.0" fill="rgb(212,2,41)" rx="2" ry="2" />
<text  x="635.94" y="399.5" ></text>
</g>
<g >
<title>torch::jit::parseSchemaOrName (1 samples, 0.02%)</title><rect x="177.1" y="357" width="0.2" height="15.0" fill="rgb(208,44,4)" rx="2" ry="2" />
<text  x="180.06" y="367.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.02%)</title><rect x="1133.6" y="245" width="0.2" height="15.0" fill="rgb(233,28,13)" rx="2" ry="2" />
<text  x="1136.57" y="255.5" ></text>
</g>
<g >
<title>do_user_addr_fault (2 samples, 0.05%)</title><rect x="201.5" y="325" width="0.6" height="15.0" fill="rgb(212,75,40)" rx="2" ry="2" />
<text  x="204.52" y="335.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.02%)</title><rect x="184.3" y="357" width="0.3" height="15.0" fill="rgb(243,189,17)" rx="2" ry="2" />
<text  x="187.29" y="367.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;c10::MemoryFormat&gt;::constexpr_optional_base (1 samples, 0.02%)</title><rect x="374.4" y="405" width="0.3" height="15.0" fill="rgb(225,126,1)" rx="2" ry="2" />
<text  x="377.42" y="415.5" ></text>
</g>
<g >
<title>[libcublas.so.11.1.0.229] (1 samples, 0.02%)</title><rect x="130.6" y="453" width="0.3" height="15.0" fill="rgb(212,114,23)" rx="2" ry="2" />
<text  x="133.64" y="463.5" ></text>
</g>
<g >
<title>[libcublas.so.11.1.0.229] (1 samples, 0.02%)</title><rect x="130.6" y="437" width="0.3" height="15.0" fill="rgb(219,52,39)" rx="2" ry="2" />
<text  x="133.64" y="447.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::~intrusive_ptr (12 samples, 0.28%)</title><rect x="640.4" y="389" width="3.4" height="15.0" fill="rgb(217,11,51)" rx="2" ry="2" />
<text  x="643.45" y="399.5" ></text>
</g>
<g >
<title>caffe2::OpSchema::SetDoc (2 samples, 0.05%)</title><rect x="193.2" y="437" width="0.5" height="15.0" fill="rgb(225,116,47)" rx="2" ry="2" />
<text  x="196.18" y="447.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="183.2" y="197" width="0.3" height="15.0" fill="rgb(242,72,11)" rx="2" ry="2" />
<text  x="186.18" y="207.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.02%)</title><rect x="152.0" y="389" width="0.3" height="15.0" fill="rgb(205,6,39)" rx="2" ry="2" />
<text  x="155.04" y="399.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="125.4" y="277" width="0.2" height="15.0" fill="rgb(228,66,43)" rx="2" ry="2" />
<text  x="128.36" y="287.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::operator* (1 samples, 0.02%)</title><rect x="857.5" y="389" width="0.3" height="15.0" fill="rgb(239,35,6)" rx="2" ry="2" />
<text  x="860.54" y="399.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;c10::Device&gt;::constexpr_optional_base (1 samples, 0.02%)</title><rect x="606.0" y="373" width="0.3" height="15.0" fill="rgb(216,105,9)" rx="2" ry="2" />
<text  x="608.98" y="383.5" ></text>
</g>
<g >
<title>[microbenchmark] (1 samples, 0.02%)</title><rect x="622.7" y="373" width="0.2" height="15.0" fill="rgb(233,88,24)" rx="2" ry="2" />
<text  x="625.65" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;, std::allocator&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt; &gt;::~vector (18 samples, 0.42%)</title><rect x="835.3" y="325" width="5.0" height="15.0" fill="rgb(225,125,22)" rx="2" ry="2" />
<text  x="838.31" y="335.5" ></text>
</g>
<g >
<title>__tls_init (3 samples, 0.07%)</title><rect x="1060.7" y="277" width="0.9" height="15.0" fill="rgb(211,216,11)" rx="2" ry="2" />
<text  x="1063.74" y="287.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (3 samples, 0.07%)</title><rect x="134.0" y="421" width="0.8" height="15.0" fill="rgb(212,97,20)" rx="2" ry="2" />
<text  x="136.98" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (1 samples, 0.02%)</title><rect x="181.2" y="293" width="0.3" height="15.0" fill="rgb(243,159,54)" rx="2" ry="2" />
<text  x="184.23" y="303.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (1 samples, 0.02%)</title><rect x="182.9" y="389" width="0.3" height="15.0" fill="rgb(250,156,53)" rx="2" ry="2" />
<text  x="185.90" y="399.5" ></text>
</g>
<g >
<title>c10::Dispatcher::findOrRegisterName_ (5 samples, 0.12%)</title><rect x="135.4" y="373" width="1.4" height="15.0" fill="rgb(228,60,28)" rx="2" ry="2" />
<text  x="138.37" y="383.5" ></text>
</g>
<g >
<title>c10::Device::validate (1 samples, 0.02%)</title><rect x="322.2" y="341" width="0.2" height="15.0" fill="rgb(238,78,34)" rx="2" ry="2" />
<text  x="325.16" y="351.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::computeDispatchTableEntryWithDebug (1 samples, 0.02%)</title><rect x="197.4" y="341" width="0.2" height="15.0" fill="rgb(213,110,22)" rx="2" ry="2" />
<text  x="200.35" y="351.5" ></text>
</g>
<g >
<title>[libc10.so] (2 samples, 0.05%)</title><rect x="1111.9" y="229" width="0.5" height="15.0" fill="rgb(238,58,17)" rx="2" ry="2" />
<text  x="1114.89" y="239.5" ></text>
</g>
<g >
<title>torch::Library::impl_UNBOXED&lt;char const*, std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;&gt;  (1 samples, 0.02%)</title><rect x="177.3" y="421" width="0.3" height="15.0" fill="rgb(252,104,53)" rx="2" ry="2" />
<text  x="180.34" y="431.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::operator bool (6 samples, 0.14%)</title><rect x="870.3" y="389" width="1.7" height="15.0" fill="rgb(250,15,49)" rx="2" ry="2" />
<text  x="873.33" y="399.5" ></text>
</g>
<g >
<title>at::native::empty_cpu (243 samples, 5.72%)</title><rect x="718.8" y="277" width="67.6" height="15.0" fill="rgb(245,78,14)" rx="2" ry="2" />
<text  x="721.83" y="287.5" >at::nat..</text>
</g>
<g >
<title>[ld-2.31.so] (46 samples, 1.08%)</title><rect x="109.5" y="421" width="12.8" height="15.0" fill="rgb(247,180,54)" rx="2" ry="2" />
<text  x="112.51" y="431.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="174.6" y="373" width="0.2" height="15.0" fill="rgb(250,76,53)" rx="2" ry="2" />
<text  x="177.56" y="383.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::MemoryFormat&gt;::initialized (1 samples, 0.02%)</title><rect x="375.8" y="389" width="0.3" height="15.0" fill="rgb(207,9,54)" rx="2" ry="2" />
<text  x="378.81" y="399.5" ></text>
</g>
<g >
<title>c10::TensorImpl::~TensorImpl (17 samples, 0.40%)</title><rect x="842.0" y="373" width="4.7" height="15.0" fill="rgb(244,178,23)" rx="2" ry="2" />
<text  x="844.98" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (2 samples, 0.05%)</title><rect x="191.8" y="421" width="0.6" height="15.0" fill="rgb(237,8,35)" rx="2" ry="2" />
<text  x="194.80" y="431.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.02%)</title><rect x="201.8" y="277" width="0.3" height="15.0" fill="rgb(218,205,21)" rx="2" ry="2" />
<text  x="204.80" y="287.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::initialized (1 samples, 0.02%)</title><rect x="422.2" y="373" width="0.3" height="15.0" fill="rgb(238,211,36)" rx="2" ry="2" />
<text  x="425.24" y="383.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="664.6" y="389" width="0.3" height="15.0" fill="rgb(220,77,17)" rx="2" ry="2" />
<text  x="667.63" y="399.5" ></text>
</g>
<g >
<title>c10::TensorImpl::compute_contiguous (1 samples, 0.02%)</title><rect x="783.6" y="229" width="0.3" height="15.0" fill="rgb(209,146,5)" rx="2" ry="2" />
<text  x="786.60" y="239.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.02%)</title><rect x="149.3" y="389" width="0.2" height="15.0" fill="rgb(224,31,12)" rx="2" ry="2" />
<text  x="152.27" y="399.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::OperatorEntry (2 samples, 0.05%)</title><rect x="157.9" y="357" width="0.5" height="15.0" fill="rgb(230,218,16)" rx="2" ry="2" />
<text  x="160.88" y="367.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::initialized (1 samples, 0.02%)</title><rect x="421.7" y="373" width="0.3" height="15.0" fill="rgb(231,229,9)" rx="2" ry="2" />
<text  x="424.68" y="383.5" ></text>
</g>
<g >
<title>torch::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_Tracer (7 samples, 0.16%)</title><rect x="148.7" y="437" width="2.0" height="15.0" fill="rgb(227,15,16)" rx="2" ry="2" />
<text  x="151.71" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_hook (1 samples, 0.02%)</title><rect x="187.3" y="389" width="0.3" height="15.0" fill="rgb(208,178,41)" rx="2" ry="2" />
<text  x="190.35" y="399.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::optional (4 samples, 0.09%)</title><rect x="806.7" y="389" width="1.1" height="15.0" fill="rgb(233,141,9)" rx="2" ry="2" />
<text  x="809.67" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::Argument, std::allocator&lt;c10::Argument&gt; &gt;::vector (1 samples, 0.02%)</title><rect x="195.7" y="373" width="0.3" height="15.0" fill="rgb(242,84,42)" rx="2" ry="2" />
<text  x="198.69" y="383.5" ></text>
</g>
<g >
<title>torch::jit::parseSchema (1 samples, 0.02%)</title><rect x="194.6" y="405" width="0.3" height="15.0" fill="rgb(210,176,26)" rx="2" ry="2" />
<text  x="197.57" y="415.5" ></text>
</g>
<g >
<title>c10::detail::getTypePtr_&lt;c10::ArrayRef&lt;long&gt; &gt;::call (1 samples, 0.02%)</title><rect x="134.5" y="373" width="0.3" height="15.0" fill="rgb(245,177,6)" rx="2" ry="2" />
<text  x="137.53" y="383.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (3 samples, 0.07%)</title><rect x="1008.5" y="341" width="0.8" height="15.0" fill="rgb(242,225,43)" rx="2" ry="2" />
<text  x="1011.48" y="351.5" ></text>
</g>
<g >
<title>c10::Dispatcher::registerImpl (1 samples, 0.02%)</title><rect x="157.0" y="405" width="0.3" height="15.0" fill="rgb(242,66,27)" rx="2" ry="2" />
<text  x="160.05" y="415.5" ></text>
</g>
<g >
<title>c10::Dispatcher::callWithDispatchKey&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::optional&lt;c10::ScalarType&gt;, c10::optional&lt;c10::Layout&gt;, c10::optional&lt;c10::Device&gt;, c10::optional&lt;bool&gt;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (320 samples, 7.54%)</title><rect x="699.4" y="325" width="88.9" height="15.0" fill="rgb(252,119,0)" rx="2" ry="2" />
<text  x="702.38" y="335.5" >c10::Dispa..</text>
</g>
<g >
<title>__split_vma (1 samples, 0.02%)</title><rect x="124.0" y="213" width="0.2" height="15.0" fill="rgb(218,218,22)" rx="2" ry="2" />
<text  x="126.97" y="223.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="145.1" y="325" width="0.3" height="15.0" fill="rgb(209,62,41)" rx="2" ry="2" />
<text  x="148.10" y="335.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="178.7" y="341" width="0.3" height="15.0" fill="rgb(230,94,29)" rx="2" ry="2" />
<text  x="181.73" y="351.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="148.7" y="373" width="0.3" height="15.0" fill="rgb(227,11,45)" rx="2" ry="2" />
<text  x="151.71" y="383.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::operator (1 samples, 0.02%)</title><rect x="645.2" y="405" width="0.2" height="15.0" fill="rgb(205,116,39)" rx="2" ry="2" />
<text  x="648.17" y="415.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;torch::autograd::Node,  (3 samples, 0.07%)</title><rect x="992.6" y="325" width="0.9" height="15.0" fill="rgb(218,104,31)" rx="2" ry="2" />
<text  x="995.64" y="335.5" ></text>
</g>
<g >
<title>c10::TensorOptions::set_requires_grad (1 samples, 0.02%)</title><rect x="577.1" y="405" width="0.2" height="15.0" fill="rgb(246,38,38)" rx="2" ry="2" />
<text  x="580.07" y="415.5" ></text>
</g>
<g >
<title>c10::impl::detail::with_scattered_tensor_options_impl_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor  (443 samples, 10.44%)</title><rect x="1039.9" y="341" width="123.1" height="15.0" fill="rgb(217,126,23)" rx="2" ry="2" />
<text  x="1042.89" y="351.5" >c10::impl::deta..</text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::operator* (3 samples, 0.07%)</title><rect x="628.8" y="373" width="0.8" height="15.0" fill="rgb(225,165,35)" rx="2" ry="2" />
<text  x="631.77" y="383.5" ></text>
</g>
<g >
<title>page_remove_rmap (3 samples, 0.07%)</title><rect x="1181.4" y="325" width="0.8" height="15.0" fill="rgb(227,24,28)" rx="2" ry="2" />
<text  x="1184.38" y="335.5" ></text>
</g>
<g >
<title>c10::detail::inferFunctionSchemaFromFunctor&lt;c10::impl::detail::WrapFunctionIntoRuntimeFunctor_&lt;at::Tensor  (1 samples, 0.02%)</title><rect x="156.2" y="421" width="0.3" height="15.0" fill="rgb(247,54,33)" rx="2" ry="2" />
<text  x="159.21" y="431.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::optional (3 samples, 0.07%)</title><rect x="1173.9" y="389" width="0.8" height="15.0" fill="rgb(213,147,7)" rx="2" ry="2" />
<text  x="1176.88" y="399.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="189.6" y="341" width="0.2" height="15.0" fill="rgb(243,229,41)" rx="2" ry="2" />
<text  x="192.57" y="351.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.02%)</title><rect x="1108.0" y="245" width="0.3" height="15.0" fill="rgb(253,150,13)" rx="2" ry="2" />
<text  x="1111.00" y="255.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (2 samples, 0.05%)</title><rect x="162.9" y="325" width="0.5" height="15.0" fill="rgb(244,2,40)" rx="2" ry="2" />
<text  x="165.89" y="335.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;c10::MemoryFormat&gt;::constexpr_optional_base (1 samples, 0.02%)</title><rect x="289.1" y="421" width="0.3" height="15.0" fill="rgb(206,177,46)" rx="2" ry="2" />
<text  x="292.09" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;torch::autograd::AutogradMeta, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::_M_ptr (2 samples, 0.05%)</title><rect x="452.5" y="357" width="0.6" height="15.0" fill="rgb(214,49,20)" rx="2" ry="2" />
<text  x="455.53" y="367.5" ></text>
</g>
<g >
<title>mmput (11 samples, 0.26%)</title><rect x="1180.0" y="421" width="3.1" height="15.0" fill="rgb(226,18,45)" rx="2" ry="2" />
<text  x="1182.99" y="431.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.05%)</title><rect x="209.0" y="485" width="0.6" height="15.0" fill="rgb(227,103,23)" rx="2" ry="2" />
<text  x="212.03" y="495.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (7 samples, 0.16%)</title><rect x="1010.4" y="309" width="2.0" height="15.0" fill="rgb(216,191,15)" rx="2" ry="2" />
<text  x="1013.43" y="319.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (5 samples, 0.12%)</title><rect x="170.9" y="357" width="1.4" height="15.0" fill="rgb(224,124,1)" rx="2" ry="2" />
<text  x="173.95" y="367.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::dataptr (3 samples, 0.07%)</title><rect x="423.6" y="389" width="0.9" height="15.0" fill="rgb(213,77,32)" rx="2" ry="2" />
<text  x="426.63" y="399.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="145.1" y="181" width="0.3" height="15.0" fill="rgb(246,5,17)" rx="2" ry="2" />
<text  x="148.10" y="191.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::registerKernel (1 samples, 0.02%)</title><rect x="149.5" y="373" width="0.3" height="15.0" fill="rgb(229,49,42)" rx="2" ry="2" />
<text  x="152.54" y="383.5" ></text>
</g>
<g >
<title>torch::Library::_impl (1 samples, 0.02%)</title><rect x="155.1" y="405" width="0.3" height="15.0" fill="rgb(231,126,23)" rx="2" ry="2" />
<text  x="158.10" y="415.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::(anonymous namespace)::createArgumentVector (1 samples, 0.02%)</title><rect x="149.3" y="373" width="0.2" height="15.0" fill="rgb(225,58,36)" rx="2" ry="2" />
<text  x="152.27" y="383.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, c10::AutogradMetaInterface*, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt; (4 samples, 0.09%)</title><rect x="1013.2" y="341" width="1.1" height="15.0" fill="rgb(218,93,25)" rx="2" ry="2" />
<text  x="1016.21" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;std::unique_ptr&lt;caffe2::OperatorBase, std::default_delete&lt;caffe2::OperatorBase&gt; &gt;  (1 samples, 0.02%)</title><rect x="88.4" y="485" width="0.3" height="15.0" fill="rgb(219,2,3)" rx="2" ry="2" />
<text  x="91.39" y="495.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.02%)</title><rect x="152.3" y="165" width="0.3" height="15.0" fill="rgb(236,170,49)" rx="2" ry="2" />
<text  x="155.32" y="175.5" ></text>
</g>
<g >
<title>torch::Library::def&lt;char const  (1 samples, 0.02%)</title><rect x="225.7" y="469" width="0.3" height="15.0" fill="rgb(233,229,53)" rx="2" ry="2" />
<text  x="228.71" y="479.5" ></text>
</g>
<g >
<title>c10::Device::validate (1 samples, 0.02%)</title><rect x="282.7" y="389" width="0.3" height="15.0" fill="rgb(254,51,39)" rx="2" ry="2" />
<text  x="285.69" y="399.5" ></text>
</g>
<g >
<title>c10::TensorImpl::dtype (2 samples, 0.05%)</title><rect x="963.2" y="341" width="0.5" height="15.0" fill="rgb(212,173,51)" rx="2" ry="2" />
<text  x="966.17" y="351.5" ></text>
</g>
<g >
<title>c10::TensorImpl::sizes (2 samples, 0.05%)</title><rect x="562.1" y="261" width="0.5" height="15.0" fill="rgb(221,185,23)" rx="2" ry="2" />
<text  x="565.06" y="271.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.02%)</title><rect x="816.1" y="373" width="0.3" height="15.0" fill="rgb(233,215,39)" rx="2" ry="2" />
<text  x="819.12" y="383.5" ></text>
</g>
<g >
<title>[ld-2.31.so] (14 samples, 0.33%)</title><rect x="122.3" y="389" width="3.9" height="15.0" fill="rgb(250,161,20)" rx="2" ry="2" />
<text  x="125.30" y="399.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;torch::autograd::Node&gt;::~weak_ptr (6 samples, 0.14%)</title><rect x="840.3" y="325" width="1.7" height="15.0" fill="rgb(230,176,18)" rx="2" ry="2" />
<text  x="843.31" y="335.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::TypeMeta (1 samples, 0.02%)</title><rect x="981.5" y="293" width="0.3" height="15.0" fill="rgb(246,78,45)" rx="2" ry="2" />
<text  x="984.52" y="303.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lexRaw (1 samples, 0.02%)</title><rect x="157.6" y="357" width="0.3" height="15.0" fill="rgb(244,3,50)" rx="2" ry="2" />
<text  x="160.60" y="367.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::contained_val (1 samples, 0.02%)</title><rect x="70.9" y="485" width="0.3" height="15.0" fill="rgb(253,4,28)" rx="2" ry="2" />
<text  x="73.88" y="495.5" ></text>
</g>
<g >
<title>__tls_get_addr (2 samples, 0.05%)</title><rect x="573.7" y="373" width="0.6" height="15.0" fill="rgb(227,33,19)" rx="2" ry="2" />
<text  x="576.73" y="383.5" ></text>
</g>
<g >
<title>at::(anonymous namespace)::TORCH_LIBRARY_IMPL_init_aten_BackendSelect (1 samples, 0.02%)</title><rect x="132.6" y="437" width="0.3" height="15.0" fill="rgb(248,171,46)" rx="2" ry="2" />
<text  x="135.59" y="447.5" ></text>
</g>
<g >
<title>c10::demangle[abi:cxx11] (1 samples, 0.02%)</title><rect x="184.3" y="421" width="0.3" height="15.0" fill="rgb(231,70,12)" rx="2" ry="2" />
<text  x="187.29" y="431.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::(anonymous namespace)::createArgumentVector (1 samples, 0.02%)</title><rect x="154.5" y="373" width="0.3" height="15.0" fill="rgb(233,164,9)" rx="2" ry="2" />
<text  x="157.55" y="383.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="152.3" y="197" width="0.3" height="15.0" fill="rgb(219,216,50)" rx="2" ry="2" />
<text  x="155.32" y="207.5" ></text>
</g>
<g >
<title>torch::autograd::make_variable (394 samples, 9.28%)</title><rect x="908.7" y="405" width="109.5" height="15.0" fill="rgb(221,181,44)" rx="2" ry="2" />
<text  x="911.69" y="415.5" >torch::autogr..</text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.02%)</title><rect x="166.5" y="325" width="0.3" height="15.0" fill="rgb(205,46,9)" rx="2" ry="2" />
<text  x="169.50" y="335.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="1179.4" y="341" width="0.3" height="15.0" fill="rgb(207,70,4)" rx="2" ry="2" />
<text  x="1182.44" y="351.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="397.5" y="309" width="0.3" height="15.0" fill="rgb(218,29,8)" rx="2" ry="2" />
<text  x="400.50" y="319.5" ></text>
</g>
<g >
<title>torch::detail::TorchLibraryInit::TorchLibraryInit (1 samples, 0.02%)</title><rect x="183.5" y="437" width="0.2" height="15.0" fill="rgb(254,200,45)" rx="2" ry="2" />
<text  x="186.46" y="447.5" ></text>
</g>
<g >
<title>mmap_region (4 samples, 0.09%)</title><rect x="123.7" y="245" width="1.1" height="15.0" fill="rgb(234,147,32)" rx="2" ry="2" />
<text  x="126.69" y="255.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::retain_ (4 samples, 0.09%)</title><rect x="443.1" y="389" width="1.1" height="15.0" fill="rgb(249,202,47)" rx="2" ry="2" />
<text  x="446.08" y="399.5" ></text>
</g>
<g >
<title>c10::Registerer&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unique_ptr&lt;c10::C10FlagParser, std::default_delete&lt;c10::C10FlagParser&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;::Registerer (1 samples, 0.02%)</title><rect x="190.7" y="437" width="0.3" height="15.0" fill="rgb(225,147,5)" rx="2" ry="2" />
<text  x="193.68" y="447.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (1 samples, 0.02%)</title><rect x="195.1" y="293" width="0.3" height="15.0" fill="rgb(218,171,5)" rx="2" ry="2" />
<text  x="198.13" y="303.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::optional&lt;caffe2::TypeMeta, false&gt; (2 samples, 0.05%)</title><rect x="893.7" y="405" width="0.5" height="15.0" fill="rgb(249,141,5)" rx="2" ry="2" />
<text  x="896.68" y="415.5" ></text>
</g>
<g >
<title>c10::DefaultCPUAllocator::allocate (78 samples, 1.84%)</title><rect x="749.7" y="261" width="21.7" height="15.0" fill="rgb(236,154,3)" rx="2" ry="2" />
<text  x="752.69" y="271.5" >c..</text>
</g>
<g >
<title>caffe2::TypeMeta::TypeMeta (13 samples, 0.31%)</title><rect x="73.7" y="485" width="3.6" height="15.0" fill="rgb(220,185,37)" rx="2" ry="2" />
<text  x="76.66" y="495.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;c10::AutogradMetaInterface, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::__uniq_ptr_impl&lt;std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (12 samples, 0.28%)</title><rect x="480.3" y="389" width="3.4" height="15.0" fill="rgb(214,120,26)" rx="2" ry="2" />
<text  x="483.33" y="399.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::operator* (4 samples, 0.09%)</title><rect x="889.8" y="373" width="1.1" height="15.0" fill="rgb(224,167,33)" rx="2" ry="2" />
<text  x="892.79" y="383.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::operator* (2 samples, 0.05%)</title><rect x="405.6" y="389" width="0.5" height="15.0" fill="rgb(215,190,34)" rx="2" ry="2" />
<text  x="408.56" y="399.5" ></text>
</g>
<g >
<title>c10::TensorOptions::TensorOptions (19 samples, 0.45%)</title><rect x="880.9" y="405" width="5.3" height="15.0" fill="rgb(211,120,49)" rx="2" ry="2" />
<text  x="883.89" y="415.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="195.7" y="357" width="0.3" height="15.0" fill="rgb(242,158,18)" rx="2" ry="2" />
<text  x="198.69" y="367.5" ></text>
</g>
<g >
<title>c10::impl::OperatorEntry::updateDispatchTableFull_ (1 samples, 0.02%)</title><rect x="190.4" y="357" width="0.3" height="15.0" fill="rgb(233,193,1)" rx="2" ry="2" />
<text  x="193.41" y="367.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.02%)</title><rect x="218.8" y="469" width="0.2" height="15.0" fill="rgb(230,69,10)" rx="2" ry="2" />
<text  x="221.76" y="479.5" ></text>
</g>
<g >
<title>torch::Library::impl_UNBOXED&lt;char const*, std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;&gt;  (1 samples, 0.02%)</title><rect x="148.4" y="421" width="0.3" height="15.0" fill="rgb(237,57,36)" rx="2" ry="2" />
<text  x="151.43" y="431.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (3 samples, 0.07%)</title><rect x="394.4" y="357" width="0.9" height="15.0" fill="rgb(236,136,38)" rx="2" ry="2" />
<text  x="397.44" y="367.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;long&gt;::size (2 samples, 0.05%)</title><rect x="852.8" y="373" width="0.6" height="15.0" fill="rgb(246,106,24)" rx="2" ry="2" />
<text  x="855.82" y="383.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::operator bool (3 samples, 0.07%)</title><rect x="576.0" y="373" width="0.8" height="15.0" fill="rgb(231,74,1)" rx="2" ry="2" />
<text  x="578.96" y="383.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="399.2" y="389" width="0.2" height="15.0" fill="rgb(245,82,22)" rx="2" ry="2" />
<text  x="402.16" y="399.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="203.2" y="197" width="0.3" height="15.0" fill="rgb(248,154,39)" rx="2" ry="2" />
<text  x="206.19" y="207.5" ></text>
</g>
<g >
<title>c10::Device::Device (10 samples, 0.24%)</title><rect x="417.2" y="405" width="2.8" height="15.0" fill="rgb(239,30,4)" rx="2" ry="2" />
<text  x="420.23" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="151.5" y="229" width="0.3" height="15.0" fill="rgb(237,162,2)" rx="2" ry="2" />
<text  x="154.49" y="239.5" ></text>
</g>
<g >
<title>torch::jit::SchemaTypeParser::parseType (3 samples, 0.07%)</title><rect x="219.6" y="405" width="0.8" height="15.0" fill="rgb(212,80,9)" rx="2" ry="2" />
<text  x="222.59" y="415.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (1 samples, 0.02%)</title><rect x="16.4" y="485" width="0.3" height="15.0" fill="rgb(237,146,44)" rx="2" ry="2" />
<text  x="19.39" y="495.5" ></text>
</g>
<g >
<title>at::Tensor::getIntrusivePtr (1 samples, 0.02%)</title><rect x="32.5" y="485" width="0.3" height="15.0" fill="rgb(233,10,5)" rx="2" ry="2" />
<text  x="35.52" y="495.5" ></text>
</g>
<g >
<title>torch::jit::parseName (4 samples, 0.09%)</title><rect x="137.0" y="389" width="1.1" height="15.0" fill="rgb(216,47,33)" rx="2" ry="2" />
<text  x="140.03" y="399.5" ></text>
</g>
<g >
<title>[unknown] (148 samples, 3.49%)</title><rect x="209.9" y="501" width="41.1" height="15.0" fill="rgb(240,89,5)" rx="2" ry="2" />
<text  x="212.86" y="511.5" >[un..</text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="162.9" y="197" width="0.3" height="15.0" fill="rgb(205,72,3)" rx="2" ry="2" />
<text  x="165.89" y="207.5" ></text>
</g>
<g >
<title>__cxa_finalize (38 samples, 0.90%)</title><rect x="252.9" y="405" width="10.6" height="15.0" fill="rgb(225,40,34)" rx="2" ry="2" />
<text  x="255.95" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (1 samples, 0.02%)</title><rect x="138.4" y="325" width="0.3" height="15.0" fill="rgb(250,190,40)" rx="2" ry="2" />
<text  x="141.42" y="335.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.02%)</title><rect x="166.5" y="341" width="0.3" height="15.0" fill="rgb(249,40,24)" rx="2" ry="2" />
<text  x="169.50" y="351.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (9 samples, 0.21%)</title><rect x="1009.9" y="325" width="2.5" height="15.0" fill="rgb(248,81,39)" rx="2" ry="2" />
<text  x="1012.87" y="335.5" ></text>
</g>
<g >
<title>c10::ThreadLocalDebugInfo::get (4 samples, 0.09%)</title><rect x="589.3" y="309" width="1.1" height="15.0" fill="rgb(253,112,23)" rx="2" ry="2" />
<text  x="592.30" y="319.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (48 samples, 1.13%)</title><rect x="758.0" y="197" width="13.4" height="15.0" fill="rgb(250,202,40)" rx="2" ry="2" />
<text  x="761.03" y="207.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.02%)</title><rect x="219.6" y="389" width="0.3" height="15.0" fill="rgb(227,93,41)" rx="2" ry="2" />
<text  x="222.59" y="399.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor  (4 samples, 0.09%)</title><rect x="149.3" y="421" width="1.1" height="15.0" fill="rgb(247,63,49)" rx="2" ry="2" />
<text  x="152.27" y="431.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.02%)</title><rect x="588.5" y="341" width="0.2" height="15.0" fill="rgb(213,79,13)" rx="2" ry="2" />
<text  x="591.46" y="351.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="150.1" y="261" width="0.3" height="15.0" fill="rgb(247,113,6)" rx="2" ry="2" />
<text  x="153.10" y="271.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (2 samples, 0.05%)</title><rect x="143.7" y="341" width="0.6" height="15.0" fill="rgb(212,166,40)" rx="2" ry="2" />
<text  x="146.71" y="351.5" ></text>
</g>
<g >
<title>[anon] (4 samples, 0.09%)</title><rect x="103.7" y="501" width="1.1" height="15.0" fill="rgb(230,165,34)" rx="2" ry="2" />
<text  x="106.68" y="511.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::load (2 samples, 0.05%)</title><rect x="269.9" y="325" width="0.6" height="15.0" fill="rgb(235,129,51)" rx="2" ry="2" />
<text  x="272.91" y="335.5" ></text>
</g>
<g >
<title>[microbenchmark] (1 samples, 0.02%)</title><rect x="384.4" y="357" width="0.3" height="15.0" fill="rgb(211,1,35)" rx="2" ry="2" />
<text  x="387.43" y="367.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::optional (4 samples, 0.09%)</title><rect x="373.3" y="389" width="1.1" height="15.0" fill="rgb(206,55,25)" rx="2" ry="2" />
<text  x="376.31" y="399.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_qlinear.cpp (1 samples, 0.02%)</title><rect x="186.8" y="453" width="0.3" height="15.0" fill="rgb(235,155,8)" rx="2" ry="2" />
<text  x="189.79" y="463.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, c10::AutogradMetaInterface*, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt; (2 samples, 0.05%)</title><rect x="487.8" y="357" width="0.6" height="15.0" fill="rgb(246,136,5)" rx="2" ry="2" />
<text  x="490.84" y="367.5" ></text>
</g>
<g >
<title>c10::constexpr_optional_base&lt;c10::MemoryFormat&gt;::constexpr_optional_base (4 samples, 0.09%)</title><rect x="898.1" y="405" width="1.1" height="15.0" fill="rgb(216,67,12)" rx="2" ry="2" />
<text  x="901.13" y="415.5" ></text>
</g>
<g >
<title>[libc10.so] (2 samples, 0.05%)</title><rect x="545.1" y="245" width="0.6" height="15.0" fill="rgb(241,99,24)" rx="2" ry="2" />
<text  x="548.10" y="255.5" ></text>
</g>
<g >
<title>torch::jit::parseSchema (1 samples, 0.02%)</title><rect x="195.1" y="405" width="0.3" height="15.0" fill="rgb(208,89,38)" rx="2" ry="2" />
<text  x="198.13" y="415.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument (1 samples, 0.02%)</title><rect x="199.0" y="389" width="0.3" height="15.0" fill="rgb(205,105,47)" rx="2" ry="2" />
<text  x="202.02" y="399.5" ></text>
</g>
<g >
<title>c10::ProfiledCPUMemoryReporter::Delete (1 samples, 0.02%)</title><rect x="35.0" y="485" width="0.3" height="15.0" fill="rgb(221,224,5)" rx="2" ry="2" />
<text  x="38.02" y="495.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="132.0" y="245" width="0.3" height="15.0" fill="rgb(236,55,18)" rx="2" ry="2" />
<text  x="135.03" y="255.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (60 samples, 1.41%)</title><rect x="1116.3" y="197" width="16.7" height="15.0" fill="rgb(251,56,16)" rx="2" ry="2" />
<text  x="1119.34" y="207.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="180.1" y="277" width="0.3" height="15.0" fill="rgb(235,36,12)" rx="2" ry="2" />
<text  x="183.12" y="287.5" ></text>
</g>
<g >
<title>c10::TensorImpl::compute_contiguous (2 samples, 0.05%)</title><rect x="364.4" y="245" width="0.6" height="15.0" fill="rgb(210,197,34)" rx="2" ry="2" />
<text  x="367.42" y="255.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (2 samples, 0.05%)</title><rect x="170.4" y="357" width="0.5" height="15.0" fill="rgb(243,218,13)" rx="2" ry="2" />
<text  x="173.39" y="367.5" ></text>
</g>
<g >
<title>__libc_malloc (1 samples, 0.02%)</title><rect x="11.7" y="485" width="0.2" height="15.0" fill="rgb(210,148,0)" rx="2" ry="2" />
<text  x="14.67" y="495.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::lex (3 samples, 0.07%)</title><rect x="165.7" y="309" width="0.8" height="15.0" fill="rgb(225,213,22)" rx="2" ry="2" />
<text  x="168.67" y="319.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;long&gt; (3 samples, 0.07%)</title><rect x="79.2" y="485" width="0.8" height="15.0" fill="rgb(215,124,16)" rx="2" ry="2" />
<text  x="82.22" y="495.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::intrusive_ptr (11 samples, 0.26%)</title><rect x="441.1" y="405" width="3.1" height="15.0" fill="rgb(209,138,20)" rx="2" ry="2" />
<text  x="444.14" y="415.5" ></text>
</g>
<g >
<title>std::forward&lt;c10::DeviceType const&amp;&gt; (1 samples, 0.02%)</title><rect x="289.4" y="437" width="0.2" height="15.0" fill="rgb(237,94,44)" rx="2" ry="2" />
<text  x="292.36" y="447.5" ></text>
</g>
<g >
<title>c10::impl::check_tensor_options_and_extract_memory_format (3 samples, 0.07%)</title><rect x="791.1" y="325" width="0.8" height="15.0" fill="rgb(229,129,40)" rx="2" ry="2" />
<text  x="794.11" y="335.5" ></text>
</g>
<g >
<title>at::RecordFunction::~RecordFunction@plt (1 samples, 0.02%)</title><rect x="1037.9" y="357" width="0.3" height="15.0" fill="rgb(245,148,28)" rx="2" ry="2" />
<text  x="1040.95" y="367.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="143.4" y="165" width="0.3" height="15.0" fill="rgb(235,163,34)" rx="2" ry="2" />
<text  x="146.43" y="175.5" ></text>
</g>
<g >
<title>torch::Library::_def (13 samples, 0.31%)</title><rect x="157.9" y="405" width="3.6" height="15.0" fill="rgb(250,116,54)" rx="2" ry="2" />
<text  x="160.88" y="415.5" ></text>
</g>
<g >
<title>torch::Library::def&lt;char const  (1 samples, 0.02%)</title><rect x="217.4" y="453" width="0.2" height="15.0" fill="rgb(247,139,25)" rx="2" ry="2" />
<text  x="220.37" y="463.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.02%)</title><rect x="184.0" y="309" width="0.3" height="15.0" fill="rgb(226,154,18)" rx="2" ry="2" />
<text  x="187.01" y="319.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;torch::autograd::AutogradMeta, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt;::__uniq_ptr_impl (5 samples, 0.12%)</title><rect x="452.3" y="373" width="1.3" height="15.0" fill="rgb(254,126,8)" rx="2" ry="2" />
<text  x="455.26" y="383.5" ></text>
</g>
<g >
<title>c10::TensorOptions::TensorOptions (23 samples, 0.54%)</title><rect x="616.8" y="405" width="6.4" height="15.0" fill="rgb(218,225,24)" rx="2" ry="2" />
<text  x="619.82" y="415.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="145.1" y="309" width="0.3" height="15.0" fill="rgb(235,59,48)" rx="2" ry="2" />
<text  x="148.10" y="319.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="178.7" y="213" width="0.3" height="15.0" fill="rgb(254,135,17)" rx="2" ry="2" />
<text  x="181.73" y="223.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;short&gt; (1 samples, 0.02%)</title><rect x="207.9" y="485" width="0.3" height="15.0" fill="rgb(217,56,4)" rx="2" ry="2" />
<text  x="210.92" y="495.5" ></text>
</g>
<g >
<title>[ld-2.31.so] (9 samples, 0.21%)</title><rect x="123.1" y="357" width="2.5" height="15.0" fill="rgb(241,137,39)" rx="2" ry="2" />
<text  x="126.14" y="367.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_TypeDefault.cpp (1 samples, 0.02%)</title><rect x="217.4" y="485" width="0.2" height="15.0" fill="rgb(246,171,40)" rx="2" ry="2" />
<text  x="220.37" y="495.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::initialized (3 samples, 0.07%)</title><rect x="878.1" y="373" width="0.8" height="15.0" fill="rgb(214,33,41)" rx="2" ry="2" />
<text  x="881.11" y="383.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="147.9" y="309" width="0.3" height="15.0" fill="rgb(252,76,41)" rx="2" ry="2" />
<text  x="150.88" y="319.5" ></text>
</g>
<g >
<title>__cxa_demangle (1 samples, 0.02%)</title><rect x="234.9" y="469" width="0.3" height="15.0" fill="rgb(205,190,15)" rx="2" ry="2" />
<text  x="237.88" y="479.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr&lt;c10::TensorImpl, c10::UndefinedTensorImpl&gt;::operator (4 samples, 0.09%)</title><rect x="444.2" y="405" width="1.1" height="15.0" fill="rgb(222,126,54)" rx="2" ry="2" />
<text  x="447.20" y="415.5" ></text>
</g>
<g >
<title>at::TORCH_LIBRARY_init_aten (1 samples, 0.02%)</title><rect x="217.4" y="469" width="0.2" height="15.0" fill="rgb(242,6,46)" rx="2" ry="2" />
<text  x="220.37" y="479.5" ></text>
</g>
<g >
<title>torch::(anonymous namespace)::debugString (1 samples, 0.02%)</title><rect x="136.8" y="389" width="0.2" height="15.0" fill="rgb(222,162,32)" rx="2" ry="2" />
<text  x="139.76" y="399.5" ></text>
</g>
<g >
<title>c10::TensorOptions::set_dtype (11 samples, 0.26%)</title><rect x="887.8" y="389" width="3.1" height="15.0" fill="rgb(238,182,53)" rx="2" ry="2" />
<text  x="890.84" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, char&gt; (1 samples, 0.02%)</title><rect x="132.6" y="373" width="0.3" height="15.0" fill="rgb(245,94,2)" rx="2" ry="2" />
<text  x="135.59" y="383.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;float&gt;@plt (2 samples, 0.05%)</title><rect x="794.4" y="325" width="0.6" height="15.0" fill="rgb(243,156,17)" rx="2" ry="2" />
<text  x="797.44" y="335.5" ></text>
</g>
<g >
<title>find_get_entry (1 samples, 0.02%)</title><rect x="127.3" y="261" width="0.3" height="15.0" fill="rgb(206,93,18)" rx="2" ry="2" />
<text  x="130.31" y="271.5" ></text>
</g>
<g >
<title>c10::Dispatcher::findOrRegisterName_ (1 samples, 0.02%)</title><rect x="184.0" y="357" width="0.3" height="15.0" fill="rgb(225,112,40)" rx="2" ry="2" />
<text  x="187.01" y="367.5" ></text>
</g>
<g >
<title>c10::impl::tls_local_dispatch_key_set (3 samples, 0.07%)</title><rect x="371.1" y="389" width="0.8" height="15.0" fill="rgb(242,58,1)" rx="2" ry="2" />
<text  x="374.09" y="399.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, torch::autograd::AutogradMeta*, std::default_delete&lt;torch::autograd::AutogradMeta&gt; &gt; (2 samples, 0.05%)</title><rect x="1008.8" y="325" width="0.5" height="15.0" fill="rgb(236,44,44)" rx="2" ry="2" />
<text  x="1011.76" y="335.5" ></text>
</g>
<g >
<title>torch::jit::parseSchema (1 samples, 0.02%)</title><rect x="249.6" y="485" width="0.3" height="15.0" fill="rgb(248,226,45)" rx="2" ry="2" />
<text  x="252.61" y="495.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="150.4" y="389" width="0.3" height="15.0" fill="rgb(219,209,29)" rx="2" ry="2" />
<text  x="153.38" y="399.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_NamedRegistrations.cpp (10 samples, 0.24%)</title><rect x="142.3" y="453" width="2.8" height="15.0" fill="rgb(222,161,51)" rx="2" ry="2" />
<text  x="145.32" y="463.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="152.3" y="117" width="0.3" height="15.0" fill="rgb(239,157,11)" rx="2" ry="2" />
<text  x="155.32" y="127.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.02%)</title><rect x="234.9" y="405" width="0.3" height="15.0" fill="rgb(206,131,19)" rx="2" ry="2" />
<text  x="237.88" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="146.5" y="293" width="0.3" height="15.0" fill="rgb(241,118,28)" rx="2" ry="2" />
<text  x="149.49" y="303.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (1 samples, 0.02%)</title><rect x="193.5" y="197" width="0.2" height="15.0" fill="rgb(226,165,28)" rx="2" ry="2" />
<text  x="196.46" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt;, std::allocator&lt;std::shared_ptr&lt;torch::autograd::FunctionPreHook&gt; &gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.02%)</title><rect x="959.0" y="341" width="0.3" height="15.0" fill="rgb(219,30,15)" rx="2" ry="2" />
<text  x="962.00" y="351.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::make_function_schema (1 samples, 0.02%)</title><rect x="180.7" y="405" width="0.3" height="15.0" fill="rgb(237,158,38)" rx="2" ry="2" />
<text  x="183.68" y="415.5" ></text>
</g>
<g >
<title>torch::Library::impl&lt;char const*, c10::CompileTimeFunctionPointer&lt;at::Tensor  (2 samples, 0.05%)</title><rect x="151.5" y="421" width="0.5" height="15.0" fill="rgb(234,77,53)" rx="2" ry="2" />
<text  x="154.49" y="431.5" ></text>
</g>
<g >
<title>[microbenchmark] (1 samples, 0.02%)</title><rect x="385.8" y="341" width="0.3" height="15.0" fill="rgb(235,66,44)" rx="2" ry="2" />
<text  x="388.82" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (1 samples, 0.02%)</title><rect x="187.6" y="341" width="0.3" height="15.0" fill="rgb(207,145,16)" rx="2" ry="2" />
<text  x="190.63" y="351.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::next (1 samples, 0.02%)</title><rect x="175.7" y="325" width="0.3" height="15.0" fill="rgb(227,185,18)" rx="2" ry="2" />
<text  x="178.67" y="335.5" ></text>
</g>
<g >
<title>c10::InternedStrings::_symbol (1 samples, 0.02%)</title><rect x="141.8" y="405" width="0.2" height="15.0" fill="rgb(239,62,1)" rx="2" ry="2" />
<text  x="144.76" y="415.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::operator bool (3 samples, 0.07%)</title><rect x="602.9" y="373" width="0.9" height="15.0" fill="rgb(217,157,35)" rx="2" ry="2" />
<text  x="605.92" y="383.5" ></text>
</g>
<g >
<title>torch::(anonymous namespace)::debugString (1 samples, 0.02%)</title><rect x="180.4" y="389" width="0.3" height="15.0" fill="rgb(246,186,10)" rx="2" ry="2" />
<text  x="183.40" y="399.5" ></text>
</g>
<g >
<title>c10::optional&lt;caffe2::TypeMeta&gt;::initialized (1 samples, 0.02%)</title><rect x="287.1" y="373" width="0.3" height="15.0" fill="rgb(208,139,41)" rx="2" ry="2" />
<text  x="290.14" y="383.5" ></text>
</g>
<g >
<title>c10::Device::validate (2 samples, 0.05%)</title><rect x="698.8" y="325" width="0.6" height="15.0" fill="rgb(253,184,11)" rx="2" ry="2" />
<text  x="701.82" y="335.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="178.7" y="373" width="0.3" height="15.0" fill="rgb(232,220,3)" rx="2" ry="2" />
<text  x="181.73" y="383.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="833.9" y="293" width="0.3" height="15.0" fill="rgb(212,221,32)" rx="2" ry="2" />
<text  x="836.92" y="303.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="657.7" y="325" width="0.3" height="15.0" fill="rgb(224,50,23)" rx="2" ry="2" />
<text  x="660.68" y="335.5" ></text>
</g>
<g >
<title>torch::jit::Lexer::nextIf (1 samples, 0.02%)</title><rect x="137.9" y="357" width="0.2" height="15.0" fill="rgb(220,184,0)" rx="2" ry="2" />
<text  x="140.87" y="367.5" ></text>
</g>
<g >
<title>at::Tensor::~Tensor (13 samples, 0.31%)</title><rect x="902.9" y="405" width="3.6" height="15.0" fill="rgb(249,99,3)" rx="2" ry="2" />
<text  x="905.85" y="415.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.02%)</title><rect x="234.9" y="421" width="0.3" height="15.0" fill="rgb(249,28,8)" rx="2" ry="2" />
<text  x="237.88" y="431.5" ></text>
</g>
<g >
<title>c10::intrusive_ptr_target::~intrusive_ptr_target (9 samples, 0.21%)</title><rect x="395.3" y="341" width="2.5" height="15.0" fill="rgb(229,147,36)" rx="2" ry="2" />
<text  x="398.27" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;c10::Type&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;c10::Type&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="217.4" y="357" width="0.2" height="15.0" fill="rgb(222,94,41)" rx="2" ry="2" />
<text  x="220.37" y="367.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::operator++ (4 samples, 0.09%)</title><rect x="85.3" y="485" width="1.1" height="15.0" fill="rgb(213,149,49)" rx="2" ry="2" />
<text  x="88.33" y="495.5" ></text>
</g>
<g >
<title>c10::memoryProfilingEnabled (3 samples, 0.07%)</title><rect x="1178.6" y="485" width="0.8" height="15.0" fill="rgb(209,24,35)" rx="2" ry="2" />
<text  x="1181.60" y="495.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;c10::AutogradMetaInterface, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::_M_ptr (4 samples, 0.09%)</title><rect x="1013.2" y="373" width="1.1" height="15.0" fill="rgb(222,23,16)" rx="2" ry="2" />
<text  x="1016.21" y="383.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="843.6" y="341" width="0.3" height="15.0" fill="rgb(220,119,36)" rx="2" ry="2" />
<text  x="846.64" y="351.5" ></text>
</g>
<g >
<title>at::empty (1 samples, 0.02%)</title><rect x="293.0" y="421" width="0.3" height="15.0" fill="rgb(250,134,51)" rx="2" ry="2" />
<text  x="295.98" y="431.5" ></text>
</g>
<g >
<title>__libc_malloc (3 samples, 0.07%)</title><rect x="251.0" y="501" width="0.8" height="15.0" fill="rgb(236,54,16)" rx="2" ry="2" />
<text  x="254.00" y="511.5" ></text>
</g>
<g >
<title>[ld-2.31.so] (1 samples, 0.02%)</title><rect x="202.4" y="389" width="0.2" height="15.0" fill="rgb(248,223,47)" rx="2" ry="2" />
<text  x="205.36" y="399.5" ></text>
</g>
<g >
<title>__memcg_kmem_charge_memcg (1 samples, 0.02%)</title><rect x="1179.4" y="181" width="0.3" height="15.0" fill="rgb(228,136,36)" rx="2" ry="2" />
<text  x="1182.44" y="191.5" ></text>
</g>
<g >
<title>page_fault (2 samples, 0.05%)</title><rect x="136.2" y="325" width="0.6" height="15.0" fill="rgb(213,162,36)" rx="2" ry="2" />
<text  x="139.20" y="335.5" ></text>
</g>
<g >
<title>c10::findSchemaDifferences[abi:cxx11] (2 samples, 0.05%)</title><rect x="182.3" y="341" width="0.6" height="15.0" fill="rgb(244,182,44)" rx="2" ry="2" />
<text  x="185.34" y="351.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::contained_val (1 samples, 0.02%)</title><rect x="873.7" y="389" width="0.2" height="15.0" fill="rgb(248,15,39)" rx="2" ry="2" />
<text  x="876.67" y="399.5" ></text>
</g>
<g >
<title>c10::optional&lt;c10::Device&gt;::optional&lt;c10::DeviceType const&amp;, int&gt; (24 samples, 0.57%)</title><rect x="609.0" y="405" width="6.7" height="15.0" fill="rgb(209,141,22)" rx="2" ry="2" />
<text  x="612.03" y="415.5" ></text>
</g>
<g >
<title>c10::optional&lt;bool&gt;::dataptr (5 samples, 0.12%)</title><rect x="873.9" y="389" width="1.4" height="15.0" fill="rgb(244,184,15)" rx="2" ry="2" />
<text  x="876.94" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (1 samples, 0.02%)</title><rect x="167.9" y="293" width="0.3" height="15.0" fill="rgb(240,86,11)" rx="2" ry="2" />
<text  x="170.89" y="303.5" ></text>
</g>
<g >
<title>__libc_malloc (2 samples, 0.05%)</title><rect x="162.9" y="341" width="0.5" height="15.0" fill="rgb(210,228,17)" rx="2" ry="2" />
<text  x="165.89" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (1 samples, 0.02%)</title><rect x="177.6" y="373" width="0.3" height="15.0" fill="rgb(223,139,0)" rx="2" ry="2" />
<text  x="180.62" y="383.5" ></text>
</g>
<g >
<title>c10::DefaultCPUAllocator::ReportAndDelete (7 samples, 0.16%)</title><rect x="266.3" y="373" width="1.9" height="15.0" fill="rgb(233,182,45)" rx="2" ry="2" />
<text  x="269.29" y="383.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="133.4" y="149" width="0.3" height="15.0" fill="rgb(252,38,27)" rx="2" ry="2" />
<text  x="136.42" y="159.5" ></text>
</g>
<g >
<title>__cxa_finalize (1 samples, 0.02%)</title><rect x="252.4" y="405" width="0.3" height="15.0" fill="rgb(205,62,8)" rx="2" ry="2" />
<text  x="255.39" y="415.5" ></text>
</g>
<g >
<title>c10::detail::infer_schema::(anonymous namespace)::createArgumentVector (1 samples, 0.02%)</title><rect x="181.0" y="389" width="0.2" height="15.0" fill="rgb(245,75,34)" rx="2" ry="2" />
<text  x="183.95" y="399.5" ></text>
</g>
<g >
<title>at::RecordFunction::RecordFunction@plt (2 samples, 0.05%)</title><rect x="688.5" y="357" width="0.6" height="15.0" fill="rgb(216,96,17)" rx="2" ry="2" />
<text  x="691.53" y="367.5" ></text>
</g>
<g >
<title>torch::Library::_impl (2 samples, 0.05%)</title><rect x="174.6" y="405" width="0.5" height="15.0" fill="rgb(215,105,18)" rx="2" ry="2" />
<text  x="177.56" y="415.5" ></text>
</g>
<g >
<title>c10::Device::validate (2 samples, 0.05%)</title><rect x="1053.0" y="325" width="0.5" height="15.0" fill="rgb(234,184,14)" rx="2" ry="2" />
<text  x="1055.96" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (1 samples, 0.02%)</title><rect x="155.1" y="293" width="0.3" height="15.0" fill="rgb(226,9,44)" rx="2" ry="2" />
<text  x="158.10" y="303.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="133.4" y="245" width="0.3" height="15.0" fill="rgb(246,37,50)" rx="2" ry="2" />
<text  x="136.42" y="255.5" ></text>
</g>
<g >
<title>std::addressof&lt;c10::Device&gt; (1 samples, 0.02%)</title><rect x="606.8" y="357" width="0.3" height="15.0" fill="rgb(209,118,14)" rx="2" ry="2" />
<text  x="609.81" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;c10::AutogradMetaInterface, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::~unique_ptr (7 samples, 0.16%)</title><rect x="667.1" y="389" width="2.0" height="15.0" fill="rgb(207,52,2)" rx="2" ry="2" />
<text  x="670.13" y="399.5" ></text>
</g>
<g >
<title>std::tuple&lt;c10::AutogradMetaInterface*, std::default_delete&lt;c10::AutogradMetaInterface&gt; &gt;::tuple&lt;c10::AutogradMetaInterface*, std::default_delete&lt;c10::AutogradMetaInterface&gt;, true&gt; (1 samples, 0.02%)</title><rect x="99.2" y="485" width="0.3" height="15.0" fill="rgb(250,130,44)" rx="2" ry="2" />
<text  x="102.23" y="495.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (2 samples, 0.05%)</title><rect x="159.8" y="373" width="0.6" height="15.0" fill="rgb(246,202,23)" rx="2" ry="2" />
<text  x="162.83" y="383.5" ></text>
</g>
<g >
<title>c10::ListType::isSubtypeOfExt (1 samples, 0.02%)</title><rect x="158.7" y="341" width="0.3" height="15.0" fill="rgb(254,105,20)" rx="2" ry="2" />
<text  x="161.72" y="351.5" ></text>
</g>
<g >
<title>c10::TensorOptions::TensorOptions (12 samples, 0.28%)</title><rect x="280.5" y="421" width="3.3" height="15.0" fill="rgb(232,57,45)" rx="2" ry="2" />
<text  x="283.47" y="431.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::vector&lt;std::function&lt;at::Tensor  (4 samples, 0.09%)</title><rect x="457.5" y="373" width="1.2" height="15.0" fill="rgb(243,206,30)" rx="2" ry="2" />
<text  x="460.54" y="383.5" ></text>
</g>
<g >
<title>at::Tensor::Tensor (1 samples, 0.02%)</title><rect x="290.8" y="421" width="0.2" height="15.0" fill="rgb(252,134,10)" rx="2" ry="2" />
<text  x="293.75" y="431.5" ></text>
</g>
<g >
<title>c10::constexpr_move&lt;bool&amp;&gt; (1 samples, 0.02%)</title><rect x="428.9" y="405" width="0.3" height="15.0" fill="rgb(217,95,44)" rx="2" ry="2" />
<text  x="431.91" y="415.5" ></text>
</g>
<g >
<title>c10::ProfiledCPUMemoryReporter::Delete (3 samples, 0.07%)</title><rect x="229.6" y="485" width="0.8" height="15.0" fill="rgb(235,27,44)" rx="2" ry="2" />
<text  x="232.60" y="495.5" ></text>
</g>
<g >
<title>[libc10.so] (1 samples, 0.02%)</title><rect x="754.4" y="229" width="0.3" height="15.0" fill="rgb(240,203,42)" rx="2" ry="2" />
<text  x="757.41" y="239.5" ></text>
</g>
<g >
<title>cfree (4 samples, 0.09%)</title><rect x="847.0" y="373" width="1.1" height="15.0" fill="rgb(241,157,6)" rx="2" ry="2" />
<text  x="849.98" y="383.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.05%)</title><rect x="162.9" y="357" width="0.5" height="15.0" fill="rgb(226,63,25)" rx="2" ry="2" />
<text  x="165.89" y="367.5" ></text>
</g>
<g >
<title>[microbenchmark] (2 samples, 0.05%)</title><rect x="1020.2" y="389" width="0.5" height="15.0" fill="rgb(238,35,33)" rx="2" ry="2" />
<text  x="1023.16" y="399.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;torch::autograd::Node,  (2 samples, 0.05%)</title><rect x="389.2" y="325" width="0.5" height="15.0" fill="rgb(247,198,16)" rx="2" ry="2" />
<text  x="392.16" y="335.5" ></text>
</g>
<g >
<title>perf_event_exec (10 samples, 0.24%)</title><rect x="1186.9" y="389" width="2.8" height="15.0" fill="rgb(240,99,21)" rx="2" ry="2" />
<text  x="1189.94" y="399.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_library.cpp (3 samples, 0.07%)</title><rect x="185.4" y="453" width="0.8" height="15.0" fill="rgb(245,35,23)" rx="2" ry="2" />
<text  x="188.40" y="463.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.02%)</title><rect x="192.9" y="357" width="0.3" height="15.0" fill="rgb(225,104,28)" rx="2" ry="2" />
<text  x="195.91" y="367.5" ></text>
</g>
<g >
<title>caffe2::_c10_ops::schema_BatchPermutation (1 samples, 0.02%)</title><rect x="194.3" y="437" width="0.3" height="15.0" fill="rgb(231,53,12)" rx="2" ry="2" />
<text  x="197.30" y="447.5" ></text>
</g>
<g >
<title>torch::jit::SharedParserData::match (2 samples, 0.05%)</title><rect x="144.5" y="309" width="0.6" height="15.0" fill="rgb(243,43,0)" rx="2" ry="2" />
<text  x="147.54" y="319.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.02%)</title><rect x="248.2" y="357" width="0.3" height="15.0" fill="rgb(220,21,23)" rx="2" ry="2" />
<text  x="251.22" y="367.5" ></text>
</g>
<g >
<title>at::Tensor::getIntrusivePtr (2 samples, 0.05%)</title><rect x="653.8" y="389" width="0.5" height="15.0" fill="rgb(205,25,27)" rx="2" ry="2" />
<text  x="656.79" y="399.5" ></text>
</g>
<g >
<title>std::make_unique&lt;torch::autograd::AutogradMeta, c10::TensorImpl*, bool&amp;&gt; (246 samples, 5.80%)</title><rect x="927.6" y="389" width="68.4" height="15.0" fill="rgb(254,150,37)" rx="2" ry="2" />
<text  x="930.59" y="399.5" >std::ma..</text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.02%)</title><rect x="147.9" y="229" width="0.3" height="15.0" fill="rgb(213,221,25)" rx="2" ry="2" />
<text  x="150.88" y="239.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (1 samples, 0.02%)</title><rect x="160.1" y="325" width="0.3" height="15.0" fill="rgb(214,196,8)" rx="2" ry="2" />
<text  x="163.11" y="335.5" ></text>
</g>
<g >
<title>c10::TensorImpl::set_sizes_contiguous (30 samples, 0.71%)</title><rect x="775.5" y="261" width="8.4" height="15.0" fill="rgb(217,177,46)" rx="2" ry="2" />
<text  x="778.54" y="271.5" ></text>
</g>
<g >
<title>c10::impl::detail::with_scattered_tensor_options_impl_&lt;c10::CompileTimeFunctionPointer&lt;at::Tensor  (2 samples, 0.05%)</title><rect x="12.5" y="485" width="0.6" height="15.0" fill="rgb(239,162,31)" rx="2" ry="2" />
<text  x="15.50" y="495.5" ></text>
</g>
<g >
<title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="179.6" y="405" width="0.2" height="15.0" fill="rgb(227,98,39)" rx="2" ry="2" />
<text  x="182.56" y="415.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="152.3" y="277" width="0.3" height="15.0" fill="rgb(228,184,48)" rx="2" ry="2" />
<text  x="155.32" y="287.5" ></text>
</g>
</g>
</svg>
